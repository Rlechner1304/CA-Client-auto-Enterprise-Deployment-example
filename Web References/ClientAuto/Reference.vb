'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace ClientAuto
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="DSMWebServiceAPISoapBinding", [Namespace]:="urn://www.ca.com/Unicenter/DSM/r12")>  _
    Partial Public Class DSMWebServiceAPIService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private LoginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Login2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private LogoutOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnlinkUserAccountsFromUnitGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnlinkComputersFromUnitGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnlinkUserProfilesFromUnitGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnlinkUnitGroupsFromUnitGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateUnitGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkUserAccountsToUnitGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkComputersToUnitGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkUserProfilesToUnitGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkUnitGroupsToUnitGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenQueryListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetQueriesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseQueryListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenQueryResultListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetQueryResultsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseQueryResultListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenUnitGroupUnitGroupMembersListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitGroupUnitGroupMembersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseUnitGroupUnitGroupMembersListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenUnitGroupUserAccountMembersListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitGroupUserAccountMembersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseUnitGroupUserAccountMembersListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenUnitGroupComputerMembersListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitGroupComputerMembersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseUnitGroupComputerMembersListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenUnitGroupUserProfileMembersListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitGroupUserProfileMembersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseUnitGroupUserProfileMembersListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteUnitGroupsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserAccountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetComputerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserProfileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetUnitGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenUnitGroupUnitMembersListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitGroupUnitMembersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseUnitGroupUnitMembersListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindUserAccountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindComputerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindUserProfileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenUnitUnitGroupListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitUnitGroupsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseUnitUnitGroupListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateQueryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteQueriesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetQueryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetQueryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EvaluateUnitGroupQueryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenUnitInventoryComponentListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitInventoryComponentsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseUnitInventoryComponentListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenUnitInventoryComponentGroupListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitInventoryComponentGroupsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseUnitInventoryComponentGroupListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenUnitInventoryGroupListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitInventoryGroupsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseUnitInventoryGroupListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenUnitInventoryItemListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitInventoryItemsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseUnitInventoryItemListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ResumeSoftwareJobsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SuspendSoftwareJobsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CancelSoftwareJobsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateRecoverSoftwareJobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateRenewSoftwareJobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwarePackageInstallationListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageInstallationsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwarePackageInstallationListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenUnitUnitSoftwareJobListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitUnitSoftwareJobsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseUnitUnitSoftwareJobListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenUnitUnitSoftwareInstallationJobListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitUnitSoftwareInstallationJobsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseUnitUnitSoftwareInstallationJobListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSoftwarePackageVolumeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSoftwarePackageVolumesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwarePackageVolumeListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageVolumesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwarePackageVolumeListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageVolumeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSoftwarePackageVolumeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwarePackageVolumeElementListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageVolumeElementsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwarePackageVolumeElementListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindSoftwarePackageProcedureOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSoftwarePackageProcedureOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSoftwarePackageProceduresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwarePackageProcedureListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageProceduresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwarePackageProcedureListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageProcedureOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSoftwarePackageProcedureOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSoftwarePackageProcedureDependencyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwarePackageProcedureDependencyListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageProcedureDependenciesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwarePackageProcedureDependencyListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSoftwarePackageProcedureDependencyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateAddedSoftwarePackageProcedureOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ImportSoftwarePackageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindSoftwarePackageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSoftwarePackageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSoftwarePackagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSoftwarePackageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwarePackageListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwarePackageListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SealSoftwarePackagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnsealSoftwarePackagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CopyElementsToSoftwarePackageVolumeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CopyElementsToSoftwarePackageVolume2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteElementsFromSoftwarePackageVolumeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateActivateSoftwareJobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateConfigureSoftwareJobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateUninstallSoftwareJobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateInstallSoftwareJobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindSoftwareJobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwareJobUnitSoftwareJobListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwareJobUnitSoftwareJobsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwareJobUnitSoftwareJobListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwareJobListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwareJobsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwareJobListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwareJobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSoftwareJobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SealAndActivateSoftwareJobContainerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SealAndBuildSoftwareJobContainerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActivateSoftwareJobContainerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private HaltDeliverySoftwareJobContainerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ResumeDeliverySoftwareJobContainerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSoftwarePackageGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateCatalogSoftwarePackageGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreatePatchRollupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSoftwarePackageProcedureGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSoftwareJobContainerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSoftwarePolicyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSoftwarePackageGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetCatalogSoftwarePackageGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSoftwarePackageProcedureGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSoftwareJobContainerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSoftwarePolicyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageProcedureGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwareJobContainerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePolicyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSoftwarePackageGroupsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSoftwarePackageProcedureGroupsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSoftwareJobContainersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSoftwarePoliciesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSoftwareItemsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EvaluateSoftwarePolicyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmptySoftwarePackageGroupsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmptySoftwarePackageProcedureGroupsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SealSoftwareJobContainersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SealSoftwarePoliciesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnsealSoftwareJobContainersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnsealSoftwarePoliciesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindSoftwarePackageGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindSoftwarePackageProcedureGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindSoftwareJobContainerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindSoftwarePolicyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwarePackageGroupListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageGroupsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwarePackageGroupListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwarePackageProcedureGroupListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageProcedureGroupsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwarePackageProcedureGroupListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwareJobContainerListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwareJobContainersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwareJobContainerListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwarePolicyListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePoliciesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwarePolicyListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwarePackageGroupListRecursiveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageGroupsRecursiveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwarePackageGroupListRecursiveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwarePackageProcedureGroupListRecursiveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageProcedureGroupsRecursiveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwarePackageProcedureGroupListRecursiveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwareJobContainerListRecursiveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwareJobContainersRecursiveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwareJobContainerListRecursiveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwarePolicyListRecursiveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePoliciesRecursiveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwarePolicyListRecursiveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenParentSoftwarePackageGroupListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetParentSoftwarePackageGroupsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseParentSoftwarePackageGroupListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenParentSoftwarePackageProcedureGroupListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetParentSoftwarePackageProcedureGroupsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseParentSoftwarePackageProcedureGroupListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenParentSoftwareJobContainerListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetParentSoftwareJobContainersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseParentSoftwarePackageJobContainerListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwarePackageGroupSoftwarePackageListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageGroupSoftwarePackagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwarePackageGroupSoftwarePackageListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwarePackageProcedureGroupSoftwarePackageProcedureListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageProcedureGroupSoftwarePackageProceduresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwarePackageProcedureGroupSoftwarePackageProcedureListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwareJobContainerSoftwareJobListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwareJobContainerSoftwareJobsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwareJobContainerSoftwareJobListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwarePolicySoftwareJobListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePolicySoftwareJobsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwarePolicySoftwareJobListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwarePackageGroupSoftwarePackageListRecursiveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageGroupSoftwarePackagesRecursiveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwarePackageGroupSoftwarePackageListRecursiveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwarePolicySoftwarePolicyExceptionListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePolicySoftwarePolicyExceptionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwarePolicySoftwarePolicyExceptionListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkSoftwarePackagesToSoftwarePackageGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnlinkSoftwarePackagesFromSoftwarePackageGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkSoftwarePackageGroupsToSoftwarePackageGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnlinkSoftwarePackageGroupsFromSoftwarePackageGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkSoftwarePackageProcedureGroupsToSoftwarePackageGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnlinkSoftwarePackageProcedureGroupsFromSoftwarePackageGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenUnitDiscoveredSoftwareListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitDiscoveredSoftwareOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseUnitDiscoveredSoftwareListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSystemGroupUUIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ResetTimeoutOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateInstallSoftwareJobInSoftwarePolicyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateActivateSoftwareJobInSoftwarePolicyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateConfigureSoftwareJobInSoftwarePolicyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateUninstallSoftwareJobInSoftwarePolicyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetTimeoutValueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetInstalledComponentsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ImportSoftwarePackage2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepositionSoftwarePackageProcedureOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkSoftwareGroupsToSoftwarePackageGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnlinkSoftwareGroupsFromSoftwarePackageGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSoftwareGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSoftwareGroupsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSoftwareGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateComputerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateUserProfileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetComputerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetComputerByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetUserProfileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetUserProfileByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteComputersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteComputersByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteUserProfilesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteUserProfilesByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSoftwareJobsInComputerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSoftwarePolicy2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSoftwarePolicy2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSoftwarePoliciesInUnitGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateUnitGroup2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateUnitGroupByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSoftwarePolicyByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSoftwarePolicyByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSoftwarePoliciesInUnitGroupByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ImportSoftwarePackageByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepositionSoftwarePackageProcedureByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkSoftwareGroupsToSoftwarePackageGroupByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnlinkSoftwareGroupsFromSoftwarePackageGroupByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSoftwareGroupByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSoftwareGroupsByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSoftwareGroupByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateInstallSoftwareJob2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateInstallSoftwareJobInSoftwarePolicy2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSoftwareJob2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwareJob2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwareJobs2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwareJobContainerSoftwareJobs2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePolicySoftwareJobs2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSoftwareJobContainer2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSoftwareJobContainer2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwareJobContainer2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwareJobContainerList2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwareJobContainers2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwareJobContainerList2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwareJobContainerListRecursive2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwareJobContainersRecursive2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwareJobContainerListRecursive2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenParentSoftwareJobContainerList2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetParentSoftwareJobContainers2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseParentSoftwareJobContainerList2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSoftwareJobContainerPriorityOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePolicy2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwarePolicyList2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePolicies2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSoftwarePolicyList2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteUnitGroupsByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkUnitGroupsToUnitGroupByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkComputersToUnitGroupByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnlinkComputersFromUnitGroupByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnlinkUnitGroupsFromUnitGroupByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkSoftwarePackagesToSoftwarePackageGroupByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnlinkSoftwarePackagesFromSoftwarePackageGroupByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSoftwarePackagesByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateInstallSoftwareJobInSoftwarePolicyByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateActivateSoftwareJobInSoftwarePolicyByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateConfigureSoftwareJobInSoftwarePolicyByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateUninstallSoftwareJobInSoftwarePolicyByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnsealSoftwarePoliciesByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkSoftwarePoliciesToUnitGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkSoftwarePoliciesToUnitGroupByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnlinkSoftwarePoliciesFromUnitGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnlinkSoftwarePoliciesFromUnitGroupByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSoftwareJobsInComputerByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSoftwarePoliciesByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDomainOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindDomainOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindDomainGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateDomainGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkDomainsToDomainGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkDomainGroupsToDomainGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetDomainGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDomainGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteDomainGroupsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnlinkDomainsFromDomainGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnlinkDomainGroupsFromDomainGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenDomainGroupDomainGroupMembersListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDomainGroupDomainGroupMembersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseDomainGroupDomainGroupMembersListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenDomainGroupDomainMembersListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDomainGroupDomainMembersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseDomainGroupDomainMembersListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateDistributionContainerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddRegisterSoftwarePackageOrdersToDistributionContainerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddDeregisterSoftwarePackageOrdersToDistributionContainerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddRegisterSoftwarePackageProcedureOrdersToDistributionContainerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddDeregisterSoftwarePackageProcedureOrdersToDistributionContainerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddRegisterSoftwarePolicyOrdersToDistributionContainerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddDeregisterSoftwarePolicyOrdersToDistributionContainerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddRegisterSoftwareJobContainerOrdersToDistributionContainerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddDeregisterSoftwareJobContainerOrdersToDistributionContainerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetDistributionContainerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteDistributionContainersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private HaltDeliveryDistributionContainersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ResumeDeliveryDistributionContainersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RenewDeliveryDistributionContainersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendDistributionContainerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDistributionContainerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenDistributionContainerListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDistributionContainersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseDistributionContainerListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenDistributionContainerDistributionDomainListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDistributionContainerDistributionDomainsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseDistributionContainerDistributionDomainListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDistributionContainerOrderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddFetchItemJobOrdersToDistributionContainerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenDistributionContainerOrderListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDistributionContainerOrdersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseDistributionContainerOrdersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetManagerDateTimeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetInstalledComponents2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateQuery2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSecurityAreaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSecurityAreasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSecurityAreasByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSecurityAreaListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSecurityAreasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSecurityAreaListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSecurityAreaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSecurityAreaByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSecurityAreaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSecurityAreaByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSecurityAreaConfigurationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSecurityAreaConfigurationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSecurityAreaConfigurationByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSecurityAreaConfigurationByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSecurityObjectsSecurityAreaLinkagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkSecurityAreasToSecurityProfileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnlinkSecurityAreasFromSecurityProfileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkSecurityAreasToSecurityProfileByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnlinkSecurityAreasFromSecurityProfileByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkSecurityProfilesToSecurityAreaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnlinkSecurityProfilesFromSecurityAreaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkSecurityProfilesToSecurityAreaByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnlinkSecurityProfilesFromSecurityAreaByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSecurityObjectsSecurityAreaLinkagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSecurityObjectOwnerShipOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSecurityObjectOwnerShipOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSecurityObjectPermissionsStringOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSecurityProfilesByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSecurityProfileByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSecurityProfileByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSecurityProfileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSecurityProfilesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSecurityProfileListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSecurityProfilesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSecurityProfileListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSecurityProfileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSecurityProfileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSecurityClassListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSecurityClassesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseSecurityClassListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSecurityClassPermissionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSecurityClassPermissionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSecurityClassPermissionsForAllSecurityProfilesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAllSecurityClassPermissionsForSecurityProfileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSecurityGroupsPermissionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSecurityGroupsPermissionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSecurityGroupPermissionsForAllSecurityProfilesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSecurityObjectPermissionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSecurityObjectsPermissionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSecurityObjectPermissionsForAllSecurityProfilesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetUnitGroup2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDeploymentPackagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ScanPackageOnTargetComputersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeployPackageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDeploymentJobStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StagePackageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDeploymentPackagesOnScalabilityServerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SuspendDeploymentJobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ResumeDeploymentJobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DiscardDeploymentJobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AbortDeploymentJobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetryDeploymentJobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExportSoftwarePackageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExportSoftwarePackageByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteUnitGroups2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteUnitGroupsByName2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSoftwareJobContainer3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSoftwareJobContainer3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwareJobContainer3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwareJobContainerList3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwareJobContainers3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwareJobContainerListRecursive3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwareJobContainersRecursive3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenParentSoftwareJobContainerList3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetParentSoftwareJobContainers3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDistributionContainerOrder3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDistributionContainerOrders3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSoftwarePolicy3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSoftwarePolicyByName3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSoftwarePolicy3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSoftwarePolicyByName3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePolicy3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenSoftwarePolicyList3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePolicies3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateInstallSoftwareJob3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateInstallSoftwareJobInSoftwarePolicy3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSoftwareJob3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwareJob3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwareJobs3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwareJobContainerSoftwareJobs3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePolicySoftwareJobs3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateActivateSoftwareJob3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateConfigureSoftwareJob3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateUninstallSoftwareJob3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateRecoverSoftwareJob3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateRenewSoftwareJob3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateActivateSoftwareJobInSoftwarePolicyByName3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateConfigureSoftwareJobInSoftwarePolicyByName3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateUninstallSoftwareJobInSoftwarePolicyByName3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateInstallSoftwareJobInSoftwarePolicyByName3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateUninstallSoftwareJobInSoftwarePolicy3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateActivateSoftwareJobInSoftwarePolicy3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateConfigureSoftwareJobInSoftwarePolicy3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSoftwarePackageProcedure2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateAddedSoftwarePackageProcedure2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageProcedures2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageProcedure2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSoftwarePackageProcedure2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageProcedureGroupSoftwarePackageProcedures2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackages2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackage2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageInstallations2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitUnitSoftwareJobs2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitUnitSoftwareInstallationJobs2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageGroupSoftwarePackages2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageGroupSoftwarePackagesRecursive2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwareJobUnitSoftwareJobs2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private WSChallengeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WSAuthenticateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenUnitQueryListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitQueriesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseUnitQueryListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateOSIMComputerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegisterComputerWithOSIMOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegisterComputerWithOSIMByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetOSInstallationParameterOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetOSInstallationParameterByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActivateOSInstallationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActivateOSInstallationByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CancelOSInstallationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CancelOSInstallationByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReActivateOSInstallationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReActivateOSInstallationByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReInstallOSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReInstallOSByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnnamedOSIMRegisteredComputersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnmanagedOSIMRegisteredComputersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOSInstallationRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOSInstallationRequestByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetInstallationRequestListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetInstallationRequestListByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteOSInstallationRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteOSInstallationRequestByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeRegisterOSIMComputerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeRegisterOSIMComputerByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetOSIMComputerMACAddressByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOSInstallationParametersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOSInstallationParametersByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBootImageListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AssignOSIMTargetsToBootServerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AssignOSIMTargetsToBootServerByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenScalabilityServerListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetScalabilityServersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseScalabilityServerListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SearchComputerPropertyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOSImageParametersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBootServerListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeRegisterBootImageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeRegisterOSImageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AssignOSImageToOSIMTargetsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBootImageDeployedBootServersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOSImageDeployedBootServersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenOSImageListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOSImagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseOSImageListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenOSIMTargetListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOSIMTargetsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseOSIMTargetListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenUnitGroupComputerMembersList2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitGroupComputerMembers2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOSIMTargetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOSIMTargetByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetImageFlagDescriptionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateAssetScriptJobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAssetScriptJobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetAssetScriptJobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteAssetJobsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenAssetScriptJobListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAssetScriptJobsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseAssetScriptJobListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkAssetJobsToUnitOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkAssetJobsToUnitGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnLinkAssetJobsFromUnitOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnLinkAssetJobsFromUnitGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActivateJobCheckOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOSImages2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitGroupComputerMembers3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOSIMTargets2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private IsServiceDeskIntegrationEnabledOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetServiceDeskRequestURLForContainerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSoftwareJobContainer4OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetServiceDeskTemplatesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitGroupByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetComputerOSNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetOSInstallationParameter2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetOSInstallationParameterByName2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOSIMParameterDefaultsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOSIMParameterDefaultsByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetHardWareModelListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitGroupsXMLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetComputerHWModelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetComputerHWModelByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetQueryFolderIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetQueryFoldersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetQueries2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBootImageList2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBootServerList2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetInstalledComponents3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetManagerConfigurationParameterIntOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetManagerPropertiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetComputerSDPropertiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetComputerSDPropertiesByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOSTypesXMLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetComputerByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOSIMTargetListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetOSInstallationParametersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetOSInstallationParametersByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSoftwarePackage3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSoftwarePackage3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackage3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageList3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSoftwarePackageProcedure3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateAddedSoftwarePackageProcedure3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSoftwarePackageProcedure3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageProcedures3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageProcedure3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageProcedureGroupSoftwarePackageProcedures3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetQuery2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetQuery2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageProcedureListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageProcedure4OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitSoftwareJobListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageInstallationListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageProcedureGroupProcedureListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAuthenticatedURIOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Login3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private Login4OperationCompleted As System.Threading.SendOrPostCallback
        
        Private WSChallenge2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateComputer2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLocaleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitGroup2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateUnitGroup3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkItemsToUnitGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnLinkItemsFromUnitGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MoveItemsToUnitGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteItemsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteAlertsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateAlertsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteAllAlertsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwareJobOutputFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwareJobOutputFile2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetManagerDateTime2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetManagerConfigurationParameterValueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LinkItemsToSoftwareGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnLinkItemsFromSoftwareGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSoftwarePackageProcedure4OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageProcedureList2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageProcedure5OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageProcedureGroupProcedureList2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwarePackageProcedureGroupSoftwarePackageProcedures4OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSoftwarePackageProcedure5OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateAddedSoftwarePackageProcedure4OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateAddedProcedureWithNewFiles2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSoftwarePackageProcedure4OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSoftwarePackageProcedure5OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSoftwarePackageProcedureDependency2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepositionSoftwarePackageProcedureDependenciesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepositionSoftwareItemsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSoftwareJobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReadVolumeFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WriteVolumeFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEditableVolumeFileExtensionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private JobContainerRestrictPriorityOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSDFileCopyOperationStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Enterprise_Deployment_example.My.MySettings.Default.Enterprise_Deployment_example_ClientAuto_DSMWebServiceAPIService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event LoginCompleted As LoginCompletedEventHandler
        
        '''<remarks/>
        Public Event Login2Completed As Login2CompletedEventHandler
        
        '''<remarks/>
        Public Event LogoutCompleted As LogoutCompletedEventHandler
        
        '''<remarks/>
        Public Event UnlinkUserAccountsFromUnitGroupCompleted As UnlinkUserAccountsFromUnitGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event UnlinkComputersFromUnitGroupCompleted As UnlinkComputersFromUnitGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event UnlinkUserProfilesFromUnitGroupCompleted As UnlinkUserProfilesFromUnitGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event UnlinkUnitGroupsFromUnitGroupCompleted As UnlinkUnitGroupsFromUnitGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateUnitGroupCompleted As CreateUnitGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkUserAccountsToUnitGroupCompleted As LinkUserAccountsToUnitGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkComputersToUnitGroupCompleted As LinkComputersToUnitGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkUserProfilesToUnitGroupCompleted As LinkUserProfilesToUnitGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkUnitGroupsToUnitGroupCompleted As LinkUnitGroupsToUnitGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenQueryListCompleted As OpenQueryListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetQueriesCompleted As GetQueriesCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseQueryListCompleted As CloseQueryListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenQueryResultListCompleted As OpenQueryResultListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetQueryResultsCompleted As GetQueryResultsCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseQueryResultListCompleted As CloseQueryResultListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenUnitGroupUnitGroupMembersListCompleted As OpenUnitGroupUnitGroupMembersListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitGroupUnitGroupMembersCompleted As GetUnitGroupUnitGroupMembersCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseUnitGroupUnitGroupMembersListCompleted As CloseUnitGroupUnitGroupMembersListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenUnitGroupUserAccountMembersListCompleted As OpenUnitGroupUserAccountMembersListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitGroupUserAccountMembersCompleted As GetUnitGroupUserAccountMembersCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseUnitGroupUserAccountMembersListCompleted As CloseUnitGroupUserAccountMembersListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenUnitGroupComputerMembersListCompleted As OpenUnitGroupComputerMembersListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitGroupComputerMembersCompleted As GetUnitGroupComputerMembersCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseUnitGroupComputerMembersListCompleted As CloseUnitGroupComputerMembersListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenUnitGroupUserProfileMembersListCompleted As OpenUnitGroupUserProfileMembersListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitGroupUserProfileMembersCompleted As GetUnitGroupUserProfileMembersCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseUnitGroupUserProfileMembersListCompleted As CloseUnitGroupUserProfileMembersListCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteUnitGroupsCompleted As DeleteUnitGroupsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitGroupCompleted As GetUnitGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserAccountCompleted As GetUserAccountCompletedEventHandler
        
        '''<remarks/>
        Public Event GetComputerCompleted As GetComputerCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserProfileCompleted As GetUserProfileCompletedEventHandler
        
        '''<remarks/>
        Public Event SetUnitGroupCompleted As SetUnitGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenUnitGroupUnitMembersListCompleted As OpenUnitGroupUnitMembersListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitGroupUnitMembersCompleted As GetUnitGroupUnitMembersCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseUnitGroupUnitMembersListCompleted As CloseUnitGroupUnitMembersListCompletedEventHandler
        
        '''<remarks/>
        Public Event FindUserAccountCompleted As FindUserAccountCompletedEventHandler
        
        '''<remarks/>
        Public Event FindComputerCompleted As FindComputerCompletedEventHandler
        
        '''<remarks/>
        Public Event FindUserProfileCompleted As FindUserProfileCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenUnitUnitGroupListCompleted As OpenUnitUnitGroupListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitUnitGroupsCompleted As GetUnitUnitGroupsCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseUnitUnitGroupListCompleted As CloseUnitUnitGroupListCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateQueryCompleted As CreateQueryCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteQueriesCompleted As DeleteQueriesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetQueryCompleted As GetQueryCompletedEventHandler
        
        '''<remarks/>
        Public Event SetQueryCompleted As SetQueryCompletedEventHandler
        
        '''<remarks/>
        Public Event EvaluateUnitGroupQueryCompleted As EvaluateUnitGroupQueryCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenUnitInventoryComponentListCompleted As OpenUnitInventoryComponentListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitInventoryComponentsCompleted As GetUnitInventoryComponentsCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseUnitInventoryComponentListCompleted As CloseUnitInventoryComponentListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenUnitInventoryComponentGroupListCompleted As OpenUnitInventoryComponentGroupListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitInventoryComponentGroupsCompleted As GetUnitInventoryComponentGroupsCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseUnitInventoryComponentGroupListCompleted As CloseUnitInventoryComponentGroupListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenUnitInventoryGroupListCompleted As OpenUnitInventoryGroupListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitInventoryGroupsCompleted As GetUnitInventoryGroupsCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseUnitInventoryGroupListCompleted As CloseUnitInventoryGroupListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenUnitInventoryItemListCompleted As OpenUnitInventoryItemListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitInventoryItemsCompleted As GetUnitInventoryItemsCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseUnitInventoryItemListCompleted As CloseUnitInventoryItemListCompletedEventHandler
        
        '''<remarks/>
        Public Event ResumeSoftwareJobsCompleted As ResumeSoftwareJobsCompletedEventHandler
        
        '''<remarks/>
        Public Event SuspendSoftwareJobsCompleted As SuspendSoftwareJobsCompletedEventHandler
        
        '''<remarks/>
        Public Event CancelSoftwareJobsCompleted As CancelSoftwareJobsCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateRecoverSoftwareJobCompleted As CreateRecoverSoftwareJobCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateRenewSoftwareJobCompleted As CreateRenewSoftwareJobCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwarePackageInstallationListCompleted As OpenSoftwarePackageInstallationListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageInstallationsCompleted As GetSoftwarePackageInstallationsCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwarePackageInstallationListCompleted As CloseSoftwarePackageInstallationListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenUnitUnitSoftwareJobListCompleted As OpenUnitUnitSoftwareJobListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitUnitSoftwareJobsCompleted As GetUnitUnitSoftwareJobsCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseUnitUnitSoftwareJobListCompleted As CloseUnitUnitSoftwareJobListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenUnitUnitSoftwareInstallationJobListCompleted As OpenUnitUnitSoftwareInstallationJobListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitUnitSoftwareInstallationJobsCompleted As GetUnitUnitSoftwareInstallationJobsCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseUnitUnitSoftwareInstallationJobListCompleted As CloseUnitUnitSoftwareInstallationJobListCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSoftwarePackageVolumeCompleted As CreateSoftwarePackageVolumeCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSoftwarePackageVolumesCompleted As DeleteSoftwarePackageVolumesCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwarePackageVolumeListCompleted As OpenSoftwarePackageVolumeListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageVolumesCompleted As GetSoftwarePackageVolumesCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwarePackageVolumeListCompleted As CloseSoftwarePackageVolumeListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageVolumeCompleted As GetSoftwarePackageVolumeCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSoftwarePackageVolumeCompleted As SetSoftwarePackageVolumeCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwarePackageVolumeElementListCompleted As OpenSoftwarePackageVolumeElementListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageVolumeElementsCompleted As GetSoftwarePackageVolumeElementsCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwarePackageVolumeElementListCompleted As CloseSoftwarePackageVolumeElementListCompletedEventHandler
        
        '''<remarks/>
        Public Event FindSoftwarePackageProcedureCompleted As FindSoftwarePackageProcedureCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSoftwarePackageProcedureCompleted As CreateSoftwarePackageProcedureCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSoftwarePackageProceduresCompleted As DeleteSoftwarePackageProceduresCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwarePackageProcedureListCompleted As OpenSoftwarePackageProcedureListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageProceduresCompleted As GetSoftwarePackageProceduresCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwarePackageProcedureListCompleted As CloseSoftwarePackageProcedureListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageProcedureCompleted As GetSoftwarePackageProcedureCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSoftwarePackageProcedureCompleted As SetSoftwarePackageProcedureCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSoftwarePackageProcedureDependencyCompleted As CreateSoftwarePackageProcedureDependencyCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwarePackageProcedureDependencyListCompleted As OpenSoftwarePackageProcedureDependencyListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageProcedureDependenciesCompleted As GetSoftwarePackageProcedureDependenciesCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwarePackageProcedureDependencyListCompleted As CloseSoftwarePackageProcedureDependencyListCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSoftwarePackageProcedureDependencyCompleted As DeleteSoftwarePackageProcedureDependencyCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateAddedSoftwarePackageProcedureCompleted As CreateAddedSoftwarePackageProcedureCompletedEventHandler
        
        '''<remarks/>
        Public Event ImportSoftwarePackageCompleted As ImportSoftwarePackageCompletedEventHandler
        
        '''<remarks/>
        Public Event FindSoftwarePackageCompleted As FindSoftwarePackageCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageCompleted As GetSoftwarePackageCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSoftwarePackageCompleted As CreateSoftwarePackageCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSoftwarePackagesCompleted As DeleteSoftwarePackagesCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSoftwarePackageCompleted As SetSoftwarePackageCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwarePackageListCompleted As OpenSoftwarePackageListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackagesCompleted As GetSoftwarePackagesCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwarePackageListCompleted As CloseSoftwarePackageListCompletedEventHandler
        
        '''<remarks/>
        Public Event SealSoftwarePackagesCompleted As SealSoftwarePackagesCompletedEventHandler
        
        '''<remarks/>
        Public Event UnsealSoftwarePackagesCompleted As UnsealSoftwarePackagesCompletedEventHandler
        
        '''<remarks/>
        Public Event CopyElementsToSoftwarePackageVolumeCompleted As CopyElementsToSoftwarePackageVolumeCompletedEventHandler
        
        '''<remarks/>
        Public Event CopyElementsToSoftwarePackageVolume2Completed As CopyElementsToSoftwarePackageVolume2CompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteElementsFromSoftwarePackageVolumeCompleted As DeleteElementsFromSoftwarePackageVolumeCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateActivateSoftwareJobCompleted As CreateActivateSoftwareJobCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateConfigureSoftwareJobCompleted As CreateConfigureSoftwareJobCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateUninstallSoftwareJobCompleted As CreateUninstallSoftwareJobCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateInstallSoftwareJobCompleted As CreateInstallSoftwareJobCompletedEventHandler
        
        '''<remarks/>
        Public Event FindSoftwareJobCompleted As FindSoftwareJobCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwareJobUnitSoftwareJobListCompleted As OpenSoftwareJobUnitSoftwareJobListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwareJobUnitSoftwareJobsCompleted As GetSoftwareJobUnitSoftwareJobsCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwareJobUnitSoftwareJobListCompleted As CloseSoftwareJobUnitSoftwareJobListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwareJobListCompleted As OpenSoftwareJobListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwareJobsCompleted As GetSoftwareJobsCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwareJobListCompleted As CloseSoftwareJobListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwareJobCompleted As GetSoftwareJobCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSoftwareJobCompleted As SetSoftwareJobCompletedEventHandler
        
        '''<remarks/>
        Public Event SealAndActivateSoftwareJobContainerCompleted As SealAndActivateSoftwareJobContainerCompletedEventHandler
        
        '''<remarks/>
        Public Event SealAndBuildSoftwareJobContainerCompleted As SealAndBuildSoftwareJobContainerCompletedEventHandler
        
        '''<remarks/>
        Public Event ActivateSoftwareJobContainerCompleted As ActivateSoftwareJobContainerCompletedEventHandler
        
        '''<remarks/>
        Public Event HaltDeliverySoftwareJobContainerCompleted As HaltDeliverySoftwareJobContainerCompletedEventHandler
        
        '''<remarks/>
        Public Event ResumeDeliverySoftwareJobContainerCompleted As ResumeDeliverySoftwareJobContainerCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSoftwarePackageGroupCompleted As CreateSoftwarePackageGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateCatalogSoftwarePackageGroupCompleted As CreateCatalogSoftwarePackageGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event CreatePatchRollupCompleted As CreatePatchRollupCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSoftwarePackageProcedureGroupCompleted As CreateSoftwarePackageProcedureGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSoftwareJobContainerCompleted As CreateSoftwareJobContainerCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSoftwarePolicyCompleted As CreateSoftwarePolicyCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSoftwarePackageGroupCompleted As SetSoftwarePackageGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event SetCatalogSoftwarePackageGroupCompleted As SetCatalogSoftwarePackageGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSoftwarePackageProcedureGroupCompleted As SetSoftwarePackageProcedureGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSoftwareJobContainerCompleted As SetSoftwareJobContainerCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSoftwarePolicyCompleted As SetSoftwarePolicyCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageGroupCompleted As GetSoftwarePackageGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageProcedureGroupCompleted As GetSoftwarePackageProcedureGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwareJobContainerCompleted As GetSoftwareJobContainerCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePolicyCompleted As GetSoftwarePolicyCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSoftwarePackageGroupsCompleted As DeleteSoftwarePackageGroupsCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSoftwarePackageProcedureGroupsCompleted As DeleteSoftwarePackageProcedureGroupsCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSoftwareJobContainersCompleted As DeleteSoftwareJobContainersCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSoftwarePoliciesCompleted As DeleteSoftwarePoliciesCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSoftwareItemsCompleted As DeleteSoftwareItemsCompletedEventHandler
        
        '''<remarks/>
        Public Event EvaluateSoftwarePolicyCompleted As EvaluateSoftwarePolicyCompletedEventHandler
        
        '''<remarks/>
        Public Event EmptySoftwarePackageGroupsCompleted As EmptySoftwarePackageGroupsCompletedEventHandler
        
        '''<remarks/>
        Public Event EmptySoftwarePackageProcedureGroupsCompleted As EmptySoftwarePackageProcedureGroupsCompletedEventHandler
        
        '''<remarks/>
        Public Event SealSoftwareJobContainersCompleted As SealSoftwareJobContainersCompletedEventHandler
        
        '''<remarks/>
        Public Event SealSoftwarePoliciesCompleted As SealSoftwarePoliciesCompletedEventHandler
        
        '''<remarks/>
        Public Event UnsealSoftwareJobContainersCompleted As UnsealSoftwareJobContainersCompletedEventHandler
        
        '''<remarks/>
        Public Event UnsealSoftwarePoliciesCompleted As UnsealSoftwarePoliciesCompletedEventHandler
        
        '''<remarks/>
        Public Event FindSoftwarePackageGroupCompleted As FindSoftwarePackageGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event FindSoftwarePackageProcedureGroupCompleted As FindSoftwarePackageProcedureGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event FindSoftwareJobContainerCompleted As FindSoftwareJobContainerCompletedEventHandler
        
        '''<remarks/>
        Public Event FindSoftwarePolicyCompleted As FindSoftwarePolicyCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwarePackageGroupListCompleted As OpenSoftwarePackageGroupListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageGroupsCompleted As GetSoftwarePackageGroupsCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwarePackageGroupListCompleted As CloseSoftwarePackageGroupListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwarePackageProcedureGroupListCompleted As OpenSoftwarePackageProcedureGroupListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageProcedureGroupsCompleted As GetSoftwarePackageProcedureGroupsCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwarePackageProcedureGroupListCompleted As CloseSoftwarePackageProcedureGroupListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwareJobContainerListCompleted As OpenSoftwareJobContainerListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwareJobContainersCompleted As GetSoftwareJobContainersCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwareJobContainerListCompleted As CloseSoftwareJobContainerListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwarePolicyListCompleted As OpenSoftwarePolicyListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePoliciesCompleted As GetSoftwarePoliciesCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwarePolicyListCompleted As CloseSoftwarePolicyListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwarePackageGroupListRecursiveCompleted As OpenSoftwarePackageGroupListRecursiveCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageGroupsRecursiveCompleted As GetSoftwarePackageGroupsRecursiveCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwarePackageGroupListRecursiveCompleted As CloseSoftwarePackageGroupListRecursiveCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwarePackageProcedureGroupListRecursiveCompleted As OpenSoftwarePackageProcedureGroupListRecursiveCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageProcedureGroupsRecursiveCompleted As GetSoftwarePackageProcedureGroupsRecursiveCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwarePackageProcedureGroupListRecursiveCompleted As CloseSoftwarePackageProcedureGroupListRecursiveCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwareJobContainerListRecursiveCompleted As OpenSoftwareJobContainerListRecursiveCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwareJobContainersRecursiveCompleted As GetSoftwareJobContainersRecursiveCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwareJobContainerListRecursiveCompleted As CloseSoftwareJobContainerListRecursiveCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwarePolicyListRecursiveCompleted As OpenSoftwarePolicyListRecursiveCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePoliciesRecursiveCompleted As GetSoftwarePoliciesRecursiveCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwarePolicyListRecursiveCompleted As CloseSoftwarePolicyListRecursiveCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenParentSoftwarePackageGroupListCompleted As OpenParentSoftwarePackageGroupListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetParentSoftwarePackageGroupsCompleted As GetParentSoftwarePackageGroupsCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseParentSoftwarePackageGroupListCompleted As CloseParentSoftwarePackageGroupListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenParentSoftwarePackageProcedureGroupListCompleted As OpenParentSoftwarePackageProcedureGroupListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetParentSoftwarePackageProcedureGroupsCompleted As GetParentSoftwarePackageProcedureGroupsCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseParentSoftwarePackageProcedureGroupListCompleted As CloseParentSoftwarePackageProcedureGroupListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenParentSoftwareJobContainerListCompleted As OpenParentSoftwareJobContainerListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetParentSoftwareJobContainersCompleted As GetParentSoftwareJobContainersCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseParentSoftwarePackageJobContainerListCompleted As CloseParentSoftwarePackageJobContainerListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwarePackageGroupSoftwarePackageListCompleted As OpenSoftwarePackageGroupSoftwarePackageListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageGroupSoftwarePackagesCompleted As GetSoftwarePackageGroupSoftwarePackagesCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwarePackageGroupSoftwarePackageListCompleted As CloseSoftwarePackageGroupSoftwarePackageListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwarePackageProcedureGroupSoftwarePackageProcedureListCompleted As OpenSoftwarePackageProcedureGroupSoftwarePackageProcedureListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageProcedureGroupSoftwarePackageProceduresCompleted As GetSoftwarePackageProcedureGroupSoftwarePackageProceduresCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwarePackageProcedureGroupSoftwarePackageProcedureListCompleted As CloseSoftwarePackageProcedureGroupSoftwarePackageProcedureListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwareJobContainerSoftwareJobListCompleted As OpenSoftwareJobContainerSoftwareJobListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwareJobContainerSoftwareJobsCompleted As GetSoftwareJobContainerSoftwareJobsCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwareJobContainerSoftwareJobListCompleted As CloseSoftwareJobContainerSoftwareJobListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwarePolicySoftwareJobListCompleted As OpenSoftwarePolicySoftwareJobListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePolicySoftwareJobsCompleted As GetSoftwarePolicySoftwareJobsCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwarePolicySoftwareJobListCompleted As CloseSoftwarePolicySoftwareJobListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwarePackageGroupSoftwarePackageListRecursiveCompleted As OpenSoftwarePackageGroupSoftwarePackageListRecursiveCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageGroupSoftwarePackagesRecursiveCompleted As GetSoftwarePackageGroupSoftwarePackagesRecursiveCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwarePackageGroupSoftwarePackageListRecursiveCompleted As CloseSoftwarePackageGroupSoftwarePackageListRecursiveCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwarePolicySoftwarePolicyExceptionListCompleted As OpenSoftwarePolicySoftwarePolicyExceptionListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePolicySoftwarePolicyExceptionsCompleted As GetSoftwarePolicySoftwarePolicyExceptionsCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwarePolicySoftwarePolicyExceptionListCompleted As CloseSoftwarePolicySoftwarePolicyExceptionListCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkSoftwarePackagesToSoftwarePackageGroupCompleted As LinkSoftwarePackagesToSoftwarePackageGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event UnlinkSoftwarePackagesFromSoftwarePackageGroupCompleted As UnlinkSoftwarePackagesFromSoftwarePackageGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkSoftwarePackageGroupsToSoftwarePackageGroupCompleted As LinkSoftwarePackageGroupsToSoftwarePackageGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event UnlinkSoftwarePackageGroupsFromSoftwarePackageGroupCompleted As UnlinkSoftwarePackageGroupsFromSoftwarePackageGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkSoftwarePackageProcedureGroupsToSoftwarePackageGroupCompleted As LinkSoftwarePackageProcedureGroupsToSoftwarePackageGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event UnlinkSoftwarePackageProcedureGroupsFromSoftwarePackageGroupCompleted As UnlinkSoftwarePackageProcedureGroupsFromSoftwarePackageGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupCompleted As LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupCompleted As UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenUnitDiscoveredSoftwareListCompleted As OpenUnitDiscoveredSoftwareListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitDiscoveredSoftwareCompleted As GetUnitDiscoveredSoftwareCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseUnitDiscoveredSoftwareListCompleted As CloseUnitDiscoveredSoftwareListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSystemGroupUUIDCompleted As GetSystemGroupUUIDCompletedEventHandler
        
        '''<remarks/>
        Public Event ResetTimeoutCompleted As ResetTimeoutCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateInstallSoftwareJobInSoftwarePolicyCompleted As CreateInstallSoftwareJobInSoftwarePolicyCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateActivateSoftwareJobInSoftwarePolicyCompleted As CreateActivateSoftwareJobInSoftwarePolicyCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateConfigureSoftwareJobInSoftwarePolicyCompleted As CreateConfigureSoftwareJobInSoftwarePolicyCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateUninstallSoftwareJobInSoftwarePolicyCompleted As CreateUninstallSoftwareJobInSoftwarePolicyCompletedEventHandler
        
        '''<remarks/>
        Public Event SetTimeoutValueCompleted As SetTimeoutValueCompletedEventHandler
        
        '''<remarks/>
        Public Event GetInstalledComponentsCompleted As GetInstalledComponentsCompletedEventHandler
        
        '''<remarks/>
        Public Event ImportSoftwarePackage2Completed As ImportSoftwarePackage2CompletedEventHandler
        
        '''<remarks/>
        Public Event RepositionSoftwarePackageProcedureCompleted As RepositionSoftwarePackageProcedureCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkSoftwareGroupsToSoftwarePackageGroupCompleted As LinkSoftwareGroupsToSoftwarePackageGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event UnlinkSoftwareGroupsFromSoftwarePackageGroupCompleted As UnlinkSoftwareGroupsFromSoftwarePackageGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSoftwareGroupCompleted As CreateSoftwareGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSoftwareGroupsCompleted As DeleteSoftwareGroupsCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSoftwareGroupCompleted As SetSoftwareGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateComputerCompleted As CreateComputerCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateUserProfileCompleted As CreateUserProfileCompletedEventHandler
        
        '''<remarks/>
        Public Event SetComputerCompleted As SetComputerCompletedEventHandler
        
        '''<remarks/>
        Public Event SetComputerByNameCompleted As SetComputerByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event SetUserProfileCompleted As SetUserProfileCompletedEventHandler
        
        '''<remarks/>
        Public Event SetUserProfileByNameCompleted As SetUserProfileByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteComputersCompleted As DeleteComputersCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteComputersByNameCompleted As DeleteComputersByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteUserProfilesCompleted As DeleteUserProfilesCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteUserProfilesByNameCompleted As DeleteUserProfilesByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSoftwareJobsInComputerCompleted As DeleteSoftwareJobsInComputerCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSoftwarePolicy2Completed As CreateSoftwarePolicy2CompletedEventHandler
        
        '''<remarks/>
        Public Event SetSoftwarePolicy2Completed As SetSoftwarePolicy2CompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSoftwarePoliciesInUnitGroupCompleted As DeleteSoftwarePoliciesInUnitGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateUnitGroup2Completed As CreateUnitGroup2CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateUnitGroupByNameCompleted As CreateUnitGroupByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSoftwarePolicyByNameCompleted As CreateSoftwarePolicyByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSoftwarePolicyByNameCompleted As SetSoftwarePolicyByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSoftwarePoliciesInUnitGroupByNameCompleted As DeleteSoftwarePoliciesInUnitGroupByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event ImportSoftwarePackageByNameCompleted As ImportSoftwarePackageByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event RepositionSoftwarePackageProcedureByNameCompleted As RepositionSoftwarePackageProcedureByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkSoftwareGroupsToSoftwarePackageGroupByNameCompleted As LinkSoftwareGroupsToSoftwarePackageGroupByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event UnlinkSoftwareGroupsFromSoftwarePackageGroupByNameCompleted As UnlinkSoftwareGroupsFromSoftwarePackageGroupByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSoftwareGroupByNameCompleted As CreateSoftwareGroupByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSoftwareGroupsByNameCompleted As DeleteSoftwareGroupsByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSoftwareGroupByNameCompleted As SetSoftwareGroupByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateInstallSoftwareJob2Completed As CreateInstallSoftwareJob2CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateInstallSoftwareJobInSoftwarePolicy2Completed As CreateInstallSoftwareJobInSoftwarePolicy2CompletedEventHandler
        
        '''<remarks/>
        Public Event SetSoftwareJob2Completed As SetSoftwareJob2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwareJob2Completed As GetSoftwareJob2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwareJobs2Completed As GetSoftwareJobs2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwareJobContainerSoftwareJobs2Completed As GetSoftwareJobContainerSoftwareJobs2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePolicySoftwareJobs2Completed As GetSoftwarePolicySoftwareJobs2CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSoftwareJobContainer2Completed As CreateSoftwareJobContainer2CompletedEventHandler
        
        '''<remarks/>
        Public Event SetSoftwareJobContainer2Completed As SetSoftwareJobContainer2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwareJobContainer2Completed As GetSoftwareJobContainer2CompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwareJobContainerList2Completed As OpenSoftwareJobContainerList2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwareJobContainers2Completed As GetSoftwareJobContainers2CompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwareJobContainerList2Completed As CloseSoftwareJobContainerList2CompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwareJobContainerListRecursive2Completed As OpenSoftwareJobContainerListRecursive2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwareJobContainersRecursive2Completed As GetSoftwareJobContainersRecursive2CompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwareJobContainerListRecursive2Completed As CloseSoftwareJobContainerListRecursive2CompletedEventHandler
        
        '''<remarks/>
        Public Event OpenParentSoftwareJobContainerList2Completed As OpenParentSoftwareJobContainerList2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetParentSoftwareJobContainers2Completed As GetParentSoftwareJobContainers2CompletedEventHandler
        
        '''<remarks/>
        Public Event CloseParentSoftwareJobContainerList2Completed As CloseParentSoftwareJobContainerList2CompletedEventHandler
        
        '''<remarks/>
        Public Event SetSoftwareJobContainerPriorityCompleted As SetSoftwareJobContainerPriorityCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePolicy2Completed As GetSoftwarePolicy2CompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwarePolicyList2Completed As OpenSoftwarePolicyList2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePolicies2Completed As GetSoftwarePolicies2CompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSoftwarePolicyList2Completed As CloseSoftwarePolicyList2CompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteUnitGroupsByNameCompleted As DeleteUnitGroupsByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkUnitGroupsToUnitGroupByNameCompleted As LinkUnitGroupsToUnitGroupByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkComputersToUnitGroupByNameCompleted As LinkComputersToUnitGroupByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event UnlinkComputersFromUnitGroupByNameCompleted As UnlinkComputersFromUnitGroupByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event UnlinkUnitGroupsFromUnitGroupByNameCompleted As UnlinkUnitGroupsFromUnitGroupByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkSoftwarePackagesToSoftwarePackageGroupByNameCompleted As LinkSoftwarePackagesToSoftwarePackageGroupByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event UnlinkSoftwarePackagesFromSoftwarePackageGroupByNameCompleted As UnlinkSoftwarePackagesFromSoftwarePackageGroupByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSoftwarePackagesByNameCompleted As DeleteSoftwarePackagesByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupByNameCompleted As LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateInstallSoftwareJobInSoftwarePolicyByNameCompleted As CreateInstallSoftwareJobInSoftwarePolicyByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateActivateSoftwareJobInSoftwarePolicyByNameCompleted As CreateActivateSoftwareJobInSoftwarePolicyByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateConfigureSoftwareJobInSoftwarePolicyByNameCompleted As CreateConfigureSoftwareJobInSoftwarePolicyByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateUninstallSoftwareJobInSoftwarePolicyByNameCompleted As CreateUninstallSoftwareJobInSoftwarePolicyByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event UnsealSoftwarePoliciesByNameCompleted As UnsealSoftwarePoliciesByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkSoftwarePoliciesToUnitGroupCompleted As LinkSoftwarePoliciesToUnitGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkSoftwarePoliciesToUnitGroupByNameCompleted As LinkSoftwarePoliciesToUnitGroupByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event UnlinkSoftwarePoliciesFromUnitGroupCompleted As UnlinkSoftwarePoliciesFromUnitGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event UnlinkSoftwarePoliciesFromUnitGroupByNameCompleted As UnlinkSoftwarePoliciesFromUnitGroupByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSoftwareJobsInComputerByNameCompleted As DeleteSoftwareJobsInComputerByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupByNameCompleted As UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSoftwarePoliciesByNameCompleted As DeleteSoftwarePoliciesByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDomainCompleted As GetDomainCompletedEventHandler
        
        '''<remarks/>
        Public Event FindDomainCompleted As FindDomainCompletedEventHandler
        
        '''<remarks/>
        Public Event FindDomainGroupCompleted As FindDomainGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateDomainGroupCompleted As CreateDomainGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkDomainsToDomainGroupCompleted As LinkDomainsToDomainGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkDomainGroupsToDomainGroupCompleted As LinkDomainGroupsToDomainGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event SetDomainGroupCompleted As SetDomainGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDomainGroupCompleted As GetDomainGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteDomainGroupsCompleted As DeleteDomainGroupsCompletedEventHandler
        
        '''<remarks/>
        Public Event UnlinkDomainsFromDomainGroupCompleted As UnlinkDomainsFromDomainGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event UnlinkDomainGroupsFromDomainGroupCompleted As UnlinkDomainGroupsFromDomainGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenDomainGroupDomainGroupMembersListCompleted As OpenDomainGroupDomainGroupMembersListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDomainGroupDomainGroupMembersCompleted As GetDomainGroupDomainGroupMembersCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseDomainGroupDomainGroupMembersListCompleted As CloseDomainGroupDomainGroupMembersListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenDomainGroupDomainMembersListCompleted As OpenDomainGroupDomainMembersListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDomainGroupDomainMembersCompleted As GetDomainGroupDomainMembersCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseDomainGroupDomainMembersListCompleted As CloseDomainGroupDomainMembersListCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateDistributionContainerCompleted As CreateDistributionContainerCompletedEventHandler
        
        '''<remarks/>
        Public Event AddRegisterSoftwarePackageOrdersToDistributionContainerCompleted As AddRegisterSoftwarePackageOrdersToDistributionContainerCompletedEventHandler
        
        '''<remarks/>
        Public Event AddDeregisterSoftwarePackageOrdersToDistributionContainerCompleted As AddDeregisterSoftwarePackageOrdersToDistributionContainerCompletedEventHandler
        
        '''<remarks/>
        Public Event AddRegisterSoftwarePackageProcedureOrdersToDistributionContainerCompleted As AddRegisterSoftwarePackageProcedureOrdersToDistributionContainerCompletedEventHandler
        
        '''<remarks/>
        Public Event AddDeregisterSoftwarePackageProcedureOrdersToDistributionContainerCompleted As AddDeregisterSoftwarePackageProcedureOrdersToDistributionContainerCompletedEventHandler
        
        '''<remarks/>
        Public Event AddRegisterSoftwarePolicyOrdersToDistributionContainerCompleted As AddRegisterSoftwarePolicyOrdersToDistributionContainerCompletedEventHandler
        
        '''<remarks/>
        Public Event AddDeregisterSoftwarePolicyOrdersToDistributionContainerCompleted As AddDeregisterSoftwarePolicyOrdersToDistributionContainerCompletedEventHandler
        
        '''<remarks/>
        Public Event AddRegisterSoftwareJobContainerOrdersToDistributionContainerCompleted As AddRegisterSoftwareJobContainerOrdersToDistributionContainerCompletedEventHandler
        
        '''<remarks/>
        Public Event AddDeregisterSoftwareJobContainerOrdersToDistributionContainerCompleted As AddDeregisterSoftwareJobContainerOrdersToDistributionContainerCompletedEventHandler
        
        '''<remarks/>
        Public Event SetDistributionContainerCompleted As SetDistributionContainerCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteDistributionContainersCompleted As DeleteDistributionContainersCompletedEventHandler
        
        '''<remarks/>
        Public Event HaltDeliveryDistributionContainersCompleted As HaltDeliveryDistributionContainersCompletedEventHandler
        
        '''<remarks/>
        Public Event ResumeDeliveryDistributionContainersCompleted As ResumeDeliveryDistributionContainersCompletedEventHandler
        
        '''<remarks/>
        Public Event RenewDeliveryDistributionContainersCompleted As RenewDeliveryDistributionContainersCompletedEventHandler
        
        '''<remarks/>
        Public Event SendDistributionContainerCompleted As SendDistributionContainerCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDistributionContainerCompleted As GetDistributionContainerCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenDistributionContainerListCompleted As OpenDistributionContainerListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDistributionContainersCompleted As GetDistributionContainersCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseDistributionContainerListCompleted As CloseDistributionContainerListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenDistributionContainerDistributionDomainListCompleted As OpenDistributionContainerDistributionDomainListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDistributionContainerDistributionDomainsCompleted As GetDistributionContainerDistributionDomainsCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseDistributionContainerDistributionDomainListCompleted As CloseDistributionContainerDistributionDomainListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDistributionContainerOrderCompleted As GetDistributionContainerOrderCompletedEventHandler
        
        '''<remarks/>
        Public Event AddFetchItemJobOrdersToDistributionContainerCompleted As AddFetchItemJobOrdersToDistributionContainerCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenDistributionContainerOrderListCompleted As OpenDistributionContainerOrderListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDistributionContainerOrdersCompleted As GetDistributionContainerOrdersCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseDistributionContainerOrdersCompleted As CloseDistributionContainerOrdersCompletedEventHandler
        
        '''<remarks/>
        Public Event GetManagerDateTimeCompleted As GetManagerDateTimeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetInstalledComponents2Completed As GetInstalledComponents2CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateQuery2Completed As CreateQuery2CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSecurityAreaCompleted As CreateSecurityAreaCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSecurityAreasCompleted As DeleteSecurityAreasCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSecurityAreasByNameCompleted As DeleteSecurityAreasByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSecurityAreaListCompleted As OpenSecurityAreaListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSecurityAreasCompleted As GetSecurityAreasCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSecurityAreaListCompleted As CloseSecurityAreaListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSecurityAreaCompleted As GetSecurityAreaCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSecurityAreaByNameCompleted As GetSecurityAreaByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSecurityAreaCompleted As SetSecurityAreaCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSecurityAreaByNameCompleted As SetSecurityAreaByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSecurityAreaConfigurationCompleted As SetSecurityAreaConfigurationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSecurityAreaConfigurationCompleted As GetSecurityAreaConfigurationCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSecurityAreaConfigurationByNameCompleted As SetSecurityAreaConfigurationByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSecurityAreaConfigurationByNameCompleted As GetSecurityAreaConfigurationByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSecurityObjectsSecurityAreaLinkagesCompleted As GetSecurityObjectsSecurityAreaLinkagesCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkSecurityAreasToSecurityProfileCompleted As LinkSecurityAreasToSecurityProfileCompletedEventHandler
        
        '''<remarks/>
        Public Event UnlinkSecurityAreasFromSecurityProfileCompleted As UnlinkSecurityAreasFromSecurityProfileCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkSecurityAreasToSecurityProfileByNameCompleted As LinkSecurityAreasToSecurityProfileByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event UnlinkSecurityAreasFromSecurityProfileByNameCompleted As UnlinkSecurityAreasFromSecurityProfileByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkSecurityProfilesToSecurityAreaCompleted As LinkSecurityProfilesToSecurityAreaCompletedEventHandler
        
        '''<remarks/>
        Public Event UnlinkSecurityProfilesFromSecurityAreaCompleted As UnlinkSecurityProfilesFromSecurityAreaCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkSecurityProfilesToSecurityAreaByNameCompleted As LinkSecurityProfilesToSecurityAreaByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event UnlinkSecurityProfilesFromSecurityAreaByNameCompleted As UnlinkSecurityProfilesFromSecurityAreaByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSecurityObjectsSecurityAreaLinkagesCompleted As SetSecurityObjectsSecurityAreaLinkagesCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSecurityObjectOwnerShipCompleted As SetSecurityObjectOwnerShipCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSecurityObjectOwnerShipCompleted As GetSecurityObjectOwnerShipCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSecurityObjectPermissionsStringCompleted As GetSecurityObjectPermissionsStringCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSecurityProfilesByNameCompleted As DeleteSecurityProfilesByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSecurityProfileByNameCompleted As GetSecurityProfileByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSecurityProfileByNameCompleted As SetSecurityProfileByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSecurityProfileCompleted As CreateSecurityProfileCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSecurityProfilesCompleted As DeleteSecurityProfilesCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSecurityProfileListCompleted As OpenSecurityProfileListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSecurityProfilesCompleted As GetSecurityProfilesCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSecurityProfileListCompleted As CloseSecurityProfileListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSecurityProfileCompleted As GetSecurityProfileCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSecurityProfileCompleted As SetSecurityProfileCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSecurityClassListCompleted As OpenSecurityClassListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSecurityClassesCompleted As GetSecurityClassesCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseSecurityClassListCompleted As CloseSecurityClassListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSecurityClassPermissionsCompleted As GetSecurityClassPermissionsCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSecurityClassPermissionsCompleted As SetSecurityClassPermissionsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSecurityClassPermissionsForAllSecurityProfilesCompleted As GetSecurityClassPermissionsForAllSecurityProfilesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAllSecurityClassPermissionsForSecurityProfileCompleted As GetAllSecurityClassPermissionsForSecurityProfileCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSecurityGroupsPermissionsCompleted As GetSecurityGroupsPermissionsCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSecurityGroupsPermissionsCompleted As SetSecurityGroupsPermissionsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSecurityGroupPermissionsForAllSecurityProfilesCompleted As GetSecurityGroupPermissionsForAllSecurityProfilesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSecurityObjectPermissionsCompleted As GetSecurityObjectPermissionsCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSecurityObjectsPermissionsCompleted As SetSecurityObjectsPermissionsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSecurityObjectPermissionsForAllSecurityProfilesCompleted As GetSecurityObjectPermissionsForAllSecurityProfilesCompletedEventHandler
        
        '''<remarks/>
        Public Event SetUnitGroup2Completed As SetUnitGroup2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetDeploymentPackagesCompleted As GetDeploymentPackagesCompletedEventHandler
        
        '''<remarks/>
        Public Event ScanPackageOnTargetComputersCompleted As ScanPackageOnTargetComputersCompletedEventHandler
        
        '''<remarks/>
        Public Event DeployPackageCompleted As DeployPackageCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDeploymentJobStatusCompleted As GetDeploymentJobStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event StagePackageCompleted As StagePackageCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDeploymentPackagesOnScalabilityServerCompleted As GetDeploymentPackagesOnScalabilityServerCompletedEventHandler
        
        '''<remarks/>
        Public Event SuspendDeploymentJobCompleted As SuspendDeploymentJobCompletedEventHandler
        
        '''<remarks/>
        Public Event ResumeDeploymentJobCompleted As ResumeDeploymentJobCompletedEventHandler
        
        '''<remarks/>
        Public Event DiscardDeploymentJobCompleted As DiscardDeploymentJobCompletedEventHandler
        
        '''<remarks/>
        Public Event AbortDeploymentJobCompleted As AbortDeploymentJobCompletedEventHandler
        
        '''<remarks/>
        Public Event RetryDeploymentJobCompleted As RetryDeploymentJobCompletedEventHandler
        
        '''<remarks/>
        Public Event ExportSoftwarePackageCompleted As ExportSoftwarePackageCompletedEventHandler
        
        '''<remarks/>
        Public Event ExportSoftwarePackageByNameCompleted As ExportSoftwarePackageByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteUnitGroups2Completed As DeleteUnitGroups2CompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteUnitGroupsByName2Completed As DeleteUnitGroupsByName2CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSoftwareJobContainer3Completed As CreateSoftwareJobContainer3CompletedEventHandler
        
        '''<remarks/>
        Public Event SetSoftwareJobContainer3Completed As SetSoftwareJobContainer3CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwareJobContainer3Completed As GetSoftwareJobContainer3CompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwareJobContainerList3Completed As OpenSoftwareJobContainerList3CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwareJobContainers3Completed As GetSoftwareJobContainers3CompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwareJobContainerListRecursive3Completed As OpenSoftwareJobContainerListRecursive3CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwareJobContainersRecursive3Completed As GetSoftwareJobContainersRecursive3CompletedEventHandler
        
        '''<remarks/>
        Public Event OpenParentSoftwareJobContainerList3Completed As OpenParentSoftwareJobContainerList3CompletedEventHandler
        
        '''<remarks/>
        Public Event GetParentSoftwareJobContainers3Completed As GetParentSoftwareJobContainers3CompletedEventHandler
        
        '''<remarks/>
        Public Event GetDistributionContainerOrder3Completed As GetDistributionContainerOrder3CompletedEventHandler
        
        '''<remarks/>
        Public Event GetDistributionContainerOrders3Completed As GetDistributionContainerOrders3CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSoftwarePolicy3Completed As CreateSoftwarePolicy3CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSoftwarePolicyByName3Completed As CreateSoftwarePolicyByName3CompletedEventHandler
        
        '''<remarks/>
        Public Event SetSoftwarePolicy3Completed As SetSoftwarePolicy3CompletedEventHandler
        
        '''<remarks/>
        Public Event SetSoftwarePolicyByName3Completed As SetSoftwarePolicyByName3CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePolicy3Completed As GetSoftwarePolicy3CompletedEventHandler
        
        '''<remarks/>
        Public Event OpenSoftwarePolicyList3Completed As OpenSoftwarePolicyList3CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePolicies3Completed As GetSoftwarePolicies3CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateInstallSoftwareJob3Completed As CreateInstallSoftwareJob3CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateInstallSoftwareJobInSoftwarePolicy3Completed As CreateInstallSoftwareJobInSoftwarePolicy3CompletedEventHandler
        
        '''<remarks/>
        Public Event SetSoftwareJob3Completed As SetSoftwareJob3CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwareJob3Completed As GetSoftwareJob3CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwareJobs3Completed As GetSoftwareJobs3CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwareJobContainerSoftwareJobs3Completed As GetSoftwareJobContainerSoftwareJobs3CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePolicySoftwareJobs3Completed As GetSoftwarePolicySoftwareJobs3CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateActivateSoftwareJob3Completed As CreateActivateSoftwareJob3CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateConfigureSoftwareJob3Completed As CreateConfigureSoftwareJob3CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateUninstallSoftwareJob3Completed As CreateUninstallSoftwareJob3CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateRecoverSoftwareJob3Completed As CreateRecoverSoftwareJob3CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateRenewSoftwareJob3Completed As CreateRenewSoftwareJob3CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateActivateSoftwareJobInSoftwarePolicyByName3Completed As CreateActivateSoftwareJobInSoftwarePolicyByName3CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateConfigureSoftwareJobInSoftwarePolicyByName3Completed As CreateConfigureSoftwareJobInSoftwarePolicyByName3CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateUninstallSoftwareJobInSoftwarePolicyByName3Completed As CreateUninstallSoftwareJobInSoftwarePolicyByName3CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateInstallSoftwareJobInSoftwarePolicyByName3Completed As CreateInstallSoftwareJobInSoftwarePolicyByName3CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateUninstallSoftwareJobInSoftwarePolicy3Completed As CreateUninstallSoftwareJobInSoftwarePolicy3CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateActivateSoftwareJobInSoftwarePolicy3Completed As CreateActivateSoftwareJobInSoftwarePolicy3CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateConfigureSoftwareJobInSoftwarePolicy3Completed As CreateConfigureSoftwareJobInSoftwarePolicy3CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSoftwarePackageProcedure2Completed As CreateSoftwarePackageProcedure2CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateAddedSoftwarePackageProcedure2Completed As CreateAddedSoftwarePackageProcedure2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageProcedures2Completed As GetSoftwarePackageProcedures2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageProcedure2Completed As GetSoftwarePackageProcedure2CompletedEventHandler
        
        '''<remarks/>
        Public Event SetSoftwarePackageProcedure2Completed As SetSoftwarePackageProcedure2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageProcedureGroupSoftwarePackageProcedures2Completed As GetSoftwarePackageProcedureGroupSoftwarePackageProcedures2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackages2Completed As GetSoftwarePackages2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackage2Completed As GetSoftwarePackage2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageInstallations2Completed As GetSoftwarePackageInstallations2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitUnitSoftwareJobs2Completed As GetUnitUnitSoftwareJobs2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitUnitSoftwareInstallationJobs2Completed As GetUnitUnitSoftwareInstallationJobs2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageGroupSoftwarePackages2Completed As GetSoftwarePackageGroupSoftwarePackages2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageGroupSoftwarePackagesRecursive2Completed As GetSoftwarePackageGroupSoftwarePackagesRecursive2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwareJobUnitSoftwareJobs2Completed As GetSoftwareJobUnitSoftwareJobs2CompletedEventHandler
        
        '''<remarks/>
        Public Event WSChallengeCompleted As WSChallengeCompletedEventHandler
        
        '''<remarks/>
        Public Event WSAuthenticateCompleted As WSAuthenticateCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenUnitQueryListCompleted As OpenUnitQueryListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitQueriesCompleted As GetUnitQueriesCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseUnitQueryListCompleted As CloseUnitQueryListCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateOSIMComputerCompleted As CreateOSIMComputerCompletedEventHandler
        
        '''<remarks/>
        Public Event RegisterComputerWithOSIMCompleted As RegisterComputerWithOSIMCompletedEventHandler
        
        '''<remarks/>
        Public Event RegisterComputerWithOSIMByNameCompleted As RegisterComputerWithOSIMByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event SetOSInstallationParameterCompleted As SetOSInstallationParameterCompletedEventHandler
        
        '''<remarks/>
        Public Event SetOSInstallationParameterByNameCompleted As SetOSInstallationParameterByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event ActivateOSInstallationCompleted As ActivateOSInstallationCompletedEventHandler
        
        '''<remarks/>
        Public Event ActivateOSInstallationByNameCompleted As ActivateOSInstallationByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event CancelOSInstallationCompleted As CancelOSInstallationCompletedEventHandler
        
        '''<remarks/>
        Public Event CancelOSInstallationByNameCompleted As CancelOSInstallationByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event ReActivateOSInstallationCompleted As ReActivateOSInstallationCompletedEventHandler
        
        '''<remarks/>
        Public Event ReActivateOSInstallationByNameCompleted As ReActivateOSInstallationByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event ReInstallOSCompleted As ReInstallOSCompletedEventHandler
        
        '''<remarks/>
        Public Event ReInstallOSByNameCompleted As ReInstallOSByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnnamedOSIMRegisteredComputersCompleted As GetUnnamedOSIMRegisteredComputersCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnmanagedOSIMRegisteredComputersCompleted As GetUnmanagedOSIMRegisteredComputersCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOSInstallationRequestCompleted As GetOSInstallationRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOSInstallationRequestByNameCompleted As GetOSInstallationRequestByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetInstallationRequestListCompleted As GetInstallationRequestListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetInstallationRequestListByNameCompleted As GetInstallationRequestListByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteOSInstallationRequestCompleted As DeleteOSInstallationRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteOSInstallationRequestByNameCompleted As DeleteOSInstallationRequestByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event DeRegisterOSIMComputerCompleted As DeRegisterOSIMComputerCompletedEventHandler
        
        '''<remarks/>
        Public Event DeRegisterOSIMComputerByNameCompleted As DeRegisterOSIMComputerByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event SetOSIMComputerMACAddressByNameCompleted As SetOSIMComputerMACAddressByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOSInstallationParametersCompleted As GetOSInstallationParametersCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOSInstallationParametersByNameCompleted As GetOSInstallationParametersByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBootImageListCompleted As GetBootImageListCompletedEventHandler
        
        '''<remarks/>
        Public Event AssignOSIMTargetsToBootServerCompleted As AssignOSIMTargetsToBootServerCompletedEventHandler
        
        '''<remarks/>
        Public Event AssignOSIMTargetsToBootServerByNameCompleted As AssignOSIMTargetsToBootServerByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenScalabilityServerListCompleted As OpenScalabilityServerListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetScalabilityServersCompleted As GetScalabilityServersCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseScalabilityServerListCompleted As CloseScalabilityServerListCompletedEventHandler
        
        '''<remarks/>
        Public Event SearchComputerPropertyCompleted As SearchComputerPropertyCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOSImageParametersCompleted As GetOSImageParametersCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBootServerListCompleted As GetBootServerListCompletedEventHandler
        
        '''<remarks/>
        Public Event DeRegisterBootImageCompleted As DeRegisterBootImageCompletedEventHandler
        
        '''<remarks/>
        Public Event DeRegisterOSImageCompleted As DeRegisterOSImageCompletedEventHandler
        
        '''<remarks/>
        Public Event AssignOSImageToOSIMTargetsCompleted As AssignOSImageToOSIMTargetsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBootImageDeployedBootServersCompleted As GetBootImageDeployedBootServersCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOSImageDeployedBootServersCompleted As GetOSImageDeployedBootServersCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenOSImageListCompleted As OpenOSImageListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOSImagesCompleted As GetOSImagesCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseOSImageListCompleted As CloseOSImageListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenOSIMTargetListCompleted As OpenOSIMTargetListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOSIMTargetsCompleted As GetOSIMTargetsCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseOSIMTargetListCompleted As CloseOSIMTargetListCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenUnitGroupComputerMembersList2Completed As OpenUnitGroupComputerMembersList2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitGroupComputerMembers2Completed As GetUnitGroupComputerMembers2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetOSIMTargetCompleted As GetOSIMTargetCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOSIMTargetByNameCompleted As GetOSIMTargetByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetImageFlagDescriptionCompleted As GetImageFlagDescriptionCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateAssetScriptJobCompleted As CreateAssetScriptJobCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAssetScriptJobCompleted As GetAssetScriptJobCompletedEventHandler
        
        '''<remarks/>
        Public Event SetAssetScriptJobCompleted As SetAssetScriptJobCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteAssetJobsCompleted As DeleteAssetJobsCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenAssetScriptJobListCompleted As OpenAssetScriptJobListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAssetScriptJobsCompleted As GetAssetScriptJobsCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseAssetScriptJobListCompleted As CloseAssetScriptJobListCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkAssetJobsToUnitCompleted As LinkAssetJobsToUnitCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkAssetJobsToUnitGroupCompleted As LinkAssetJobsToUnitGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event UnLinkAssetJobsFromUnitCompleted As UnLinkAssetJobsFromUnitCompletedEventHandler
        
        '''<remarks/>
        Public Event UnLinkAssetJobsFromUnitGroupCompleted As UnLinkAssetJobsFromUnitGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event ActivateJobCheckCompleted As ActivateJobCheckCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOSImages2Completed As GetOSImages2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitGroupComputerMembers3Completed As GetUnitGroupComputerMembers3CompletedEventHandler
        
        '''<remarks/>
        Public Event GetOSIMTargets2Completed As GetOSIMTargets2CompletedEventHandler
        
        '''<remarks/>
        Public Event IsServiceDeskIntegrationEnabledCompleted As IsServiceDeskIntegrationEnabledCompletedEventHandler
        
        '''<remarks/>
        Public Event GetServiceDeskRequestURLForContainerCompleted As GetServiceDeskRequestURLForContainerCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSoftwareJobContainer4Completed As CreateSoftwareJobContainer4CompletedEventHandler
        
        '''<remarks/>
        Public Event GetServiceDeskTemplatesCompleted As GetServiceDeskTemplatesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitGroupByNameCompleted As GetUnitGroupByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetComputerOSNameCompleted As GetComputerOSNameCompletedEventHandler
        
        '''<remarks/>
        Public Event SetOSInstallationParameter2Completed As SetOSInstallationParameter2CompletedEventHandler
        
        '''<remarks/>
        Public Event SetOSInstallationParameterByName2Completed As SetOSInstallationParameterByName2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetOSIMParameterDefaultsCompleted As GetOSIMParameterDefaultsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOSIMParameterDefaultsByNameCompleted As GetOSIMParameterDefaultsByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetHardWareModelListCompleted As GetHardWareModelListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitGroupsXMLCompleted As GetUnitGroupsXMLCompletedEventHandler
        
        '''<remarks/>
        Public Event GetComputerHWModelCompleted As GetComputerHWModelCompletedEventHandler
        
        '''<remarks/>
        Public Event GetComputerHWModelByNameCompleted As GetComputerHWModelByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetQueryFolderIdCompleted As GetQueryFolderIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetQueryFoldersCompleted As GetQueryFoldersCompletedEventHandler
        
        '''<remarks/>
        Public Event GetQueries2Completed As GetQueries2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetBootImageList2Completed As GetBootImageList2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetBootServerList2Completed As GetBootServerList2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageListCompleted As GetSoftwarePackageListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetInstalledComponents3Completed As GetInstalledComponents3CompletedEventHandler
        
        '''<remarks/>
        Public Event GetManagerConfigurationParameterIntCompleted As GetManagerConfigurationParameterIntCompletedEventHandler
        
        '''<remarks/>
        Public Event GetManagerPropertiesCompleted As GetManagerPropertiesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetComputerSDPropertiesCompleted As GetComputerSDPropertiesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetComputerSDPropertiesByNameCompleted As GetComputerSDPropertiesByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOSTypesXMLCompleted As GetOSTypesXMLCompletedEventHandler
        
        '''<remarks/>
        Public Event GetComputerByNameCompleted As GetComputerByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOSIMTargetListCompleted As GetOSIMTargetListCompletedEventHandler
        
        '''<remarks/>
        Public Event SetOSInstallationParametersCompleted As SetOSInstallationParametersCompletedEventHandler
        
        '''<remarks/>
        Public Event SetOSInstallationParametersByNameCompleted As SetOSInstallationParametersByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSoftwarePackage3Completed As CreateSoftwarePackage3CompletedEventHandler
        
        '''<remarks/>
        Public Event SetSoftwarePackage3Completed As SetSoftwarePackage3CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackage3Completed As GetSoftwarePackage3CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageList3Completed As GetSoftwarePackageList3CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSoftwarePackageProcedure3Completed As CreateSoftwarePackageProcedure3CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateAddedSoftwarePackageProcedure3Completed As CreateAddedSoftwarePackageProcedure3CompletedEventHandler
        
        '''<remarks/>
        Public Event SetSoftwarePackageProcedure3Completed As SetSoftwarePackageProcedure3CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageProcedures3Completed As GetSoftwarePackageProcedures3CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageProcedure3Completed As GetSoftwarePackageProcedure3CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageProcedureGroupSoftwarePackageProcedures3Completed As GetSoftwarePackageProcedureGroupSoftwarePackageProcedures3CompletedEventHandler
        
        '''<remarks/>
        Public Event SetQuery2Completed As SetQuery2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetQuery2Completed As GetQuery2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageProcedureListCompleted As GetSoftwarePackageProcedureListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageProcedure4Completed As GetSoftwarePackageProcedure4CompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitSoftwareJobListCompleted As GetUnitSoftwareJobListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageInstallationListCompleted As GetSoftwarePackageInstallationListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageProcedureGroupProcedureListCompleted As GetSoftwarePackageProcedureGroupProcedureListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAuthenticatedURICompleted As GetAuthenticatedURICompletedEventHandler
        
        '''<remarks/>
        Public Event Login3Completed As Login3CompletedEventHandler
        
        '''<remarks/>
        Public Event Login4Completed As Login4CompletedEventHandler
        
        '''<remarks/>
        Public Event WSChallenge2Completed As WSChallenge2CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateComputer2Completed As CreateComputer2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetLocaleCompleted As GetLocaleCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitGroup2Completed As GetUnitGroup2CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateUnitGroup3Completed As CreateUnitGroup3CompletedEventHandler
        
        '''<remarks/>
        Public Event LinkItemsToUnitGroupCompleted As LinkItemsToUnitGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event UnLinkItemsFromUnitGroupCompleted As UnLinkItemsFromUnitGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event MoveItemsToUnitGroupCompleted As MoveItemsToUnitGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteItemsCompleted As DeleteItemsCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteAlertsCompleted As DeleteAlertsCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateAlertsCompleted As UpdateAlertsCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteAllAlertsCompleted As DeleteAllAlertsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwareJobOutputFileCompleted As GetSoftwareJobOutputFileCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwareJobOutputFile2Completed As GetSoftwareJobOutputFile2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetManagerDateTime2Completed As GetManagerDateTime2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetManagerConfigurationParameterValueCompleted As GetManagerConfigurationParameterValueCompletedEventHandler
        
        '''<remarks/>
        Public Event LinkItemsToSoftwareGroupCompleted As LinkItemsToSoftwareGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event UnLinkItemsFromSoftwareGroupCompleted As UnLinkItemsFromSoftwareGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSoftwarePackageProcedure4Completed As CreateSoftwarePackageProcedure4CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageProcedureList2Completed As GetSoftwarePackageProcedureList2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageProcedure5Completed As GetSoftwarePackageProcedure5CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageProcedureGroupProcedureList2Completed As GetSoftwarePackageProcedureGroupProcedureList2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwarePackageProcedureGroupSoftwarePackageProcedures4Completed As GetSoftwarePackageProcedureGroupSoftwarePackageProcedures4CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSoftwarePackageProcedure5Completed As CreateSoftwarePackageProcedure5CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateAddedSoftwarePackageProcedure4Completed As CreateAddedSoftwarePackageProcedure4CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateAddedProcedureWithNewFiles2Completed As CreateAddedProcedureWithNewFiles2CompletedEventHandler
        
        '''<remarks/>
        Public Event SetSoftwarePackageProcedure4Completed As SetSoftwarePackageProcedure4CompletedEventHandler
        
        '''<remarks/>
        Public Event SetSoftwarePackageProcedure5Completed As SetSoftwarePackageProcedure5CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSoftwarePackageProcedureDependency2Completed As CreateSoftwarePackageProcedureDependency2CompletedEventHandler
        
        '''<remarks/>
        Public Event RepositionSoftwarePackageProcedureDependenciesCompleted As RepositionSoftwarePackageProcedureDependenciesCompletedEventHandler
        
        '''<remarks/>
        Public Event RepositionSoftwareItemsCompleted As RepositionSoftwareItemsCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSoftwareJobCompleted As CreateSoftwareJobCompletedEventHandler
        
        '''<remarks/>
        Public Event ReadVolumeFileCompleted As ReadVolumeFileCompletedEventHandler
        
        '''<remarks/>
        Public Event WriteVolumeFileCompleted As WriteVolumeFileCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEditableVolumeFileExtensionsCompleted As GetEditableVolumeFileExtensionsCompletedEventHandler
        
        '''<remarks/>
        Public Event JobContainerRestrictPriorityCompleted As JobContainerRestrictPriorityCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSDFileCopyOperationStatusCompleted As GetSDFileCopyOperationStatusCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Login(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal userName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal manager As String) As <System.Xml.Serialization.XmlElementAttribute("LoginReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("Login", New Object() {userName, password, manager})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoginAsync(ByVal userName As String, ByVal password As String, ByVal manager As String)
            Me.LoginAsync(userName, password, manager, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoginAsync(ByVal userName As String, ByVal password As String, ByVal manager As String, ByVal userState As Object)
            If (Me.LoginOperationCompleted Is Nothing) Then
                Me.LoginOperationCompleted = AddressOf Me.OnLoginOperationCompleted
            End If
            Me.InvokeAsync("Login", New Object() {userName, password, manager}, Me.LoginOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoginOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoginCompleted(Me, New LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Login2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal userName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal manager As String) As <System.Xml.Serialization.XmlElementAttribute("LoginReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("Login2", New Object() {userName, password, manager})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Login2Async(ByVal userName As String, ByVal password As String, ByVal manager As String)
            Me.Login2Async(userName, password, manager, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Login2Async(ByVal userName As String, ByVal password As String, ByVal manager As String, ByVal userState As Object)
            If (Me.Login2OperationCompleted Is Nothing) Then
                Me.Login2OperationCompleted = AddressOf Me.OnLogin2OperationCompleted
            End If
            Me.InvokeAsync("Login2", New Object() {userName, password, manager}, Me.Login2OperationCompleted, userState)
        End Sub
        
        Private Sub OnLogin2OperationCompleted(ByVal arg As Object)
            If (Not (Me.Login2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Login2Completed(Me, New Login2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Logout(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String)
            Me.Invoke("Logout", New Object() {sessionId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LogoutAsync(ByVal sessionId As String)
            Me.LogoutAsync(sessionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LogoutAsync(ByVal sessionId As String, ByVal userState As Object)
            If (Me.LogoutOperationCompleted Is Nothing) Then
                Me.LogoutOperationCompleted = AddressOf Me.OnLogoutOperationCompleted
            End If
            Me.InvokeAsync("Logout", New Object() {sessionId}, Me.LogoutOperationCompleted, userState)
        End Sub
        
        Private Sub OnLogoutOperationCompleted(ByVal arg As Object)
            If (Not (Me.LogoutCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LogoutCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnlinkUserAccountsFromUnitGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal userAccountIds() As String)
            Me.Invoke("UnlinkUserAccountsFromUnitGroup", New Object() {sessionId, unitGroupId, userAccountIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkUserAccountsFromUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal userAccountIds() As String)
            Me.UnlinkUserAccountsFromUnitGroupAsync(sessionId, unitGroupId, userAccountIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkUserAccountsFromUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal userAccountIds() As String, ByVal userState As Object)
            If (Me.UnlinkUserAccountsFromUnitGroupOperationCompleted Is Nothing) Then
                Me.UnlinkUserAccountsFromUnitGroupOperationCompleted = AddressOf Me.OnUnlinkUserAccountsFromUnitGroupOperationCompleted
            End If
            Me.InvokeAsync("UnlinkUserAccountsFromUnitGroup", New Object() {sessionId, unitGroupId, userAccountIds}, Me.UnlinkUserAccountsFromUnitGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnlinkUserAccountsFromUnitGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnlinkUserAccountsFromUnitGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnlinkUserAccountsFromUnitGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnlinkComputersFromUnitGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal computerIds() As String)
            Me.Invoke("UnlinkComputersFromUnitGroup", New Object() {sessionId, unitGroupId, computerIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkComputersFromUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal computerIds() As String)
            Me.UnlinkComputersFromUnitGroupAsync(sessionId, unitGroupId, computerIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkComputersFromUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal computerIds() As String, ByVal userState As Object)
            If (Me.UnlinkComputersFromUnitGroupOperationCompleted Is Nothing) Then
                Me.UnlinkComputersFromUnitGroupOperationCompleted = AddressOf Me.OnUnlinkComputersFromUnitGroupOperationCompleted
            End If
            Me.InvokeAsync("UnlinkComputersFromUnitGroup", New Object() {sessionId, unitGroupId, computerIds}, Me.UnlinkComputersFromUnitGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnlinkComputersFromUnitGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnlinkComputersFromUnitGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnlinkComputersFromUnitGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnlinkUserProfilesFromUnitGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal userProfileIds() As String)
            Me.Invoke("UnlinkUserProfilesFromUnitGroup", New Object() {sessionId, unitGroupId, userProfileIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkUserProfilesFromUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal userProfileIds() As String)
            Me.UnlinkUserProfilesFromUnitGroupAsync(sessionId, unitGroupId, userProfileIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkUserProfilesFromUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal userProfileIds() As String, ByVal userState As Object)
            If (Me.UnlinkUserProfilesFromUnitGroupOperationCompleted Is Nothing) Then
                Me.UnlinkUserProfilesFromUnitGroupOperationCompleted = AddressOf Me.OnUnlinkUserProfilesFromUnitGroupOperationCompleted
            End If
            Me.InvokeAsync("UnlinkUserProfilesFromUnitGroup", New Object() {sessionId, unitGroupId, userProfileIds}, Me.UnlinkUserProfilesFromUnitGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnlinkUserProfilesFromUnitGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnlinkUserProfilesFromUnitGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnlinkUserProfilesFromUnitGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnlinkUnitGroupsFromUnitGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitGroupIds() As String)
            Me.Invoke("UnlinkUnitGroupsFromUnitGroup", New Object() {sessionId, unitGroupId, unitGroupIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkUnitGroupsFromUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal unitGroupIds() As String)
            Me.UnlinkUnitGroupsFromUnitGroupAsync(sessionId, unitGroupId, unitGroupIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkUnitGroupsFromUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal unitGroupIds() As String, ByVal userState As Object)
            If (Me.UnlinkUnitGroupsFromUnitGroupOperationCompleted Is Nothing) Then
                Me.UnlinkUnitGroupsFromUnitGroupOperationCompleted = AddressOf Me.OnUnlinkUnitGroupsFromUnitGroupOperationCompleted
            End If
            Me.InvokeAsync("UnlinkUnitGroupsFromUnitGroup", New Object() {sessionId, unitGroupId, unitGroupIds}, Me.UnlinkUnitGroupsFromUnitGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnlinkUnitGroupsFromUnitGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnlinkUnitGroupsFromUnitGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnlinkUnitGroupsFromUnitGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateUnitGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal parentUnitGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal createUnitGroupProperties As CreateUnitGroupProperties) As <System.Xml.Serialization.XmlElementAttribute("CreateUnitGroupReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateUnitGroup", New Object() {sessionId, parentUnitGroupId, createUnitGroupProperties})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateUnitGroupAsync(ByVal sessionId As String, ByVal parentUnitGroupId As String, ByVal createUnitGroupProperties As CreateUnitGroupProperties)
            Me.CreateUnitGroupAsync(sessionId, parentUnitGroupId, createUnitGroupProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateUnitGroupAsync(ByVal sessionId As String, ByVal parentUnitGroupId As String, ByVal createUnitGroupProperties As CreateUnitGroupProperties, ByVal userState As Object)
            If (Me.CreateUnitGroupOperationCompleted Is Nothing) Then
                Me.CreateUnitGroupOperationCompleted = AddressOf Me.OnCreateUnitGroupOperationCompleted
            End If
            Me.InvokeAsync("CreateUnitGroup", New Object() {sessionId, parentUnitGroupId, createUnitGroupProperties}, Me.CreateUnitGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateUnitGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateUnitGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateUnitGroupCompleted(Me, New CreateUnitGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkUserAccountsToUnitGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal userAccountIds() As String)
            Me.Invoke("LinkUserAccountsToUnitGroup", New Object() {sessionId, unitGroupId, userAccountIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkUserAccountsToUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal userAccountIds() As String)
            Me.LinkUserAccountsToUnitGroupAsync(sessionId, unitGroupId, userAccountIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkUserAccountsToUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal userAccountIds() As String, ByVal userState As Object)
            If (Me.LinkUserAccountsToUnitGroupOperationCompleted Is Nothing) Then
                Me.LinkUserAccountsToUnitGroupOperationCompleted = AddressOf Me.OnLinkUserAccountsToUnitGroupOperationCompleted
            End If
            Me.InvokeAsync("LinkUserAccountsToUnitGroup", New Object() {sessionId, unitGroupId, userAccountIds}, Me.LinkUserAccountsToUnitGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkUserAccountsToUnitGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkUserAccountsToUnitGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkUserAccountsToUnitGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkComputersToUnitGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal computerIds() As String)
            Me.Invoke("LinkComputersToUnitGroup", New Object() {sessionId, unitGroupId, computerIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkComputersToUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal computerIds() As String)
            Me.LinkComputersToUnitGroupAsync(sessionId, unitGroupId, computerIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkComputersToUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal computerIds() As String, ByVal userState As Object)
            If (Me.LinkComputersToUnitGroupOperationCompleted Is Nothing) Then
                Me.LinkComputersToUnitGroupOperationCompleted = AddressOf Me.OnLinkComputersToUnitGroupOperationCompleted
            End If
            Me.InvokeAsync("LinkComputersToUnitGroup", New Object() {sessionId, unitGroupId, computerIds}, Me.LinkComputersToUnitGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkComputersToUnitGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkComputersToUnitGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkComputersToUnitGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkUserProfilesToUnitGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal userProfileIds() As String)
            Me.Invoke("LinkUserProfilesToUnitGroup", New Object() {sessionId, unitGroupId, userProfileIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkUserProfilesToUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal userProfileIds() As String)
            Me.LinkUserProfilesToUnitGroupAsync(sessionId, unitGroupId, userProfileIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkUserProfilesToUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal userProfileIds() As String, ByVal userState As Object)
            If (Me.LinkUserProfilesToUnitGroupOperationCompleted Is Nothing) Then
                Me.LinkUserProfilesToUnitGroupOperationCompleted = AddressOf Me.OnLinkUserProfilesToUnitGroupOperationCompleted
            End If
            Me.InvokeAsync("LinkUserProfilesToUnitGroup", New Object() {sessionId, unitGroupId, userProfileIds}, Me.LinkUserProfilesToUnitGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkUserProfilesToUnitGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkUserProfilesToUnitGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkUserProfilesToUnitGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkUnitGroupsToUnitGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitGroupIds() As String)
            Me.Invoke("LinkUnitGroupsToUnitGroup", New Object() {sessionId, unitGroupId, unitGroupIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkUnitGroupsToUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal unitGroupIds() As String)
            Me.LinkUnitGroupsToUnitGroupAsync(sessionId, unitGroupId, unitGroupIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkUnitGroupsToUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal unitGroupIds() As String, ByVal userState As Object)
            If (Me.LinkUnitGroupsToUnitGroupOperationCompleted Is Nothing) Then
                Me.LinkUnitGroupsToUnitGroupOperationCompleted = AddressOf Me.OnLinkUnitGroupsToUnitGroupOperationCompleted
            End If
            Me.InvokeAsync("LinkUnitGroupsToUnitGroup", New Object() {sessionId, unitGroupId, unitGroupIds}, Me.LinkUnitGroupsToUnitGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkUnitGroupsToUnitGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkUnitGroupsToUnitGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkUnitGroupsToUnitGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenQueryList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal queryPropertiesRequired As QueryPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfQueries As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfQueriesSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenQueryList", New Object() {sessionId, queryPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfQueries = CType(results(2),System.Nullable(Of Long))
            totalNoOfQueriesSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenQueryListAsync(ByVal sessionId As String, ByVal queryPropertiesRequired As QueryPropertiesRequired)
            Me.OpenQueryListAsync(sessionId, queryPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenQueryListAsync(ByVal sessionId As String, ByVal queryPropertiesRequired As QueryPropertiesRequired, ByVal userState As Object)
            If (Me.OpenQueryListOperationCompleted Is Nothing) Then
                Me.OpenQueryListOperationCompleted = AddressOf Me.OnOpenQueryListOperationCompleted
            End If
            Me.InvokeAsync("OpenQueryList", New Object() {sessionId, queryPropertiesRequired}, Me.OpenQueryListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenQueryListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenQueryListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenQueryListCompleted(Me, New OpenQueryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetQueries(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfQueries As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetQueriesReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("queryPropertiesArray", IsNullable:=false)> QueryProperties()
            Dim results() As Object = Me.Invoke("GetQueries", New Object() {sessionId, listHandle, noOfQueries})
            Return CType(results(0),QueryProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetQueriesAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfQueries As Long)
            Me.GetQueriesAsync(sessionId, listHandle, noOfQueries, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetQueriesAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfQueries As Long, ByVal userState As Object)
            If (Me.GetQueriesOperationCompleted Is Nothing) Then
                Me.GetQueriesOperationCompleted = AddressOf Me.OnGetQueriesOperationCompleted
            End If
            Me.InvokeAsync("GetQueries", New Object() {sessionId, listHandle, noOfQueries}, Me.GetQueriesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetQueriesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetQueriesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetQueriesCompleted(Me, New GetQueriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseQueryList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseQueryList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseQueryListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseQueryListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseQueryListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseQueryListOperationCompleted Is Nothing) Then
                Me.CloseQueryListOperationCompleted = AddressOf Me.OnCloseQueryListOperationCompleted
            End If
            Me.InvokeAsync("CloseQueryList", New Object() {sessionId, listHandle}, Me.CloseQueryListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseQueryListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseQueryListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseQueryListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenQueryResultList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal queryId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal queryResultPropertiesRequired As QueryResultPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfQueryResults As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfQueryResultsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenQueryResultList", New Object() {sessionId, queryId, queryResultPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfQueryResults = CType(results(2),System.Nullable(Of Long))
            totalNoOfQueryResultsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenQueryResultListAsync(ByVal sessionId As String, ByVal queryId As String, ByVal queryResultPropertiesRequired As QueryResultPropertiesRequired)
            Me.OpenQueryResultListAsync(sessionId, queryId, queryResultPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenQueryResultListAsync(ByVal sessionId As String, ByVal queryId As String, ByVal queryResultPropertiesRequired As QueryResultPropertiesRequired, ByVal userState As Object)
            If (Me.OpenQueryResultListOperationCompleted Is Nothing) Then
                Me.OpenQueryResultListOperationCompleted = AddressOf Me.OnOpenQueryResultListOperationCompleted
            End If
            Me.InvokeAsync("OpenQueryResultList", New Object() {sessionId, queryId, queryResultPropertiesRequired}, Me.OpenQueryResultListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenQueryResultListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenQueryResultListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenQueryResultListCompleted(Me, New OpenQueryResultListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetQueryResults(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfResults As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetQueryResultsReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("queryResultPropertiesArray", IsNullable:=false)> QueryResultProperties()
            Dim results() As Object = Me.Invoke("GetQueryResults", New Object() {sessionId, listHandle, noOfResults})
            Return CType(results(0),QueryResultProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetQueryResultsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfResults As Long)
            Me.GetQueryResultsAsync(sessionId, listHandle, noOfResults, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetQueryResultsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfResults As Long, ByVal userState As Object)
            If (Me.GetQueryResultsOperationCompleted Is Nothing) Then
                Me.GetQueryResultsOperationCompleted = AddressOf Me.OnGetQueryResultsOperationCompleted
            End If
            Me.InvokeAsync("GetQueryResults", New Object() {sessionId, listHandle, noOfResults}, Me.GetQueryResultsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetQueryResultsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetQueryResultsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetQueryResultsCompleted(Me, New GetQueryResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseQueryResultList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseQueryResultList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseQueryResultListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseQueryResultListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseQueryResultListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseQueryResultListOperationCompleted Is Nothing) Then
                Me.CloseQueryResultListOperationCompleted = AddressOf Me.OnCloseQueryResultListOperationCompleted
            End If
            Me.InvokeAsync("CloseQueryResultList", New Object() {sessionId, listHandle}, Me.CloseQueryResultListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseQueryResultListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseQueryResultListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseQueryResultListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenUnitGroupUnitGroupMembersList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupPropertiesRequired As UnitGroupPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfUnitGroups As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfUnitGroupsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenUnitGroupUnitGroupMembersList", New Object() {sessionId, unitGroupId, unitGroupPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfUnitGroups = CType(results(2),System.Nullable(Of Long))
            totalNoOfUnitGroupsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitGroupUnitGroupMembersListAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal unitGroupPropertiesRequired As UnitGroupPropertiesRequired)
            Me.OpenUnitGroupUnitGroupMembersListAsync(sessionId, unitGroupId, unitGroupPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitGroupUnitGroupMembersListAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal unitGroupPropertiesRequired As UnitGroupPropertiesRequired, ByVal userState As Object)
            If (Me.OpenUnitGroupUnitGroupMembersListOperationCompleted Is Nothing) Then
                Me.OpenUnitGroupUnitGroupMembersListOperationCompleted = AddressOf Me.OnOpenUnitGroupUnitGroupMembersListOperationCompleted
            End If
            Me.InvokeAsync("OpenUnitGroupUnitGroupMembersList", New Object() {sessionId, unitGroupId, unitGroupPropertiesRequired}, Me.OpenUnitGroupUnitGroupMembersListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenUnitGroupUnitGroupMembersListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenUnitGroupUnitGroupMembersListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenUnitGroupUnitGroupMembersListCompleted(Me, New OpenUnitGroupUnitGroupMembersListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitGroupUnitGroupMembers(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitGroups As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetUnitGroupUnitGroupMembersReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("unitGroupPropertiesArray", IsNullable:=false)> UnitGroupProperties()
            Dim results() As Object = Me.Invoke("GetUnitGroupUnitGroupMembers", New Object() {sessionId, listHandle, noOfUnitGroups})
            Return CType(results(0),UnitGroupProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitGroupUnitGroupMembersAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitGroups As Long)
            Me.GetUnitGroupUnitGroupMembersAsync(sessionId, listHandle, noOfUnitGroups, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitGroupUnitGroupMembersAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitGroups As Long, ByVal userState As Object)
            If (Me.GetUnitGroupUnitGroupMembersOperationCompleted Is Nothing) Then
                Me.GetUnitGroupUnitGroupMembersOperationCompleted = AddressOf Me.OnGetUnitGroupUnitGroupMembersOperationCompleted
            End If
            Me.InvokeAsync("GetUnitGroupUnitGroupMembers", New Object() {sessionId, listHandle, noOfUnitGroups}, Me.GetUnitGroupUnitGroupMembersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitGroupUnitGroupMembersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitGroupUnitGroupMembersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitGroupUnitGroupMembersCompleted(Me, New GetUnitGroupUnitGroupMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseUnitGroupUnitGroupMembersList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseUnitGroupUnitGroupMembersList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitGroupUnitGroupMembersListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseUnitGroupUnitGroupMembersListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitGroupUnitGroupMembersListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseUnitGroupUnitGroupMembersListOperationCompleted Is Nothing) Then
                Me.CloseUnitGroupUnitGroupMembersListOperationCompleted = AddressOf Me.OnCloseUnitGroupUnitGroupMembersListOperationCompleted
            End If
            Me.InvokeAsync("CloseUnitGroupUnitGroupMembersList", New Object() {sessionId, listHandle}, Me.CloseUnitGroupUnitGroupMembersListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseUnitGroupUnitGroupMembersListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseUnitGroupUnitGroupMembersListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseUnitGroupUnitGroupMembersListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenUnitGroupUserAccountMembersList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("userAccountPropertyFilterArray", IsNullable:=false)> ByVal userAccountPropertyFilters() As UserAccountPropertyFilter, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal userAccountPropertiesRequired As UserAccountPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfUserAccounts As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfUserAccountsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenUnitGroupUserAccountMembersList", New Object() {sessionId, unitGroupId, userAccountPropertyFilters, userAccountPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfUserAccounts = CType(results(2),System.Nullable(Of Long))
            totalNoOfUserAccountsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitGroupUserAccountMembersListAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal userAccountPropertyFilters() As UserAccountPropertyFilter, ByVal userAccountPropertiesRequired As UserAccountPropertiesRequired)
            Me.OpenUnitGroupUserAccountMembersListAsync(sessionId, unitGroupId, userAccountPropertyFilters, userAccountPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitGroupUserAccountMembersListAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal userAccountPropertyFilters() As UserAccountPropertyFilter, ByVal userAccountPropertiesRequired As UserAccountPropertiesRequired, ByVal userState As Object)
            If (Me.OpenUnitGroupUserAccountMembersListOperationCompleted Is Nothing) Then
                Me.OpenUnitGroupUserAccountMembersListOperationCompleted = AddressOf Me.OnOpenUnitGroupUserAccountMembersListOperationCompleted
            End If
            Me.InvokeAsync("OpenUnitGroupUserAccountMembersList", New Object() {sessionId, unitGroupId, userAccountPropertyFilters, userAccountPropertiesRequired}, Me.OpenUnitGroupUserAccountMembersListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenUnitGroupUserAccountMembersListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenUnitGroupUserAccountMembersListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenUnitGroupUserAccountMembersListCompleted(Me, New OpenUnitGroupUserAccountMembersListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitGroupUserAccountMembers(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUserAccounts As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetUnitGroupUserAccountMembersReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("userAccountPropertiesArray", IsNullable:=false)> UserAccountProperties()
            Dim results() As Object = Me.Invoke("GetUnitGroupUserAccountMembers", New Object() {sessionId, listHandle, noOfUserAccounts})
            Return CType(results(0),UserAccountProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitGroupUserAccountMembersAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUserAccounts As Long)
            Me.GetUnitGroupUserAccountMembersAsync(sessionId, listHandle, noOfUserAccounts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitGroupUserAccountMembersAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUserAccounts As Long, ByVal userState As Object)
            If (Me.GetUnitGroupUserAccountMembersOperationCompleted Is Nothing) Then
                Me.GetUnitGroupUserAccountMembersOperationCompleted = AddressOf Me.OnGetUnitGroupUserAccountMembersOperationCompleted
            End If
            Me.InvokeAsync("GetUnitGroupUserAccountMembers", New Object() {sessionId, listHandle, noOfUserAccounts}, Me.GetUnitGroupUserAccountMembersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitGroupUserAccountMembersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitGroupUserAccountMembersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitGroupUserAccountMembersCompleted(Me, New GetUnitGroupUserAccountMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseUnitGroupUserAccountMembersList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseUnitGroupUserAccountMembersList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitGroupUserAccountMembersListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseUnitGroupUserAccountMembersListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitGroupUserAccountMembersListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseUnitGroupUserAccountMembersListOperationCompleted Is Nothing) Then
                Me.CloseUnitGroupUserAccountMembersListOperationCompleted = AddressOf Me.OnCloseUnitGroupUserAccountMembersListOperationCompleted
            End If
            Me.InvokeAsync("CloseUnitGroupUserAccountMembersList", New Object() {sessionId, listHandle}, Me.CloseUnitGroupUserAccountMembersListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseUnitGroupUserAccountMembersListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseUnitGroupUserAccountMembersListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseUnitGroupUserAccountMembersListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenUnitGroupComputerMembersList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("computerPropertyFilterArray", IsNullable:=false)> ByVal computerPropertyFilters() As ComputerPropertyFilter, ByVal computerPropertiesRequired As ComputerPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfComputers As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfComputersSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenUnitGroupComputerMembersList", New Object() {sessionId, unitGroupId, computerPropertyFilters, computerPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfComputers = CType(results(2),System.Nullable(Of Long))
            totalNoOfComputersSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitGroupComputerMembersListAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal computerPropertyFilters() As ComputerPropertyFilter, ByVal computerPropertiesRequired As ComputerPropertiesRequired)
            Me.OpenUnitGroupComputerMembersListAsync(sessionId, unitGroupId, computerPropertyFilters, computerPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitGroupComputerMembersListAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal computerPropertyFilters() As ComputerPropertyFilter, ByVal computerPropertiesRequired As ComputerPropertiesRequired, ByVal userState As Object)
            If (Me.OpenUnitGroupComputerMembersListOperationCompleted Is Nothing) Then
                Me.OpenUnitGroupComputerMembersListOperationCompleted = AddressOf Me.OnOpenUnitGroupComputerMembersListOperationCompleted
            End If
            Me.InvokeAsync("OpenUnitGroupComputerMembersList", New Object() {sessionId, unitGroupId, computerPropertyFilters, computerPropertiesRequired}, Me.OpenUnitGroupComputerMembersListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenUnitGroupComputerMembersListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenUnitGroupComputerMembersListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenUnitGroupComputerMembersListCompleted(Me, New OpenUnitGroupComputerMembersListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitGroupComputerMembers(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfComputers As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetUnitGroupComputerMembersReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("computerPropertiesArray", IsNullable:=false)> ComputerProperties()
            Dim results() As Object = Me.Invoke("GetUnitGroupComputerMembers", New Object() {sessionId, listHandle, noOfComputers})
            Return CType(results(0),ComputerProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitGroupComputerMembersAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfComputers As Long)
            Me.GetUnitGroupComputerMembersAsync(sessionId, listHandle, noOfComputers, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitGroupComputerMembersAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfComputers As Long, ByVal userState As Object)
            If (Me.GetUnitGroupComputerMembersOperationCompleted Is Nothing) Then
                Me.GetUnitGroupComputerMembersOperationCompleted = AddressOf Me.OnGetUnitGroupComputerMembersOperationCompleted
            End If
            Me.InvokeAsync("GetUnitGroupComputerMembers", New Object() {sessionId, listHandle, noOfComputers}, Me.GetUnitGroupComputerMembersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitGroupComputerMembersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitGroupComputerMembersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitGroupComputerMembersCompleted(Me, New GetUnitGroupComputerMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseUnitGroupComputerMembersList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseUnitGroupComputerMembersList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitGroupComputerMembersListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseUnitGroupComputerMembersListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitGroupComputerMembersListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseUnitGroupComputerMembersListOperationCompleted Is Nothing) Then
                Me.CloseUnitGroupComputerMembersListOperationCompleted = AddressOf Me.OnCloseUnitGroupComputerMembersListOperationCompleted
            End If
            Me.InvokeAsync("CloseUnitGroupComputerMembersList", New Object() {sessionId, listHandle}, Me.CloseUnitGroupComputerMembersListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseUnitGroupComputerMembersListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseUnitGroupComputerMembersListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseUnitGroupComputerMembersListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenUnitGroupUserProfileMembersList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("userProfilePropertyFilterArray", IsNullable:=false)> ByVal userProfilePropertyFilters() As UserProfilePropertyFilter, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal userProfilePropertiesRequired As UserProfilePropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfUserProfiles As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfUserProfilesSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenUnitGroupUserProfileMembersList", New Object() {sessionId, unitGroupId, userProfilePropertyFilters, userProfilePropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfUserProfiles = CType(results(2),System.Nullable(Of Long))
            totalNoOfUserProfilesSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitGroupUserProfileMembersListAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal userProfilePropertyFilters() As UserProfilePropertyFilter, ByVal userProfilePropertiesRequired As UserProfilePropertiesRequired)
            Me.OpenUnitGroupUserProfileMembersListAsync(sessionId, unitGroupId, userProfilePropertyFilters, userProfilePropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitGroupUserProfileMembersListAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal userProfilePropertyFilters() As UserProfilePropertyFilter, ByVal userProfilePropertiesRequired As UserProfilePropertiesRequired, ByVal userState As Object)
            If (Me.OpenUnitGroupUserProfileMembersListOperationCompleted Is Nothing) Then
                Me.OpenUnitGroupUserProfileMembersListOperationCompleted = AddressOf Me.OnOpenUnitGroupUserProfileMembersListOperationCompleted
            End If
            Me.InvokeAsync("OpenUnitGroupUserProfileMembersList", New Object() {sessionId, unitGroupId, userProfilePropertyFilters, userProfilePropertiesRequired}, Me.OpenUnitGroupUserProfileMembersListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenUnitGroupUserProfileMembersListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenUnitGroupUserProfileMembersListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenUnitGroupUserProfileMembersListCompleted(Me, New OpenUnitGroupUserProfileMembersListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitGroupUserProfileMembers(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUserProfiles As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetUnitGroupUserProfileMembersReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("userProfilePropertiesArray", IsNullable:=false)> UserProfileProperties()
            Dim results() As Object = Me.Invoke("GetUnitGroupUserProfileMembers", New Object() {sessionId, listHandle, noOfUserProfiles})
            Return CType(results(0),UserProfileProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitGroupUserProfileMembersAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUserProfiles As Long)
            Me.GetUnitGroupUserProfileMembersAsync(sessionId, listHandle, noOfUserProfiles, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitGroupUserProfileMembersAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUserProfiles As Long, ByVal userState As Object)
            If (Me.GetUnitGroupUserProfileMembersOperationCompleted Is Nothing) Then
                Me.GetUnitGroupUserProfileMembersOperationCompleted = AddressOf Me.OnGetUnitGroupUserProfileMembersOperationCompleted
            End If
            Me.InvokeAsync("GetUnitGroupUserProfileMembers", New Object() {sessionId, listHandle, noOfUserProfiles}, Me.GetUnitGroupUserProfileMembersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitGroupUserProfileMembersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitGroupUserProfileMembersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitGroupUserProfileMembersCompleted(Me, New GetUnitGroupUserProfileMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseUnitGroupUserProfileMembersList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseUnitGroupUserProfileMembersList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitGroupUserProfileMembersListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseUnitGroupUserProfileMembersListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitGroupUserProfileMembersListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseUnitGroupUserProfileMembersListOperationCompleted Is Nothing) Then
                Me.CloseUnitGroupUserProfileMembersListOperationCompleted = AddressOf Me.OnCloseUnitGroupUserProfileMembersListOperationCompleted
            End If
            Me.InvokeAsync("CloseUnitGroupUserProfileMembersList", New Object() {sessionId, listHandle}, Me.CloseUnitGroupUserProfileMembersListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseUnitGroupUserProfileMembersListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseUnitGroupUserProfileMembersListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseUnitGroupUserProfileMembersListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteUnitGroups(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitGroupIds() As String)
            Me.Invoke("DeleteUnitGroups", New Object() {sessionId, unitGroupIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteUnitGroupsAsync(ByVal sessionId As String, ByVal unitGroupIds() As String)
            Me.DeleteUnitGroupsAsync(sessionId, unitGroupIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteUnitGroupsAsync(ByVal sessionId As String, ByVal unitGroupIds() As String, ByVal userState As Object)
            If (Me.DeleteUnitGroupsOperationCompleted Is Nothing) Then
                Me.DeleteUnitGroupsOperationCompleted = AddressOf Me.OnDeleteUnitGroupsOperationCompleted
            End If
            Me.InvokeAsync("DeleteUnitGroups", New Object() {sessionId, unitGroupIds}, Me.DeleteUnitGroupsOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteUnitGroupsOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteUnitGroupsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteUnitGroupsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupPropertiesRequired As UnitGroupPropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("GetUnitGroupReturn", IsNullable:=true)> UnitGroupProperties
            Dim results() As Object = Me.Invoke("GetUnitGroup", New Object() {sessionId, unitGroupId, unitGroupPropertiesRequired})
            Return CType(results(0),UnitGroupProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal unitGroupPropertiesRequired As UnitGroupPropertiesRequired)
            Me.GetUnitGroupAsync(sessionId, unitGroupId, unitGroupPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal unitGroupPropertiesRequired As UnitGroupPropertiesRequired, ByVal userState As Object)
            If (Me.GetUnitGroupOperationCompleted Is Nothing) Then
                Me.GetUnitGroupOperationCompleted = AddressOf Me.OnGetUnitGroupOperationCompleted
            End If
            Me.InvokeAsync("GetUnitGroup", New Object() {sessionId, unitGroupId, unitGroupPropertiesRequired}, Me.GetUnitGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitGroupCompleted(Me, New GetUnitGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserAccount(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal userAccountId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal userAccountPropertiesRequired As UserAccountPropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("GetUserAccountReturn", IsNullable:=true)> UserAccountProperties
            Dim results() As Object = Me.Invoke("GetUserAccount", New Object() {sessionId, userAccountId, userAccountPropertiesRequired})
            Return CType(results(0),UserAccountProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserAccountAsync(ByVal sessionId As String, ByVal userAccountId As String, ByVal userAccountPropertiesRequired As UserAccountPropertiesRequired)
            Me.GetUserAccountAsync(sessionId, userAccountId, userAccountPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserAccountAsync(ByVal sessionId As String, ByVal userAccountId As String, ByVal userAccountPropertiesRequired As UserAccountPropertiesRequired, ByVal userState As Object)
            If (Me.GetUserAccountOperationCompleted Is Nothing) Then
                Me.GetUserAccountOperationCompleted = AddressOf Me.OnGetUserAccountOperationCompleted
            End If
            Me.InvokeAsync("GetUserAccount", New Object() {sessionId, userAccountId, userAccountPropertiesRequired}, Me.GetUserAccountOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserAccountOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserAccountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserAccountCompleted(Me, New GetUserAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetComputer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal computerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal computerPropertiesRequired As ComputerPropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("GetComputerReturn", IsNullable:=true)> ComputerProperties
            Dim results() As Object = Me.Invoke("GetComputer", New Object() {sessionId, computerId, computerPropertiesRequired})
            Return CType(results(0),ComputerProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetComputerAsync(ByVal sessionId As String, ByVal computerId As String, ByVal computerPropertiesRequired As ComputerPropertiesRequired)
            Me.GetComputerAsync(sessionId, computerId, computerPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetComputerAsync(ByVal sessionId As String, ByVal computerId As String, ByVal computerPropertiesRequired As ComputerPropertiesRequired, ByVal userState As Object)
            If (Me.GetComputerOperationCompleted Is Nothing) Then
                Me.GetComputerOperationCompleted = AddressOf Me.OnGetComputerOperationCompleted
            End If
            Me.InvokeAsync("GetComputer", New Object() {sessionId, computerId, computerPropertiesRequired}, Me.GetComputerOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetComputerOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetComputerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetComputerCompleted(Me, New GetComputerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserProfile(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal userProfileId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal userProfilePropertiesRequired As UserProfilePropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("GetUserProfileReturn", IsNullable:=true)> UserProfileProperties
            Dim results() As Object = Me.Invoke("GetUserProfile", New Object() {sessionId, userProfileId, userProfilePropertiesRequired})
            Return CType(results(0),UserProfileProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserProfileAsync(ByVal sessionId As String, ByVal userProfileId As String, ByVal userProfilePropertiesRequired As UserProfilePropertiesRequired)
            Me.GetUserProfileAsync(sessionId, userProfileId, userProfilePropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserProfileAsync(ByVal sessionId As String, ByVal userProfileId As String, ByVal userProfilePropertiesRequired As UserProfilePropertiesRequired, ByVal userState As Object)
            If (Me.GetUserProfileOperationCompleted Is Nothing) Then
                Me.GetUserProfileOperationCompleted = AddressOf Me.OnGetUserProfileOperationCompleted
            End If
            Me.InvokeAsync("GetUserProfile", New Object() {sessionId, userProfileId, userProfilePropertiesRequired}, Me.GetUserProfileOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserProfileOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserProfileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserProfileCompleted(Me, New GetUserProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetUnitGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupProperties As SetUnitGroupProperties)
            Me.Invoke("SetUnitGroup", New Object() {sessionId, unitGroupProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupProperties As SetUnitGroupProperties)
            Me.SetUnitGroupAsync(sessionId, unitGroupProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupProperties As SetUnitGroupProperties, ByVal userState As Object)
            If (Me.SetUnitGroupOperationCompleted Is Nothing) Then
                Me.SetUnitGroupOperationCompleted = AddressOf Me.OnSetUnitGroupOperationCompleted
            End If
            Me.InvokeAsync("SetUnitGroup", New Object() {sessionId, unitGroupProperties}, Me.SetUnitGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetUnitGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetUnitGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetUnitGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenUnitGroupUnitMembersList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("unitPropertyFilterArray", IsNullable:=false)> ByVal unitPropertyFilters() As UnitPropertyFilter, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitPropertiesRequired As UnitPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfUnits As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfUnitsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenUnitGroupUnitMembersList", New Object() {sessionId, unitGroupId, unitPropertyFilters, unitPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfUnits = CType(results(2),System.Nullable(Of Long))
            totalNoOfUnitsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitGroupUnitMembersListAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal unitPropertyFilters() As UnitPropertyFilter, ByVal unitPropertiesRequired As UnitPropertiesRequired)
            Me.OpenUnitGroupUnitMembersListAsync(sessionId, unitGroupId, unitPropertyFilters, unitPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitGroupUnitMembersListAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal unitPropertyFilters() As UnitPropertyFilter, ByVal unitPropertiesRequired As UnitPropertiesRequired, ByVal userState As Object)
            If (Me.OpenUnitGroupUnitMembersListOperationCompleted Is Nothing) Then
                Me.OpenUnitGroupUnitMembersListOperationCompleted = AddressOf Me.OnOpenUnitGroupUnitMembersListOperationCompleted
            End If
            Me.InvokeAsync("OpenUnitGroupUnitMembersList", New Object() {sessionId, unitGroupId, unitPropertyFilters, unitPropertiesRequired}, Me.OpenUnitGroupUnitMembersListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenUnitGroupUnitMembersListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenUnitGroupUnitMembersListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenUnitGroupUnitMembersListCompleted(Me, New OpenUnitGroupUnitMembersListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitGroupUnitMembers(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnits As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetUnitGroupUnitMembersReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("unitPropertiesArray", IsNullable:=false)> UnitProperties()
            Dim results() As Object = Me.Invoke("GetUnitGroupUnitMembers", New Object() {sessionId, listHandle, noOfUnits})
            Return CType(results(0),UnitProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitGroupUnitMembersAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnits As Long)
            Me.GetUnitGroupUnitMembersAsync(sessionId, listHandle, noOfUnits, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitGroupUnitMembersAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnits As Long, ByVal userState As Object)
            If (Me.GetUnitGroupUnitMembersOperationCompleted Is Nothing) Then
                Me.GetUnitGroupUnitMembersOperationCompleted = AddressOf Me.OnGetUnitGroupUnitMembersOperationCompleted
            End If
            Me.InvokeAsync("GetUnitGroupUnitMembers", New Object() {sessionId, listHandle, noOfUnits}, Me.GetUnitGroupUnitMembersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitGroupUnitMembersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitGroupUnitMembersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitGroupUnitMembersCompleted(Me, New GetUnitGroupUnitMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseUnitGroupUnitMembersList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseUnitGroupUnitMembersList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitGroupUnitMembersListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseUnitGroupUnitMembersListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitGroupUnitMembersListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseUnitGroupUnitMembersListOperationCompleted Is Nothing) Then
                Me.CloseUnitGroupUnitMembersListOperationCompleted = AddressOf Me.OnCloseUnitGroupUnitMembersListOperationCompleted
            End If
            Me.InvokeAsync("CloseUnitGroupUnitMembersList", New Object() {sessionId, listHandle}, Me.CloseUnitGroupUnitMembersListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseUnitGroupUnitMembersListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseUnitGroupUnitMembersListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseUnitGroupUnitMembersListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindUserAccount(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal userAccountName As String, ByVal noOfUserAccounts As Long, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal userAccountPropertiesRequired As UserAccountPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfUserAccountsFound As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfUserAccountsFoundSpecified As Boolean) As <System.Xml.Serialization.XmlArrayAttribute("FindUserAccountReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("userAccountPropertiesArray", IsNullable:=false)> UserAccountProperties()
            Dim results() As Object = Me.Invoke("FindUserAccount", New Object() {sessionId, userAccountName, noOfUserAccounts, userAccountPropertiesRequired})
            totalNoOfUserAccountsFound = CType(results(1),System.Nullable(Of Long))
            totalNoOfUserAccountsFoundSpecified = CType(results(2),Boolean)
            Return CType(results(0),UserAccountProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindUserAccountAsync(ByVal sessionId As String, ByVal userAccountName As String, ByVal noOfUserAccounts As Long, ByVal userAccountPropertiesRequired As UserAccountPropertiesRequired)
            Me.FindUserAccountAsync(sessionId, userAccountName, noOfUserAccounts, userAccountPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindUserAccountAsync(ByVal sessionId As String, ByVal userAccountName As String, ByVal noOfUserAccounts As Long, ByVal userAccountPropertiesRequired As UserAccountPropertiesRequired, ByVal userState As Object)
            If (Me.FindUserAccountOperationCompleted Is Nothing) Then
                Me.FindUserAccountOperationCompleted = AddressOf Me.OnFindUserAccountOperationCompleted
            End If
            Me.InvokeAsync("FindUserAccount", New Object() {sessionId, userAccountName, noOfUserAccounts, userAccountPropertiesRequired}, Me.FindUserAccountOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindUserAccountOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindUserAccountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindUserAccountCompleted(Me, New FindUserAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindComputer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal computerName As String, ByVal noOfComputers As Long, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal computerPropertiesRequired As ComputerPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfComputersFound As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfComputersFoundSpecified As Boolean) As <System.Xml.Serialization.XmlArrayAttribute("FindComputerReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("computerPropertiesArray", IsNullable:=false)> ComputerProperties()
            Dim results() As Object = Me.Invoke("FindComputer", New Object() {sessionId, computerName, noOfComputers, computerPropertiesRequired})
            totalNoOfComputersFound = CType(results(1),System.Nullable(Of Long))
            totalNoOfComputersFoundSpecified = CType(results(2),Boolean)
            Return CType(results(0),ComputerProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindComputerAsync(ByVal sessionId As String, ByVal computerName As String, ByVal noOfComputers As Long, ByVal computerPropertiesRequired As ComputerPropertiesRequired)
            Me.FindComputerAsync(sessionId, computerName, noOfComputers, computerPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindComputerAsync(ByVal sessionId As String, ByVal computerName As String, ByVal noOfComputers As Long, ByVal computerPropertiesRequired As ComputerPropertiesRequired, ByVal userState As Object)
            If (Me.FindComputerOperationCompleted Is Nothing) Then
                Me.FindComputerOperationCompleted = AddressOf Me.OnFindComputerOperationCompleted
            End If
            Me.InvokeAsync("FindComputer", New Object() {sessionId, computerName, noOfComputers, computerPropertiesRequired}, Me.FindComputerOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindComputerOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindComputerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindComputerCompleted(Me, New FindComputerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindUserProfile(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal userProfileLabel As String, ByVal noOfUserProfiles As Long, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal userProfilePropertiesRequired As UserProfilePropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfUserProfilesFound As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfUserProfilesFoundSpecified As Boolean) As <System.Xml.Serialization.XmlArrayAttribute("FindUserProfileReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("userProfilePropertiesArray", IsNullable:=false)> UserProfileProperties()
            Dim results() As Object = Me.Invoke("FindUserProfile", New Object() {sessionId, userProfileLabel, noOfUserProfiles, userProfilePropertiesRequired})
            totalNoOfUserProfilesFound = CType(results(1),System.Nullable(Of Long))
            totalNoOfUserProfilesFoundSpecified = CType(results(2),Boolean)
            Return CType(results(0),UserProfileProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindUserProfileAsync(ByVal sessionId As String, ByVal userProfileLabel As String, ByVal noOfUserProfiles As Long, ByVal userProfilePropertiesRequired As UserProfilePropertiesRequired)
            Me.FindUserProfileAsync(sessionId, userProfileLabel, noOfUserProfiles, userProfilePropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindUserProfileAsync(ByVal sessionId As String, ByVal userProfileLabel As String, ByVal noOfUserProfiles As Long, ByVal userProfilePropertiesRequired As UserProfilePropertiesRequired, ByVal userState As Object)
            If (Me.FindUserProfileOperationCompleted Is Nothing) Then
                Me.FindUserProfileOperationCompleted = AddressOf Me.OnFindUserProfileOperationCompleted
            End If
            Me.InvokeAsync("FindUserProfile", New Object() {sessionId, userProfileLabel, noOfUserProfiles, userProfilePropertiesRequired}, Me.FindUserProfileOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindUserProfileOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindUserProfileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindUserProfileCompleted(Me, New FindUserProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenUnitUnitGroupList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitId As String, ByVal unitType As UnitType, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupPropertiesRequired As UnitGroupPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfUnitGroups As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfUnitGroupsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenUnitUnitGroupList", New Object() {sessionId, unitId, unitType, unitGroupPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfUnitGroups = CType(results(2),System.Nullable(Of Long))
            totalNoOfUnitGroupsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitUnitGroupListAsync(ByVal sessionId As String, ByVal unitId As String, ByVal unitType As UnitType, ByVal unitGroupPropertiesRequired As UnitGroupPropertiesRequired)
            Me.OpenUnitUnitGroupListAsync(sessionId, unitId, unitType, unitGroupPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitUnitGroupListAsync(ByVal sessionId As String, ByVal unitId As String, ByVal unitType As UnitType, ByVal unitGroupPropertiesRequired As UnitGroupPropertiesRequired, ByVal userState As Object)
            If (Me.OpenUnitUnitGroupListOperationCompleted Is Nothing) Then
                Me.OpenUnitUnitGroupListOperationCompleted = AddressOf Me.OnOpenUnitUnitGroupListOperationCompleted
            End If
            Me.InvokeAsync("OpenUnitUnitGroupList", New Object() {sessionId, unitId, unitType, unitGroupPropertiesRequired}, Me.OpenUnitUnitGroupListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenUnitUnitGroupListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenUnitUnitGroupListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenUnitUnitGroupListCompleted(Me, New OpenUnitUnitGroupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitUnitGroups(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitGroups As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetUnitUnitGroupsReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("unitGroupPropertiesArray", IsNullable:=false)> UnitGroupProperties()
            Dim results() As Object = Me.Invoke("GetUnitUnitGroups", New Object() {sessionId, listHandle, noOfUnitGroups})
            Return CType(results(0),UnitGroupProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitUnitGroupsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitGroups As Long)
            Me.GetUnitUnitGroupsAsync(sessionId, listHandle, noOfUnitGroups, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitUnitGroupsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitGroups As Long, ByVal userState As Object)
            If (Me.GetUnitUnitGroupsOperationCompleted Is Nothing) Then
                Me.GetUnitUnitGroupsOperationCompleted = AddressOf Me.OnGetUnitUnitGroupsOperationCompleted
            End If
            Me.InvokeAsync("GetUnitUnitGroups", New Object() {sessionId, listHandle, noOfUnitGroups}, Me.GetUnitUnitGroupsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitUnitGroupsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitUnitGroupsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitUnitGroupsCompleted(Me, New GetUnitUnitGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseUnitUnitGroupList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseUnitUnitGroupList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitUnitGroupListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseUnitUnitGroupListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitUnitGroupListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseUnitUnitGroupListOperationCompleted Is Nothing) Then
                Me.CloseUnitUnitGroupListOperationCompleted = AddressOf Me.OnCloseUnitUnitGroupListOperationCompleted
            End If
            Me.InvokeAsync("CloseUnitUnitGroupList", New Object() {sessionId, listHandle}, Me.CloseUnitUnitGroupListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseUnitUnitGroupListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseUnitUnitGroupListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseUnitUnitGroupListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateQuery(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal createQueryProperties As CreateQueryProperties) As <System.Xml.Serialization.XmlElementAttribute("CreateQueryReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateQuery", New Object() {sessionId, createQueryProperties})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateQueryAsync(ByVal sessionId As String, ByVal createQueryProperties As CreateQueryProperties)
            Me.CreateQueryAsync(sessionId, createQueryProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateQueryAsync(ByVal sessionId As String, ByVal createQueryProperties As CreateQueryProperties, ByVal userState As Object)
            If (Me.CreateQueryOperationCompleted Is Nothing) Then
                Me.CreateQueryOperationCompleted = AddressOf Me.OnCreateQueryOperationCompleted
            End If
            Me.InvokeAsync("CreateQuery", New Object() {sessionId, createQueryProperties}, Me.CreateQueryOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateQueryOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateQueryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateQueryCompleted(Me, New CreateQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteQueries(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal queryIds() As String)
            Me.Invoke("DeleteQueries", New Object() {sessionId, queryIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteQueriesAsync(ByVal sessionId As String, ByVal queryIds() As String)
            Me.DeleteQueriesAsync(sessionId, queryIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteQueriesAsync(ByVal sessionId As String, ByVal queryIds() As String, ByVal userState As Object)
            If (Me.DeleteQueriesOperationCompleted Is Nothing) Then
                Me.DeleteQueriesOperationCompleted = AddressOf Me.OnDeleteQueriesOperationCompleted
            End If
            Me.InvokeAsync("DeleteQueries", New Object() {sessionId, queryIds}, Me.DeleteQueriesOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteQueriesOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteQueriesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteQueriesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetQuery(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal queryId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal queryPropertiesRequired As QueryPropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("GetQueryReturn", IsNullable:=true)> QueryProperties
            Dim results() As Object = Me.Invoke("GetQuery", New Object() {sessionId, queryId, queryPropertiesRequired})
            Return CType(results(0),QueryProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetQueryAsync(ByVal sessionId As String, ByVal queryId As String, ByVal queryPropertiesRequired As QueryPropertiesRequired)
            Me.GetQueryAsync(sessionId, queryId, queryPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetQueryAsync(ByVal sessionId As String, ByVal queryId As String, ByVal queryPropertiesRequired As QueryPropertiesRequired, ByVal userState As Object)
            If (Me.GetQueryOperationCompleted Is Nothing) Then
                Me.GetQueryOperationCompleted = AddressOf Me.OnGetQueryOperationCompleted
            End If
            Me.InvokeAsync("GetQuery", New Object() {sessionId, queryId, queryPropertiesRequired}, Me.GetQueryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetQueryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetQueryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetQueryCompleted(Me, New GetQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetQuery(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setQueryProperties As SetQueryProperties)
            Me.Invoke("SetQuery", New Object() {sessionId, setQueryProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetQueryAsync(ByVal sessionId As String, ByVal setQueryProperties As SetQueryProperties)
            Me.SetQueryAsync(sessionId, setQueryProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetQueryAsync(ByVal sessionId As String, ByVal setQueryProperties As SetQueryProperties, ByVal userState As Object)
            If (Me.SetQueryOperationCompleted Is Nothing) Then
                Me.SetQueryOperationCompleted = AddressOf Me.OnSetQueryOperationCompleted
            End If
            Me.InvokeAsync("SetQuery", New Object() {sessionId, setQueryProperties}, Me.SetQueryOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetQueryOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetQueryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetQueryCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EvaluateUnitGroupQuery(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String)
            Me.Invoke("EvaluateUnitGroupQuery", New Object() {sessionId, unitGroupId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EvaluateUnitGroupQueryAsync(ByVal sessionId As String, ByVal unitGroupId As String)
            Me.EvaluateUnitGroupQueryAsync(sessionId, unitGroupId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EvaluateUnitGroupQueryAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal userState As Object)
            If (Me.EvaluateUnitGroupQueryOperationCompleted Is Nothing) Then
                Me.EvaluateUnitGroupQueryOperationCompleted = AddressOf Me.OnEvaluateUnitGroupQueryOperationCompleted
            End If
            Me.InvokeAsync("EvaluateUnitGroupQuery", New Object() {sessionId, unitGroupId}, Me.EvaluateUnitGroupQueryOperationCompleted, userState)
        End Sub
        
        Private Sub OnEvaluateUnitGroupQueryOperationCompleted(ByVal arg As Object)
            If (Not (Me.EvaluateUnitGroupQueryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EvaluateUnitGroupQueryCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenUnitInventoryComponentList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitInventoryComponentPropertiesRequired As UnitInventoryComponentPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfUnitInventoryComponents As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfUnitInventoryComponentsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenUnitInventoryComponentList", New Object() {sessionId, unitId, unitInventoryComponentPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfUnitInventoryComponents = CType(results(2),System.Nullable(Of Long))
            totalNoOfUnitInventoryComponentsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitInventoryComponentListAsync(ByVal sessionId As String, ByVal unitId As String, ByVal unitInventoryComponentPropertiesRequired As UnitInventoryComponentPropertiesRequired)
            Me.OpenUnitInventoryComponentListAsync(sessionId, unitId, unitInventoryComponentPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitInventoryComponentListAsync(ByVal sessionId As String, ByVal unitId As String, ByVal unitInventoryComponentPropertiesRequired As UnitInventoryComponentPropertiesRequired, ByVal userState As Object)
            If (Me.OpenUnitInventoryComponentListOperationCompleted Is Nothing) Then
                Me.OpenUnitInventoryComponentListOperationCompleted = AddressOf Me.OnOpenUnitInventoryComponentListOperationCompleted
            End If
            Me.InvokeAsync("OpenUnitInventoryComponentList", New Object() {sessionId, unitId, unitInventoryComponentPropertiesRequired}, Me.OpenUnitInventoryComponentListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenUnitInventoryComponentListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenUnitInventoryComponentListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenUnitInventoryComponentListCompleted(Me, New OpenUnitInventoryComponentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitInventoryComponents(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitInventoryComponents As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetUnitInventoryComponentsReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("unitInventoryComponentPropertiesArray", IsNullable:=false)> UnitInventoryComponentProperties()
            Dim results() As Object = Me.Invoke("GetUnitInventoryComponents", New Object() {sessionId, listHandle, noOfUnitInventoryComponents})
            Return CType(results(0),UnitInventoryComponentProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitInventoryComponentsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitInventoryComponents As Long)
            Me.GetUnitInventoryComponentsAsync(sessionId, listHandle, noOfUnitInventoryComponents, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitInventoryComponentsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitInventoryComponents As Long, ByVal userState As Object)
            If (Me.GetUnitInventoryComponentsOperationCompleted Is Nothing) Then
                Me.GetUnitInventoryComponentsOperationCompleted = AddressOf Me.OnGetUnitInventoryComponentsOperationCompleted
            End If
            Me.InvokeAsync("GetUnitInventoryComponents", New Object() {sessionId, listHandle, noOfUnitInventoryComponents}, Me.GetUnitInventoryComponentsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitInventoryComponentsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitInventoryComponentsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitInventoryComponentsCompleted(Me, New GetUnitInventoryComponentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseUnitInventoryComponentList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseUnitInventoryComponentList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitInventoryComponentListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseUnitInventoryComponentListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitInventoryComponentListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseUnitInventoryComponentListOperationCompleted Is Nothing) Then
                Me.CloseUnitInventoryComponentListOperationCompleted = AddressOf Me.OnCloseUnitInventoryComponentListOperationCompleted
            End If
            Me.InvokeAsync("CloseUnitInventoryComponentList", New Object() {sessionId, listHandle}, Me.CloseUnitInventoryComponentListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseUnitInventoryComponentListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseUnitInventoryComponentListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseUnitInventoryComponentListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenUnitInventoryComponentGroupList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitInventoryComponentProperties As UnitInventoryComponentProperties, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitInventoryGroupPropertiesRequired As UnitInventoryGroupPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfUnitInventoryComponentGroups As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfUnitInventoryComponentGroupsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenUnitInventoryComponentGroupList", New Object() {sessionId, unitId, unitInventoryComponentProperties, unitInventoryGroupPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfUnitInventoryComponentGroups = CType(results(2),System.Nullable(Of Long))
            totalNoOfUnitInventoryComponentGroupsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitInventoryComponentGroupListAsync(ByVal sessionId As String, ByVal unitId As String, ByVal unitInventoryComponentProperties As UnitInventoryComponentProperties, ByVal unitInventoryGroupPropertiesRequired As UnitInventoryGroupPropertiesRequired)
            Me.OpenUnitInventoryComponentGroupListAsync(sessionId, unitId, unitInventoryComponentProperties, unitInventoryGroupPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitInventoryComponentGroupListAsync(ByVal sessionId As String, ByVal unitId As String, ByVal unitInventoryComponentProperties As UnitInventoryComponentProperties, ByVal unitInventoryGroupPropertiesRequired As UnitInventoryGroupPropertiesRequired, ByVal userState As Object)
            If (Me.OpenUnitInventoryComponentGroupListOperationCompleted Is Nothing) Then
                Me.OpenUnitInventoryComponentGroupListOperationCompleted = AddressOf Me.OnOpenUnitInventoryComponentGroupListOperationCompleted
            End If
            Me.InvokeAsync("OpenUnitInventoryComponentGroupList", New Object() {sessionId, unitId, unitInventoryComponentProperties, unitInventoryGroupPropertiesRequired}, Me.OpenUnitInventoryComponentGroupListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenUnitInventoryComponentGroupListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenUnitInventoryComponentGroupListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenUnitInventoryComponentGroupListCompleted(Me, New OpenUnitInventoryComponentGroupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitInventoryComponentGroups(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitInventoryComponentGroups As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetUnitInventoryComponentGroupsReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("unitInventoryGroupPropertiesArray", IsNullable:=false)> UnitInventoryGroupProperties()
            Dim results() As Object = Me.Invoke("GetUnitInventoryComponentGroups", New Object() {sessionId, listHandle, noOfUnitInventoryComponentGroups})
            Return CType(results(0),UnitInventoryGroupProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitInventoryComponentGroupsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitInventoryComponentGroups As Long)
            Me.GetUnitInventoryComponentGroupsAsync(sessionId, listHandle, noOfUnitInventoryComponentGroups, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitInventoryComponentGroupsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitInventoryComponentGroups As Long, ByVal userState As Object)
            If (Me.GetUnitInventoryComponentGroupsOperationCompleted Is Nothing) Then
                Me.GetUnitInventoryComponentGroupsOperationCompleted = AddressOf Me.OnGetUnitInventoryComponentGroupsOperationCompleted
            End If
            Me.InvokeAsync("GetUnitInventoryComponentGroups", New Object() {sessionId, listHandle, noOfUnitInventoryComponentGroups}, Me.GetUnitInventoryComponentGroupsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitInventoryComponentGroupsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitInventoryComponentGroupsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitInventoryComponentGroupsCompleted(Me, New GetUnitInventoryComponentGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseUnitInventoryComponentGroupList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseUnitInventoryComponentGroupList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitInventoryComponentGroupListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseUnitInventoryComponentGroupListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitInventoryComponentGroupListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseUnitInventoryComponentGroupListOperationCompleted Is Nothing) Then
                Me.CloseUnitInventoryComponentGroupListOperationCompleted = AddressOf Me.OnCloseUnitInventoryComponentGroupListOperationCompleted
            End If
            Me.InvokeAsync("CloseUnitInventoryComponentGroupList", New Object() {sessionId, listHandle}, Me.CloseUnitInventoryComponentGroupListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseUnitInventoryComponentGroupListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseUnitInventoryComponentGroupListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseUnitInventoryComponentGroupListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenUnitInventoryGroupList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitInventoryGroupProperties As UnitInventoryGroupProperties, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitInventoryGroupPropertiesRequired As UnitInventoryGroupPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfUnitInventoryGroups As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfUnitInventoryGroupsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenUnitInventoryGroupList", New Object() {sessionId, unitId, unitInventoryGroupProperties, unitInventoryGroupPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfUnitInventoryGroups = CType(results(2),System.Nullable(Of Long))
            totalNoOfUnitInventoryGroupsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitInventoryGroupListAsync(ByVal sessionId As String, ByVal unitId As String, ByVal unitInventoryGroupProperties As UnitInventoryGroupProperties, ByVal unitInventoryGroupPropertiesRequired As UnitInventoryGroupPropertiesRequired)
            Me.OpenUnitInventoryGroupListAsync(sessionId, unitId, unitInventoryGroupProperties, unitInventoryGroupPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitInventoryGroupListAsync(ByVal sessionId As String, ByVal unitId As String, ByVal unitInventoryGroupProperties As UnitInventoryGroupProperties, ByVal unitInventoryGroupPropertiesRequired As UnitInventoryGroupPropertiesRequired, ByVal userState As Object)
            If (Me.OpenUnitInventoryGroupListOperationCompleted Is Nothing) Then
                Me.OpenUnitInventoryGroupListOperationCompleted = AddressOf Me.OnOpenUnitInventoryGroupListOperationCompleted
            End If
            Me.InvokeAsync("OpenUnitInventoryGroupList", New Object() {sessionId, unitId, unitInventoryGroupProperties, unitInventoryGroupPropertiesRequired}, Me.OpenUnitInventoryGroupListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenUnitInventoryGroupListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenUnitInventoryGroupListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenUnitInventoryGroupListCompleted(Me, New OpenUnitInventoryGroupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitInventoryGroups(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitInventoryGroups As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetUnitInventoryGroupsReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("unitInventoryGroupPropertiesArray", IsNullable:=false)> UnitInventoryGroupProperties()
            Dim results() As Object = Me.Invoke("GetUnitInventoryGroups", New Object() {sessionId, listHandle, noOfUnitInventoryGroups})
            Return CType(results(0),UnitInventoryGroupProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitInventoryGroupsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitInventoryGroups As Long)
            Me.GetUnitInventoryGroupsAsync(sessionId, listHandle, noOfUnitInventoryGroups, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitInventoryGroupsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitInventoryGroups As Long, ByVal userState As Object)
            If (Me.GetUnitInventoryGroupsOperationCompleted Is Nothing) Then
                Me.GetUnitInventoryGroupsOperationCompleted = AddressOf Me.OnGetUnitInventoryGroupsOperationCompleted
            End If
            Me.InvokeAsync("GetUnitInventoryGroups", New Object() {sessionId, listHandle, noOfUnitInventoryGroups}, Me.GetUnitInventoryGroupsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitInventoryGroupsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitInventoryGroupsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitInventoryGroupsCompleted(Me, New GetUnitInventoryGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseUnitInventoryGroupList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseUnitInventoryGroupList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitInventoryGroupListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseUnitInventoryGroupListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitInventoryGroupListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseUnitInventoryGroupListOperationCompleted Is Nothing) Then
                Me.CloseUnitInventoryGroupListOperationCompleted = AddressOf Me.OnCloseUnitInventoryGroupListOperationCompleted
            End If
            Me.InvokeAsync("CloseUnitInventoryGroupList", New Object() {sessionId, listHandle}, Me.CloseUnitInventoryGroupListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseUnitInventoryGroupListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseUnitInventoryGroupListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseUnitInventoryGroupListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenUnitInventoryItemList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitInventoryGroupProperties As UnitInventoryGroupProperties, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitInventoryItemPropertiesRequired As UnitInventoryItemPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfUnitInventoryItems As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfUnitInventoryItemsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenUnitInventoryItemList", New Object() {sessionId, unitId, unitInventoryGroupProperties, unitInventoryItemPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfUnitInventoryItems = CType(results(2),System.Nullable(Of Long))
            totalNoOfUnitInventoryItemsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitInventoryItemListAsync(ByVal sessionId As String, ByVal unitId As String, ByVal unitInventoryGroupProperties As UnitInventoryGroupProperties, ByVal unitInventoryItemPropertiesRequired As UnitInventoryItemPropertiesRequired)
            Me.OpenUnitInventoryItemListAsync(sessionId, unitId, unitInventoryGroupProperties, unitInventoryItemPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitInventoryItemListAsync(ByVal sessionId As String, ByVal unitId As String, ByVal unitInventoryGroupProperties As UnitInventoryGroupProperties, ByVal unitInventoryItemPropertiesRequired As UnitInventoryItemPropertiesRequired, ByVal userState As Object)
            If (Me.OpenUnitInventoryItemListOperationCompleted Is Nothing) Then
                Me.OpenUnitInventoryItemListOperationCompleted = AddressOf Me.OnOpenUnitInventoryItemListOperationCompleted
            End If
            Me.InvokeAsync("OpenUnitInventoryItemList", New Object() {sessionId, unitId, unitInventoryGroupProperties, unitInventoryItemPropertiesRequired}, Me.OpenUnitInventoryItemListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenUnitInventoryItemListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenUnitInventoryItemListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenUnitInventoryItemListCompleted(Me, New OpenUnitInventoryItemListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitInventoryItems(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitInventoryItems As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetUnitInventoryItemsReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("unitInventoryItemPropertiesArray", IsNullable:=false)> UnitInventoryItemProperties()
            Dim results() As Object = Me.Invoke("GetUnitInventoryItems", New Object() {sessionId, listHandle, noOfUnitInventoryItems})
            Return CType(results(0),UnitInventoryItemProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitInventoryItemsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitInventoryItems As Long)
            Me.GetUnitInventoryItemsAsync(sessionId, listHandle, noOfUnitInventoryItems, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitInventoryItemsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitInventoryItems As Long, ByVal userState As Object)
            If (Me.GetUnitInventoryItemsOperationCompleted Is Nothing) Then
                Me.GetUnitInventoryItemsOperationCompleted = AddressOf Me.OnGetUnitInventoryItemsOperationCompleted
            End If
            Me.InvokeAsync("GetUnitInventoryItems", New Object() {sessionId, listHandle, noOfUnitInventoryItems}, Me.GetUnitInventoryItemsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitInventoryItemsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitInventoryItemsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitInventoryItemsCompleted(Me, New GetUnitInventoryItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseUnitInventoryItemList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseUnitInventoryItemList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitInventoryItemListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseUnitInventoryItemListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitInventoryItemListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseUnitInventoryItemListOperationCompleted Is Nothing) Then
                Me.CloseUnitInventoryItemListOperationCompleted = AddressOf Me.OnCloseUnitInventoryItemListOperationCompleted
            End If
            Me.InvokeAsync("CloseUnitInventoryItemList", New Object() {sessionId, listHandle}, Me.CloseUnitInventoryItemListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseUnitInventoryItemListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseUnitInventoryItemListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseUnitInventoryItemListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ResumeSoftwareJobs(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarejobsIds() As String)
            Me.Invoke("ResumeSoftwareJobs", New Object() {sessionId, softwarejobsIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResumeSoftwareJobsAsync(ByVal sessionId As String, ByVal softwarejobsIds() As String)
            Me.ResumeSoftwareJobsAsync(sessionId, softwarejobsIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResumeSoftwareJobsAsync(ByVal sessionId As String, ByVal softwarejobsIds() As String, ByVal userState As Object)
            If (Me.ResumeSoftwareJobsOperationCompleted Is Nothing) Then
                Me.ResumeSoftwareJobsOperationCompleted = AddressOf Me.OnResumeSoftwareJobsOperationCompleted
            End If
            Me.InvokeAsync("ResumeSoftwareJobs", New Object() {sessionId, softwarejobsIds}, Me.ResumeSoftwareJobsOperationCompleted, userState)
        End Sub
        
        Private Sub OnResumeSoftwareJobsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ResumeSoftwareJobsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ResumeSoftwareJobsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SuspendSoftwareJobs(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarejobsIds() As String)
            Me.Invoke("SuspendSoftwareJobs", New Object() {sessionId, softwarejobsIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SuspendSoftwareJobsAsync(ByVal sessionId As String, ByVal softwarejobsIds() As String)
            Me.SuspendSoftwareJobsAsync(sessionId, softwarejobsIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SuspendSoftwareJobsAsync(ByVal sessionId As String, ByVal softwarejobsIds() As String, ByVal userState As Object)
            If (Me.SuspendSoftwareJobsOperationCompleted Is Nothing) Then
                Me.SuspendSoftwareJobsOperationCompleted = AddressOf Me.OnSuspendSoftwareJobsOperationCompleted
            End If
            Me.InvokeAsync("SuspendSoftwareJobs", New Object() {sessionId, softwarejobsIds}, Me.SuspendSoftwareJobsOperationCompleted, userState)
        End Sub
        
        Private Sub OnSuspendSoftwareJobsOperationCompleted(ByVal arg As Object)
            If (Not (Me.SuspendSoftwareJobsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SuspendSoftwareJobsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CancelSoftwareJobs(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarejobsIds() As String)
            Me.Invoke("CancelSoftwareJobs", New Object() {sessionId, softwarejobsIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CancelSoftwareJobsAsync(ByVal sessionId As String, ByVal softwarejobsIds() As String)
            Me.CancelSoftwareJobsAsync(sessionId, softwarejobsIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CancelSoftwareJobsAsync(ByVal sessionId As String, ByVal softwarejobsIds() As String, ByVal userState As Object)
            If (Me.CancelSoftwareJobsOperationCompleted Is Nothing) Then
                Me.CancelSoftwareJobsOperationCompleted = AddressOf Me.OnCancelSoftwareJobsOperationCompleted
            End If
            Me.InvokeAsync("CancelSoftwareJobs", New Object() {sessionId, softwarejobsIds}, Me.CancelSoftwareJobsOperationCompleted, userState)
        End Sub
        
        Private Sub OnCancelSoftwareJobsOperationCompleted(ByVal arg As Object)
            If (Not (Me.CancelSoftwareJobsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CancelSoftwareJobsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateRecoverSoftwareJob(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobOrderProperties As SoftwareJobOrderProperties) As <System.Xml.Serialization.XmlElementAttribute("CreateRecoverSoftwareJobReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateRecoverSoftwareJob", New Object() {sessionId, softwareJobId, softwareJobContainerId, softwarePackageProcedureId, softwareJobOrderProperties})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateRecoverSoftwareJobAsync(ByVal sessionId As String, ByVal softwareJobId As String, ByVal softwareJobContainerId As String, ByVal softwarePackageProcedureId As String, ByVal softwareJobOrderProperties As SoftwareJobOrderProperties)
            Me.CreateRecoverSoftwareJobAsync(sessionId, softwareJobId, softwareJobContainerId, softwarePackageProcedureId, softwareJobOrderProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateRecoverSoftwareJobAsync(ByVal sessionId As String, ByVal softwareJobId As String, ByVal softwareJobContainerId As String, ByVal softwarePackageProcedureId As String, ByVal softwareJobOrderProperties As SoftwareJobOrderProperties, ByVal userState As Object)
            If (Me.CreateRecoverSoftwareJobOperationCompleted Is Nothing) Then
                Me.CreateRecoverSoftwareJobOperationCompleted = AddressOf Me.OnCreateRecoverSoftwareJobOperationCompleted
            End If
            Me.InvokeAsync("CreateRecoverSoftwareJob", New Object() {sessionId, softwareJobId, softwareJobContainerId, softwarePackageProcedureId, softwareJobOrderProperties}, Me.CreateRecoverSoftwareJobOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateRecoverSoftwareJobOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateRecoverSoftwareJobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateRecoverSoftwareJobCompleted(Me, New CreateRecoverSoftwareJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateRenewSoftwareJob(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobOrderProperties As SoftwareJobOrderProperties) As <System.Xml.Serialization.XmlElementAttribute("CreateRenewSoftwareJobReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateRenewSoftwareJob", New Object() {sessionId, softwareJobId, softwareJobContainerId, softwareJobOrderProperties})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateRenewSoftwareJobAsync(ByVal sessionId As String, ByVal softwareJobId As String, ByVal softwareJobContainerId As String, ByVal softwareJobOrderProperties As SoftwareJobOrderProperties)
            Me.CreateRenewSoftwareJobAsync(sessionId, softwareJobId, softwareJobContainerId, softwareJobOrderProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateRenewSoftwareJobAsync(ByVal sessionId As String, ByVal softwareJobId As String, ByVal softwareJobContainerId As String, ByVal softwareJobOrderProperties As SoftwareJobOrderProperties, ByVal userState As Object)
            If (Me.CreateRenewSoftwareJobOperationCompleted Is Nothing) Then
                Me.CreateRenewSoftwareJobOperationCompleted = AddressOf Me.OnCreateRenewSoftwareJobOperationCompleted
            End If
            Me.InvokeAsync("CreateRenewSoftwareJob", New Object() {sessionId, softwareJobId, softwareJobContainerId, softwareJobOrderProperties}, Me.CreateRenewSoftwareJobOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateRenewSoftwareJobOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateRenewSoftwareJobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateRenewSoftwareJobCompleted(Me, New CreateRenewSoftwareJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwarePackageInstallationList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitSoftwareJobPropertiesRequired As UnitSoftwareJobPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwarePackages As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwarePackagesSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwarePackageInstallationList", New Object() {sessionId, softwarePackageId, unitGroupId, unitSoftwareJobPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwarePackages = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwarePackagesSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageInstallationListAsync(ByVal sessionId As String, ByVal softwarePackageId As String, ByVal unitGroupId As String, ByVal unitSoftwareJobPropertiesRequired As UnitSoftwareJobPropertiesRequired)
            Me.OpenSoftwarePackageInstallationListAsync(sessionId, softwarePackageId, unitGroupId, unitSoftwareJobPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageInstallationListAsync(ByVal sessionId As String, ByVal softwarePackageId As String, ByVal unitGroupId As String, ByVal unitSoftwareJobPropertiesRequired As UnitSoftwareJobPropertiesRequired, ByVal userState As Object)
            If (Me.OpenSoftwarePackageInstallationListOperationCompleted Is Nothing) Then
                Me.OpenSoftwarePackageInstallationListOperationCompleted = AddressOf Me.OnOpenSoftwarePackageInstallationListOperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwarePackageInstallationList", New Object() {sessionId, softwarePackageId, unitGroupId, unitSoftwareJobPropertiesRequired}, Me.OpenSoftwarePackageInstallationListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwarePackageInstallationListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwarePackageInstallationListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwarePackageInstallationListCompleted(Me, New OpenSoftwarePackageInstallationListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageInstallations(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageInstallations As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwarePackageInstallationsReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("unitSoftwareJobPropertiesArray", IsNullable:=false)> UnitSoftwareJobProperties()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageInstallations", New Object() {sessionId, listHandle, noOfSoftwarePackageInstallations})
            Return CType(results(0),UnitSoftwareJobProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageInstallationsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageInstallations As Long)
            Me.GetSoftwarePackageInstallationsAsync(sessionId, listHandle, noOfSoftwarePackageInstallations, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageInstallationsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageInstallations As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageInstallationsOperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageInstallationsOperationCompleted = AddressOf Me.OnGetSoftwarePackageInstallationsOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageInstallations", New Object() {sessionId, listHandle, noOfSoftwarePackageInstallations}, Me.GetSoftwarePackageInstallationsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageInstallationsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageInstallationsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageInstallationsCompleted(Me, New GetSoftwarePackageInstallationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwarePackageInstallationList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwarePackageInstallationList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageInstallationListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwarePackageInstallationListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageInstallationListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwarePackageInstallationListOperationCompleted Is Nothing) Then
                Me.CloseSoftwarePackageInstallationListOperationCompleted = AddressOf Me.OnCloseSoftwarePackageInstallationListOperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwarePackageInstallationList", New Object() {sessionId, listHandle}, Me.CloseSoftwarePackageInstallationListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwarePackageInstallationListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwarePackageInstallationListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwarePackageInstallationListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenUnitUnitSoftwareJobList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitSoftwareJobPropertiesRequired As UnitSoftwareJobPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfUnitSoftwareJobs As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfUnitSoftwareJobsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenUnitUnitSoftwareJobList", New Object() {sessionId, unitId, unitSoftwareJobPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfUnitSoftwareJobs = CType(results(2),System.Nullable(Of Long))
            totalNoOfUnitSoftwareJobsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitUnitSoftwareJobListAsync(ByVal sessionId As String, ByVal unitId As String, ByVal unitSoftwareJobPropertiesRequired As UnitSoftwareJobPropertiesRequired)
            Me.OpenUnitUnitSoftwareJobListAsync(sessionId, unitId, unitSoftwareJobPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitUnitSoftwareJobListAsync(ByVal sessionId As String, ByVal unitId As String, ByVal unitSoftwareJobPropertiesRequired As UnitSoftwareJobPropertiesRequired, ByVal userState As Object)
            If (Me.OpenUnitUnitSoftwareJobListOperationCompleted Is Nothing) Then
                Me.OpenUnitUnitSoftwareJobListOperationCompleted = AddressOf Me.OnOpenUnitUnitSoftwareJobListOperationCompleted
            End If
            Me.InvokeAsync("OpenUnitUnitSoftwareJobList", New Object() {sessionId, unitId, unitSoftwareJobPropertiesRequired}, Me.OpenUnitUnitSoftwareJobListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenUnitUnitSoftwareJobListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenUnitUnitSoftwareJobListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenUnitUnitSoftwareJobListCompleted(Me, New OpenUnitUnitSoftwareJobListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitUnitSoftwareJobs(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitSoftwareJobs As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetUnitUnitSoftwareJobsReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("unitSoftwareJobPropertiesArray", IsNullable:=false)> UnitSoftwareJobProperties()
            Dim results() As Object = Me.Invoke("GetUnitUnitSoftwareJobs", New Object() {sessionId, listHandle, noOfUnitSoftwareJobs})
            Return CType(results(0),UnitSoftwareJobProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitUnitSoftwareJobsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitSoftwareJobs As Long)
            Me.GetUnitUnitSoftwareJobsAsync(sessionId, listHandle, noOfUnitSoftwareJobs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitUnitSoftwareJobsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitSoftwareJobs As Long, ByVal userState As Object)
            If (Me.GetUnitUnitSoftwareJobsOperationCompleted Is Nothing) Then
                Me.GetUnitUnitSoftwareJobsOperationCompleted = AddressOf Me.OnGetUnitUnitSoftwareJobsOperationCompleted
            End If
            Me.InvokeAsync("GetUnitUnitSoftwareJobs", New Object() {sessionId, listHandle, noOfUnitSoftwareJobs}, Me.GetUnitUnitSoftwareJobsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitUnitSoftwareJobsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitUnitSoftwareJobsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitUnitSoftwareJobsCompleted(Me, New GetUnitUnitSoftwareJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseUnitUnitSoftwareJobList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseUnitUnitSoftwareJobList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitUnitSoftwareJobListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseUnitUnitSoftwareJobListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitUnitSoftwareJobListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseUnitUnitSoftwareJobListOperationCompleted Is Nothing) Then
                Me.CloseUnitUnitSoftwareJobListOperationCompleted = AddressOf Me.OnCloseUnitUnitSoftwareJobListOperationCompleted
            End If
            Me.InvokeAsync("CloseUnitUnitSoftwareJobList", New Object() {sessionId, listHandle}, Me.CloseUnitUnitSoftwareJobListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseUnitUnitSoftwareJobListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseUnitUnitSoftwareJobListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseUnitUnitSoftwareJobListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenUnitUnitSoftwareInstallationJobList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitSoftwareJobPropertiesRequired As UnitSoftwareJobPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfUnitSoftwareInstallationJobs As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfUnitSoftwareInstallationJobsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenUnitUnitSoftwareInstallationJobList", New Object() {sessionId, unitId, unitSoftwareJobPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfUnitSoftwareInstallationJobs = CType(results(2),System.Nullable(Of Long))
            totalNoOfUnitSoftwareInstallationJobsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitUnitSoftwareInstallationJobListAsync(ByVal sessionId As String, ByVal unitId As String, ByVal unitSoftwareJobPropertiesRequired As UnitSoftwareJobPropertiesRequired)
            Me.OpenUnitUnitSoftwareInstallationJobListAsync(sessionId, unitId, unitSoftwareJobPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitUnitSoftwareInstallationJobListAsync(ByVal sessionId As String, ByVal unitId As String, ByVal unitSoftwareJobPropertiesRequired As UnitSoftwareJobPropertiesRequired, ByVal userState As Object)
            If (Me.OpenUnitUnitSoftwareInstallationJobListOperationCompleted Is Nothing) Then
                Me.OpenUnitUnitSoftwareInstallationJobListOperationCompleted = AddressOf Me.OnOpenUnitUnitSoftwareInstallationJobListOperationCompleted
            End If
            Me.InvokeAsync("OpenUnitUnitSoftwareInstallationJobList", New Object() {sessionId, unitId, unitSoftwareJobPropertiesRequired}, Me.OpenUnitUnitSoftwareInstallationJobListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenUnitUnitSoftwareInstallationJobListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenUnitUnitSoftwareInstallationJobListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenUnitUnitSoftwareInstallationJobListCompleted(Me, New OpenUnitUnitSoftwareInstallationJobListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitUnitSoftwareInstallationJobs(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitSoftwareInstallationJobs As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetUnitUnitSoftwareInstallationJobsReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("unitSoftwareJobPropertiesArray", IsNullable:=false)> UnitSoftwareJobProperties()
            Dim results() As Object = Me.Invoke("GetUnitUnitSoftwareInstallationJobs", New Object() {sessionId, listHandle, noOfUnitSoftwareInstallationJobs})
            Return CType(results(0),UnitSoftwareJobProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitUnitSoftwareInstallationJobsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitSoftwareInstallationJobs As Long)
            Me.GetUnitUnitSoftwareInstallationJobsAsync(sessionId, listHandle, noOfUnitSoftwareInstallationJobs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitUnitSoftwareInstallationJobsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitSoftwareInstallationJobs As Long, ByVal userState As Object)
            If (Me.GetUnitUnitSoftwareInstallationJobsOperationCompleted Is Nothing) Then
                Me.GetUnitUnitSoftwareInstallationJobsOperationCompleted = AddressOf Me.OnGetUnitUnitSoftwareInstallationJobsOperationCompleted
            End If
            Me.InvokeAsync("GetUnitUnitSoftwareInstallationJobs", New Object() {sessionId, listHandle, noOfUnitSoftwareInstallationJobs}, Me.GetUnitUnitSoftwareInstallationJobsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitUnitSoftwareInstallationJobsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitUnitSoftwareInstallationJobsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitUnitSoftwareInstallationJobsCompleted(Me, New GetUnitUnitSoftwareInstallationJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseUnitUnitSoftwareInstallationJobList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseUnitUnitSoftwareInstallationJobList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitUnitSoftwareInstallationJobListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseUnitUnitSoftwareInstallationJobListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitUnitSoftwareInstallationJobListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseUnitUnitSoftwareInstallationJobListOperationCompleted Is Nothing) Then
                Me.CloseUnitUnitSoftwareInstallationJobListOperationCompleted = AddressOf Me.OnCloseUnitUnitSoftwareInstallationJobListOperationCompleted
            End If
            Me.InvokeAsync("CloseUnitUnitSoftwareInstallationJobList", New Object() {sessionId, listHandle}, Me.CloseUnitUnitSoftwareInstallationJobListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseUnitUnitSoftwareInstallationJobListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseUnitUnitSoftwareInstallationJobListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseUnitUnitSoftwareInstallationJobListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSoftwarePackageVolume(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal createSoftwarePackageVolumeProperties As CreateSoftwarePackageVolumeProperties) As <System.Xml.Serialization.XmlElementAttribute("CreateSoftwarePackageVolumeReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSoftwarePackageVolume", New Object() {sessionId, createSoftwarePackageVolumeProperties})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePackageVolumeAsync(ByVal sessionId As String, ByVal createSoftwarePackageVolumeProperties As CreateSoftwarePackageVolumeProperties)
            Me.CreateSoftwarePackageVolumeAsync(sessionId, createSoftwarePackageVolumeProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePackageVolumeAsync(ByVal sessionId As String, ByVal createSoftwarePackageVolumeProperties As CreateSoftwarePackageVolumeProperties, ByVal userState As Object)
            If (Me.CreateSoftwarePackageVolumeOperationCompleted Is Nothing) Then
                Me.CreateSoftwarePackageVolumeOperationCompleted = AddressOf Me.OnCreateSoftwarePackageVolumeOperationCompleted
            End If
            Me.InvokeAsync("CreateSoftwarePackageVolume", New Object() {sessionId, createSoftwarePackageVolumeProperties}, Me.CreateSoftwarePackageVolumeOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSoftwarePackageVolumeOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSoftwarePackageVolumeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSoftwarePackageVolumeCompleted(Me, New CreateSoftwarePackageVolumeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteSoftwarePackageVolumes(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageVolumeIds() As String)
            Me.Invoke("DeleteSoftwarePackageVolumes", New Object() {sessionId, softwarePackageVolumeIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwarePackageVolumesAsync(ByVal sessionId As String, ByVal softwarePackageVolumeIds() As String)
            Me.DeleteSoftwarePackageVolumesAsync(sessionId, softwarePackageVolumeIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwarePackageVolumesAsync(ByVal sessionId As String, ByVal softwarePackageVolumeIds() As String, ByVal userState As Object)
            If (Me.DeleteSoftwarePackageVolumesOperationCompleted Is Nothing) Then
                Me.DeleteSoftwarePackageVolumesOperationCompleted = AddressOf Me.OnDeleteSoftwarePackageVolumesOperationCompleted
            End If
            Me.InvokeAsync("DeleteSoftwarePackageVolumes", New Object() {sessionId, softwarePackageVolumeIds}, Me.DeleteSoftwarePackageVolumesOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSoftwarePackageVolumesOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSoftwarePackageVolumesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSoftwarePackageVolumesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwarePackageVolumeList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageVolumePropertiesRequired As SoftwarePackageVolumePropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwarePackageVolumes As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwarePackageVolumesSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwarePackageVolumeList", New Object() {sessionId, softwarePackageId, softwarePackageVolumePropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwarePackageVolumes = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwarePackageVolumesSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageVolumeListAsync(ByVal sessionId As String, ByVal softwarePackageId As String, ByVal softwarePackageVolumePropertiesRequired As SoftwarePackageVolumePropertiesRequired)
            Me.OpenSoftwarePackageVolumeListAsync(sessionId, softwarePackageId, softwarePackageVolumePropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageVolumeListAsync(ByVal sessionId As String, ByVal softwarePackageId As String, ByVal softwarePackageVolumePropertiesRequired As SoftwarePackageVolumePropertiesRequired, ByVal userState As Object)
            If (Me.OpenSoftwarePackageVolumeListOperationCompleted Is Nothing) Then
                Me.OpenSoftwarePackageVolumeListOperationCompleted = AddressOf Me.OnOpenSoftwarePackageVolumeListOperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwarePackageVolumeList", New Object() {sessionId, softwarePackageId, softwarePackageVolumePropertiesRequired}, Me.OpenSoftwarePackageVolumeListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwarePackageVolumeListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwarePackageVolumeListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwarePackageVolumeListCompleted(Me, New OpenSoftwarePackageVolumeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageVolumes(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageVolumes As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwarePackageVolumesReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageVolumePropertiesArray", IsNullable:=false)> SoftwarePackageVolumeProperties()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageVolumes", New Object() {sessionId, listHandle, noOfSoftwarePackageVolumes})
            Return CType(results(0),SoftwarePackageVolumeProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageVolumesAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageVolumes As Long)
            Me.GetSoftwarePackageVolumesAsync(sessionId, listHandle, noOfSoftwarePackageVolumes, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageVolumesAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageVolumes As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageVolumesOperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageVolumesOperationCompleted = AddressOf Me.OnGetSoftwarePackageVolumesOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageVolumes", New Object() {sessionId, listHandle, noOfSoftwarePackageVolumes}, Me.GetSoftwarePackageVolumesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageVolumesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageVolumesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageVolumesCompleted(Me, New GetSoftwarePackageVolumesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwarePackageVolumeList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwarePackageVolumeList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageVolumeListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwarePackageVolumeListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageVolumeListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwarePackageVolumeListOperationCompleted Is Nothing) Then
                Me.CloseSoftwarePackageVolumeListOperationCompleted = AddressOf Me.OnCloseSoftwarePackageVolumeListOperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwarePackageVolumeList", New Object() {sessionId, listHandle}, Me.CloseSoftwarePackageVolumeListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwarePackageVolumeListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwarePackageVolumeListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwarePackageVolumeListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageVolume(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageVolumeId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageVolumePropertiesRequired As SoftwarePackageVolumePropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("GetSoftwarePackageVolumeReturn", IsNullable:=true)> SoftwarePackageVolumeProperties
            Dim results() As Object = Me.Invoke("GetSoftwarePackageVolume", New Object() {sessionId, softwarePackageVolumeId, softwarePackageVolumePropertiesRequired})
            Return CType(results(0),SoftwarePackageVolumeProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageVolumeAsync(ByVal sessionId As String, ByVal softwarePackageVolumeId As String, ByVal softwarePackageVolumePropertiesRequired As SoftwarePackageVolumePropertiesRequired)
            Me.GetSoftwarePackageVolumeAsync(sessionId, softwarePackageVolumeId, softwarePackageVolumePropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageVolumeAsync(ByVal sessionId As String, ByVal softwarePackageVolumeId As String, ByVal softwarePackageVolumePropertiesRequired As SoftwarePackageVolumePropertiesRequired, ByVal userState As Object)
            If (Me.GetSoftwarePackageVolumeOperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageVolumeOperationCompleted = AddressOf Me.OnGetSoftwarePackageVolumeOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageVolume", New Object() {sessionId, softwarePackageVolumeId, softwarePackageVolumePropertiesRequired}, Me.GetSoftwarePackageVolumeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageVolumeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageVolumeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageVolumeCompleted(Me, New GetSoftwarePackageVolumeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSoftwarePackageVolume(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setSoftwarePackageVolumeProperties As SetSoftwarePackageVolumeProperties)
            Me.Invoke("SetSoftwarePackageVolume", New Object() {sessionId, setSoftwarePackageVolumeProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePackageVolumeAsync(ByVal sessionId As String, ByVal setSoftwarePackageVolumeProperties As SetSoftwarePackageVolumeProperties)
            Me.SetSoftwarePackageVolumeAsync(sessionId, setSoftwarePackageVolumeProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePackageVolumeAsync(ByVal sessionId As String, ByVal setSoftwarePackageVolumeProperties As SetSoftwarePackageVolumeProperties, ByVal userState As Object)
            If (Me.SetSoftwarePackageVolumeOperationCompleted Is Nothing) Then
                Me.SetSoftwarePackageVolumeOperationCompleted = AddressOf Me.OnSetSoftwarePackageVolumeOperationCompleted
            End If
            Me.InvokeAsync("SetSoftwarePackageVolume", New Object() {sessionId, setSoftwarePackageVolumeProperties}, Me.SetSoftwarePackageVolumeOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSoftwarePackageVolumeOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSoftwarePackageVolumeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSoftwarePackageVolumeCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwarePackageVolumeElementList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageVolumeId As String, ByVal elementTypeMask As ElementTypeMask, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal folderPath As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageVolumeElementPropertiesRequired As SoftwarePackageVolumeElementPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwarePackageVolumeElements As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwarePackageVolumeElementsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwarePackageVolumeElementList", New Object() {sessionId, softwarePackageVolumeId, elementTypeMask, folderPath, softwarePackageVolumeElementPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwarePackageVolumeElements = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwarePackageVolumeElementsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageVolumeElementListAsync(ByVal sessionId As String, ByVal softwarePackageVolumeId As String, ByVal elementTypeMask As ElementTypeMask, ByVal folderPath As String, ByVal softwarePackageVolumeElementPropertiesRequired As SoftwarePackageVolumeElementPropertiesRequired)
            Me.OpenSoftwarePackageVolumeElementListAsync(sessionId, softwarePackageVolumeId, elementTypeMask, folderPath, softwarePackageVolumeElementPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageVolumeElementListAsync(ByVal sessionId As String, ByVal softwarePackageVolumeId As String, ByVal elementTypeMask As ElementTypeMask, ByVal folderPath As String, ByVal softwarePackageVolumeElementPropertiesRequired As SoftwarePackageVolumeElementPropertiesRequired, ByVal userState As Object)
            If (Me.OpenSoftwarePackageVolumeElementListOperationCompleted Is Nothing) Then
                Me.OpenSoftwarePackageVolumeElementListOperationCompleted = AddressOf Me.OnOpenSoftwarePackageVolumeElementListOperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwarePackageVolumeElementList", New Object() {sessionId, softwarePackageVolumeId, elementTypeMask, folderPath, softwarePackageVolumeElementPropertiesRequired}, Me.OpenSoftwarePackageVolumeElementListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwarePackageVolumeElementListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwarePackageVolumeElementListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwarePackageVolumeElementListCompleted(Me, New OpenSoftwarePackageVolumeElementListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageVolumeElements(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal totalNoOfElements As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwarePackageVolumeElementsReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageVolumeElementPropertiesArray", IsNullable:=false)> SoftwarePackageVolumeElementProperties()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageVolumeElements", New Object() {sessionId, listHandle, totalNoOfElements})
            Return CType(results(0),SoftwarePackageVolumeElementProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageVolumeElementsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal totalNoOfElements As Long)
            Me.GetSoftwarePackageVolumeElementsAsync(sessionId, listHandle, totalNoOfElements, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageVolumeElementsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal totalNoOfElements As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageVolumeElementsOperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageVolumeElementsOperationCompleted = AddressOf Me.OnGetSoftwarePackageVolumeElementsOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageVolumeElements", New Object() {sessionId, listHandle, totalNoOfElements}, Me.GetSoftwarePackageVolumeElementsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageVolumeElementsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageVolumeElementsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageVolumeElementsCompleted(Me, New GetSoftwarePackageVolumeElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwarePackageVolumeElementList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwarePackageVolumeElementList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageVolumeElementListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwarePackageVolumeElementListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageVolumeElementListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwarePackageVolumeElementListOperationCompleted Is Nothing) Then
                Me.CloseSoftwarePackageVolumeElementListOperationCompleted = AddressOf Me.OnCloseSoftwarePackageVolumeElementListOperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwarePackageVolumeElementList", New Object() {sessionId, listHandle}, Me.CloseSoftwarePackageVolumeElementListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwarePackageVolumeElementListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwarePackageVolumeElementListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwarePackageVolumeElementListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindSoftwarePackageProcedure(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageVersion As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureName As String, ByVal softwarePackageProcedureTask As SoftwarePackageProcedureTask) As <System.Xml.Serialization.XmlElementAttribute("FindSoftwarePackageProcedureReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("FindSoftwarePackageProcedure", New Object() {sessionId, softwarePackageName, softwarePackageVersion, softwarePackageProcedureName, softwarePackageProcedureTask})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindSoftwarePackageProcedureAsync(ByVal sessionId As String, ByVal softwarePackageName As String, ByVal softwarePackageVersion As String, ByVal softwarePackageProcedureName As String, ByVal softwarePackageProcedureTask As SoftwarePackageProcedureTask)
            Me.FindSoftwarePackageProcedureAsync(sessionId, softwarePackageName, softwarePackageVersion, softwarePackageProcedureName, softwarePackageProcedureTask, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindSoftwarePackageProcedureAsync(ByVal sessionId As String, ByVal softwarePackageName As String, ByVal softwarePackageVersion As String, ByVal softwarePackageProcedureName As String, ByVal softwarePackageProcedureTask As SoftwarePackageProcedureTask, ByVal userState As Object)
            If (Me.FindSoftwarePackageProcedureOperationCompleted Is Nothing) Then
                Me.FindSoftwarePackageProcedureOperationCompleted = AddressOf Me.OnFindSoftwarePackageProcedureOperationCompleted
            End If
            Me.InvokeAsync("FindSoftwarePackageProcedure", New Object() {sessionId, softwarePackageName, softwarePackageVersion, softwarePackageProcedureName, softwarePackageProcedureTask}, Me.FindSoftwarePackageProcedureOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindSoftwarePackageProcedureOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindSoftwarePackageProcedureCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindSoftwarePackageProcedureCompleted(Me, New FindSoftwarePackageProcedureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSoftwarePackageProcedure(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureProperties As CreateSoftwarePackageProcedureProperties) As <System.Xml.Serialization.XmlElementAttribute("createSoftwarePackageProcedureReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSoftwarePackageProcedure", New Object() {sessionId, softwarePackageProcedureProperties})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePackageProcedureAsync(ByVal sessionId As String, ByVal softwarePackageProcedureProperties As CreateSoftwarePackageProcedureProperties)
            Me.CreateSoftwarePackageProcedureAsync(sessionId, softwarePackageProcedureProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePackageProcedureAsync(ByVal sessionId As String, ByVal softwarePackageProcedureProperties As CreateSoftwarePackageProcedureProperties, ByVal userState As Object)
            If (Me.CreateSoftwarePackageProcedureOperationCompleted Is Nothing) Then
                Me.CreateSoftwarePackageProcedureOperationCompleted = AddressOf Me.OnCreateSoftwarePackageProcedureOperationCompleted
            End If
            Me.InvokeAsync("CreateSoftwarePackageProcedure", New Object() {sessionId, softwarePackageProcedureProperties}, Me.CreateSoftwarePackageProcedureOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSoftwarePackageProcedureOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSoftwarePackageProcedureCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSoftwarePackageProcedureCompleted(Me, New CreateSoftwarePackageProcedureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteSoftwarePackageProcedures(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageProcedureIds() As String)
            Me.Invoke("DeleteSoftwarePackageProcedures", New Object() {sessionId, softwarePackageProcedureIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwarePackageProceduresAsync(ByVal sessionId As String, ByVal softwarePackageProcedureIds() As String)
            Me.DeleteSoftwarePackageProceduresAsync(sessionId, softwarePackageProcedureIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwarePackageProceduresAsync(ByVal sessionId As String, ByVal softwarePackageProcedureIds() As String, ByVal userState As Object)
            If (Me.DeleteSoftwarePackageProceduresOperationCompleted Is Nothing) Then
                Me.DeleteSoftwarePackageProceduresOperationCompleted = AddressOf Me.OnDeleteSoftwarePackageProceduresOperationCompleted
            End If
            Me.InvokeAsync("DeleteSoftwarePackageProcedures", New Object() {sessionId, softwarePackageProcedureIds}, Me.DeleteSoftwarePackageProceduresOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSoftwarePackageProceduresOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSoftwarePackageProceduresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSoftwarePackageProceduresCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwarePackageProcedureList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageId As String, ByVal softwarePackageProcedureTypes As SoftwarePackageProcedureTypeMask, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwarePackageProcedures As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwarePackageProceduresSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwarePackageProcedureList", New Object() {sessionId, softwarePackageId, softwarePackageProcedureTypes, softwarePackageProcedurePropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwarePackageProcedures = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwarePackageProceduresSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageProcedureListAsync(ByVal sessionId As String, ByVal softwarePackageId As String, ByVal softwarePackageProcedureTypes As SoftwarePackageProcedureTypeMask, ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired)
            Me.OpenSoftwarePackageProcedureListAsync(sessionId, softwarePackageId, softwarePackageProcedureTypes, softwarePackageProcedurePropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageProcedureListAsync(ByVal sessionId As String, ByVal softwarePackageId As String, ByVal softwarePackageProcedureTypes As SoftwarePackageProcedureTypeMask, ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired, ByVal userState As Object)
            If (Me.OpenSoftwarePackageProcedureListOperationCompleted Is Nothing) Then
                Me.OpenSoftwarePackageProcedureListOperationCompleted = AddressOf Me.OnOpenSoftwarePackageProcedureListOperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwarePackageProcedureList", New Object() {sessionId, softwarePackageId, softwarePackageProcedureTypes, softwarePackageProcedurePropertiesRequired}, Me.OpenSoftwarePackageProcedureListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwarePackageProcedureListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwarePackageProcedureListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwarePackageProcedureListCompleted(Me, New OpenSoftwarePackageProcedureListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageProcedures(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedures As Long) As <System.Xml.Serialization.XmlArrayAttribute("getSoftwarePackageProcedures", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageProcedurePropertiesArray", IsNullable:=false)> SoftwarePackageProcedureProperties()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageProcedures", New Object() {sessionId, listHandle, noOfSoftwarePackageProcedures})
            Return CType(results(0),SoftwarePackageProcedureProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProceduresAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedures As Long)
            Me.GetSoftwarePackageProceduresAsync(sessionId, listHandle, noOfSoftwarePackageProcedures, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProceduresAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedures As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageProceduresOperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageProceduresOperationCompleted = AddressOf Me.OnGetSoftwarePackageProceduresOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageProcedures", New Object() {sessionId, listHandle, noOfSoftwarePackageProcedures}, Me.GetSoftwarePackageProceduresOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageProceduresOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageProceduresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageProceduresCompleted(Me, New GetSoftwarePackageProceduresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwarePackageProcedureList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwarePackageProcedureList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageProcedureListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwarePackageProcedureListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageProcedureListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwarePackageProcedureListOperationCompleted Is Nothing) Then
                Me.CloseSoftwarePackageProcedureListOperationCompleted = AddressOf Me.OnCloseSoftwarePackageProcedureListOperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwarePackageProcedureList", New Object() {sessionId, listHandle}, Me.CloseSoftwarePackageProcedureListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwarePackageProcedureListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwarePackageProcedureListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwarePackageProcedureListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageProcedure(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("GetSoftwarePackageProcedureReturn", IsNullable:=true)> SoftwarePackageProcedureProperties
            Dim results() As Object = Me.Invoke("GetSoftwarePackageProcedure", New Object() {sessionId, softwarePackageProcedureId, softwarePackageProcedurePropertiesRequired})
            Return CType(results(0),SoftwarePackageProcedureProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureAsync(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired)
            Me.GetSoftwarePackageProcedureAsync(sessionId, softwarePackageProcedureId, softwarePackageProcedurePropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureAsync(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired, ByVal userState As Object)
            If (Me.GetSoftwarePackageProcedureOperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageProcedureOperationCompleted = AddressOf Me.OnGetSoftwarePackageProcedureOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageProcedure", New Object() {sessionId, softwarePackageProcedureId, softwarePackageProcedurePropertiesRequired}, Me.GetSoftwarePackageProcedureOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageProcedureOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageProcedureCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageProcedureCompleted(Me, New GetSoftwarePackageProcedureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSoftwarePackageProcedure(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setSoftwarePackageProcedureProperties As SetSoftwarePackageProcedureProperties)
            Me.Invoke("SetSoftwarePackageProcedure", New Object() {sessionId, setSoftwarePackageProcedureProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePackageProcedureAsync(ByVal sessionId As String, ByVal setSoftwarePackageProcedureProperties As SetSoftwarePackageProcedureProperties)
            Me.SetSoftwarePackageProcedureAsync(sessionId, setSoftwarePackageProcedureProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePackageProcedureAsync(ByVal sessionId As String, ByVal setSoftwarePackageProcedureProperties As SetSoftwarePackageProcedureProperties, ByVal userState As Object)
            If (Me.SetSoftwarePackageProcedureOperationCompleted Is Nothing) Then
                Me.SetSoftwarePackageProcedureOperationCompleted = AddressOf Me.OnSetSoftwarePackageProcedureOperationCompleted
            End If
            Me.InvokeAsync("SetSoftwarePackageProcedure", New Object() {sessionId, setSoftwarePackageProcedureProperties}, Me.SetSoftwarePackageProcedureOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSoftwarePackageProcedureOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSoftwarePackageProcedureCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSoftwarePackageProcedureCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSoftwarePackageProcedureDependency(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureDependency As CreateSoftwarePackageProcedureDependencyProperties) As <System.Xml.Serialization.XmlElementAttribute("CreateSoftwarePackageProcedureDependencyReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSoftwarePackageProcedureDependency", New Object() {sessionId, softwarePackageProcedureDependency})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePackageProcedureDependencyAsync(ByVal sessionId As String, ByVal softwarePackageProcedureDependency As CreateSoftwarePackageProcedureDependencyProperties)
            Me.CreateSoftwarePackageProcedureDependencyAsync(sessionId, softwarePackageProcedureDependency, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePackageProcedureDependencyAsync(ByVal sessionId As String, ByVal softwarePackageProcedureDependency As CreateSoftwarePackageProcedureDependencyProperties, ByVal userState As Object)
            If (Me.CreateSoftwarePackageProcedureDependencyOperationCompleted Is Nothing) Then
                Me.CreateSoftwarePackageProcedureDependencyOperationCompleted = AddressOf Me.OnCreateSoftwarePackageProcedureDependencyOperationCompleted
            End If
            Me.InvokeAsync("CreateSoftwarePackageProcedureDependency", New Object() {sessionId, softwarePackageProcedureDependency}, Me.CreateSoftwarePackageProcedureDependencyOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSoftwarePackageProcedureDependencyOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSoftwarePackageProcedureDependencyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSoftwarePackageProcedureDependencyCompleted(Me, New CreateSoftwarePackageProcedureDependencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwarePackageProcedureDependencyList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureDependencyPropertiesRequired As SoftwarePackageProcedureDependencyPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwarePackageProcedureDependencies As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwarePackageProcedureDependenciesSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwarePackageProcedureDependencyList", New Object() {sessionId, softwarePackageProcedureId, softwarePackageProcedureDependencyPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwarePackageProcedureDependencies = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwarePackageProcedureDependenciesSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageProcedureDependencyListAsync(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageProcedureDependencyPropertiesRequired As SoftwarePackageProcedureDependencyPropertiesRequired)
            Me.OpenSoftwarePackageProcedureDependencyListAsync(sessionId, softwarePackageProcedureId, softwarePackageProcedureDependencyPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageProcedureDependencyListAsync(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageProcedureDependencyPropertiesRequired As SoftwarePackageProcedureDependencyPropertiesRequired, ByVal userState As Object)
            If (Me.OpenSoftwarePackageProcedureDependencyListOperationCompleted Is Nothing) Then
                Me.OpenSoftwarePackageProcedureDependencyListOperationCompleted = AddressOf Me.OnOpenSoftwarePackageProcedureDependencyListOperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwarePackageProcedureDependencyList", New Object() {sessionId, softwarePackageProcedureId, softwarePackageProcedureDependencyPropertiesRequired}, Me.OpenSoftwarePackageProcedureDependencyListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwarePackageProcedureDependencyListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwarePackageProcedureDependencyListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwarePackageProcedureDependencyListCompleted(Me, New OpenSoftwarePackageProcedureDependencyListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageProcedureDependencies(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedureDependencies As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwarePackageProcedureDependenciesReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageProcedureDependencyPropertiesArray", IsNullable:=false)> SoftwarePackageProcedureDependencyProperties()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageProcedureDependencies", New Object() {sessionId, listHandle, noOfSoftwarePackageProcedureDependencies})
            Return CType(results(0),SoftwarePackageProcedureDependencyProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureDependenciesAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedureDependencies As Long)
            Me.GetSoftwarePackageProcedureDependenciesAsync(sessionId, listHandle, noOfSoftwarePackageProcedureDependencies, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureDependenciesAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedureDependencies As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageProcedureDependenciesOperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageProcedureDependenciesOperationCompleted = AddressOf Me.OnGetSoftwarePackageProcedureDependenciesOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageProcedureDependencies", New Object() {sessionId, listHandle, noOfSoftwarePackageProcedureDependencies}, Me.GetSoftwarePackageProcedureDependenciesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageProcedureDependenciesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageProcedureDependenciesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageProcedureDependenciesCompleted(Me, New GetSoftwarePackageProcedureDependenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwarePackageProcedureDependencyList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwarePackageProcedureDependencyList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageProcedureDependencyListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwarePackageProcedureDependencyListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageProcedureDependencyListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwarePackageProcedureDependencyListOperationCompleted Is Nothing) Then
                Me.CloseSoftwarePackageProcedureDependencyListOperationCompleted = AddressOf Me.OnCloseSoftwarePackageProcedureDependencyListOperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwarePackageProcedureDependencyList", New Object() {sessionId, listHandle}, Me.CloseSoftwarePackageProcedureDependencyListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwarePackageProcedureDependencyListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwarePackageProcedureDependencyListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwarePackageProcedureDependencyListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteSoftwarePackageProcedureDependency(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageProcedureDepIds() As String)
            Me.Invoke("DeleteSoftwarePackageProcedureDependency", New Object() {sessionId, softwarePackageProcedureDepIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwarePackageProcedureDependencyAsync(ByVal sessionId As String, ByVal softwarePackageProcedureDepIds() As String)
            Me.DeleteSoftwarePackageProcedureDependencyAsync(sessionId, softwarePackageProcedureDepIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwarePackageProcedureDependencyAsync(ByVal sessionId As String, ByVal softwarePackageProcedureDepIds() As String, ByVal userState As Object)
            If (Me.DeleteSoftwarePackageProcedureDependencyOperationCompleted Is Nothing) Then
                Me.DeleteSoftwarePackageProcedureDependencyOperationCompleted = AddressOf Me.OnDeleteSoftwarePackageProcedureDependencyOperationCompleted
            End If
            Me.InvokeAsync("DeleteSoftwarePackageProcedureDependency", New Object() {sessionId, softwarePackageProcedureDepIds}, Me.DeleteSoftwarePackageProcedureDependencyOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSoftwarePackageProcedureDependencyOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSoftwarePackageProcedureDependencyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSoftwarePackageProcedureDependencyCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateAddedSoftwarePackageProcedure(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureProperties As CreateSoftwarePackageProcedureProperties, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sourcePath As String) As <System.Xml.Serialization.XmlElementAttribute("CreateAddedSoftwarePackageProcedureReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateAddedSoftwarePackageProcedure", New Object() {sessionId, softwarePackageProcedureProperties, sourcePath})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateAddedSoftwarePackageProcedureAsync(ByVal sessionId As String, ByVal softwarePackageProcedureProperties As CreateSoftwarePackageProcedureProperties, ByVal sourcePath As String)
            Me.CreateAddedSoftwarePackageProcedureAsync(sessionId, softwarePackageProcedureProperties, sourcePath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateAddedSoftwarePackageProcedureAsync(ByVal sessionId As String, ByVal softwarePackageProcedureProperties As CreateSoftwarePackageProcedureProperties, ByVal sourcePath As String, ByVal userState As Object)
            If (Me.CreateAddedSoftwarePackageProcedureOperationCompleted Is Nothing) Then
                Me.CreateAddedSoftwarePackageProcedureOperationCompleted = AddressOf Me.OnCreateAddedSoftwarePackageProcedureOperationCompleted
            End If
            Me.InvokeAsync("CreateAddedSoftwarePackageProcedure", New Object() {sessionId, softwarePackageProcedureProperties, sourcePath}, Me.CreateAddedSoftwarePackageProcedureOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateAddedSoftwarePackageProcedureOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateAddedSoftwarePackageProcedureCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateAddedSoftwarePackageProcedureCompleted(Me, New CreateAddedSoftwarePackageProcedureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ImportSoftwarePackage(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal importSoftwarePackageProperties As ImportSoftwarePackageProperties) As <System.Xml.Serialization.XmlElementAttribute("ImportSoftwarePackageReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("ImportSoftwarePackage", New Object() {sessionId, importSoftwarePackageProperties})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ImportSoftwarePackageAsync(ByVal sessionId As String, ByVal importSoftwarePackageProperties As ImportSoftwarePackageProperties)
            Me.ImportSoftwarePackageAsync(sessionId, importSoftwarePackageProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ImportSoftwarePackageAsync(ByVal sessionId As String, ByVal importSoftwarePackageProperties As ImportSoftwarePackageProperties, ByVal userState As Object)
            If (Me.ImportSoftwarePackageOperationCompleted Is Nothing) Then
                Me.ImportSoftwarePackageOperationCompleted = AddressOf Me.OnImportSoftwarePackageOperationCompleted
            End If
            Me.InvokeAsync("ImportSoftwarePackage", New Object() {sessionId, importSoftwarePackageProperties}, Me.ImportSoftwarePackageOperationCompleted, userState)
        End Sub
        
        Private Sub OnImportSoftwarePackageOperationCompleted(ByVal arg As Object)
            If (Not (Me.ImportSoftwarePackageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ImportSoftwarePackageCompleted(Me, New ImportSoftwarePackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindSoftwarePackage(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageVersion As String) As <System.Xml.Serialization.XmlElementAttribute("FindSoftwarePackageReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("FindSoftwarePackage", New Object() {sessionId, softwarePackageName, softwarePackageVersion})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindSoftwarePackageAsync(ByVal sessionId As String, ByVal softwarePackageName As String, ByVal softwarePackageVersion As String)
            Me.FindSoftwarePackageAsync(sessionId, softwarePackageName, softwarePackageVersion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindSoftwarePackageAsync(ByVal sessionId As String, ByVal softwarePackageName As String, ByVal softwarePackageVersion As String, ByVal userState As Object)
            If (Me.FindSoftwarePackageOperationCompleted Is Nothing) Then
                Me.FindSoftwarePackageOperationCompleted = AddressOf Me.OnFindSoftwarePackageOperationCompleted
            End If
            Me.InvokeAsync("FindSoftwarePackage", New Object() {sessionId, softwarePackageName, softwarePackageVersion}, Me.FindSoftwarePackageOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindSoftwarePackageOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindSoftwarePackageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindSoftwarePackageCompleted(Me, New FindSoftwarePackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackage(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackagePropertiesRequired As SoftwarePackagePropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("GetSoftwarePackageReturn", IsNullable:=true)> SoftwarePackageProperties
            Dim results() As Object = Me.Invoke("GetSoftwarePackage", New Object() {sessionId, softwarePackageId, softwarePackagePropertiesRequired})
            Return CType(results(0),SoftwarePackageProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageAsync(ByVal sessionId As String, ByVal softwarePackageId As String, ByVal softwarePackagePropertiesRequired As SoftwarePackagePropertiesRequired)
            Me.GetSoftwarePackageAsync(sessionId, softwarePackageId, softwarePackagePropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageAsync(ByVal sessionId As String, ByVal softwarePackageId As String, ByVal softwarePackagePropertiesRequired As SoftwarePackagePropertiesRequired, ByVal userState As Object)
            If (Me.GetSoftwarePackageOperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageOperationCompleted = AddressOf Me.OnGetSoftwarePackageOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackage", New Object() {sessionId, softwarePackageId, softwarePackagePropertiesRequired}, Me.GetSoftwarePackageOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageCompleted(Me, New GetSoftwarePackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSoftwarePackage(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal createSoftwarePackageProperties As CreateSoftwarePackageProperties) As <System.Xml.Serialization.XmlElementAttribute("CreateSoftwarePackageReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSoftwarePackage", New Object() {sessionId, createSoftwarePackageProperties})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePackageAsync(ByVal sessionId As String, ByVal createSoftwarePackageProperties As CreateSoftwarePackageProperties)
            Me.CreateSoftwarePackageAsync(sessionId, createSoftwarePackageProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePackageAsync(ByVal sessionId As String, ByVal createSoftwarePackageProperties As CreateSoftwarePackageProperties, ByVal userState As Object)
            If (Me.CreateSoftwarePackageOperationCompleted Is Nothing) Then
                Me.CreateSoftwarePackageOperationCompleted = AddressOf Me.OnCreateSoftwarePackageOperationCompleted
            End If
            Me.InvokeAsync("CreateSoftwarePackage", New Object() {sessionId, createSoftwarePackageProperties}, Me.CreateSoftwarePackageOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSoftwarePackageOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSoftwarePackageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSoftwarePackageCompleted(Me, New CreateSoftwarePackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteSoftwarePackages(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageIds() As String)
            Me.Invoke("DeleteSoftwarePackages", New Object() {sessionId, softwarePackageIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwarePackagesAsync(ByVal sessionId As String, ByVal softwarePackageIds() As String)
            Me.DeleteSoftwarePackagesAsync(sessionId, softwarePackageIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwarePackagesAsync(ByVal sessionId As String, ByVal softwarePackageIds() As String, ByVal userState As Object)
            If (Me.DeleteSoftwarePackagesOperationCompleted Is Nothing) Then
                Me.DeleteSoftwarePackagesOperationCompleted = AddressOf Me.OnDeleteSoftwarePackagesOperationCompleted
            End If
            Me.InvokeAsync("DeleteSoftwarePackages", New Object() {sessionId, softwarePackageIds}, Me.DeleteSoftwarePackagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSoftwarePackagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSoftwarePackagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSoftwarePackagesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSoftwarePackage(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProperties As SetSoftwarePackageProperties)
            Me.Invoke("SetSoftwarePackage", New Object() {sessionId, softwarePackageProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePackageAsync(ByVal sessionId As String, ByVal softwarePackageProperties As SetSoftwarePackageProperties)
            Me.SetSoftwarePackageAsync(sessionId, softwarePackageProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePackageAsync(ByVal sessionId As String, ByVal softwarePackageProperties As SetSoftwarePackageProperties, ByVal userState As Object)
            If (Me.SetSoftwarePackageOperationCompleted Is Nothing) Then
                Me.SetSoftwarePackageOperationCompleted = AddressOf Me.OnSetSoftwarePackageOperationCompleted
            End If
            Me.InvokeAsync("SetSoftwarePackage", New Object() {sessionId, softwarePackageProperties}, Me.SetSoftwarePackageOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSoftwarePackageOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSoftwarePackageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSoftwarePackageCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwarePackageList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal softwarePackageMaskType As SoftwarePackageMaskType, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackagePropertiesRequired As SoftwarePackagePropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwarePackages As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwarePackagesSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwarePackageList", New Object() {sessionId, softwarePackageMaskType, softwarePackagePropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwarePackages = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwarePackagesSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageListAsync(ByVal sessionId As String, ByVal softwarePackageMaskType As SoftwarePackageMaskType, ByVal softwarePackagePropertiesRequired As SoftwarePackagePropertiesRequired)
            Me.OpenSoftwarePackageListAsync(sessionId, softwarePackageMaskType, softwarePackagePropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageListAsync(ByVal sessionId As String, ByVal softwarePackageMaskType As SoftwarePackageMaskType, ByVal softwarePackagePropertiesRequired As SoftwarePackagePropertiesRequired, ByVal userState As Object)
            If (Me.OpenSoftwarePackageListOperationCompleted Is Nothing) Then
                Me.OpenSoftwarePackageListOperationCompleted = AddressOf Me.OnOpenSoftwarePackageListOperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwarePackageList", New Object() {sessionId, softwarePackageMaskType, softwarePackagePropertiesRequired}, Me.OpenSoftwarePackageListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwarePackageListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwarePackageListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwarePackageListCompleted(Me, New OpenSoftwarePackageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackages(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackages As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwarePackagesReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackagePropertiesArray", IsNullable:=false)> SoftwarePackageProperties()
            Dim results() As Object = Me.Invoke("GetSoftwarePackages", New Object() {sessionId, listHandle, noOfSoftwarePackages})
            Return CType(results(0),SoftwarePackageProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackagesAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackages As Long)
            Me.GetSoftwarePackagesAsync(sessionId, listHandle, noOfSoftwarePackages, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackagesAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackages As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackagesOperationCompleted Is Nothing) Then
                Me.GetSoftwarePackagesOperationCompleted = AddressOf Me.OnGetSoftwarePackagesOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackages", New Object() {sessionId, listHandle, noOfSoftwarePackages}, Me.GetSoftwarePackagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackagesCompleted(Me, New GetSoftwarePackagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwarePackageList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwarePackageList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwarePackageListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwarePackageListOperationCompleted Is Nothing) Then
                Me.CloseSoftwarePackageListOperationCompleted = AddressOf Me.OnCloseSoftwarePackageListOperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwarePackageList", New Object() {sessionId, listHandle}, Me.CloseSoftwarePackageListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwarePackageListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwarePackageListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwarePackageListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SealSoftwarePackages(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageIds() As String)
            Me.Invoke("SealSoftwarePackages", New Object() {sessionId, softwarePackageIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SealSoftwarePackagesAsync(ByVal sessionId As String, ByVal softwarePackageIds() As String)
            Me.SealSoftwarePackagesAsync(sessionId, softwarePackageIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SealSoftwarePackagesAsync(ByVal sessionId As String, ByVal softwarePackageIds() As String, ByVal userState As Object)
            If (Me.SealSoftwarePackagesOperationCompleted Is Nothing) Then
                Me.SealSoftwarePackagesOperationCompleted = AddressOf Me.OnSealSoftwarePackagesOperationCompleted
            End If
            Me.InvokeAsync("SealSoftwarePackages", New Object() {sessionId, softwarePackageIds}, Me.SealSoftwarePackagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnSealSoftwarePackagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.SealSoftwarePackagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SealSoftwarePackagesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnsealSoftwarePackages(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageIds() As String)
            Me.Invoke("UnsealSoftwarePackages", New Object() {sessionId, softwarePackageIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnsealSoftwarePackagesAsync(ByVal sessionId As String, ByVal softwarePackageIds() As String)
            Me.UnsealSoftwarePackagesAsync(sessionId, softwarePackageIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnsealSoftwarePackagesAsync(ByVal sessionId As String, ByVal softwarePackageIds() As String, ByVal userState As Object)
            If (Me.UnsealSoftwarePackagesOperationCompleted Is Nothing) Then
                Me.UnsealSoftwarePackagesOperationCompleted = AddressOf Me.OnUnsealSoftwarePackagesOperationCompleted
            End If
            Me.InvokeAsync("UnsealSoftwarePackages", New Object() {sessionId, softwarePackageIds}, Me.UnsealSoftwarePackagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnsealSoftwarePackagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnsealSoftwarePackagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnsealSoftwarePackagesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CopyElementsToSoftwarePackageVolume(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageVolumeId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageVolumeSubPath As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("fileSystemElementPathArray", IsNullable:=false)> ByVal fileSystemElementPath() As FileSystemElementPath)
            Me.Invoke("CopyElementsToSoftwarePackageVolume", New Object() {sessionId, softwarePackageVolumeId, softwarePackageVolumeSubPath, fileSystemElementPath})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CopyElementsToSoftwarePackageVolumeAsync(ByVal sessionId As String, ByVal softwarePackageVolumeId As String, ByVal softwarePackageVolumeSubPath As String, ByVal fileSystemElementPath() As FileSystemElementPath)
            Me.CopyElementsToSoftwarePackageVolumeAsync(sessionId, softwarePackageVolumeId, softwarePackageVolumeSubPath, fileSystemElementPath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CopyElementsToSoftwarePackageVolumeAsync(ByVal sessionId As String, ByVal softwarePackageVolumeId As String, ByVal softwarePackageVolumeSubPath As String, ByVal fileSystemElementPath() As FileSystemElementPath, ByVal userState As Object)
            If (Me.CopyElementsToSoftwarePackageVolumeOperationCompleted Is Nothing) Then
                Me.CopyElementsToSoftwarePackageVolumeOperationCompleted = AddressOf Me.OnCopyElementsToSoftwarePackageVolumeOperationCompleted
            End If
            Me.InvokeAsync("CopyElementsToSoftwarePackageVolume", New Object() {sessionId, softwarePackageVolumeId, softwarePackageVolumeSubPath, fileSystemElementPath}, Me.CopyElementsToSoftwarePackageVolumeOperationCompleted, userState)
        End Sub
        
        Private Sub OnCopyElementsToSoftwarePackageVolumeOperationCompleted(ByVal arg As Object)
            If (Not (Me.CopyElementsToSoftwarePackageVolumeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CopyElementsToSoftwarePackageVolumeCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CopyElementsToSoftwarePackageVolumeResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CopyElementsToSoftwarePackageVolume2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageVolumeId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageVolumeSubPath As String, ByVal sourceOnManager As Boolean, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("fileSystemElementPathArray", IsNullable:=false)> ByVal fileSystemElementPath() As FileSystemElementPath)
            Me.Invoke("CopyElementsToSoftwarePackageVolume2", New Object() {sessionId, softwarePackageVolumeId, softwarePackageVolumeSubPath, sourceOnManager, fileSystemElementPath})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CopyElementsToSoftwarePackageVolume2Async(ByVal sessionId As String, ByVal softwarePackageVolumeId As String, ByVal softwarePackageVolumeSubPath As String, ByVal sourceOnManager As Boolean, ByVal fileSystemElementPath() As FileSystemElementPath)
            Me.CopyElementsToSoftwarePackageVolume2Async(sessionId, softwarePackageVolumeId, softwarePackageVolumeSubPath, sourceOnManager, fileSystemElementPath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CopyElementsToSoftwarePackageVolume2Async(ByVal sessionId As String, ByVal softwarePackageVolumeId As String, ByVal softwarePackageVolumeSubPath As String, ByVal sourceOnManager As Boolean, ByVal fileSystemElementPath() As FileSystemElementPath, ByVal userState As Object)
            If (Me.CopyElementsToSoftwarePackageVolume2OperationCompleted Is Nothing) Then
                Me.CopyElementsToSoftwarePackageVolume2OperationCompleted = AddressOf Me.OnCopyElementsToSoftwarePackageVolume2OperationCompleted
            End If
            Me.InvokeAsync("CopyElementsToSoftwarePackageVolume2", New Object() {sessionId, softwarePackageVolumeId, softwarePackageVolumeSubPath, sourceOnManager, fileSystemElementPath}, Me.CopyElementsToSoftwarePackageVolume2OperationCompleted, userState)
        End Sub
        
        Private Sub OnCopyElementsToSoftwarePackageVolume2OperationCompleted(ByVal arg As Object)
            If (Not (Me.CopyElementsToSoftwarePackageVolume2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CopyElementsToSoftwarePackageVolume2Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteElementsFromSoftwarePackageVolume(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageVolumeId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageVolumeSubPath() As String)
            Me.Invoke("DeleteElementsFromSoftwarePackageVolume", New Object() {sessionId, softwarePackageVolumeId, softwarePackageVolumeSubPath})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteElementsFromSoftwarePackageVolumeAsync(ByVal sessionId As String, ByVal softwarePackageVolumeId As String, ByVal softwarePackageVolumeSubPath() As String)
            Me.DeleteElementsFromSoftwarePackageVolumeAsync(sessionId, softwarePackageVolumeId, softwarePackageVolumeSubPath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteElementsFromSoftwarePackageVolumeAsync(ByVal sessionId As String, ByVal softwarePackageVolumeId As String, ByVal softwarePackageVolumeSubPath() As String, ByVal userState As Object)
            If (Me.DeleteElementsFromSoftwarePackageVolumeOperationCompleted Is Nothing) Then
                Me.DeleteElementsFromSoftwarePackageVolumeOperationCompleted = AddressOf Me.OnDeleteElementsFromSoftwarePackageVolumeOperationCompleted
            End If
            Me.InvokeAsync("DeleteElementsFromSoftwarePackageVolume", New Object() {sessionId, softwarePackageVolumeId, softwarePackageVolumeSubPath}, Me.DeleteElementsFromSoftwarePackageVolumeOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteElementsFromSoftwarePackageVolumeOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteElementsFromSoftwarePackageVolumeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteElementsFromSoftwarePackageVolumeCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateActivateSoftwareJob(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageInstallProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobOrderProperties As CreateSoftwareJobOrderProperties, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageInstallationIds() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitGroupIds() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitIds() As String) As <System.Xml.Serialization.XmlElementAttribute("CreateActivateSoftwareJobReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateActivateSoftwareJob", New Object() {sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderProperties, softwareJobContainerId, softwarePackageInstallationIds, unitGroupIds, unitIds})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateActivateSoftwareJobAsync(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwareJobOrderProperties As CreateSoftwareJobOrderProperties, ByVal softwareJobContainerId As String, ByVal softwarePackageInstallationIds() As String, ByVal unitGroupIds() As String, ByVal unitIds() As String)
            Me.CreateActivateSoftwareJobAsync(sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderProperties, softwareJobContainerId, softwarePackageInstallationIds, unitGroupIds, unitIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateActivateSoftwareJobAsync(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwareJobOrderProperties As CreateSoftwareJobOrderProperties, ByVal softwareJobContainerId As String, ByVal softwarePackageInstallationIds() As String, ByVal unitGroupIds() As String, ByVal unitIds() As String, ByVal userState As Object)
            If (Me.CreateActivateSoftwareJobOperationCompleted Is Nothing) Then
                Me.CreateActivateSoftwareJobOperationCompleted = AddressOf Me.OnCreateActivateSoftwareJobOperationCompleted
            End If
            Me.InvokeAsync("CreateActivateSoftwareJob", New Object() {sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderProperties, softwareJobContainerId, softwarePackageInstallationIds, unitGroupIds, unitIds}, Me.CreateActivateSoftwareJobOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateActivateSoftwareJobOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateActivateSoftwareJobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateActivateSoftwareJobCompleted(Me, New CreateActivateSoftwareJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateConfigureSoftwareJob(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageInstallProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobOrderProperties As CreateSoftwareJobOrderProperties, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageInstallationIds() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitGroupIds() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitIds() As String) As <System.Xml.Serialization.XmlElementAttribute("CreateConfigureSoftwareJobReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateConfigureSoftwareJob", New Object() {sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderProperties, softwareJobContainerId, softwarePackageInstallationIds, unitGroupIds, unitIds})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateConfigureSoftwareJobAsync(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwareJobOrderProperties As CreateSoftwareJobOrderProperties, ByVal softwareJobContainerId As String, ByVal softwarePackageInstallationIds() As String, ByVal unitGroupIds() As String, ByVal unitIds() As String)
            Me.CreateConfigureSoftwareJobAsync(sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderProperties, softwareJobContainerId, softwarePackageInstallationIds, unitGroupIds, unitIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateConfigureSoftwareJobAsync(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwareJobOrderProperties As CreateSoftwareJobOrderProperties, ByVal softwareJobContainerId As String, ByVal softwarePackageInstallationIds() As String, ByVal unitGroupIds() As String, ByVal unitIds() As String, ByVal userState As Object)
            If (Me.CreateConfigureSoftwareJobOperationCompleted Is Nothing) Then
                Me.CreateConfigureSoftwareJobOperationCompleted = AddressOf Me.OnCreateConfigureSoftwareJobOperationCompleted
            End If
            Me.InvokeAsync("CreateConfigureSoftwareJob", New Object() {sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderProperties, softwareJobContainerId, softwarePackageInstallationIds, unitGroupIds, unitIds}, Me.CreateConfigureSoftwareJobOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateConfigureSoftwareJobOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateConfigureSoftwareJobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateConfigureSoftwareJobCompleted(Me, New CreateConfigureSoftwareJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateUninstallSoftwareJob(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageInstallProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobOrderProperties As CreateSoftwareJobOrderProperties, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageInstallationIds() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitGroupIds() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitIds() As String) As <System.Xml.Serialization.XmlElementAttribute("CreateUninstallSoftwareJobReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateUninstallSoftwareJob", New Object() {sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderProperties, softwareJobContainerId, softwarePackageInstallationIds, unitGroupIds, unitIds})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateUninstallSoftwareJobAsync(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwareJobOrderProperties As CreateSoftwareJobOrderProperties, ByVal softwareJobContainerId As String, ByVal softwarePackageInstallationIds() As String, ByVal unitGroupIds() As String, ByVal unitIds() As String)
            Me.CreateUninstallSoftwareJobAsync(sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderProperties, softwareJobContainerId, softwarePackageInstallationIds, unitGroupIds, unitIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateUninstallSoftwareJobAsync(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwareJobOrderProperties As CreateSoftwareJobOrderProperties, ByVal softwareJobContainerId As String, ByVal softwarePackageInstallationIds() As String, ByVal unitGroupIds() As String, ByVal unitIds() As String, ByVal userState As Object)
            If (Me.CreateUninstallSoftwareJobOperationCompleted Is Nothing) Then
                Me.CreateUninstallSoftwareJobOperationCompleted = AddressOf Me.OnCreateUninstallSoftwareJobOperationCompleted
            End If
            Me.InvokeAsync("CreateUninstallSoftwareJob", New Object() {sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderProperties, softwareJobContainerId, softwarePackageInstallationIds, unitGroupIds, unitIds}, Me.CreateUninstallSoftwareJobOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateUninstallSoftwareJobOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateUninstallSoftwareJobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateUninstallSoftwareJobCompleted(Me, New CreateUninstallSoftwareJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateInstallSoftwareJob(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobOrder As CreateSoftwareJobOrderProperties, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarejobContainerId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitGroupIds() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitIds() As String) As <System.Xml.Serialization.XmlElementAttribute("CreateInstallSoftwareJobReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateInstallSoftwareJob", New Object() {sessionId, softwarePackageProcedureId, softwareJobOrder, softwarejobContainerId, unitGroupIds, unitIds})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateInstallSoftwareJobAsync(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwareJobOrder As CreateSoftwareJobOrderProperties, ByVal softwarejobContainerId As String, ByVal unitGroupIds() As String, ByVal unitIds() As String)
            Me.CreateInstallSoftwareJobAsync(sessionId, softwarePackageProcedureId, softwareJobOrder, softwarejobContainerId, unitGroupIds, unitIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateInstallSoftwareJobAsync(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwareJobOrder As CreateSoftwareJobOrderProperties, ByVal softwarejobContainerId As String, ByVal unitGroupIds() As String, ByVal unitIds() As String, ByVal userState As Object)
            If (Me.CreateInstallSoftwareJobOperationCompleted Is Nothing) Then
                Me.CreateInstallSoftwareJobOperationCompleted = AddressOf Me.OnCreateInstallSoftwareJobOperationCompleted
            End If
            Me.InvokeAsync("CreateInstallSoftwareJob", New Object() {sessionId, softwarePackageProcedureId, softwareJobOrder, softwarejobContainerId, unitGroupIds, unitIds}, Me.CreateInstallSoftwareJobOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateInstallSoftwareJobOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateInstallSoftwareJobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateInstallSoftwareJobCompleted(Me, New CreateInstallSoftwareJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindSoftwareJob(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageInstallProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef softwareJobContainerId As String) As <System.Xml.Serialization.XmlElementAttribute("softwareJobId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("FindSoftwareJob", New Object() {sessionId, softwarePackageInstallProcedureId, softwarePackageProcedureId})
            softwareJobContainerId = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindSoftwareJobAsync(ByVal sessionId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwarePackageProcedureId As String)
            Me.FindSoftwareJobAsync(sessionId, softwarePackageInstallProcedureId, softwarePackageProcedureId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindSoftwareJobAsync(ByVal sessionId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwarePackageProcedureId As String, ByVal userState As Object)
            If (Me.FindSoftwareJobOperationCompleted Is Nothing) Then
                Me.FindSoftwareJobOperationCompleted = AddressOf Me.OnFindSoftwareJobOperationCompleted
            End If
            Me.InvokeAsync("FindSoftwareJob", New Object() {sessionId, softwarePackageInstallProcedureId, softwarePackageProcedureId}, Me.FindSoftwareJobOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindSoftwareJobOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindSoftwareJobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindSoftwareJobCompleted(Me, New FindSoftwareJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwareJobUnitSoftwareJobList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitSoftwareJobPropertiesRequired As UnitSoftwareJobPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfUnitSoftwareJobs As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfUnitSoftwareJobsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwareJobUnitSoftwareJobList", New Object() {sessionId, softwareJobId, unitSoftwareJobPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfUnitSoftwareJobs = CType(results(2),System.Nullable(Of Long))
            totalNoOfUnitSoftwareJobsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwareJobUnitSoftwareJobListAsync(ByVal sessionId As String, ByVal softwareJobId As String, ByVal unitSoftwareJobPropertiesRequired As UnitSoftwareJobPropertiesRequired)
            Me.OpenSoftwareJobUnitSoftwareJobListAsync(sessionId, softwareJobId, unitSoftwareJobPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwareJobUnitSoftwareJobListAsync(ByVal sessionId As String, ByVal softwareJobId As String, ByVal unitSoftwareJobPropertiesRequired As UnitSoftwareJobPropertiesRequired, ByVal userState As Object)
            If (Me.OpenSoftwareJobUnitSoftwareJobListOperationCompleted Is Nothing) Then
                Me.OpenSoftwareJobUnitSoftwareJobListOperationCompleted = AddressOf Me.OnOpenSoftwareJobUnitSoftwareJobListOperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwareJobUnitSoftwareJobList", New Object() {sessionId, softwareJobId, unitSoftwareJobPropertiesRequired}, Me.OpenSoftwareJobUnitSoftwareJobListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwareJobUnitSoftwareJobListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwareJobUnitSoftwareJobListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwareJobUnitSoftwareJobListCompleted(Me, New OpenSoftwareJobUnitSoftwareJobListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwareJobUnitSoftwareJobs(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobUnits As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwareJobUnitSoftwareJobsReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("unitSoftwareJobPropertiesArray", IsNullable:=false)> UnitSoftwareJobProperties()
            Dim results() As Object = Me.Invoke("GetSoftwareJobUnitSoftwareJobs", New Object() {sessionId, listHandle, noOfSoftwareJobUnits})
            Return CType(results(0),UnitSoftwareJobProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobUnitSoftwareJobsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobUnits As Long)
            Me.GetSoftwareJobUnitSoftwareJobsAsync(sessionId, listHandle, noOfSoftwareJobUnits, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobUnitSoftwareJobsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobUnits As Long, ByVal userState As Object)
            If (Me.GetSoftwareJobUnitSoftwareJobsOperationCompleted Is Nothing) Then
                Me.GetSoftwareJobUnitSoftwareJobsOperationCompleted = AddressOf Me.OnGetSoftwareJobUnitSoftwareJobsOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwareJobUnitSoftwareJobs", New Object() {sessionId, listHandle, noOfSoftwareJobUnits}, Me.GetSoftwareJobUnitSoftwareJobsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwareJobUnitSoftwareJobsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwareJobUnitSoftwareJobsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwareJobUnitSoftwareJobsCompleted(Me, New GetSoftwareJobUnitSoftwareJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwareJobUnitSoftwareJobList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwareJobUnitSoftwareJobList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwareJobUnitSoftwareJobListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwareJobUnitSoftwareJobListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwareJobUnitSoftwareJobListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwareJobUnitSoftwareJobListOperationCompleted Is Nothing) Then
                Me.CloseSoftwareJobUnitSoftwareJobListOperationCompleted = AddressOf Me.OnCloseSoftwareJobUnitSoftwareJobListOperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwareJobUnitSoftwareJobList", New Object() {sessionId, listHandle}, Me.CloseSoftwareJobUnitSoftwareJobListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwareJobUnitSoftwareJobListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwareJobUnitSoftwareJobListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwareJobUnitSoftwareJobListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwareJobList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobPropertiesRequired As SoftwareJobPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwareJobs As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwareJobsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwareJobList", New Object() {sessionId, softwareJobPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwareJobs = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwareJobsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwareJobListAsync(ByVal sessionId As String, ByVal softwareJobPropertiesRequired As SoftwareJobPropertiesRequired)
            Me.OpenSoftwareJobListAsync(sessionId, softwareJobPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwareJobListAsync(ByVal sessionId As String, ByVal softwareJobPropertiesRequired As SoftwareJobPropertiesRequired, ByVal userState As Object)
            If (Me.OpenSoftwareJobListOperationCompleted Is Nothing) Then
                Me.OpenSoftwareJobListOperationCompleted = AddressOf Me.OnOpenSoftwareJobListOperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwareJobList", New Object() {sessionId, softwareJobPropertiesRequired}, Me.OpenSoftwareJobListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwareJobListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwareJobListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwareJobListCompleted(Me, New OpenSoftwareJobListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwareJobs(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwareJobsReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwareJobPropertiesArray", IsNullable:=false)> SoftwareJobProperties()
            Dim results() As Object = Me.Invoke("GetSoftwareJobs", New Object() {sessionId, listHandle, noOfSoftwareJobs})
            Return CType(results(0),SoftwareJobProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long)
            Me.GetSoftwareJobsAsync(sessionId, listHandle, noOfSoftwareJobs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long, ByVal userState As Object)
            If (Me.GetSoftwareJobsOperationCompleted Is Nothing) Then
                Me.GetSoftwareJobsOperationCompleted = AddressOf Me.OnGetSoftwareJobsOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwareJobs", New Object() {sessionId, listHandle, noOfSoftwareJobs}, Me.GetSoftwareJobsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwareJobsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwareJobsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwareJobsCompleted(Me, New GetSoftwareJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwareJobList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwareJobList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwareJobListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwareJobListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwareJobListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwareJobListOperationCompleted Is Nothing) Then
                Me.CloseSoftwareJobListOperationCompleted = AddressOf Me.OnCloseSoftwareJobListOperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwareJobList", New Object() {sessionId, listHandle}, Me.CloseSoftwareJobListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwareJobListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwareJobListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwareJobListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwareJob(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobPropertiesRequired As SoftwareJobPropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("GetSoftwareJobReturn", IsNullable:=true)> SoftwareJobProperties
            Dim results() As Object = Me.Invoke("GetSoftwareJob", New Object() {sessionId, softwareJobId, softwareJobPropertiesRequired})
            Return CType(results(0),SoftwareJobProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobAsync(ByVal sessionId As String, ByVal softwareJobId As String, ByVal softwareJobPropertiesRequired As SoftwareJobPropertiesRequired)
            Me.GetSoftwareJobAsync(sessionId, softwareJobId, softwareJobPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobAsync(ByVal sessionId As String, ByVal softwareJobId As String, ByVal softwareJobPropertiesRequired As SoftwareJobPropertiesRequired, ByVal userState As Object)
            If (Me.GetSoftwareJobOperationCompleted Is Nothing) Then
                Me.GetSoftwareJobOperationCompleted = AddressOf Me.OnGetSoftwareJobOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwareJob", New Object() {sessionId, softwareJobId, softwareJobPropertiesRequired}, Me.GetSoftwareJobOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwareJobOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwareJobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwareJobCompleted(Me, New GetSoftwareJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSoftwareJob(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setSoftwareJobProperties As SetSoftwareJobProperties)
            Me.Invoke("SetSoftwareJob", New Object() {sessionId, setSoftwareJobProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwareJobAsync(ByVal sessionId As String, ByVal setSoftwareJobProperties As SetSoftwareJobProperties)
            Me.SetSoftwareJobAsync(sessionId, setSoftwareJobProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwareJobAsync(ByVal sessionId As String, ByVal setSoftwareJobProperties As SetSoftwareJobProperties, ByVal userState As Object)
            If (Me.SetSoftwareJobOperationCompleted Is Nothing) Then
                Me.SetSoftwareJobOperationCompleted = AddressOf Me.OnSetSoftwareJobOperationCompleted
            End If
            Me.InvokeAsync("SetSoftwareJob", New Object() {sessionId, setSoftwareJobProperties}, Me.SetSoftwareJobOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSoftwareJobOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSoftwareJobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSoftwareJobCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SealAndActivateSoftwareJobContainer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String)
            Me.Invoke("SealAndActivateSoftwareJobContainer", New Object() {sessionId, softwareJobContainerId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SealAndActivateSoftwareJobContainerAsync(ByVal sessionId As String, ByVal softwareJobContainerId As String)
            Me.SealAndActivateSoftwareJobContainerAsync(sessionId, softwareJobContainerId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SealAndActivateSoftwareJobContainerAsync(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal userState As Object)
            If (Me.SealAndActivateSoftwareJobContainerOperationCompleted Is Nothing) Then
                Me.SealAndActivateSoftwareJobContainerOperationCompleted = AddressOf Me.OnSealAndActivateSoftwareJobContainerOperationCompleted
            End If
            Me.InvokeAsync("SealAndActivateSoftwareJobContainer", New Object() {sessionId, softwareJobContainerId}, Me.SealAndActivateSoftwareJobContainerOperationCompleted, userState)
        End Sub
        
        Private Sub OnSealAndActivateSoftwareJobContainerOperationCompleted(ByVal arg As Object)
            If (Not (Me.SealAndActivateSoftwareJobContainerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SealAndActivateSoftwareJobContainerCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SealAndBuildSoftwareJobContainer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String)
            Me.Invoke("SealAndBuildSoftwareJobContainer", New Object() {sessionId, softwareJobContainerId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SealAndBuildSoftwareJobContainerAsync(ByVal sessionId As String, ByVal softwareJobContainerId As String)
            Me.SealAndBuildSoftwareJobContainerAsync(sessionId, softwareJobContainerId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SealAndBuildSoftwareJobContainerAsync(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal userState As Object)
            If (Me.SealAndBuildSoftwareJobContainerOperationCompleted Is Nothing) Then
                Me.SealAndBuildSoftwareJobContainerOperationCompleted = AddressOf Me.OnSealAndBuildSoftwareJobContainerOperationCompleted
            End If
            Me.InvokeAsync("SealAndBuildSoftwareJobContainer", New Object() {sessionId, softwareJobContainerId}, Me.SealAndBuildSoftwareJobContainerOperationCompleted, userState)
        End Sub
        
        Private Sub OnSealAndBuildSoftwareJobContainerOperationCompleted(ByVal arg As Object)
            If (Not (Me.SealAndBuildSoftwareJobContainerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SealAndBuildSoftwareJobContainerCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ActivateSoftwareJobContainer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String)
            Me.Invoke("ActivateSoftwareJobContainer", New Object() {sessionId, softwareJobContainerId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActivateSoftwareJobContainerAsync(ByVal sessionId As String, ByVal softwareJobContainerId As String)
            Me.ActivateSoftwareJobContainerAsync(sessionId, softwareJobContainerId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActivateSoftwareJobContainerAsync(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal userState As Object)
            If (Me.ActivateSoftwareJobContainerOperationCompleted Is Nothing) Then
                Me.ActivateSoftwareJobContainerOperationCompleted = AddressOf Me.OnActivateSoftwareJobContainerOperationCompleted
            End If
            Me.InvokeAsync("ActivateSoftwareJobContainer", New Object() {sessionId, softwareJobContainerId}, Me.ActivateSoftwareJobContainerOperationCompleted, userState)
        End Sub
        
        Private Sub OnActivateSoftwareJobContainerOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActivateSoftwareJobContainerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActivateSoftwareJobContainerCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub HaltDeliverySoftwareJobContainer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String)
            Me.Invoke("HaltDeliverySoftwareJobContainer", New Object() {sessionId, softwareJobContainerId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HaltDeliverySoftwareJobContainerAsync(ByVal sessionId As String, ByVal softwareJobContainerId As String)
            Me.HaltDeliverySoftwareJobContainerAsync(sessionId, softwareJobContainerId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HaltDeliverySoftwareJobContainerAsync(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal userState As Object)
            If (Me.HaltDeliverySoftwareJobContainerOperationCompleted Is Nothing) Then
                Me.HaltDeliverySoftwareJobContainerOperationCompleted = AddressOf Me.OnHaltDeliverySoftwareJobContainerOperationCompleted
            End If
            Me.InvokeAsync("HaltDeliverySoftwareJobContainer", New Object() {sessionId, softwareJobContainerId}, Me.HaltDeliverySoftwareJobContainerOperationCompleted, userState)
        End Sub
        
        Private Sub OnHaltDeliverySoftwareJobContainerOperationCompleted(ByVal arg As Object)
            If (Not (Me.HaltDeliverySoftwareJobContainerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HaltDeliverySoftwareJobContainerCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ResumeDeliverySoftwareJobContainer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String)
            Me.Invoke("ResumeDeliverySoftwareJobContainer", New Object() {sessionId, softwareJobContainerId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResumeDeliverySoftwareJobContainerAsync(ByVal sessionId As String, ByVal softwareJobContainerId As String)
            Me.ResumeDeliverySoftwareJobContainerAsync(sessionId, softwareJobContainerId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResumeDeliverySoftwareJobContainerAsync(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal userState As Object)
            If (Me.ResumeDeliverySoftwareJobContainerOperationCompleted Is Nothing) Then
                Me.ResumeDeliverySoftwareJobContainerOperationCompleted = AddressOf Me.OnResumeDeliverySoftwareJobContainerOperationCompleted
            End If
            Me.InvokeAsync("ResumeDeliverySoftwareJobContainer", New Object() {sessionId, softwareJobContainerId}, Me.ResumeDeliverySoftwareJobContainerOperationCompleted, userState)
        End Sub
        
        Private Sub OnResumeDeliverySoftwareJobContainerOperationCompleted(ByVal arg As Object)
            If (Not (Me.ResumeDeliverySoftwareJobContainerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ResumeDeliverySoftwareJobContainerCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSoftwarePackageGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroup As CreateSoftwarePackageGroupProperties) As <System.Xml.Serialization.XmlElementAttribute("CreateSoftwarePackageGroupReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSoftwarePackageGroup", New Object() {sessionId, softwarePackageGroup})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal softwarePackageGroup As CreateSoftwarePackageGroupProperties)
            Me.CreateSoftwarePackageGroupAsync(sessionId, softwarePackageGroup, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal softwarePackageGroup As CreateSoftwarePackageGroupProperties, ByVal userState As Object)
            If (Me.CreateSoftwarePackageGroupOperationCompleted Is Nothing) Then
                Me.CreateSoftwarePackageGroupOperationCompleted = AddressOf Me.OnCreateSoftwarePackageGroupOperationCompleted
            End If
            Me.InvokeAsync("CreateSoftwarePackageGroup", New Object() {sessionId, softwarePackageGroup}, Me.CreateSoftwarePackageGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSoftwarePackageGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSoftwarePackageGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSoftwarePackageGroupCompleted(Me, New CreateSoftwarePackageGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateCatalogSoftwarePackageGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal catalogSoftwarePackageGroup As CreateCatalogSoftwarePackageGroupProperties) As <System.Xml.Serialization.XmlElementAttribute("CreateCatalogSoftwarePackageGroupReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateCatalogSoftwarePackageGroup", New Object() {sessionId, catalogSoftwarePackageGroup})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateCatalogSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal catalogSoftwarePackageGroup As CreateCatalogSoftwarePackageGroupProperties)
            Me.CreateCatalogSoftwarePackageGroupAsync(sessionId, catalogSoftwarePackageGroup, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateCatalogSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal catalogSoftwarePackageGroup As CreateCatalogSoftwarePackageGroupProperties, ByVal userState As Object)
            If (Me.CreateCatalogSoftwarePackageGroupOperationCompleted Is Nothing) Then
                Me.CreateCatalogSoftwarePackageGroupOperationCompleted = AddressOf Me.OnCreateCatalogSoftwarePackageGroupOperationCompleted
            End If
            Me.InvokeAsync("CreateCatalogSoftwarePackageGroup", New Object() {sessionId, catalogSoftwarePackageGroup}, Me.CreateCatalogSoftwarePackageGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateCatalogSoftwarePackageGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateCatalogSoftwarePackageGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateCatalogSoftwarePackageGroupCompleted(Me, New CreateCatalogSoftwarePackageGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreatePatchRollup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal patchRollup As CreatePatchRollupProperties) As <System.Xml.Serialization.XmlElementAttribute("CreatePatchRollupReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreatePatchRollup", New Object() {sessionId, patchRollup})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreatePatchRollupAsync(ByVal sessionId As String, ByVal patchRollup As CreatePatchRollupProperties)
            Me.CreatePatchRollupAsync(sessionId, patchRollup, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreatePatchRollupAsync(ByVal sessionId As String, ByVal patchRollup As CreatePatchRollupProperties, ByVal userState As Object)
            If (Me.CreatePatchRollupOperationCompleted Is Nothing) Then
                Me.CreatePatchRollupOperationCompleted = AddressOf Me.OnCreatePatchRollupOperationCompleted
            End If
            Me.InvokeAsync("CreatePatchRollup", New Object() {sessionId, patchRollup}, Me.CreatePatchRollupOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreatePatchRollupOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreatePatchRollupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreatePatchRollupCompleted(Me, New CreatePatchRollupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSoftwarePackageProcedureGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureGroup As CreateSoftwarePackageProcedureGroupProperties) As <System.Xml.Serialization.XmlElementAttribute("CreateSoftwarePackageProcedureGroupReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSoftwarePackageProcedureGroup", New Object() {sessionId, softwarePackageProcedureGroup})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePackageProcedureGroupAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroup As CreateSoftwarePackageProcedureGroupProperties)
            Me.CreateSoftwarePackageProcedureGroupAsync(sessionId, softwarePackageProcedureGroup, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePackageProcedureGroupAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroup As CreateSoftwarePackageProcedureGroupProperties, ByVal userState As Object)
            If (Me.CreateSoftwarePackageProcedureGroupOperationCompleted Is Nothing) Then
                Me.CreateSoftwarePackageProcedureGroupOperationCompleted = AddressOf Me.OnCreateSoftwarePackageProcedureGroupOperationCompleted
            End If
            Me.InvokeAsync("CreateSoftwarePackageProcedureGroup", New Object() {sessionId, softwarePackageProcedureGroup}, Me.CreateSoftwarePackageProcedureGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSoftwarePackageProcedureGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSoftwarePackageProcedureGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSoftwarePackageProcedureGroupCompleted(Me, New CreateSoftwarePackageProcedureGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSoftwareJobContainer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarejobContainer As CreateSoftwareJobContainerProperties) As <System.Xml.Serialization.XmlElementAttribute("CreateSoftwareJobContainerReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSoftwareJobContainer", New Object() {sessionId, softwarejobContainer})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwareJobContainerAsync(ByVal sessionId As String, ByVal softwarejobContainer As CreateSoftwareJobContainerProperties)
            Me.CreateSoftwareJobContainerAsync(sessionId, softwarejobContainer, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwareJobContainerAsync(ByVal sessionId As String, ByVal softwarejobContainer As CreateSoftwareJobContainerProperties, ByVal userState As Object)
            If (Me.CreateSoftwareJobContainerOperationCompleted Is Nothing) Then
                Me.CreateSoftwareJobContainerOperationCompleted = AddressOf Me.OnCreateSoftwareJobContainerOperationCompleted
            End If
            Me.InvokeAsync("CreateSoftwareJobContainer", New Object() {sessionId, softwarejobContainer}, Me.CreateSoftwareJobContainerOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSoftwareJobContainerOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSoftwareJobContainerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSoftwareJobContainerCompleted(Me, New CreateSoftwareJobContainerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSoftwarePolicy(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicy As CreateSoftwarePolicyProperties) As <System.Xml.Serialization.XmlElementAttribute("CreateSoftwarePolicyReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSoftwarePolicy", New Object() {sessionId, softwarePolicy})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePolicyAsync(ByVal sessionId As String, ByVal softwarePolicy As CreateSoftwarePolicyProperties)
            Me.CreateSoftwarePolicyAsync(sessionId, softwarePolicy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePolicyAsync(ByVal sessionId As String, ByVal softwarePolicy As CreateSoftwarePolicyProperties, ByVal userState As Object)
            If (Me.CreateSoftwarePolicyOperationCompleted Is Nothing) Then
                Me.CreateSoftwarePolicyOperationCompleted = AddressOf Me.OnCreateSoftwarePolicyOperationCompleted
            End If
            Me.InvokeAsync("CreateSoftwarePolicy", New Object() {sessionId, softwarePolicy}, Me.CreateSoftwarePolicyOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSoftwarePolicyOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSoftwarePolicyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSoftwarePolicyCompleted(Me, New CreateSoftwarePolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSoftwarePackageGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroup As SetSoftwarePackageGroupProperties)
            Me.Invoke("SetSoftwarePackageGroup", New Object() {sessionId, softwarePackageGroup})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal softwarePackageGroup As SetSoftwarePackageGroupProperties)
            Me.SetSoftwarePackageGroupAsync(sessionId, softwarePackageGroup, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal softwarePackageGroup As SetSoftwarePackageGroupProperties, ByVal userState As Object)
            If (Me.SetSoftwarePackageGroupOperationCompleted Is Nothing) Then
                Me.SetSoftwarePackageGroupOperationCompleted = AddressOf Me.OnSetSoftwarePackageGroupOperationCompleted
            End If
            Me.InvokeAsync("SetSoftwarePackageGroup", New Object() {sessionId, softwarePackageGroup}, Me.SetSoftwarePackageGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSoftwarePackageGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSoftwarePackageGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSoftwarePackageGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetCatalogSoftwarePackageGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal catalogSoftwarePackageGroup As SetCatalogSoftwarePackageGroupProperties)
            Me.Invoke("SetCatalogSoftwarePackageGroup", New Object() {sessionId, catalogSoftwarePackageGroup})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetCatalogSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal catalogSoftwarePackageGroup As SetCatalogSoftwarePackageGroupProperties)
            Me.SetCatalogSoftwarePackageGroupAsync(sessionId, catalogSoftwarePackageGroup, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetCatalogSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal catalogSoftwarePackageGroup As SetCatalogSoftwarePackageGroupProperties, ByVal userState As Object)
            If (Me.SetCatalogSoftwarePackageGroupOperationCompleted Is Nothing) Then
                Me.SetCatalogSoftwarePackageGroupOperationCompleted = AddressOf Me.OnSetCatalogSoftwarePackageGroupOperationCompleted
            End If
            Me.InvokeAsync("SetCatalogSoftwarePackageGroup", New Object() {sessionId, catalogSoftwarePackageGroup}, Me.SetCatalogSoftwarePackageGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetCatalogSoftwarePackageGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetCatalogSoftwarePackageGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetCatalogSoftwarePackageGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSoftwarePackageProcedureGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureGroup As SetSoftwarePackageProcedureGroupProperties)
            Me.Invoke("SetSoftwarePackageProcedureGroup", New Object() {sessionId, softwarePackageProcedureGroup})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePackageProcedureGroupAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroup As SetSoftwarePackageProcedureGroupProperties)
            Me.SetSoftwarePackageProcedureGroupAsync(sessionId, softwarePackageProcedureGroup, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePackageProcedureGroupAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroup As SetSoftwarePackageProcedureGroupProperties, ByVal userState As Object)
            If (Me.SetSoftwarePackageProcedureGroupOperationCompleted Is Nothing) Then
                Me.SetSoftwarePackageProcedureGroupOperationCompleted = AddressOf Me.OnSetSoftwarePackageProcedureGroupOperationCompleted
            End If
            Me.InvokeAsync("SetSoftwarePackageProcedureGroup", New Object() {sessionId, softwarePackageProcedureGroup}, Me.SetSoftwarePackageProcedureGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSoftwarePackageProcedureGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSoftwarePackageProcedureGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSoftwarePackageProcedureGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSoftwareJobContainer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainer As SetSoftwareJobContainerProperties)
            Me.Invoke("SetSoftwareJobContainer", New Object() {sessionId, softwareJobContainer})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwareJobContainerAsync(ByVal sessionId As String, ByVal softwareJobContainer As SetSoftwareJobContainerProperties)
            Me.SetSoftwareJobContainerAsync(sessionId, softwareJobContainer, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwareJobContainerAsync(ByVal sessionId As String, ByVal softwareJobContainer As SetSoftwareJobContainerProperties, ByVal userState As Object)
            If (Me.SetSoftwareJobContainerOperationCompleted Is Nothing) Then
                Me.SetSoftwareJobContainerOperationCompleted = AddressOf Me.OnSetSoftwareJobContainerOperationCompleted
            End If
            Me.InvokeAsync("SetSoftwareJobContainer", New Object() {sessionId, softwareJobContainer}, Me.SetSoftwareJobContainerOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSoftwareJobContainerOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSoftwareJobContainerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSoftwareJobContainerCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSoftwarePolicy(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicy As SetSoftwarePolicyProperties)
            Me.Invoke("SetSoftwarePolicy", New Object() {sessionId, softwarePolicy})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePolicyAsync(ByVal sessionId As String, ByVal softwarePolicy As SetSoftwarePolicyProperties)
            Me.SetSoftwarePolicyAsync(sessionId, softwarePolicy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePolicyAsync(ByVal sessionId As String, ByVal softwarePolicy As SetSoftwarePolicyProperties, ByVal userState As Object)
            If (Me.SetSoftwarePolicyOperationCompleted Is Nothing) Then
                Me.SetSoftwarePolicyOperationCompleted = AddressOf Me.OnSetSoftwarePolicyOperationCompleted
            End If
            Me.InvokeAsync("SetSoftwarePolicy", New Object() {sessionId, softwarePolicy}, Me.SetSoftwarePolicyOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSoftwarePolicyOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSoftwarePolicyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSoftwarePolicyCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupPropertiesRequired As SoftwarePackageGroupPropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("GetSoftwarePackageGroupReturn", IsNullable:=true)> SoftwarePackageGroupProperties
            Dim results() As Object = Me.Invoke("GetSoftwarePackageGroup", New Object() {sessionId, softwarePackageGroupId, softwarePackageGroupPropertiesRequired})
            Return CType(results(0),SoftwarePackageGroupProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackageGroupPropertiesRequired As SoftwarePackageGroupPropertiesRequired)
            Me.GetSoftwarePackageGroupAsync(sessionId, softwarePackageGroupId, softwarePackageGroupPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackageGroupPropertiesRequired As SoftwarePackageGroupPropertiesRequired, ByVal userState As Object)
            If (Me.GetSoftwarePackageGroupOperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageGroupOperationCompleted = AddressOf Me.OnGetSoftwarePackageGroupOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageGroup", New Object() {sessionId, softwarePackageGroupId, softwarePackageGroupPropertiesRequired}, Me.GetSoftwarePackageGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageGroupCompleted(Me, New GetSoftwarePackageGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageProcedureGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureGroupPropertiesRequired As SoftwarePackageProcedureGroupPropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("GetSoftwarePackageProcedureGroupReturn", IsNullable:=true)> SoftwarePackageProcedureGroupProperties
            Dim results() As Object = Me.Invoke("GetSoftwarePackageProcedureGroup", New Object() {sessionId, softwarePackageProcedureGroupId, softwarePackageProcedureGroupPropertiesRequired})
            Return CType(results(0),SoftwarePackageProcedureGroupProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureGroupAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroupId As String, ByVal softwarePackageProcedureGroupPropertiesRequired As SoftwarePackageProcedureGroupPropertiesRequired)
            Me.GetSoftwarePackageProcedureGroupAsync(sessionId, softwarePackageProcedureGroupId, softwarePackageProcedureGroupPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureGroupAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroupId As String, ByVal softwarePackageProcedureGroupPropertiesRequired As SoftwarePackageProcedureGroupPropertiesRequired, ByVal userState As Object)
            If (Me.GetSoftwarePackageProcedureGroupOperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageProcedureGroupOperationCompleted = AddressOf Me.OnGetSoftwarePackageProcedureGroupOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageProcedureGroup", New Object() {sessionId, softwarePackageProcedureGroupId, softwarePackageProcedureGroupPropertiesRequired}, Me.GetSoftwarePackageProcedureGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageProcedureGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageProcedureGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageProcedureGroupCompleted(Me, New GetSoftwarePackageProcedureGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwareJobContainer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerPropertiesRequired As SoftwareJobContainerPropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("GetSoftwareJobContainerReturn", IsNullable:=true)> SoftwareJobContainerProperties
            Dim results() As Object = Me.Invoke("GetSoftwareJobContainer", New Object() {sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired})
            Return CType(results(0),SoftwareJobContainerProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobContainerAsync(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainerPropertiesRequired As SoftwareJobContainerPropertiesRequired)
            Me.GetSoftwareJobContainerAsync(sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobContainerAsync(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainerPropertiesRequired As SoftwareJobContainerPropertiesRequired, ByVal userState As Object)
            If (Me.GetSoftwareJobContainerOperationCompleted Is Nothing) Then
                Me.GetSoftwareJobContainerOperationCompleted = AddressOf Me.OnGetSoftwareJobContainerOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwareJobContainer", New Object() {sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired}, Me.GetSoftwareJobContainerOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwareJobContainerOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwareJobContainerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwareJobContainerCompleted(Me, New GetSoftwareJobContainerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePolicy(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyPropertiesRequired As SoftwarePolicyPropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("GetSoftwarePolicyReturn", IsNullable:=true)> SoftwarePolicyProperties
            Dim results() As Object = Me.Invoke("GetSoftwarePolicy", New Object() {sessionId, softwarePolicyId, softwarePolicyPropertiesRequired})
            Return CType(results(0),SoftwarePolicyProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePolicyAsync(ByVal sessionId As String, ByVal softwarePolicyId As String, ByVal softwarePolicyPropertiesRequired As SoftwarePolicyPropertiesRequired)
            Me.GetSoftwarePolicyAsync(sessionId, softwarePolicyId, softwarePolicyPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePolicyAsync(ByVal sessionId As String, ByVal softwarePolicyId As String, ByVal softwarePolicyPropertiesRequired As SoftwarePolicyPropertiesRequired, ByVal userState As Object)
            If (Me.GetSoftwarePolicyOperationCompleted Is Nothing) Then
                Me.GetSoftwarePolicyOperationCompleted = AddressOf Me.OnGetSoftwarePolicyOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePolicy", New Object() {sessionId, softwarePolicyId, softwarePolicyPropertiesRequired}, Me.GetSoftwarePolicyOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePolicyOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePolicyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePolicyCompleted(Me, New GetSoftwarePolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteSoftwarePackageGroups(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageGroupIds() As String)
            Me.Invoke("DeleteSoftwarePackageGroups", New Object() {sessionId, softwarePackageGroupIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwarePackageGroupsAsync(ByVal sessionId As String, ByVal softwarePackageGroupIds() As String)
            Me.DeleteSoftwarePackageGroupsAsync(sessionId, softwarePackageGroupIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwarePackageGroupsAsync(ByVal sessionId As String, ByVal softwarePackageGroupIds() As String, ByVal userState As Object)
            If (Me.DeleteSoftwarePackageGroupsOperationCompleted Is Nothing) Then
                Me.DeleteSoftwarePackageGroupsOperationCompleted = AddressOf Me.OnDeleteSoftwarePackageGroupsOperationCompleted
            End If
            Me.InvokeAsync("DeleteSoftwarePackageGroups", New Object() {sessionId, softwarePackageGroupIds}, Me.DeleteSoftwarePackageGroupsOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSoftwarePackageGroupsOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSoftwarePackageGroupsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSoftwarePackageGroupsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteSoftwarePackageProcedureGroups(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageProcedureGroupIds() As String)
            Me.Invoke("DeleteSoftwarePackageProcedureGroups", New Object() {sessionId, softwarePackageProcedureGroupIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwarePackageProcedureGroupsAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroupIds() As String)
            Me.DeleteSoftwarePackageProcedureGroupsAsync(sessionId, softwarePackageProcedureGroupIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwarePackageProcedureGroupsAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroupIds() As String, ByVal userState As Object)
            If (Me.DeleteSoftwarePackageProcedureGroupsOperationCompleted Is Nothing) Then
                Me.DeleteSoftwarePackageProcedureGroupsOperationCompleted = AddressOf Me.OnDeleteSoftwarePackageProcedureGroupsOperationCompleted
            End If
            Me.InvokeAsync("DeleteSoftwarePackageProcedureGroups", New Object() {sessionId, softwarePackageProcedureGroupIds}, Me.DeleteSoftwarePackageProcedureGroupsOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSoftwarePackageProcedureGroupsOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSoftwarePackageProcedureGroupsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSoftwarePackageProcedureGroupsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteSoftwareJobContainers(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwareJobContainerIds() As String)
            Me.Invoke("DeleteSoftwareJobContainers", New Object() {sessionId, softwareJobContainerIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwareJobContainersAsync(ByVal sessionId As String, ByVal softwareJobContainerIds() As String)
            Me.DeleteSoftwareJobContainersAsync(sessionId, softwareJobContainerIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwareJobContainersAsync(ByVal sessionId As String, ByVal softwareJobContainerIds() As String, ByVal userState As Object)
            If (Me.DeleteSoftwareJobContainersOperationCompleted Is Nothing) Then
                Me.DeleteSoftwareJobContainersOperationCompleted = AddressOf Me.OnDeleteSoftwareJobContainersOperationCompleted
            End If
            Me.InvokeAsync("DeleteSoftwareJobContainers", New Object() {sessionId, softwareJobContainerIds}, Me.DeleteSoftwareJobContainersOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSoftwareJobContainersOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSoftwareJobContainersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSoftwareJobContainersCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteSoftwarePolicies(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePolicyIds() As String)
            Me.Invoke("DeleteSoftwarePolicies", New Object() {sessionId, softwarePolicyIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwarePoliciesAsync(ByVal sessionId As String, ByVal softwarePolicyIds() As String)
            Me.DeleteSoftwarePoliciesAsync(sessionId, softwarePolicyIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwarePoliciesAsync(ByVal sessionId As String, ByVal softwarePolicyIds() As String, ByVal userState As Object)
            If (Me.DeleteSoftwarePoliciesOperationCompleted Is Nothing) Then
                Me.DeleteSoftwarePoliciesOperationCompleted = AddressOf Me.OnDeleteSoftwarePoliciesOperationCompleted
            End If
            Me.InvokeAsync("DeleteSoftwarePolicies", New Object() {sessionId, softwarePolicyIds}, Me.DeleteSoftwarePoliciesOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSoftwarePoliciesOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSoftwarePoliciesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSoftwarePoliciesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteSoftwareItems(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable:=false)> ByVal softwareObjectIds() As Item)
            Me.Invoke("DeleteSoftwareItems", New Object() {sessionId, softwareObjectIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwareItemsAsync(ByVal sessionId As String, ByVal softwareObjectIds() As Item)
            Me.DeleteSoftwareItemsAsync(sessionId, softwareObjectIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwareItemsAsync(ByVal sessionId As String, ByVal softwareObjectIds() As Item, ByVal userState As Object)
            If (Me.DeleteSoftwareItemsOperationCompleted Is Nothing) Then
                Me.DeleteSoftwareItemsOperationCompleted = AddressOf Me.OnDeleteSoftwareItemsOperationCompleted
            End If
            Me.InvokeAsync("DeleteSoftwareItems", New Object() {sessionId, softwareObjectIds}, Me.DeleteSoftwareItemsOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSoftwareItemsOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSoftwareItemsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSoftwareItemsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EvaluateSoftwarePolicy(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyId As String, ByVal evaluateType As SoftwarePolicyEvaluationType)
            Me.Invoke("EvaluateSoftwarePolicy", New Object() {sessionId, softwarePolicyId, evaluateType})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EvaluateSoftwarePolicyAsync(ByVal sessionId As String, ByVal softwarePolicyId As String, ByVal evaluateType As SoftwarePolicyEvaluationType)
            Me.EvaluateSoftwarePolicyAsync(sessionId, softwarePolicyId, evaluateType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EvaluateSoftwarePolicyAsync(ByVal sessionId As String, ByVal softwarePolicyId As String, ByVal evaluateType As SoftwarePolicyEvaluationType, ByVal userState As Object)
            If (Me.EvaluateSoftwarePolicyOperationCompleted Is Nothing) Then
                Me.EvaluateSoftwarePolicyOperationCompleted = AddressOf Me.OnEvaluateSoftwarePolicyOperationCompleted
            End If
            Me.InvokeAsync("EvaluateSoftwarePolicy", New Object() {sessionId, softwarePolicyId, evaluateType}, Me.EvaluateSoftwarePolicyOperationCompleted, userState)
        End Sub
        
        Private Sub OnEvaluateSoftwarePolicyOperationCompleted(ByVal arg As Object)
            If (Not (Me.EvaluateSoftwarePolicyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EvaluateSoftwarePolicyCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmptySoftwarePackageGroups(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageGroupIds() As String)
            Me.Invoke("EmptySoftwarePackageGroups", New Object() {sessionId, softwarePackageGroupIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmptySoftwarePackageGroupsAsync(ByVal sessionId As String, ByVal softwarePackageGroupIds() As String)
            Me.EmptySoftwarePackageGroupsAsync(sessionId, softwarePackageGroupIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmptySoftwarePackageGroupsAsync(ByVal sessionId As String, ByVal softwarePackageGroupIds() As String, ByVal userState As Object)
            If (Me.EmptySoftwarePackageGroupsOperationCompleted Is Nothing) Then
                Me.EmptySoftwarePackageGroupsOperationCompleted = AddressOf Me.OnEmptySoftwarePackageGroupsOperationCompleted
            End If
            Me.InvokeAsync("EmptySoftwarePackageGroups", New Object() {sessionId, softwarePackageGroupIds}, Me.EmptySoftwarePackageGroupsOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmptySoftwarePackageGroupsOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmptySoftwarePackageGroupsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmptySoftwarePackageGroupsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EmptySoftwarePackageProcedureGroups(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageProcedureGroupIds() As String)
            Me.Invoke("EmptySoftwarePackageProcedureGroups", New Object() {sessionId, softwarePackageProcedureGroupIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmptySoftwarePackageProcedureGroupsAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroupIds() As String)
            Me.EmptySoftwarePackageProcedureGroupsAsync(sessionId, softwarePackageProcedureGroupIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmptySoftwarePackageProcedureGroupsAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroupIds() As String, ByVal userState As Object)
            If (Me.EmptySoftwarePackageProcedureGroupsOperationCompleted Is Nothing) Then
                Me.EmptySoftwarePackageProcedureGroupsOperationCompleted = AddressOf Me.OnEmptySoftwarePackageProcedureGroupsOperationCompleted
            End If
            Me.InvokeAsync("EmptySoftwarePackageProcedureGroups", New Object() {sessionId, softwarePackageProcedureGroupIds}, Me.EmptySoftwarePackageProcedureGroupsOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmptySoftwarePackageProcedureGroupsOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmptySoftwarePackageProcedureGroupsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmptySoftwarePackageProcedureGroupsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SealSoftwareJobContainers(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwareJobContainerIds() As String)
            Me.Invoke("SealSoftwareJobContainers", New Object() {sessionId, softwareJobContainerIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SealSoftwareJobContainersAsync(ByVal sessionId As String, ByVal softwareJobContainerIds() As String)
            Me.SealSoftwareJobContainersAsync(sessionId, softwareJobContainerIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SealSoftwareJobContainersAsync(ByVal sessionId As String, ByVal softwareJobContainerIds() As String, ByVal userState As Object)
            If (Me.SealSoftwareJobContainersOperationCompleted Is Nothing) Then
                Me.SealSoftwareJobContainersOperationCompleted = AddressOf Me.OnSealSoftwareJobContainersOperationCompleted
            End If
            Me.InvokeAsync("SealSoftwareJobContainers", New Object() {sessionId, softwareJobContainerIds}, Me.SealSoftwareJobContainersOperationCompleted, userState)
        End Sub
        
        Private Sub OnSealSoftwareJobContainersOperationCompleted(ByVal arg As Object)
            If (Not (Me.SealSoftwareJobContainersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SealSoftwareJobContainersCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SealSoftwarePolicies(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePolicyIds() As String)
            Me.Invoke("SealSoftwarePolicies", New Object() {sessionId, softwarePolicyIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SealSoftwarePoliciesAsync(ByVal sessionId As String, ByVal softwarePolicyIds() As String)
            Me.SealSoftwarePoliciesAsync(sessionId, softwarePolicyIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SealSoftwarePoliciesAsync(ByVal sessionId As String, ByVal softwarePolicyIds() As String, ByVal userState As Object)
            If (Me.SealSoftwarePoliciesOperationCompleted Is Nothing) Then
                Me.SealSoftwarePoliciesOperationCompleted = AddressOf Me.OnSealSoftwarePoliciesOperationCompleted
            End If
            Me.InvokeAsync("SealSoftwarePolicies", New Object() {sessionId, softwarePolicyIds}, Me.SealSoftwarePoliciesOperationCompleted, userState)
        End Sub
        
        Private Sub OnSealSoftwarePoliciesOperationCompleted(ByVal arg As Object)
            If (Not (Me.SealSoftwarePoliciesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SealSoftwarePoliciesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnsealSoftwareJobContainers(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwareJobContainerIds() As String)
            Me.Invoke("UnsealSoftwareJobContainers", New Object() {sessionId, softwareJobContainerIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnsealSoftwareJobContainersAsync(ByVal sessionId As String, ByVal softwareJobContainerIds() As String)
            Me.UnsealSoftwareJobContainersAsync(sessionId, softwareJobContainerIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnsealSoftwareJobContainersAsync(ByVal sessionId As String, ByVal softwareJobContainerIds() As String, ByVal userState As Object)
            If (Me.UnsealSoftwareJobContainersOperationCompleted Is Nothing) Then
                Me.UnsealSoftwareJobContainersOperationCompleted = AddressOf Me.OnUnsealSoftwareJobContainersOperationCompleted
            End If
            Me.InvokeAsync("UnsealSoftwareJobContainers", New Object() {sessionId, softwareJobContainerIds}, Me.UnsealSoftwareJobContainersOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnsealSoftwareJobContainersOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnsealSoftwareJobContainersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnsealSoftwareJobContainersCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnsealSoftwarePolicies(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePolicyIds() As String)
            Me.Invoke("UnsealSoftwarePolicies", New Object() {sessionId, softwarePolicyIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnsealSoftwarePoliciesAsync(ByVal sessionId As String, ByVal softwarePolicyIds() As String)
            Me.UnsealSoftwarePoliciesAsync(sessionId, softwarePolicyIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnsealSoftwarePoliciesAsync(ByVal sessionId As String, ByVal softwarePolicyIds() As String, ByVal userState As Object)
            If (Me.UnsealSoftwarePoliciesOperationCompleted Is Nothing) Then
                Me.UnsealSoftwarePoliciesOperationCompleted = AddressOf Me.OnUnsealSoftwarePoliciesOperationCompleted
            End If
            Me.InvokeAsync("UnsealSoftwarePolicies", New Object() {sessionId, softwarePolicyIds}, Me.UnsealSoftwarePoliciesOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnsealSoftwarePoliciesOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnsealSoftwarePoliciesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnsealSoftwarePoliciesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindSoftwarePackageGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal parentSoftwarePackageGroupId As String, ByVal parentSoftwarePackageGroupScope As SoftwarePackageGroupScope, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupName As String) As <System.Xml.Serialization.XmlElementAttribute("FindSoftwarePackageGroupReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("FindSoftwarePackageGroup", New Object() {sessionId, parentSoftwarePackageGroupId, parentSoftwarePackageGroupScope, softwarePackageGroupName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal parentSoftwarePackageGroupId As String, ByVal parentSoftwarePackageGroupScope As SoftwarePackageGroupScope, ByVal softwarePackageGroupName As String)
            Me.FindSoftwarePackageGroupAsync(sessionId, parentSoftwarePackageGroupId, parentSoftwarePackageGroupScope, softwarePackageGroupName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal parentSoftwarePackageGroupId As String, ByVal parentSoftwarePackageGroupScope As SoftwarePackageGroupScope, ByVal softwarePackageGroupName As String, ByVal userState As Object)
            If (Me.FindSoftwarePackageGroupOperationCompleted Is Nothing) Then
                Me.FindSoftwarePackageGroupOperationCompleted = AddressOf Me.OnFindSoftwarePackageGroupOperationCompleted
            End If
            Me.InvokeAsync("FindSoftwarePackageGroup", New Object() {sessionId, parentSoftwarePackageGroupId, parentSoftwarePackageGroupScope, softwarePackageGroupName}, Me.FindSoftwarePackageGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindSoftwarePackageGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindSoftwarePackageGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindSoftwarePackageGroupCompleted(Me, New FindSoftwarePackageGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindSoftwarePackageProcedureGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal parentSoftwarePackageProcedureGroupId As String, ByVal parentSoftwarePackageProcedureGroupScope As SoftwarePackageProcedureGroupScope, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureGroupName As String) As <System.Xml.Serialization.XmlElementAttribute("FindSoftwarePackageProcedureGroupReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("FindSoftwarePackageProcedureGroup", New Object() {sessionId, parentSoftwarePackageProcedureGroupId, parentSoftwarePackageProcedureGroupScope, softwarePackageProcedureGroupName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindSoftwarePackageProcedureGroupAsync(ByVal sessionId As String, ByVal parentSoftwarePackageProcedureGroupId As String, ByVal parentSoftwarePackageProcedureGroupScope As SoftwarePackageProcedureGroupScope, ByVal softwarePackageProcedureGroupName As String)
            Me.FindSoftwarePackageProcedureGroupAsync(sessionId, parentSoftwarePackageProcedureGroupId, parentSoftwarePackageProcedureGroupScope, softwarePackageProcedureGroupName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindSoftwarePackageProcedureGroupAsync(ByVal sessionId As String, ByVal parentSoftwarePackageProcedureGroupId As String, ByVal parentSoftwarePackageProcedureGroupScope As SoftwarePackageProcedureGroupScope, ByVal softwarePackageProcedureGroupName As String, ByVal userState As Object)
            If (Me.FindSoftwarePackageProcedureGroupOperationCompleted Is Nothing) Then
                Me.FindSoftwarePackageProcedureGroupOperationCompleted = AddressOf Me.OnFindSoftwarePackageProcedureGroupOperationCompleted
            End If
            Me.InvokeAsync("FindSoftwarePackageProcedureGroup", New Object() {sessionId, parentSoftwarePackageProcedureGroupId, parentSoftwarePackageProcedureGroupScope, softwarePackageProcedureGroupName}, Me.FindSoftwarePackageProcedureGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindSoftwarePackageProcedureGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindSoftwarePackageProcedureGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindSoftwarePackageProcedureGroupCompleted(Me, New FindSoftwarePackageProcedureGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindSoftwareJobContainer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal parentSoftwareJobContainerId As String, ByVal parentSoftwareJobContainerScope As SoftwareJobContainerScope, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerName As String) As <System.Xml.Serialization.XmlElementAttribute("FindSoftwareJobContainerReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("FindSoftwareJobContainer", New Object() {sessionId, parentSoftwareJobContainerId, parentSoftwareJobContainerScope, softwareJobContainerName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindSoftwareJobContainerAsync(ByVal sessionId As String, ByVal parentSoftwareJobContainerId As String, ByVal parentSoftwareJobContainerScope As SoftwareJobContainerScope, ByVal softwareJobContainerName As String)
            Me.FindSoftwareJobContainerAsync(sessionId, parentSoftwareJobContainerId, parentSoftwareJobContainerScope, softwareJobContainerName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindSoftwareJobContainerAsync(ByVal sessionId As String, ByVal parentSoftwareJobContainerId As String, ByVal parentSoftwareJobContainerScope As SoftwareJobContainerScope, ByVal softwareJobContainerName As String, ByVal userState As Object)
            If (Me.FindSoftwareJobContainerOperationCompleted Is Nothing) Then
                Me.FindSoftwareJobContainerOperationCompleted = AddressOf Me.OnFindSoftwareJobContainerOperationCompleted
            End If
            Me.InvokeAsync("FindSoftwareJobContainer", New Object() {sessionId, parentSoftwareJobContainerId, parentSoftwareJobContainerScope, softwareJobContainerName}, Me.FindSoftwareJobContainerOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindSoftwareJobContainerOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindSoftwareJobContainerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindSoftwareJobContainerCompleted(Me, New FindSoftwareJobContainerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindSoftwarePolicy(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal parentSoftwarePolicyId As String, ByVal parentSoftwarePolicyScope As SoftwarePolicyScope, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyName As String) As <System.Xml.Serialization.XmlElementAttribute("FindSoftwarePolicyReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("FindSoftwarePolicy", New Object() {sessionId, parentSoftwarePolicyId, parentSoftwarePolicyScope, softwarePolicyName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindSoftwarePolicyAsync(ByVal sessionId As String, ByVal parentSoftwarePolicyId As String, ByVal parentSoftwarePolicyScope As SoftwarePolicyScope, ByVal softwarePolicyName As String)
            Me.FindSoftwarePolicyAsync(sessionId, parentSoftwarePolicyId, parentSoftwarePolicyScope, softwarePolicyName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindSoftwarePolicyAsync(ByVal sessionId As String, ByVal parentSoftwarePolicyId As String, ByVal parentSoftwarePolicyScope As SoftwarePolicyScope, ByVal softwarePolicyName As String, ByVal userState As Object)
            If (Me.FindSoftwarePolicyOperationCompleted Is Nothing) Then
                Me.FindSoftwarePolicyOperationCompleted = AddressOf Me.OnFindSoftwarePolicyOperationCompleted
            End If
            Me.InvokeAsync("FindSoftwarePolicy", New Object() {sessionId, parentSoftwarePolicyId, parentSoftwarePolicyScope, softwarePolicyName}, Me.FindSoftwarePolicyOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindSoftwarePolicyOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindSoftwarePolicyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindSoftwarePolicyCompleted(Me, New FindSoftwarePolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwarePackageGroupList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupPropertiesRequired As SoftwarePackageGroupPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwarePackageGroups As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwarePackageGroupsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwarePackageGroupList", New Object() {sessionId, softwarePackageGroupId, softwarePackageGroupPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwarePackageGroups = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwarePackageGroupsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageGroupListAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackageGroupPropertiesRequired As SoftwarePackageGroupPropertiesRequired)
            Me.OpenSoftwarePackageGroupListAsync(sessionId, softwarePackageGroupId, softwarePackageGroupPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageGroupListAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackageGroupPropertiesRequired As SoftwarePackageGroupPropertiesRequired, ByVal userState As Object)
            If (Me.OpenSoftwarePackageGroupListOperationCompleted Is Nothing) Then
                Me.OpenSoftwarePackageGroupListOperationCompleted = AddressOf Me.OnOpenSoftwarePackageGroupListOperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwarePackageGroupList", New Object() {sessionId, softwarePackageGroupId, softwarePackageGroupPropertiesRequired}, Me.OpenSoftwarePackageGroupListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwarePackageGroupListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwarePackageGroupListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwarePackageGroupListCompleted(Me, New OpenSoftwarePackageGroupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageGroups(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageGroups As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwarePackageGroupsReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageGroupPropertiesArray", IsNullable:=false)> SoftwarePackageGroupProperties()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageGroups", New Object() {sessionId, listHandle, noOfSoftwarePackageGroups})
            Return CType(results(0),SoftwarePackageGroupProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageGroupsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageGroups As Long)
            Me.GetSoftwarePackageGroupsAsync(sessionId, listHandle, noOfSoftwarePackageGroups, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageGroupsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageGroups As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageGroupsOperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageGroupsOperationCompleted = AddressOf Me.OnGetSoftwarePackageGroupsOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageGroups", New Object() {sessionId, listHandle, noOfSoftwarePackageGroups}, Me.GetSoftwarePackageGroupsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageGroupsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageGroupsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageGroupsCompleted(Me, New GetSoftwarePackageGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwarePackageGroupList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwarePackageGroupList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageGroupListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwarePackageGroupListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageGroupListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwarePackageGroupListOperationCompleted Is Nothing) Then
                Me.CloseSoftwarePackageGroupListOperationCompleted = AddressOf Me.OnCloseSoftwarePackageGroupListOperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwarePackageGroupList", New Object() {sessionId, listHandle}, Me.CloseSoftwarePackageGroupListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwarePackageGroupListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwarePackageGroupListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwarePackageGroupListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwarePackageProcedureGroupList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureGroupPropertiesRequired As SoftwarePackageProcedureGroupPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwarePackageProcedureGroups As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwarePackageProcedureGroupsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwarePackageProcedureGroupList", New Object() {sessionId, softwarePackageGroupId, softwarePackageProcedureGroupPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwarePackageProcedureGroups = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwarePackageProcedureGroupsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageProcedureGroupListAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackageProcedureGroupPropertiesRequired As SoftwarePackageProcedureGroupPropertiesRequired)
            Me.OpenSoftwarePackageProcedureGroupListAsync(sessionId, softwarePackageGroupId, softwarePackageProcedureGroupPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageProcedureGroupListAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackageProcedureGroupPropertiesRequired As SoftwarePackageProcedureGroupPropertiesRequired, ByVal userState As Object)
            If (Me.OpenSoftwarePackageProcedureGroupListOperationCompleted Is Nothing) Then
                Me.OpenSoftwarePackageProcedureGroupListOperationCompleted = AddressOf Me.OnOpenSoftwarePackageProcedureGroupListOperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwarePackageProcedureGroupList", New Object() {sessionId, softwarePackageGroupId, softwarePackageProcedureGroupPropertiesRequired}, Me.OpenSoftwarePackageProcedureGroupListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwarePackageProcedureGroupListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwarePackageProcedureGroupListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwarePackageProcedureGroupListCompleted(Me, New OpenSoftwarePackageProcedureGroupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageProcedureGroups(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedureGroups As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwarePackageProcedureGroupsReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageProcedureGroupPropertiesArray", IsNullable:=false)> SoftwarePackageProcedureGroupProperties()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageProcedureGroups", New Object() {sessionId, listHandle, noOfSoftwarePackageProcedureGroups})
            Return CType(results(0),SoftwarePackageProcedureGroupProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureGroupsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedureGroups As Long)
            Me.GetSoftwarePackageProcedureGroupsAsync(sessionId, listHandle, noOfSoftwarePackageProcedureGroups, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureGroupsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedureGroups As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageProcedureGroupsOperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageProcedureGroupsOperationCompleted = AddressOf Me.OnGetSoftwarePackageProcedureGroupsOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageProcedureGroups", New Object() {sessionId, listHandle, noOfSoftwarePackageProcedureGroups}, Me.GetSoftwarePackageProcedureGroupsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageProcedureGroupsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageProcedureGroupsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageProcedureGroupsCompleted(Me, New GetSoftwarePackageProcedureGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwarePackageProcedureGroupList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwarePackageProcedureGroupList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageProcedureGroupListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwarePackageProcedureGroupListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageProcedureGroupListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwarePackageProcedureGroupListOperationCompleted Is Nothing) Then
                Me.CloseSoftwarePackageProcedureGroupListOperationCompleted = AddressOf Me.OnCloseSoftwarePackageProcedureGroupListOperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwarePackageProcedureGroupList", New Object() {sessionId, listHandle}, Me.CloseSoftwarePackageProcedureGroupListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwarePackageProcedureGroupListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwarePackageProcedureGroupListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwarePackageProcedureGroupListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwareJobContainerList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerPropertiesRequired As SoftwareJobContainerPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwareJobContainers As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwareJobContainersSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwareJobContainerList", New Object() {sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwareJobContainers = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwareJobContainersSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwareJobContainerListAsync(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainerPropertiesRequired As SoftwareJobContainerPropertiesRequired)
            Me.OpenSoftwareJobContainerListAsync(sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwareJobContainerListAsync(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainerPropertiesRequired As SoftwareJobContainerPropertiesRequired, ByVal userState As Object)
            If (Me.OpenSoftwareJobContainerListOperationCompleted Is Nothing) Then
                Me.OpenSoftwareJobContainerListOperationCompleted = AddressOf Me.OnOpenSoftwareJobContainerListOperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwareJobContainerList", New Object() {sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired}, Me.OpenSoftwareJobContainerListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwareJobContainerListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwareJobContainerListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwareJobContainerListCompleted(Me, New OpenSoftwareJobContainerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwareJobContainers(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobContainers As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwareJobContainersReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwareJobContainerPropertiesArray", IsNullable:=false)> SoftwareJobContainerProperties()
            Dim results() As Object = Me.Invoke("GetSoftwareJobContainers", New Object() {sessionId, listHandle, noOfSoftwareJobContainers})
            Return CType(results(0),SoftwareJobContainerProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobContainersAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobContainers As Long)
            Me.GetSoftwareJobContainersAsync(sessionId, listHandle, noOfSoftwareJobContainers, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobContainersAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobContainers As Long, ByVal userState As Object)
            If (Me.GetSoftwareJobContainersOperationCompleted Is Nothing) Then
                Me.GetSoftwareJobContainersOperationCompleted = AddressOf Me.OnGetSoftwareJobContainersOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwareJobContainers", New Object() {sessionId, listHandle, noOfSoftwareJobContainers}, Me.GetSoftwareJobContainersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwareJobContainersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwareJobContainersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwareJobContainersCompleted(Me, New GetSoftwareJobContainersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwareJobContainerList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwareJobContainerList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwareJobContainerListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwareJobContainerListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwareJobContainerListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwareJobContainerListOperationCompleted Is Nothing) Then
                Me.CloseSoftwareJobContainerListOperationCompleted = AddressOf Me.OnCloseSoftwareJobContainerListOperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwareJobContainerList", New Object() {sessionId, listHandle}, Me.CloseSoftwareJobContainerListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwareJobContainerListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwareJobContainerListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwareJobContainerListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwarePolicyList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyPropertiesRequired As SoftwarePolicyPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwarePolicies As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwarePoliciesSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwarePolicyList", New Object() {sessionId, softwarePolicyId, softwarePolicyPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwarePolicies = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwarePoliciesSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePolicyListAsync(ByVal sessionId As String, ByVal softwarePolicyId As String, ByVal softwarePolicyPropertiesRequired As SoftwarePolicyPropertiesRequired)
            Me.OpenSoftwarePolicyListAsync(sessionId, softwarePolicyId, softwarePolicyPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePolicyListAsync(ByVal sessionId As String, ByVal softwarePolicyId As String, ByVal softwarePolicyPropertiesRequired As SoftwarePolicyPropertiesRequired, ByVal userState As Object)
            If (Me.OpenSoftwarePolicyListOperationCompleted Is Nothing) Then
                Me.OpenSoftwarePolicyListOperationCompleted = AddressOf Me.OnOpenSoftwarePolicyListOperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwarePolicyList", New Object() {sessionId, softwarePolicyId, softwarePolicyPropertiesRequired}, Me.OpenSoftwarePolicyListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwarePolicyListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwarePolicyListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwarePolicyListCompleted(Me, New OpenSoftwarePolicyListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePolicies(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePolicies As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwarePoliciesReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePolicyPropertiesArray", IsNullable:=false)> SoftwarePolicyProperties()
            Dim results() As Object = Me.Invoke("GetSoftwarePolicies", New Object() {sessionId, listHandle, noOfSoftwarePolicies})
            Return CType(results(0),SoftwarePolicyProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePoliciesAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePolicies As Long)
            Me.GetSoftwarePoliciesAsync(sessionId, listHandle, noOfSoftwarePolicies, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePoliciesAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePolicies As Long, ByVal userState As Object)
            If (Me.GetSoftwarePoliciesOperationCompleted Is Nothing) Then
                Me.GetSoftwarePoliciesOperationCompleted = AddressOf Me.OnGetSoftwarePoliciesOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePolicies", New Object() {sessionId, listHandle, noOfSoftwarePolicies}, Me.GetSoftwarePoliciesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePoliciesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePoliciesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePoliciesCompleted(Me, New GetSoftwarePoliciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwarePolicyList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwarePolicyList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePolicyListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwarePolicyListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePolicyListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwarePolicyListOperationCompleted Is Nothing) Then
                Me.CloseSoftwarePolicyListOperationCompleted = AddressOf Me.OnCloseSoftwarePolicyListOperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwarePolicyList", New Object() {sessionId, listHandle}, Me.CloseSoftwarePolicyListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwarePolicyListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwarePolicyListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwarePolicyListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwarePackageGroupListRecursive(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupPropertiesRequired As SoftwarePackageGroupPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwarePackageGroups As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwarePackageGroupsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwarePackageGroupListRecursive", New Object() {sessionId, softwarePackageGroupId, softwarePackageGroupPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwarePackageGroups = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwarePackageGroupsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageGroupListRecursiveAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackageGroupPropertiesRequired As SoftwarePackageGroupPropertiesRequired)
            Me.OpenSoftwarePackageGroupListRecursiveAsync(sessionId, softwarePackageGroupId, softwarePackageGroupPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageGroupListRecursiveAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackageGroupPropertiesRequired As SoftwarePackageGroupPropertiesRequired, ByVal userState As Object)
            If (Me.OpenSoftwarePackageGroupListRecursiveOperationCompleted Is Nothing) Then
                Me.OpenSoftwarePackageGroupListRecursiveOperationCompleted = AddressOf Me.OnOpenSoftwarePackageGroupListRecursiveOperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwarePackageGroupListRecursive", New Object() {sessionId, softwarePackageGroupId, softwarePackageGroupPropertiesRequired}, Me.OpenSoftwarePackageGroupListRecursiveOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwarePackageGroupListRecursiveOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwarePackageGroupListRecursiveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwarePackageGroupListRecursiveCompleted(Me, New OpenSoftwarePackageGroupListRecursiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageGroupsRecursive(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageGroups As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwarePackageGroupsRecursiveReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageGroupPropertiesArray", IsNullable:=false)> SoftwarePackageGroupProperties()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageGroupsRecursive", New Object() {sessionId, listHandle, noOfSoftwarePackageGroups})
            Return CType(results(0),SoftwarePackageGroupProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageGroupsRecursiveAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageGroups As Long)
            Me.GetSoftwarePackageGroupsRecursiveAsync(sessionId, listHandle, noOfSoftwarePackageGroups, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageGroupsRecursiveAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageGroups As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageGroupsRecursiveOperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageGroupsRecursiveOperationCompleted = AddressOf Me.OnGetSoftwarePackageGroupsRecursiveOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageGroupsRecursive", New Object() {sessionId, listHandle, noOfSoftwarePackageGroups}, Me.GetSoftwarePackageGroupsRecursiveOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageGroupsRecursiveOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageGroupsRecursiveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageGroupsRecursiveCompleted(Me, New GetSoftwarePackageGroupsRecursiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwarePackageGroupListRecursive(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwarePackageGroupListRecursive", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageGroupListRecursiveAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwarePackageGroupListRecursiveAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageGroupListRecursiveAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwarePackageGroupListRecursiveOperationCompleted Is Nothing) Then
                Me.CloseSoftwarePackageGroupListRecursiveOperationCompleted = AddressOf Me.OnCloseSoftwarePackageGroupListRecursiveOperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwarePackageGroupListRecursive", New Object() {sessionId, listHandle}, Me.CloseSoftwarePackageGroupListRecursiveOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwarePackageGroupListRecursiveOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwarePackageGroupListRecursiveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwarePackageGroupListRecursiveCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwarePackageProcedureGroupListRecursive(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureGroupPropertiesRequired As SoftwarePackageProcedureGroupPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwarePackageProcedureGroups As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwarePackageProcedureGroupsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwarePackageProcedureGroupListRecursive", New Object() {sessionId, softwarePackageGroupId, softwarePackageProcedureGroupPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwarePackageProcedureGroups = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwarePackageProcedureGroupsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageProcedureGroupListRecursiveAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackageProcedureGroupPropertiesRequired As SoftwarePackageProcedureGroupPropertiesRequired)
            Me.OpenSoftwarePackageProcedureGroupListRecursiveAsync(sessionId, softwarePackageGroupId, softwarePackageProcedureGroupPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageProcedureGroupListRecursiveAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackageProcedureGroupPropertiesRequired As SoftwarePackageProcedureGroupPropertiesRequired, ByVal userState As Object)
            If (Me.OpenSoftwarePackageProcedureGroupListRecursiveOperationCompleted Is Nothing) Then
                Me.OpenSoftwarePackageProcedureGroupListRecursiveOperationCompleted = AddressOf Me.OnOpenSoftwarePackageProcedureGroupListRecursiveOperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwarePackageProcedureGroupListRecursive", New Object() {sessionId, softwarePackageGroupId, softwarePackageProcedureGroupPropertiesRequired}, Me.OpenSoftwarePackageProcedureGroupListRecursiveOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwarePackageProcedureGroupListRecursiveOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwarePackageProcedureGroupListRecursiveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwarePackageProcedureGroupListRecursiveCompleted(Me, New OpenSoftwarePackageProcedureGroupListRecursiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageProcedureGroupsRecursive(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedureGroups As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwarePackageProcedureGroupsRecursiveReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageProcedureGroupPropertiesArray", IsNullable:=false)> SoftwarePackageProcedureGroupProperties()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageProcedureGroupsRecursive", New Object() {sessionId, listHandle, noOfSoftwarePackageProcedureGroups})
            Return CType(results(0),SoftwarePackageProcedureGroupProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureGroupsRecursiveAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedureGroups As Long)
            Me.GetSoftwarePackageProcedureGroupsRecursiveAsync(sessionId, listHandle, noOfSoftwarePackageProcedureGroups, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureGroupsRecursiveAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedureGroups As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageProcedureGroupsRecursiveOperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageProcedureGroupsRecursiveOperationCompleted = AddressOf Me.OnGetSoftwarePackageProcedureGroupsRecursiveOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageProcedureGroupsRecursive", New Object() {sessionId, listHandle, noOfSoftwarePackageProcedureGroups}, Me.GetSoftwarePackageProcedureGroupsRecursiveOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageProcedureGroupsRecursiveOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageProcedureGroupsRecursiveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageProcedureGroupsRecursiveCompleted(Me, New GetSoftwarePackageProcedureGroupsRecursiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwarePackageProcedureGroupListRecursive(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwarePackageProcedureGroupListRecursive", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageProcedureGroupListRecursiveAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwarePackageProcedureGroupListRecursiveAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageProcedureGroupListRecursiveAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwarePackageProcedureGroupListRecursiveOperationCompleted Is Nothing) Then
                Me.CloseSoftwarePackageProcedureGroupListRecursiveOperationCompleted = AddressOf Me.OnCloseSoftwarePackageProcedureGroupListRecursiveOperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwarePackageProcedureGroupListRecursive", New Object() {sessionId, listHandle}, Me.CloseSoftwarePackageProcedureGroupListRecursiveOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwarePackageProcedureGroupListRecursiveOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwarePackageProcedureGroupListRecursiveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwarePackageProcedureGroupListRecursiveCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwareJobContainerListRecursive(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerPropertiesRequired As SoftwareJobContainerPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwareJobContainers As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwareJobContainersSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwareJobContainerListRecursive", New Object() {sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwareJobContainers = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwareJobContainersSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwareJobContainerListRecursiveAsync(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainerPropertiesRequired As SoftwareJobContainerPropertiesRequired)
            Me.OpenSoftwareJobContainerListRecursiveAsync(sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwareJobContainerListRecursiveAsync(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainerPropertiesRequired As SoftwareJobContainerPropertiesRequired, ByVal userState As Object)
            If (Me.OpenSoftwareJobContainerListRecursiveOperationCompleted Is Nothing) Then
                Me.OpenSoftwareJobContainerListRecursiveOperationCompleted = AddressOf Me.OnOpenSoftwareJobContainerListRecursiveOperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwareJobContainerListRecursive", New Object() {sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired}, Me.OpenSoftwareJobContainerListRecursiveOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwareJobContainerListRecursiveOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwareJobContainerListRecursiveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwareJobContainerListRecursiveCompleted(Me, New OpenSoftwareJobContainerListRecursiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwareJobContainersRecursive(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobContainers As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwareJobContainersRecursiveReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwareJobContainerPropertiesArray", IsNullable:=false)> SoftwareJobContainerProperties()
            Dim results() As Object = Me.Invoke("GetSoftwareJobContainersRecursive", New Object() {sessionId, listHandle, noOfSoftwareJobContainers})
            Return CType(results(0),SoftwareJobContainerProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobContainersRecursiveAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobContainers As Long)
            Me.GetSoftwareJobContainersRecursiveAsync(sessionId, listHandle, noOfSoftwareJobContainers, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobContainersRecursiveAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobContainers As Long, ByVal userState As Object)
            If (Me.GetSoftwareJobContainersRecursiveOperationCompleted Is Nothing) Then
                Me.GetSoftwareJobContainersRecursiveOperationCompleted = AddressOf Me.OnGetSoftwareJobContainersRecursiveOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwareJobContainersRecursive", New Object() {sessionId, listHandle, noOfSoftwareJobContainers}, Me.GetSoftwareJobContainersRecursiveOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwareJobContainersRecursiveOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwareJobContainersRecursiveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwareJobContainersRecursiveCompleted(Me, New GetSoftwareJobContainersRecursiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwareJobContainerListRecursive(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwareJobContainerListRecursive", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwareJobContainerListRecursiveAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwareJobContainerListRecursiveAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwareJobContainerListRecursiveAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwareJobContainerListRecursiveOperationCompleted Is Nothing) Then
                Me.CloseSoftwareJobContainerListRecursiveOperationCompleted = AddressOf Me.OnCloseSoftwareJobContainerListRecursiveOperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwareJobContainerListRecursive", New Object() {sessionId, listHandle}, Me.CloseSoftwareJobContainerListRecursiveOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwareJobContainerListRecursiveOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwareJobContainerListRecursiveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwareJobContainerListRecursiveCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwarePolicyListRecursive(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyPropertiesRequired As SoftwarePolicyPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwarePolicies As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwarePoliciesSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwarePolicyListRecursive", New Object() {sessionId, softwarePolicyId, softwarePolicyPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwarePolicies = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwarePoliciesSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePolicyListRecursiveAsync(ByVal sessionId As String, ByVal softwarePolicyId As String, ByVal softwarePolicyPropertiesRequired As SoftwarePolicyPropertiesRequired)
            Me.OpenSoftwarePolicyListRecursiveAsync(sessionId, softwarePolicyId, softwarePolicyPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePolicyListRecursiveAsync(ByVal sessionId As String, ByVal softwarePolicyId As String, ByVal softwarePolicyPropertiesRequired As SoftwarePolicyPropertiesRequired, ByVal userState As Object)
            If (Me.OpenSoftwarePolicyListRecursiveOperationCompleted Is Nothing) Then
                Me.OpenSoftwarePolicyListRecursiveOperationCompleted = AddressOf Me.OnOpenSoftwarePolicyListRecursiveOperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwarePolicyListRecursive", New Object() {sessionId, softwarePolicyId, softwarePolicyPropertiesRequired}, Me.OpenSoftwarePolicyListRecursiveOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwarePolicyListRecursiveOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwarePolicyListRecursiveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwarePolicyListRecursiveCompleted(Me, New OpenSoftwarePolicyListRecursiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePoliciesRecursive(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePolicies As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwarePoliciesRecursiveReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePolicyPropertiesArray", IsNullable:=false)> SoftwarePolicyProperties()
            Dim results() As Object = Me.Invoke("GetSoftwarePoliciesRecursive", New Object() {sessionId, listHandle, noOfSoftwarePolicies})
            Return CType(results(0),SoftwarePolicyProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePoliciesRecursiveAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePolicies As Long)
            Me.GetSoftwarePoliciesRecursiveAsync(sessionId, listHandle, noOfSoftwarePolicies, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePoliciesRecursiveAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePolicies As Long, ByVal userState As Object)
            If (Me.GetSoftwarePoliciesRecursiveOperationCompleted Is Nothing) Then
                Me.GetSoftwarePoliciesRecursiveOperationCompleted = AddressOf Me.OnGetSoftwarePoliciesRecursiveOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePoliciesRecursive", New Object() {sessionId, listHandle, noOfSoftwarePolicies}, Me.GetSoftwarePoliciesRecursiveOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePoliciesRecursiveOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePoliciesRecursiveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePoliciesRecursiveCompleted(Me, New GetSoftwarePoliciesRecursiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwarePolicyListRecursive(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwarePolicyListRecursive", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePolicyListRecursiveAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwarePolicyListRecursiveAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePolicyListRecursiveAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwarePolicyListRecursiveOperationCompleted Is Nothing) Then
                Me.CloseSoftwarePolicyListRecursiveOperationCompleted = AddressOf Me.OnCloseSoftwarePolicyListRecursiveOperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwarePolicyListRecursive", New Object() {sessionId, listHandle}, Me.CloseSoftwarePolicyListRecursiveOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwarePolicyListRecursiveOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwarePolicyListRecursiveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwarePolicyListRecursiveCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenParentSoftwarePackageGroupList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupPropertiesRequired As SoftwarePackageGroupPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfParentSoftwarePackageGroups As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfParentSoftwarePackageGroupsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenParentSoftwarePackageGroupList", New Object() {sessionId, softwarePackageGroupId, softwarePackageGroupPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfParentSoftwarePackageGroups = CType(results(2),System.Nullable(Of Long))
            totalNoOfParentSoftwarePackageGroupsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenParentSoftwarePackageGroupListAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackageGroupPropertiesRequired As SoftwarePackageGroupPropertiesRequired)
            Me.OpenParentSoftwarePackageGroupListAsync(sessionId, softwarePackageGroupId, softwarePackageGroupPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenParentSoftwarePackageGroupListAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackageGroupPropertiesRequired As SoftwarePackageGroupPropertiesRequired, ByVal userState As Object)
            If (Me.OpenParentSoftwarePackageGroupListOperationCompleted Is Nothing) Then
                Me.OpenParentSoftwarePackageGroupListOperationCompleted = AddressOf Me.OnOpenParentSoftwarePackageGroupListOperationCompleted
            End If
            Me.InvokeAsync("OpenParentSoftwarePackageGroupList", New Object() {sessionId, softwarePackageGroupId, softwarePackageGroupPropertiesRequired}, Me.OpenParentSoftwarePackageGroupListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenParentSoftwarePackageGroupListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenParentSoftwarePackageGroupListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenParentSoftwarePackageGroupListCompleted(Me, New OpenParentSoftwarePackageGroupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetParentSoftwarePackageGroups(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfParentSoftwarePackageGroups As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetParentSoftwarePackageGroupsReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageGroupPropertiesArray", IsNullable:=false)> SoftwarePackageGroupProperties()
            Dim results() As Object = Me.Invoke("GetParentSoftwarePackageGroups", New Object() {sessionId, listHandle, noOfParentSoftwarePackageGroups})
            Return CType(results(0),SoftwarePackageGroupProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetParentSoftwarePackageGroupsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfParentSoftwarePackageGroups As Long)
            Me.GetParentSoftwarePackageGroupsAsync(sessionId, listHandle, noOfParentSoftwarePackageGroups, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetParentSoftwarePackageGroupsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfParentSoftwarePackageGroups As Long, ByVal userState As Object)
            If (Me.GetParentSoftwarePackageGroupsOperationCompleted Is Nothing) Then
                Me.GetParentSoftwarePackageGroupsOperationCompleted = AddressOf Me.OnGetParentSoftwarePackageGroupsOperationCompleted
            End If
            Me.InvokeAsync("GetParentSoftwarePackageGroups", New Object() {sessionId, listHandle, noOfParentSoftwarePackageGroups}, Me.GetParentSoftwarePackageGroupsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetParentSoftwarePackageGroupsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetParentSoftwarePackageGroupsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetParentSoftwarePackageGroupsCompleted(Me, New GetParentSoftwarePackageGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseParentSoftwarePackageGroupList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseParentSoftwarePackageGroupList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseParentSoftwarePackageGroupListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseParentSoftwarePackageGroupListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseParentSoftwarePackageGroupListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseParentSoftwarePackageGroupListOperationCompleted Is Nothing) Then
                Me.CloseParentSoftwarePackageGroupListOperationCompleted = AddressOf Me.OnCloseParentSoftwarePackageGroupListOperationCompleted
            End If
            Me.InvokeAsync("CloseParentSoftwarePackageGroupList", New Object() {sessionId, listHandle}, Me.CloseParentSoftwarePackageGroupListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseParentSoftwarePackageGroupListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseParentSoftwarePackageGroupListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseParentSoftwarePackageGroupListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenParentSoftwarePackageProcedureGroupList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupPropertiesRequired As SoftwarePackageGroupPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfParentSoftwarePackageGroups As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfParentSoftwarePackageGroupsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenParentSoftwarePackageProcedureGroupList", New Object() {sessionId, softwarePackageProcedureGroupId, softwarePackageGroupPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfParentSoftwarePackageGroups = CType(results(2),System.Nullable(Of Long))
            totalNoOfParentSoftwarePackageGroupsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenParentSoftwarePackageProcedureGroupListAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroupId As String, ByVal softwarePackageGroupPropertiesRequired As SoftwarePackageGroupPropertiesRequired)
            Me.OpenParentSoftwarePackageProcedureGroupListAsync(sessionId, softwarePackageProcedureGroupId, softwarePackageGroupPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenParentSoftwarePackageProcedureGroupListAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroupId As String, ByVal softwarePackageGroupPropertiesRequired As SoftwarePackageGroupPropertiesRequired, ByVal userState As Object)
            If (Me.OpenParentSoftwarePackageProcedureGroupListOperationCompleted Is Nothing) Then
                Me.OpenParentSoftwarePackageProcedureGroupListOperationCompleted = AddressOf Me.OnOpenParentSoftwarePackageProcedureGroupListOperationCompleted
            End If
            Me.InvokeAsync("OpenParentSoftwarePackageProcedureGroupList", New Object() {sessionId, softwarePackageProcedureGroupId, softwarePackageGroupPropertiesRequired}, Me.OpenParentSoftwarePackageProcedureGroupListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenParentSoftwarePackageProcedureGroupListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenParentSoftwarePackageProcedureGroupListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenParentSoftwarePackageProcedureGroupListCompleted(Me, New OpenParentSoftwarePackageProcedureGroupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetParentSoftwarePackageProcedureGroups(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfParentSoftwarePackageGroups As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetParentSoftwarePackageProcedureGroupsReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageGroupPropertiesArray", IsNullable:=false)> SoftwarePackageGroupProperties()
            Dim results() As Object = Me.Invoke("GetParentSoftwarePackageProcedureGroups", New Object() {sessionId, listHandle, noOfParentSoftwarePackageGroups})
            Return CType(results(0),SoftwarePackageGroupProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetParentSoftwarePackageProcedureGroupsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfParentSoftwarePackageGroups As Long)
            Me.GetParentSoftwarePackageProcedureGroupsAsync(sessionId, listHandle, noOfParentSoftwarePackageGroups, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetParentSoftwarePackageProcedureGroupsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfParentSoftwarePackageGroups As Long, ByVal userState As Object)
            If (Me.GetParentSoftwarePackageProcedureGroupsOperationCompleted Is Nothing) Then
                Me.GetParentSoftwarePackageProcedureGroupsOperationCompleted = AddressOf Me.OnGetParentSoftwarePackageProcedureGroupsOperationCompleted
            End If
            Me.InvokeAsync("GetParentSoftwarePackageProcedureGroups", New Object() {sessionId, listHandle, noOfParentSoftwarePackageGroups}, Me.GetParentSoftwarePackageProcedureGroupsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetParentSoftwarePackageProcedureGroupsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetParentSoftwarePackageProcedureGroupsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetParentSoftwarePackageProcedureGroupsCompleted(Me, New GetParentSoftwarePackageProcedureGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseParentSoftwarePackageProcedureGroupList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseParentSoftwarePackageProcedureGroupList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseParentSoftwarePackageProcedureGroupListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseParentSoftwarePackageProcedureGroupListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseParentSoftwarePackageProcedureGroupListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseParentSoftwarePackageProcedureGroupListOperationCompleted Is Nothing) Then
                Me.CloseParentSoftwarePackageProcedureGroupListOperationCompleted = AddressOf Me.OnCloseParentSoftwarePackageProcedureGroupListOperationCompleted
            End If
            Me.InvokeAsync("CloseParentSoftwarePackageProcedureGroupList", New Object() {sessionId, listHandle}, Me.CloseParentSoftwarePackageProcedureGroupListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseParentSoftwarePackageProcedureGroupListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseParentSoftwarePackageProcedureGroupListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseParentSoftwarePackageProcedureGroupListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenParentSoftwareJobContainerList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerPropertiesRequired As SoftwareJobContainerPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfParentSoftwareJobContainers As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfParentSoftwareJobContainersSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenParentSoftwareJobContainerList", New Object() {sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfParentSoftwareJobContainers = CType(results(2),System.Nullable(Of Long))
            totalNoOfParentSoftwareJobContainersSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenParentSoftwareJobContainerListAsync(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainerPropertiesRequired As SoftwareJobContainerPropertiesRequired)
            Me.OpenParentSoftwareJobContainerListAsync(sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenParentSoftwareJobContainerListAsync(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainerPropertiesRequired As SoftwareJobContainerPropertiesRequired, ByVal userState As Object)
            If (Me.OpenParentSoftwareJobContainerListOperationCompleted Is Nothing) Then
                Me.OpenParentSoftwareJobContainerListOperationCompleted = AddressOf Me.OnOpenParentSoftwareJobContainerListOperationCompleted
            End If
            Me.InvokeAsync("OpenParentSoftwareJobContainerList", New Object() {sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired}, Me.OpenParentSoftwareJobContainerListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenParentSoftwareJobContainerListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenParentSoftwareJobContainerListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenParentSoftwareJobContainerListCompleted(Me, New OpenParentSoftwareJobContainerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetParentSoftwareJobContainers(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfParentSoftwareJobContainers As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetParentSoftwareJobContainersReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwareJobContainerPropertiesArray", IsNullable:=false)> SoftwareJobContainerProperties()
            Dim results() As Object = Me.Invoke("GetParentSoftwareJobContainers", New Object() {sessionId, listHandle, noOfParentSoftwareJobContainers})
            Return CType(results(0),SoftwareJobContainerProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetParentSoftwareJobContainersAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfParentSoftwareJobContainers As Long)
            Me.GetParentSoftwareJobContainersAsync(sessionId, listHandle, noOfParentSoftwareJobContainers, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetParentSoftwareJobContainersAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfParentSoftwareJobContainers As Long, ByVal userState As Object)
            If (Me.GetParentSoftwareJobContainersOperationCompleted Is Nothing) Then
                Me.GetParentSoftwareJobContainersOperationCompleted = AddressOf Me.OnGetParentSoftwareJobContainersOperationCompleted
            End If
            Me.InvokeAsync("GetParentSoftwareJobContainers", New Object() {sessionId, listHandle, noOfParentSoftwareJobContainers}, Me.GetParentSoftwareJobContainersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetParentSoftwareJobContainersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetParentSoftwareJobContainersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetParentSoftwareJobContainersCompleted(Me, New GetParentSoftwareJobContainersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseParentSoftwarePackageJobContainerList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseParentSoftwarePackageJobContainerList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseParentSoftwarePackageJobContainerListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseParentSoftwarePackageJobContainerListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseParentSoftwarePackageJobContainerListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseParentSoftwarePackageJobContainerListOperationCompleted Is Nothing) Then
                Me.CloseParentSoftwarePackageJobContainerListOperationCompleted = AddressOf Me.OnCloseParentSoftwarePackageJobContainerListOperationCompleted
            End If
            Me.InvokeAsync("CloseParentSoftwarePackageJobContainerList", New Object() {sessionId, listHandle}, Me.CloseParentSoftwarePackageJobContainerListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseParentSoftwarePackageJobContainerListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseParentSoftwarePackageJobContainerListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseParentSoftwarePackageJobContainerListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwarePackageGroupSoftwarePackageList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackagePropertiesRequired As SoftwarePackagePropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwarePackages As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwarePackagesSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwarePackageGroupSoftwarePackageList", New Object() {sessionId, softwarePackageGroupId, softwarePackagePropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwarePackages = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwarePackagesSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageGroupSoftwarePackageListAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackagePropertiesRequired As SoftwarePackagePropertiesRequired)
            Me.OpenSoftwarePackageGroupSoftwarePackageListAsync(sessionId, softwarePackageGroupId, softwarePackagePropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageGroupSoftwarePackageListAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackagePropertiesRequired As SoftwarePackagePropertiesRequired, ByVal userState As Object)
            If (Me.OpenSoftwarePackageGroupSoftwarePackageListOperationCompleted Is Nothing) Then
                Me.OpenSoftwarePackageGroupSoftwarePackageListOperationCompleted = AddressOf Me.OnOpenSoftwarePackageGroupSoftwarePackageListOperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwarePackageGroupSoftwarePackageList", New Object() {sessionId, softwarePackageGroupId, softwarePackagePropertiesRequired}, Me.OpenSoftwarePackageGroupSoftwarePackageListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwarePackageGroupSoftwarePackageListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwarePackageGroupSoftwarePackageListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwarePackageGroupSoftwarePackageListCompleted(Me, New OpenSoftwarePackageGroupSoftwarePackageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageGroupSoftwarePackages(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackages As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwarePackageGroupSoftwarePackagesReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackagePropertiesArray", IsNullable:=false)> SoftwarePackageProperties()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageGroupSoftwarePackages", New Object() {sessionId, listHandle, noOfSoftwarePackages})
            Return CType(results(0),SoftwarePackageProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageGroupSoftwarePackagesAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackages As Long)
            Me.GetSoftwarePackageGroupSoftwarePackagesAsync(sessionId, listHandle, noOfSoftwarePackages, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageGroupSoftwarePackagesAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackages As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageGroupSoftwarePackagesOperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageGroupSoftwarePackagesOperationCompleted = AddressOf Me.OnGetSoftwarePackageGroupSoftwarePackagesOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageGroupSoftwarePackages", New Object() {sessionId, listHandle, noOfSoftwarePackages}, Me.GetSoftwarePackageGroupSoftwarePackagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageGroupSoftwarePackagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageGroupSoftwarePackagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageGroupSoftwarePackagesCompleted(Me, New GetSoftwarePackageGroupSoftwarePackagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwarePackageGroupSoftwarePackageList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwarePackageGroupSoftwarePackageList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageGroupSoftwarePackageListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwarePackageGroupSoftwarePackageListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageGroupSoftwarePackageListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwarePackageGroupSoftwarePackageListOperationCompleted Is Nothing) Then
                Me.CloseSoftwarePackageGroupSoftwarePackageListOperationCompleted = AddressOf Me.OnCloseSoftwarePackageGroupSoftwarePackageListOperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwarePackageGroupSoftwarePackageList", New Object() {sessionId, listHandle}, Me.CloseSoftwarePackageGroupSoftwarePackageListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwarePackageGroupSoftwarePackageListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwarePackageGroupSoftwarePackageListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwarePackageGroupSoftwarePackageListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwarePackageProcedureGroupSoftwarePackageProcedureList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwarePackageProcedures As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwarePackageProceduresSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwarePackageProcedureGroupSoftwarePackageProcedureList", New Object() {sessionId, softwarePackageProcedureGroupId, softwarePackageProcedurePropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwarePackageProcedures = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwarePackageProceduresSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageProcedureGroupSoftwarePackageProcedureListAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroupId As String, ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired)
            Me.OpenSoftwarePackageProcedureGroupSoftwarePackageProcedureListAsync(sessionId, softwarePackageProcedureGroupId, softwarePackageProcedurePropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageProcedureGroupSoftwarePackageProcedureListAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroupId As String, ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired, ByVal userState As Object)
            If (Me.OpenSoftwarePackageProcedureGroupSoftwarePackageProcedureListOperationCompleted Is Nothing) Then
                Me.OpenSoftwarePackageProcedureGroupSoftwarePackageProcedureListOperationCompleted = AddressOf Me.OnOpenSoftwarePackageProcedureGroupSoftwarePackageProcedureListOperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwarePackageProcedureGroupSoftwarePackageProcedureList", New Object() {sessionId, softwarePackageProcedureGroupId, softwarePackageProcedurePropertiesRequired}, Me.OpenSoftwarePackageProcedureGroupSoftwarePackageProcedureListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwarePackageProcedureGroupSoftwarePackageProcedureListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwarePackageProcedureGroupSoftwarePackageProcedureListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwarePackageProcedureGroupSoftwarePackageProcedureListCompleted(Me, New OpenSoftwarePackageProcedureGroupSoftwarePackageProcedureListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageProcedureGroupSoftwarePackageProcedures(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedures As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwarePackageProcedureGroupSoftwarePackageProceduresReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageProcedurePropertiesArray", IsNullable:=false)> SoftwarePackageProcedureProperties()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageProcedureGroupSoftwarePackageProcedures", New Object() {sessionId, listHandle, noOfSoftwarePackageProcedures})
            Return CType(results(0),SoftwarePackageProcedureProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureGroupSoftwarePackageProceduresAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedures As Long)
            Me.GetSoftwarePackageProcedureGroupSoftwarePackageProceduresAsync(sessionId, listHandle, noOfSoftwarePackageProcedures, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureGroupSoftwarePackageProceduresAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedures As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageProcedureGroupSoftwarePackageProceduresOperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageProcedureGroupSoftwarePackageProceduresOperationCompleted = AddressOf Me.OnGetSoftwarePackageProcedureGroupSoftwarePackageProceduresOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageProcedureGroupSoftwarePackageProcedures", New Object() {sessionId, listHandle, noOfSoftwarePackageProcedures}, Me.GetSoftwarePackageProcedureGroupSoftwarePackageProceduresOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageProcedureGroupSoftwarePackageProceduresOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageProcedureGroupSoftwarePackageProceduresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageProcedureGroupSoftwarePackageProceduresCompleted(Me, New GetSoftwarePackageProcedureGroupSoftwarePackageProceduresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwarePackageProcedureGroupSoftwarePackageProcedureList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwarePackageProcedureGroupSoftwarePackageProcedureList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageProcedureGroupSoftwarePackageProcedureListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwarePackageProcedureGroupSoftwarePackageProcedureListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageProcedureGroupSoftwarePackageProcedureListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwarePackageProcedureGroupSoftwarePackageProcedureListOperationCompleted Is Nothing) Then
                Me.CloseSoftwarePackageProcedureGroupSoftwarePackageProcedureListOperationCompleted = AddressOf Me.OnCloseSoftwarePackageProcedureGroupSoftwarePackageProcedureListOperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwarePackageProcedureGroupSoftwarePackageProcedureList", New Object() {sessionId, listHandle}, Me.CloseSoftwarePackageProcedureGroupSoftwarePackageProcedureListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwarePackageProcedureGroupSoftwarePackageProcedureListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwarePackageProcedureGroupSoftwarePackageProcedureListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwarePackageProcedureGroupSoftwarePackageProcedureListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwareJobContainerSoftwareJobList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobPropertiesRequired As SoftwareJobPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwareJobs As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwareJobsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwareJobContainerSoftwareJobList", New Object() {sessionId, softwareJobContainerId, softwareJobPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwareJobs = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwareJobsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwareJobContainerSoftwareJobListAsync(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobPropertiesRequired As SoftwareJobPropertiesRequired)
            Me.OpenSoftwareJobContainerSoftwareJobListAsync(sessionId, softwareJobContainerId, softwareJobPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwareJobContainerSoftwareJobListAsync(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobPropertiesRequired As SoftwareJobPropertiesRequired, ByVal userState As Object)
            If (Me.OpenSoftwareJobContainerSoftwareJobListOperationCompleted Is Nothing) Then
                Me.OpenSoftwareJobContainerSoftwareJobListOperationCompleted = AddressOf Me.OnOpenSoftwareJobContainerSoftwareJobListOperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwareJobContainerSoftwareJobList", New Object() {sessionId, softwareJobContainerId, softwareJobPropertiesRequired}, Me.OpenSoftwareJobContainerSoftwareJobListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwareJobContainerSoftwareJobListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwareJobContainerSoftwareJobListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwareJobContainerSoftwareJobListCompleted(Me, New OpenSoftwareJobContainerSoftwareJobListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwareJobContainerSoftwareJobs(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwareJobContainerSoftwareJobsReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwareJobPropertiesArray", IsNullable:=false)> SoftwareJobProperties()
            Dim results() As Object = Me.Invoke("GetSoftwareJobContainerSoftwareJobs", New Object() {sessionId, listHandle, noOfSoftwareJobs})
            Return CType(results(0),SoftwareJobProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobContainerSoftwareJobsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long)
            Me.GetSoftwareJobContainerSoftwareJobsAsync(sessionId, listHandle, noOfSoftwareJobs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobContainerSoftwareJobsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long, ByVal userState As Object)
            If (Me.GetSoftwareJobContainerSoftwareJobsOperationCompleted Is Nothing) Then
                Me.GetSoftwareJobContainerSoftwareJobsOperationCompleted = AddressOf Me.OnGetSoftwareJobContainerSoftwareJobsOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwareJobContainerSoftwareJobs", New Object() {sessionId, listHandle, noOfSoftwareJobs}, Me.GetSoftwareJobContainerSoftwareJobsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwareJobContainerSoftwareJobsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwareJobContainerSoftwareJobsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwareJobContainerSoftwareJobsCompleted(Me, New GetSoftwareJobContainerSoftwareJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwareJobContainerSoftwareJobList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwareJobContainerSoftwareJobList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwareJobContainerSoftwareJobListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwareJobContainerSoftwareJobListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwareJobContainerSoftwareJobListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwareJobContainerSoftwareJobListOperationCompleted Is Nothing) Then
                Me.CloseSoftwareJobContainerSoftwareJobListOperationCompleted = AddressOf Me.OnCloseSoftwareJobContainerSoftwareJobListOperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwareJobContainerSoftwareJobList", New Object() {sessionId, listHandle}, Me.CloseSoftwareJobContainerSoftwareJobListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwareJobContainerSoftwareJobListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwareJobContainerSoftwareJobListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwareJobContainerSoftwareJobListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwarePolicySoftwareJobList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobPropertiesRequired As SoftwareJobPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwareJobs As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwareJobsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwarePolicySoftwareJobList", New Object() {sessionId, softwarePolicyId, softwareJobPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwareJobs = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwareJobsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePolicySoftwareJobListAsync(ByVal sessionId As String, ByVal softwarePolicyId As String, ByVal softwareJobPropertiesRequired As SoftwareJobPropertiesRequired)
            Me.OpenSoftwarePolicySoftwareJobListAsync(sessionId, softwarePolicyId, softwareJobPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePolicySoftwareJobListAsync(ByVal sessionId As String, ByVal softwarePolicyId As String, ByVal softwareJobPropertiesRequired As SoftwareJobPropertiesRequired, ByVal userState As Object)
            If (Me.OpenSoftwarePolicySoftwareJobListOperationCompleted Is Nothing) Then
                Me.OpenSoftwarePolicySoftwareJobListOperationCompleted = AddressOf Me.OnOpenSoftwarePolicySoftwareJobListOperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwarePolicySoftwareJobList", New Object() {sessionId, softwarePolicyId, softwareJobPropertiesRequired}, Me.OpenSoftwarePolicySoftwareJobListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwarePolicySoftwareJobListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwarePolicySoftwareJobListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwarePolicySoftwareJobListCompleted(Me, New OpenSoftwarePolicySoftwareJobListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePolicySoftwareJobs(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwarePolicySoftwareJobsReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwareJobPropertiesArray", IsNullable:=false)> SoftwareJobProperties()
            Dim results() As Object = Me.Invoke("GetSoftwarePolicySoftwareJobs", New Object() {sessionId, listHandle, noOfSoftwareJobs})
            Return CType(results(0),SoftwareJobProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePolicySoftwareJobsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long)
            Me.GetSoftwarePolicySoftwareJobsAsync(sessionId, listHandle, noOfSoftwareJobs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePolicySoftwareJobsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long, ByVal userState As Object)
            If (Me.GetSoftwarePolicySoftwareJobsOperationCompleted Is Nothing) Then
                Me.GetSoftwarePolicySoftwareJobsOperationCompleted = AddressOf Me.OnGetSoftwarePolicySoftwareJobsOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePolicySoftwareJobs", New Object() {sessionId, listHandle, noOfSoftwareJobs}, Me.GetSoftwarePolicySoftwareJobsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePolicySoftwareJobsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePolicySoftwareJobsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePolicySoftwareJobsCompleted(Me, New GetSoftwarePolicySoftwareJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwarePolicySoftwareJobList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwarePolicySoftwareJobList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePolicySoftwareJobListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwarePolicySoftwareJobListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePolicySoftwareJobListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwarePolicySoftwareJobListOperationCompleted Is Nothing) Then
                Me.CloseSoftwarePolicySoftwareJobListOperationCompleted = AddressOf Me.OnCloseSoftwarePolicySoftwareJobListOperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwarePolicySoftwareJobList", New Object() {sessionId, listHandle}, Me.CloseSoftwarePolicySoftwareJobListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwarePolicySoftwareJobListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwarePolicySoftwareJobListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwarePolicySoftwareJobListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwarePackageGroupSoftwarePackageListRecursive(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackagePropertiesRequired As SoftwarePackagePropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwarePackages As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwarePackagesSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwarePackageGroupSoftwarePackageListRecursive", New Object() {sessionId, softwarePackageGroupId, softwarePackagePropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwarePackages = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwarePackagesSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageGroupSoftwarePackageListRecursiveAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackagePropertiesRequired As SoftwarePackagePropertiesRequired)
            Me.OpenSoftwarePackageGroupSoftwarePackageListRecursiveAsync(sessionId, softwarePackageGroupId, softwarePackagePropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePackageGroupSoftwarePackageListRecursiveAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackagePropertiesRequired As SoftwarePackagePropertiesRequired, ByVal userState As Object)
            If (Me.OpenSoftwarePackageGroupSoftwarePackageListRecursiveOperationCompleted Is Nothing) Then
                Me.OpenSoftwarePackageGroupSoftwarePackageListRecursiveOperationCompleted = AddressOf Me.OnOpenSoftwarePackageGroupSoftwarePackageListRecursiveOperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwarePackageGroupSoftwarePackageListRecursive", New Object() {sessionId, softwarePackageGroupId, softwarePackagePropertiesRequired}, Me.OpenSoftwarePackageGroupSoftwarePackageListRecursiveOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwarePackageGroupSoftwarePackageListRecursiveOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwarePackageGroupSoftwarePackageListRecursiveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwarePackageGroupSoftwarePackageListRecursiveCompleted(Me, New OpenSoftwarePackageGroupSoftwarePackageListRecursiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageGroupSoftwarePackagesRecursive(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackages As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwarePackageGroupSoftwarePackagesRecursiveReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackagePropertiesArray", IsNullable:=false)> SoftwarePackageProperties()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageGroupSoftwarePackagesRecursive", New Object() {sessionId, listHandle, noOfSoftwarePackages})
            Return CType(results(0),SoftwarePackageProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageGroupSoftwarePackagesRecursiveAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackages As Long)
            Me.GetSoftwarePackageGroupSoftwarePackagesRecursiveAsync(sessionId, listHandle, noOfSoftwarePackages, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageGroupSoftwarePackagesRecursiveAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackages As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageGroupSoftwarePackagesRecursiveOperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageGroupSoftwarePackagesRecursiveOperationCompleted = AddressOf Me.OnGetSoftwarePackageGroupSoftwarePackagesRecursiveOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageGroupSoftwarePackagesRecursive", New Object() {sessionId, listHandle, noOfSoftwarePackages}, Me.GetSoftwarePackageGroupSoftwarePackagesRecursiveOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageGroupSoftwarePackagesRecursiveOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageGroupSoftwarePackagesRecursiveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageGroupSoftwarePackagesRecursiveCompleted(Me, New GetSoftwarePackageGroupSoftwarePackagesRecursiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwarePackageGroupSoftwarePackageListRecursive(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwarePackageGroupSoftwarePackageListRecursive", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageGroupSoftwarePackageListRecursiveAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwarePackageGroupSoftwarePackageListRecursiveAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePackageGroupSoftwarePackageListRecursiveAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwarePackageGroupSoftwarePackageListRecursiveOperationCompleted Is Nothing) Then
                Me.CloseSoftwarePackageGroupSoftwarePackageListRecursiveOperationCompleted = AddressOf Me.OnCloseSoftwarePackageGroupSoftwarePackageListRecursiveOperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwarePackageGroupSoftwarePackageListRecursive", New Object() {sessionId, listHandle}, Me.CloseSoftwarePackageGroupSoftwarePackageListRecursiveOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwarePackageGroupSoftwarePackageListRecursiveOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwarePackageGroupSoftwarePackageListRecursiveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwarePackageGroupSoftwarePackageListRecursiveCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwarePolicySoftwarePolicyExceptionList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyExceptionPropertiesRequired As SoftwarePolicyExceptionPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwarePolicyExceptions As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwarePolicyExceptionsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwarePolicySoftwarePolicyExceptionList", New Object() {sessionId, softwarePolicyId, softwarePolicyExceptionPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwarePolicyExceptions = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwarePolicyExceptionsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePolicySoftwarePolicyExceptionListAsync(ByVal sessionId As String, ByVal softwarePolicyId As String, ByVal softwarePolicyExceptionPropertiesRequired As SoftwarePolicyExceptionPropertiesRequired)
            Me.OpenSoftwarePolicySoftwarePolicyExceptionListAsync(sessionId, softwarePolicyId, softwarePolicyExceptionPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePolicySoftwarePolicyExceptionListAsync(ByVal sessionId As String, ByVal softwarePolicyId As String, ByVal softwarePolicyExceptionPropertiesRequired As SoftwarePolicyExceptionPropertiesRequired, ByVal userState As Object)
            If (Me.OpenSoftwarePolicySoftwarePolicyExceptionListOperationCompleted Is Nothing) Then
                Me.OpenSoftwarePolicySoftwarePolicyExceptionListOperationCompleted = AddressOf Me.OnOpenSoftwarePolicySoftwarePolicyExceptionListOperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwarePolicySoftwarePolicyExceptionList", New Object() {sessionId, softwarePolicyId, softwarePolicyExceptionPropertiesRequired}, Me.OpenSoftwarePolicySoftwarePolicyExceptionListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwarePolicySoftwarePolicyExceptionListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwarePolicySoftwarePolicyExceptionListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwarePolicySoftwarePolicyExceptionListCompleted(Me, New OpenSoftwarePolicySoftwarePolicyExceptionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePolicySoftwarePolicyExceptions(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePolicyExceptions As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwarePolicySoftwarePolicyExceptionsReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePolicyExceptionPropertiesArray", IsNullable:=false)> SoftwarePolicyExceptionProperties()
            Dim results() As Object = Me.Invoke("GetSoftwarePolicySoftwarePolicyExceptions", New Object() {sessionId, listHandle, noOfSoftwarePolicyExceptions})
            Return CType(results(0),SoftwarePolicyExceptionProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePolicySoftwarePolicyExceptionsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePolicyExceptions As Long)
            Me.GetSoftwarePolicySoftwarePolicyExceptionsAsync(sessionId, listHandle, noOfSoftwarePolicyExceptions, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePolicySoftwarePolicyExceptionsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePolicyExceptions As Long, ByVal userState As Object)
            If (Me.GetSoftwarePolicySoftwarePolicyExceptionsOperationCompleted Is Nothing) Then
                Me.GetSoftwarePolicySoftwarePolicyExceptionsOperationCompleted = AddressOf Me.OnGetSoftwarePolicySoftwarePolicyExceptionsOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePolicySoftwarePolicyExceptions", New Object() {sessionId, listHandle, noOfSoftwarePolicyExceptions}, Me.GetSoftwarePolicySoftwarePolicyExceptionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePolicySoftwarePolicyExceptionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePolicySoftwarePolicyExceptionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePolicySoftwarePolicyExceptionsCompleted(Me, New GetSoftwarePolicySoftwarePolicyExceptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwarePolicySoftwarePolicyExceptionList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwarePolicySoftwarePolicyExceptionList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePolicySoftwarePolicyExceptionListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwarePolicySoftwarePolicyExceptionListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePolicySoftwarePolicyExceptionListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwarePolicySoftwarePolicyExceptionListOperationCompleted Is Nothing) Then
                Me.CloseSoftwarePolicySoftwarePolicyExceptionListOperationCompleted = AddressOf Me.OnCloseSoftwarePolicySoftwarePolicyExceptionListOperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwarePolicySoftwarePolicyExceptionList", New Object() {sessionId, listHandle}, Me.CloseSoftwarePolicySoftwarePolicyExceptionListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwarePolicySoftwarePolicyExceptionListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwarePolicySoftwarePolicyExceptionListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwarePolicySoftwarePolicyExceptionListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkSoftwarePackagesToSoftwarePackageGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageIds() As String)
            Me.Invoke("LinkSoftwarePackagesToSoftwarePackageGroup", New Object() {sessionId, softwarePackageGroupId, softwarePackageIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSoftwarePackagesToSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackageIds() As String)
            Me.LinkSoftwarePackagesToSoftwarePackageGroupAsync(sessionId, softwarePackageGroupId, softwarePackageIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSoftwarePackagesToSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackageIds() As String, ByVal userState As Object)
            If (Me.LinkSoftwarePackagesToSoftwarePackageGroupOperationCompleted Is Nothing) Then
                Me.LinkSoftwarePackagesToSoftwarePackageGroupOperationCompleted = AddressOf Me.OnLinkSoftwarePackagesToSoftwarePackageGroupOperationCompleted
            End If
            Me.InvokeAsync("LinkSoftwarePackagesToSoftwarePackageGroup", New Object() {sessionId, softwarePackageGroupId, softwarePackageIds}, Me.LinkSoftwarePackagesToSoftwarePackageGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkSoftwarePackagesToSoftwarePackageGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkSoftwarePackagesToSoftwarePackageGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkSoftwarePackagesToSoftwarePackageGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnlinkSoftwarePackagesFromSoftwarePackageGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageIds() As String)
            Me.Invoke("UnlinkSoftwarePackagesFromSoftwarePackageGroup", New Object() {sessionId, softwarePackageGroupId, softwarePackageIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSoftwarePackagesFromSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackageIds() As String)
            Me.UnlinkSoftwarePackagesFromSoftwarePackageGroupAsync(sessionId, softwarePackageGroupId, softwarePackageIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSoftwarePackagesFromSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackageIds() As String, ByVal userState As Object)
            If (Me.UnlinkSoftwarePackagesFromSoftwarePackageGroupOperationCompleted Is Nothing) Then
                Me.UnlinkSoftwarePackagesFromSoftwarePackageGroupOperationCompleted = AddressOf Me.OnUnlinkSoftwarePackagesFromSoftwarePackageGroupOperationCompleted
            End If
            Me.InvokeAsync("UnlinkSoftwarePackagesFromSoftwarePackageGroup", New Object() {sessionId, softwarePackageGroupId, softwarePackageIds}, Me.UnlinkSoftwarePackagesFromSoftwarePackageGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnlinkSoftwarePackagesFromSoftwarePackageGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnlinkSoftwarePackagesFromSoftwarePackageGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnlinkSoftwarePackagesFromSoftwarePackageGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkSoftwarePackageGroupsToSoftwarePackageGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageGroupIds() As String)
            Me.Invoke("LinkSoftwarePackageGroupsToSoftwarePackageGroup", New Object() {sessionId, softwarePackageGroupId, softwarePackageGroupIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSoftwarePackageGroupsToSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackageGroupIds() As String)
            Me.LinkSoftwarePackageGroupsToSoftwarePackageGroupAsync(sessionId, softwarePackageGroupId, softwarePackageGroupIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSoftwarePackageGroupsToSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackageGroupIds() As String, ByVal userState As Object)
            If (Me.LinkSoftwarePackageGroupsToSoftwarePackageGroupOperationCompleted Is Nothing) Then
                Me.LinkSoftwarePackageGroupsToSoftwarePackageGroupOperationCompleted = AddressOf Me.OnLinkSoftwarePackageGroupsToSoftwarePackageGroupOperationCompleted
            End If
            Me.InvokeAsync("LinkSoftwarePackageGroupsToSoftwarePackageGroup", New Object() {sessionId, softwarePackageGroupId, softwarePackageGroupIds}, Me.LinkSoftwarePackageGroupsToSoftwarePackageGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkSoftwarePackageGroupsToSoftwarePackageGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkSoftwarePackageGroupsToSoftwarePackageGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkSoftwarePackageGroupsToSoftwarePackageGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnlinkSoftwarePackageGroupsFromSoftwarePackageGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageGroupIds() As String)
            Me.Invoke("UnlinkSoftwarePackageGroupsFromSoftwarePackageGroup", New Object() {sessionId, softwarePackageGroupId, softwarePackageGroupIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSoftwarePackageGroupsFromSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackageGroupIds() As String)
            Me.UnlinkSoftwarePackageGroupsFromSoftwarePackageGroupAsync(sessionId, softwarePackageGroupId, softwarePackageGroupIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSoftwarePackageGroupsFromSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackageGroupIds() As String, ByVal userState As Object)
            If (Me.UnlinkSoftwarePackageGroupsFromSoftwarePackageGroupOperationCompleted Is Nothing) Then
                Me.UnlinkSoftwarePackageGroupsFromSoftwarePackageGroupOperationCompleted = AddressOf Me.OnUnlinkSoftwarePackageGroupsFromSoftwarePackageGroupOperationCompleted
            End If
            Me.InvokeAsync("UnlinkSoftwarePackageGroupsFromSoftwarePackageGroup", New Object() {sessionId, softwarePackageGroupId, softwarePackageGroupIds}, Me.UnlinkSoftwarePackageGroupsFromSoftwarePackageGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnlinkSoftwarePackageGroupsFromSoftwarePackageGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnlinkSoftwarePackageGroupsFromSoftwarePackageGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnlinkSoftwarePackageGroupsFromSoftwarePackageGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkSoftwarePackageProcedureGroupsToSoftwarePackageGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageProcedureGroupIds() As String)
            Me.Invoke("LinkSoftwarePackageProcedureGroupsToSoftwarePackageGroup", New Object() {sessionId, softwarePackageGroupId, softwarePackageProcedureGroupIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSoftwarePackageProcedureGroupsToSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackageProcedureGroupIds() As String)
            Me.LinkSoftwarePackageProcedureGroupsToSoftwarePackageGroupAsync(sessionId, softwarePackageGroupId, softwarePackageProcedureGroupIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSoftwarePackageProcedureGroupsToSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackageProcedureGroupIds() As String, ByVal userState As Object)
            If (Me.LinkSoftwarePackageProcedureGroupsToSoftwarePackageGroupOperationCompleted Is Nothing) Then
                Me.LinkSoftwarePackageProcedureGroupsToSoftwarePackageGroupOperationCompleted = AddressOf Me.OnLinkSoftwarePackageProcedureGroupsToSoftwarePackageGroupOperationCompleted
            End If
            Me.InvokeAsync("LinkSoftwarePackageProcedureGroupsToSoftwarePackageGroup", New Object() {sessionId, softwarePackageGroupId, softwarePackageProcedureGroupIds}, Me.LinkSoftwarePackageProcedureGroupsToSoftwarePackageGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkSoftwarePackageProcedureGroupsToSoftwarePackageGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkSoftwarePackageProcedureGroupsToSoftwarePackageGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkSoftwarePackageProcedureGroupsToSoftwarePackageGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnlinkSoftwarePackageProcedureGroupsFromSoftwarePackageGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageProcedureGroupIds() As String)
            Me.Invoke("UnlinkSoftwarePackageProcedureGroupsFromSoftwarePackageGroup", New Object() {sessionId, softwarePackageGroupId, softwarePackageProcedureGroupIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSoftwarePackageProcedureGroupsFromSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackageProcedureGroupIds() As String)
            Me.UnlinkSoftwarePackageProcedureGroupsFromSoftwarePackageGroupAsync(sessionId, softwarePackageGroupId, softwarePackageProcedureGroupIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSoftwarePackageProcedureGroupsFromSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackageProcedureGroupIds() As String, ByVal userState As Object)
            If (Me.UnlinkSoftwarePackageProcedureGroupsFromSoftwarePackageGroupOperationCompleted Is Nothing) Then
                Me.UnlinkSoftwarePackageProcedureGroupsFromSoftwarePackageGroupOperationCompleted = AddressOf Me.OnUnlinkSoftwarePackageProcedureGroupsFromSoftwarePackageGroupOperationCompleted
            End If
            Me.InvokeAsync("UnlinkSoftwarePackageProcedureGroupsFromSoftwarePackageGroup", New Object() {sessionId, softwarePackageGroupId, softwarePackageProcedureGroupIds}, Me.UnlinkSoftwarePackageProcedureGroupsFromSoftwarePackageGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnlinkSoftwarePackageProcedureGroupsFromSoftwarePackageGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnlinkSoftwarePackageProcedureGroupsFromSoftwarePackageGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnlinkSoftwarePackageProcedureGroupsFromSoftwarePackageGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageProcedureIds() As String)
            Me.Invoke("LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroup", New Object() {sessionId, softwarePackageProcedureGroupId, softwarePackageProcedureIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroupId As String, ByVal softwarePackageProcedureIds() As String)
            Me.LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupAsync(sessionId, softwarePackageProcedureGroupId, softwarePackageProcedureIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroupId As String, ByVal softwarePackageProcedureIds() As String, ByVal userState As Object)
            If (Me.LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupOperationCompleted Is Nothing) Then
                Me.LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupOperationCompleted = AddressOf Me.OnLinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupOperationCompleted
            End If
            Me.InvokeAsync("LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroup", New Object() {sessionId, softwarePackageProcedureGroupId, softwarePackageProcedureIds}, Me.LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageProcedureIds() As String)
            Me.Invoke("UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroup", New Object() {sessionId, softwarePackageProcedureGroupId, softwarePackageProcedureIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroupId As String, ByVal softwarePackageProcedureIds() As String)
            Me.UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupAsync(sessionId, softwarePackageProcedureGroupId, softwarePackageProcedureIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroupId As String, ByVal softwarePackageProcedureIds() As String, ByVal userState As Object)
            If (Me.UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupOperationCompleted Is Nothing) Then
                Me.UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupOperationCompleted = AddressOf Me.OnUnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupOperationCompleted
            End If
            Me.InvokeAsync("UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroup", New Object() {sessionId, softwarePackageProcedureGroupId, softwarePackageProcedureIds}, Me.UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenUnitDiscoveredSoftwareList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal discoveredSoftwarePropertiesRequired As DiscoveredSoftwarePropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfDiscoveredSoftwares As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfDiscoveredSoftwaresSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenUnitDiscoveredSoftwareList", New Object() {sessionId, unitId, discoveredSoftwarePropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfDiscoveredSoftwares = CType(results(2),System.Nullable(Of Long))
            totalNoOfDiscoveredSoftwaresSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitDiscoveredSoftwareListAsync(ByVal sessionId As String, ByVal unitId As String, ByVal discoveredSoftwarePropertiesRequired As DiscoveredSoftwarePropertiesRequired)
            Me.OpenUnitDiscoveredSoftwareListAsync(sessionId, unitId, discoveredSoftwarePropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitDiscoveredSoftwareListAsync(ByVal sessionId As String, ByVal unitId As String, ByVal discoveredSoftwarePropertiesRequired As DiscoveredSoftwarePropertiesRequired, ByVal userState As Object)
            If (Me.OpenUnitDiscoveredSoftwareListOperationCompleted Is Nothing) Then
                Me.OpenUnitDiscoveredSoftwareListOperationCompleted = AddressOf Me.OnOpenUnitDiscoveredSoftwareListOperationCompleted
            End If
            Me.InvokeAsync("OpenUnitDiscoveredSoftwareList", New Object() {sessionId, unitId, discoveredSoftwarePropertiesRequired}, Me.OpenUnitDiscoveredSoftwareListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenUnitDiscoveredSoftwareListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenUnitDiscoveredSoftwareListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenUnitDiscoveredSoftwareListCompleted(Me, New OpenUnitDiscoveredSoftwareListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitDiscoveredSoftware(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfDiscoveredSoftwares As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetUnitDiscoveredSoftwareReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("discoveredSoftwarePropertiesArray", IsNullable:=false)> DiscoveredSoftwareProperties()
            Dim results() As Object = Me.Invoke("GetUnitDiscoveredSoftware", New Object() {sessionId, listHandle, noOfDiscoveredSoftwares})
            Return CType(results(0),DiscoveredSoftwareProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitDiscoveredSoftwareAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfDiscoveredSoftwares As Long)
            Me.GetUnitDiscoveredSoftwareAsync(sessionId, listHandle, noOfDiscoveredSoftwares, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitDiscoveredSoftwareAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfDiscoveredSoftwares As Long, ByVal userState As Object)
            If (Me.GetUnitDiscoveredSoftwareOperationCompleted Is Nothing) Then
                Me.GetUnitDiscoveredSoftwareOperationCompleted = AddressOf Me.OnGetUnitDiscoveredSoftwareOperationCompleted
            End If
            Me.InvokeAsync("GetUnitDiscoveredSoftware", New Object() {sessionId, listHandle, noOfDiscoveredSoftwares}, Me.GetUnitDiscoveredSoftwareOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitDiscoveredSoftwareOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitDiscoveredSoftwareCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitDiscoveredSoftwareCompleted(Me, New GetUnitDiscoveredSoftwareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseUnitDiscoveredSoftwareList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseUnitDiscoveredSoftwareList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitDiscoveredSoftwareListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseUnitDiscoveredSoftwareListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitDiscoveredSoftwareListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseUnitDiscoveredSoftwareListOperationCompleted Is Nothing) Then
                Me.CloseUnitDiscoveredSoftwareListOperationCompleted = AddressOf Me.OnCloseUnitDiscoveredSoftwareListOperationCompleted
            End If
            Me.InvokeAsync("CloseUnitDiscoveredSoftwareList", New Object() {sessionId, listHandle}, Me.CloseUnitDiscoveredSoftwareListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseUnitDiscoveredSoftwareListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseUnitDiscoveredSoftwareListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseUnitDiscoveredSoftwareListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSystemGroupUUID(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal systemGroup As SystemGroup) As <System.Xml.Serialization.XmlElementAttribute("systemGroupUUID", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("GetSystemGroupUUID", New Object() {sessionId, systemGroup})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSystemGroupUUIDAsync(ByVal sessionId As String, ByVal systemGroup As SystemGroup)
            Me.GetSystemGroupUUIDAsync(sessionId, systemGroup, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSystemGroupUUIDAsync(ByVal sessionId As String, ByVal systemGroup As SystemGroup, ByVal userState As Object)
            If (Me.GetSystemGroupUUIDOperationCompleted Is Nothing) Then
                Me.GetSystemGroupUUIDOperationCompleted = AddressOf Me.OnGetSystemGroupUUIDOperationCompleted
            End If
            Me.InvokeAsync("GetSystemGroupUUID", New Object() {sessionId, systemGroup}, Me.GetSystemGroupUUIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSystemGroupUUIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSystemGroupUUIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSystemGroupUUIDCompleted(Me, New GetSystemGroupUUIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ResetTimeout(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String)
            Me.Invoke("ResetTimeout", New Object() {sessionId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResetTimeoutAsync(ByVal sessionId As String)
            Me.ResetTimeoutAsync(sessionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResetTimeoutAsync(ByVal sessionId As String, ByVal userState As Object)
            If (Me.ResetTimeoutOperationCompleted Is Nothing) Then
                Me.ResetTimeoutOperationCompleted = AddressOf Me.OnResetTimeoutOperationCompleted
            End If
            Me.InvokeAsync("ResetTimeout", New Object() {sessionId}, Me.ResetTimeoutOperationCompleted, userState)
        End Sub
        
        Private Sub OnResetTimeoutOperationCompleted(ByVal arg As Object)
            If (Not (Me.ResetTimeoutCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ResetTimeoutCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateInstallSoftwareJobInSoftwarePolicy(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobOrderPolicyProperties As CreateSoftwareJobOrderPolicyProperties, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyId As String) As <System.Xml.Serialization.XmlElementAttribute("createInstallSoftwareJobInSoftwarePolicy", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateInstallSoftwareJobInSoftwarePolicy", New Object() {sessionId, softwarePackageProcedureId, softwareJobOrderPolicyProperties, softwarePolicyId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateInstallSoftwareJobInSoftwarePolicyAsync(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwareJobOrderPolicyProperties As CreateSoftwareJobOrderPolicyProperties, ByVal softwarePolicyId As String)
            Me.CreateInstallSoftwareJobInSoftwarePolicyAsync(sessionId, softwarePackageProcedureId, softwareJobOrderPolicyProperties, softwarePolicyId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateInstallSoftwareJobInSoftwarePolicyAsync(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwareJobOrderPolicyProperties As CreateSoftwareJobOrderPolicyProperties, ByVal softwarePolicyId As String, ByVal userState As Object)
            If (Me.CreateInstallSoftwareJobInSoftwarePolicyOperationCompleted Is Nothing) Then
                Me.CreateInstallSoftwareJobInSoftwarePolicyOperationCompleted = AddressOf Me.OnCreateInstallSoftwareJobInSoftwarePolicyOperationCompleted
            End If
            Me.InvokeAsync("CreateInstallSoftwareJobInSoftwarePolicy", New Object() {sessionId, softwarePackageProcedureId, softwareJobOrderPolicyProperties, softwarePolicyId}, Me.CreateInstallSoftwareJobInSoftwarePolicyOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateInstallSoftwareJobInSoftwarePolicyOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateInstallSoftwareJobInSoftwarePolicyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateInstallSoftwareJobInSoftwarePolicyCompleted(Me, New CreateInstallSoftwareJobInSoftwarePolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateActivateSoftwareJobInSoftwarePolicy(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageInstallProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobOrderPolicyProperties As CreateSoftwareJobOrderPolicyProperties, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyId As String) As <System.Xml.Serialization.XmlElementAttribute("createActivateSoftwareJobInSoftwarePolicy", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateActivateSoftwareJobInSoftwarePolicy", New Object() {sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderPolicyProperties, softwarePolicyId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateActivateSoftwareJobInSoftwarePolicyAsync(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwareJobOrderPolicyProperties As CreateSoftwareJobOrderPolicyProperties, ByVal softwarePolicyId As String)
            Me.CreateActivateSoftwareJobInSoftwarePolicyAsync(sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderPolicyProperties, softwarePolicyId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateActivateSoftwareJobInSoftwarePolicyAsync(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwareJobOrderPolicyProperties As CreateSoftwareJobOrderPolicyProperties, ByVal softwarePolicyId As String, ByVal userState As Object)
            If (Me.CreateActivateSoftwareJobInSoftwarePolicyOperationCompleted Is Nothing) Then
                Me.CreateActivateSoftwareJobInSoftwarePolicyOperationCompleted = AddressOf Me.OnCreateActivateSoftwareJobInSoftwarePolicyOperationCompleted
            End If
            Me.InvokeAsync("CreateActivateSoftwareJobInSoftwarePolicy", New Object() {sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderPolicyProperties, softwarePolicyId}, Me.CreateActivateSoftwareJobInSoftwarePolicyOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateActivateSoftwareJobInSoftwarePolicyOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateActivateSoftwareJobInSoftwarePolicyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateActivateSoftwareJobInSoftwarePolicyCompleted(Me, New CreateActivateSoftwareJobInSoftwarePolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateConfigureSoftwareJobInSoftwarePolicy(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageInstallProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobOrderPolicyProperties As CreateSoftwareJobOrderPolicyProperties, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyId As String) As <System.Xml.Serialization.XmlElementAttribute("createConfigureSoftwareJobInSoftwarePolicy", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateConfigureSoftwareJobInSoftwarePolicy", New Object() {sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderPolicyProperties, softwarePolicyId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateConfigureSoftwareJobInSoftwarePolicyAsync(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwareJobOrderPolicyProperties As CreateSoftwareJobOrderPolicyProperties, ByVal softwarePolicyId As String)
            Me.CreateConfigureSoftwareJobInSoftwarePolicyAsync(sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderPolicyProperties, softwarePolicyId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateConfigureSoftwareJobInSoftwarePolicyAsync(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwareJobOrderPolicyProperties As CreateSoftwareJobOrderPolicyProperties, ByVal softwarePolicyId As String, ByVal userState As Object)
            If (Me.CreateConfigureSoftwareJobInSoftwarePolicyOperationCompleted Is Nothing) Then
                Me.CreateConfigureSoftwareJobInSoftwarePolicyOperationCompleted = AddressOf Me.OnCreateConfigureSoftwareJobInSoftwarePolicyOperationCompleted
            End If
            Me.InvokeAsync("CreateConfigureSoftwareJobInSoftwarePolicy", New Object() {sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderPolicyProperties, softwarePolicyId}, Me.CreateConfigureSoftwareJobInSoftwarePolicyOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateConfigureSoftwareJobInSoftwarePolicyOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateConfigureSoftwareJobInSoftwarePolicyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateConfigureSoftwareJobInSoftwarePolicyCompleted(Me, New CreateConfigureSoftwareJobInSoftwarePolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateUninstallSoftwareJobInSoftwarePolicy(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageInstallProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobOrderPolicyProperties As CreateSoftwareJobOrderPolicyProperties, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyId As String) As <System.Xml.Serialization.XmlElementAttribute("createUninstallSoftwareJobInSoftwarePolicy", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateUninstallSoftwareJobInSoftwarePolicy", New Object() {sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderPolicyProperties, softwarePolicyId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateUninstallSoftwareJobInSoftwarePolicyAsync(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwareJobOrderPolicyProperties As CreateSoftwareJobOrderPolicyProperties, ByVal softwarePolicyId As String)
            Me.CreateUninstallSoftwareJobInSoftwarePolicyAsync(sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderPolicyProperties, softwarePolicyId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateUninstallSoftwareJobInSoftwarePolicyAsync(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwareJobOrderPolicyProperties As CreateSoftwareJobOrderPolicyProperties, ByVal softwarePolicyId As String, ByVal userState As Object)
            If (Me.CreateUninstallSoftwareJobInSoftwarePolicyOperationCompleted Is Nothing) Then
                Me.CreateUninstallSoftwareJobInSoftwarePolicyOperationCompleted = AddressOf Me.OnCreateUninstallSoftwareJobInSoftwarePolicyOperationCompleted
            End If
            Me.InvokeAsync("CreateUninstallSoftwareJobInSoftwarePolicy", New Object() {sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderPolicyProperties, softwarePolicyId}, Me.CreateUninstallSoftwareJobInSoftwarePolicyOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateUninstallSoftwareJobInSoftwarePolicyOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateUninstallSoftwareJobInSoftwarePolicyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateUninstallSoftwareJobInSoftwarePolicyCompleted(Me, New CreateUninstallSoftwareJobInSoftwarePolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetTimeoutValue(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setTimeoutProperties As SetTimeoutProperties)
            Me.Invoke("SetTimeoutValue", New Object() {sessionId, setTimeoutProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetTimeoutValueAsync(ByVal sessionId As String, ByVal setTimeoutProperties As SetTimeoutProperties)
            Me.SetTimeoutValueAsync(sessionId, setTimeoutProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetTimeoutValueAsync(ByVal sessionId As String, ByVal setTimeoutProperties As SetTimeoutProperties, ByVal userState As Object)
            If (Me.SetTimeoutValueOperationCompleted Is Nothing) Then
                Me.SetTimeoutValueOperationCompleted = AddressOf Me.OnSetTimeoutValueOperationCompleted
            End If
            Me.InvokeAsync("SetTimeoutValue", New Object() {sessionId, setTimeoutProperties}, Me.SetTimeoutValueOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetTimeoutValueOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetTimeoutValueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetTimeoutValueCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInstalledComponents(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String) As <System.Xml.Serialization.XmlElementAttribute("GetInstalledComponentsReturn", IsNullable:=true)> Components
            Dim results() As Object = Me.Invoke("GetInstalledComponents", New Object() {sessionId})
            Return CType(results(0),Components)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetInstalledComponentsAsync(ByVal sessionId As String)
            Me.GetInstalledComponentsAsync(sessionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetInstalledComponentsAsync(ByVal sessionId As String, ByVal userState As Object)
            If (Me.GetInstalledComponentsOperationCompleted Is Nothing) Then
                Me.GetInstalledComponentsOperationCompleted = AddressOf Me.OnGetInstalledComponentsOperationCompleted
            End If
            Me.InvokeAsync("GetInstalledComponents", New Object() {sessionId}, Me.GetInstalledComponentsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetInstalledComponentsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetInstalledComponentsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetInstalledComponentsCompleted(Me, New GetInstalledComponentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="ImportSoftwarePackageResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ImportSoftwarePackage2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal importSoftwarePackageProperties2 As ImportSoftwarePackageProperties2) As <System.Xml.Serialization.XmlElementAttribute("softwarePackageId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("ImportSoftwarePackage2", New Object() {sessionId, importSoftwarePackageProperties2})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ImportSoftwarePackage2Async(ByVal sessionId As String, ByVal importSoftwarePackageProperties2 As ImportSoftwarePackageProperties2)
            Me.ImportSoftwarePackage2Async(sessionId, importSoftwarePackageProperties2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ImportSoftwarePackage2Async(ByVal sessionId As String, ByVal importSoftwarePackageProperties2 As ImportSoftwarePackageProperties2, ByVal userState As Object)
            If (Me.ImportSoftwarePackage2OperationCompleted Is Nothing) Then
                Me.ImportSoftwarePackage2OperationCompleted = AddressOf Me.OnImportSoftwarePackage2OperationCompleted
            End If
            Me.InvokeAsync("ImportSoftwarePackage2", New Object() {sessionId, importSoftwarePackageProperties2}, Me.ImportSoftwarePackage2OperationCompleted, userState)
        End Sub
        
        Private Sub OnImportSoftwarePackage2OperationCompleted(ByVal arg As Object)
            If (Not (Me.ImportSoftwarePackage2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ImportSoftwarePackage2Completed(Me, New ImportSoftwarePackage2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RepositionSoftwarePackageProcedure(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, ByVal repositionNumber As Long)
            Me.Invoke("RepositionSoftwarePackageProcedure", New Object() {sessionId, softwarePackageProcedureGroupId, softwarePackageProcedureId, repositionNumber})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepositionSoftwarePackageProcedureAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroupId As String, ByVal softwarePackageProcedureId As String, ByVal repositionNumber As Long)
            Me.RepositionSoftwarePackageProcedureAsync(sessionId, softwarePackageProcedureGroupId, softwarePackageProcedureId, repositionNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepositionSoftwarePackageProcedureAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroupId As String, ByVal softwarePackageProcedureId As String, ByVal repositionNumber As Long, ByVal userState As Object)
            If (Me.RepositionSoftwarePackageProcedureOperationCompleted Is Nothing) Then
                Me.RepositionSoftwarePackageProcedureOperationCompleted = AddressOf Me.OnRepositionSoftwarePackageProcedureOperationCompleted
            End If
            Me.InvokeAsync("RepositionSoftwarePackageProcedure", New Object() {sessionId, softwarePackageProcedureGroupId, softwarePackageProcedureId, repositionNumber}, Me.RepositionSoftwarePackageProcedureOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepositionSoftwarePackageProcedureOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepositionSoftwarePackageProcedureCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepositionSoftwarePackageProcedureCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkSoftwareGroupsToSoftwarePackageGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwareGroupIds() As String)
            Me.Invoke("LinkSoftwareGroupsToSoftwarePackageGroup", New Object() {sessionId, softwarePackageGroupId, softwareGroupIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSoftwareGroupsToSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwareGroupIds() As String)
            Me.LinkSoftwareGroupsToSoftwarePackageGroupAsync(sessionId, softwarePackageGroupId, softwareGroupIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSoftwareGroupsToSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwareGroupIds() As String, ByVal userState As Object)
            If (Me.LinkSoftwareGroupsToSoftwarePackageGroupOperationCompleted Is Nothing) Then
                Me.LinkSoftwareGroupsToSoftwarePackageGroupOperationCompleted = AddressOf Me.OnLinkSoftwareGroupsToSoftwarePackageGroupOperationCompleted
            End If
            Me.InvokeAsync("LinkSoftwareGroupsToSoftwarePackageGroup", New Object() {sessionId, softwarePackageGroupId, softwareGroupIds}, Me.LinkSoftwareGroupsToSoftwarePackageGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkSoftwareGroupsToSoftwarePackageGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkSoftwareGroupsToSoftwarePackageGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkSoftwareGroupsToSoftwarePackageGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnlinkSoftwareGroupsFromSoftwarePackageGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwareGroupIds() As String)
            Me.Invoke("UnlinkSoftwareGroupsFromSoftwarePackageGroup", New Object() {sessionId, softwarePackageGroupId, softwareGroupIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSoftwareGroupsFromSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwareGroupIds() As String)
            Me.UnlinkSoftwareGroupsFromSoftwarePackageGroupAsync(sessionId, softwarePackageGroupId, softwareGroupIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSoftwareGroupsFromSoftwarePackageGroupAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwareGroupIds() As String, ByVal userState As Object)
            If (Me.UnlinkSoftwareGroupsFromSoftwarePackageGroupOperationCompleted Is Nothing) Then
                Me.UnlinkSoftwareGroupsFromSoftwarePackageGroupOperationCompleted = AddressOf Me.OnUnlinkSoftwareGroupsFromSoftwarePackageGroupOperationCompleted
            End If
            Me.InvokeAsync("UnlinkSoftwareGroupsFromSoftwarePackageGroup", New Object() {sessionId, softwarePackageGroupId, softwareGroupIds}, Me.UnlinkSoftwareGroupsFromSoftwarePackageGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnlinkSoftwareGroupsFromSoftwarePackageGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnlinkSoftwareGroupsFromSoftwarePackageGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnlinkSoftwareGroupsFromSoftwarePackageGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSoftwareGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal parentSoftwarePackageGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal createSoftwareGroupProperties As CreateSoftwareGroupProperties) As <System.Xml.Serialization.XmlElementAttribute("softwareGroupId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSoftwareGroup", New Object() {sessionId, parentSoftwarePackageGroupId, createSoftwareGroupProperties})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwareGroupAsync(ByVal sessionId As String, ByVal parentSoftwarePackageGroupId As String, ByVal createSoftwareGroupProperties As CreateSoftwareGroupProperties)
            Me.CreateSoftwareGroupAsync(sessionId, parentSoftwarePackageGroupId, createSoftwareGroupProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwareGroupAsync(ByVal sessionId As String, ByVal parentSoftwarePackageGroupId As String, ByVal createSoftwareGroupProperties As CreateSoftwareGroupProperties, ByVal userState As Object)
            If (Me.CreateSoftwareGroupOperationCompleted Is Nothing) Then
                Me.CreateSoftwareGroupOperationCompleted = AddressOf Me.OnCreateSoftwareGroupOperationCompleted
            End If
            Me.InvokeAsync("CreateSoftwareGroup", New Object() {sessionId, parentSoftwarePackageGroupId, createSoftwareGroupProperties}, Me.CreateSoftwareGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSoftwareGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSoftwareGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSoftwareGroupCompleted(Me, New CreateSoftwareGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteSoftwareGroups(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareGroupId As String, ByVal isRecursive As Boolean)
            Me.Invoke("DeleteSoftwareGroups", New Object() {sessionId, softwareGroupId, isRecursive})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwareGroupsAsync(ByVal sessionId As String, ByVal softwareGroupId As String, ByVal isRecursive As Boolean)
            Me.DeleteSoftwareGroupsAsync(sessionId, softwareGroupId, isRecursive, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwareGroupsAsync(ByVal sessionId As String, ByVal softwareGroupId As String, ByVal isRecursive As Boolean, ByVal userState As Object)
            If (Me.DeleteSoftwareGroupsOperationCompleted Is Nothing) Then
                Me.DeleteSoftwareGroupsOperationCompleted = AddressOf Me.OnDeleteSoftwareGroupsOperationCompleted
            End If
            Me.InvokeAsync("DeleteSoftwareGroups", New Object() {sessionId, softwareGroupId, isRecursive}, Me.DeleteSoftwareGroupsOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSoftwareGroupsOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSoftwareGroupsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSoftwareGroupsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSoftwareGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setSoftwareGroupProperties As SetSoftwareGroupProperties)
            Me.Invoke("SetSoftwareGroup", New Object() {sessionId, softwareGroupId, setSoftwareGroupProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwareGroupAsync(ByVal sessionId As String, ByVal softwareGroupId As String, ByVal setSoftwareGroupProperties As SetSoftwareGroupProperties)
            Me.SetSoftwareGroupAsync(sessionId, softwareGroupId, setSoftwareGroupProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwareGroupAsync(ByVal sessionId As String, ByVal softwareGroupId As String, ByVal setSoftwareGroupProperties As SetSoftwareGroupProperties, ByVal userState As Object)
            If (Me.SetSoftwareGroupOperationCompleted Is Nothing) Then
                Me.SetSoftwareGroupOperationCompleted = AddressOf Me.OnSetSoftwareGroupOperationCompleted
            End If
            Me.InvokeAsync("SetSoftwareGroup", New Object() {sessionId, softwareGroupId, setSoftwareGroupProperties}, Me.SetSoftwareGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSoftwareGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSoftwareGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSoftwareGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateComputer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal createComputerProperties As CreateComputerProperties) As <System.Xml.Serialization.XmlElementAttribute("computerId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateComputer", New Object() {sessionId, createComputerProperties})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateComputerAsync(ByVal sessionId As String, ByVal createComputerProperties As CreateComputerProperties)
            Me.CreateComputerAsync(sessionId, createComputerProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateComputerAsync(ByVal sessionId As String, ByVal createComputerProperties As CreateComputerProperties, ByVal userState As Object)
            If (Me.CreateComputerOperationCompleted Is Nothing) Then
                Me.CreateComputerOperationCompleted = AddressOf Me.OnCreateComputerOperationCompleted
            End If
            Me.InvokeAsync("CreateComputer", New Object() {sessionId, createComputerProperties}, Me.CreateComputerOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateComputerOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateComputerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateComputerCompleted(Me, New CreateComputerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateUserProfile(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal createUserProfileProperties As CreateUserProfileProperties) As <System.Xml.Serialization.XmlElementAttribute("userProfileId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateUserProfile", New Object() {sessionId, createUserProfileProperties})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateUserProfileAsync(ByVal sessionId As String, ByVal createUserProfileProperties As CreateUserProfileProperties)
            Me.CreateUserProfileAsync(sessionId, createUserProfileProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateUserProfileAsync(ByVal sessionId As String, ByVal createUserProfileProperties As CreateUserProfileProperties, ByVal userState As Object)
            If (Me.CreateUserProfileOperationCompleted Is Nothing) Then
                Me.CreateUserProfileOperationCompleted = AddressOf Me.OnCreateUserProfileOperationCompleted
            End If
            Me.InvokeAsync("CreateUserProfile", New Object() {sessionId, createUserProfileProperties}, Me.CreateUserProfileOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateUserProfileOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateUserProfileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateUserProfileCompleted(Me, New CreateUserProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetComputer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal computerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setComputerProperties As SetComputerProperties)
            Me.Invoke("SetComputer", New Object() {sessionId, computerId, setComputerProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetComputerAsync(ByVal sessionId As String, ByVal computerId As String, ByVal setComputerProperties As SetComputerProperties)
            Me.SetComputerAsync(sessionId, computerId, setComputerProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetComputerAsync(ByVal sessionId As String, ByVal computerId As String, ByVal setComputerProperties As SetComputerProperties, ByVal userState As Object)
            If (Me.SetComputerOperationCompleted Is Nothing) Then
                Me.SetComputerOperationCompleted = AddressOf Me.OnSetComputerOperationCompleted
            End If
            Me.InvokeAsync("SetComputer", New Object() {sessionId, computerId, setComputerProperties}, Me.SetComputerOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetComputerOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetComputerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetComputerCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="SetComputerResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetComputerByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal computerHostName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setComputerProperties As SetComputerProperties)
            Me.Invoke("SetComputerByName", New Object() {sessionId, computerHostName, setComputerProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetComputerByNameAsync(ByVal sessionId As String, ByVal computerHostName As String, ByVal setComputerProperties As SetComputerProperties)
            Me.SetComputerByNameAsync(sessionId, computerHostName, setComputerProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetComputerByNameAsync(ByVal sessionId As String, ByVal computerHostName As String, ByVal setComputerProperties As SetComputerProperties, ByVal userState As Object)
            If (Me.SetComputerByNameOperationCompleted Is Nothing) Then
                Me.SetComputerByNameOperationCompleted = AddressOf Me.OnSetComputerByNameOperationCompleted
            End If
            Me.InvokeAsync("SetComputerByName", New Object() {sessionId, computerHostName, setComputerProperties}, Me.SetComputerByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetComputerByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetComputerByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetComputerByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetUserProfile(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal userProfileId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setUserProfileProperties As SetUserProfileProperties)
            Me.Invoke("SetUserProfile", New Object() {sessionId, userProfileId, setUserProfileProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetUserProfileAsync(ByVal sessionId As String, ByVal userProfileId As String, ByVal setUserProfileProperties As SetUserProfileProperties)
            Me.SetUserProfileAsync(sessionId, userProfileId, setUserProfileProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetUserProfileAsync(ByVal sessionId As String, ByVal userProfileId As String, ByVal setUserProfileProperties As SetUserProfileProperties, ByVal userState As Object)
            If (Me.SetUserProfileOperationCompleted Is Nothing) Then
                Me.SetUserProfileOperationCompleted = AddressOf Me.OnSetUserProfileOperationCompleted
            End If
            Me.InvokeAsync("SetUserProfile", New Object() {sessionId, userProfileId, setUserProfileProperties}, Me.SetUserProfileOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetUserProfileOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetUserProfileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetUserProfileCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="SetUserProfileResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetUserProfileByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal userProfileName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setUserProfileProperties As SetUserProfileProperties)
            Me.Invoke("SetUserProfileByName", New Object() {sessionId, userProfileName, setUserProfileProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetUserProfileByNameAsync(ByVal sessionId As String, ByVal userProfileName As String, ByVal setUserProfileProperties As SetUserProfileProperties)
            Me.SetUserProfileByNameAsync(sessionId, userProfileName, setUserProfileProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetUserProfileByNameAsync(ByVal sessionId As String, ByVal userProfileName As String, ByVal setUserProfileProperties As SetUserProfileProperties, ByVal userState As Object)
            If (Me.SetUserProfileByNameOperationCompleted Is Nothing) Then
                Me.SetUserProfileByNameOperationCompleted = AddressOf Me.OnSetUserProfileByNameOperationCompleted
            End If
            Me.InvokeAsync("SetUserProfileByName", New Object() {sessionId, userProfileName, setUserProfileProperties}, Me.SetUserProfileByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetUserProfileByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetUserProfileByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetUserProfileByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteComputers(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal computerType As ComputerType, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal computerIds() As String)
            Me.Invoke("DeleteComputers", New Object() {sessionId, computerType, computerIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteComputersAsync(ByVal sessionId As String, ByVal computerType As ComputerType, ByVal computerIds() As String)
            Me.DeleteComputersAsync(sessionId, computerType, computerIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteComputersAsync(ByVal sessionId As String, ByVal computerType As ComputerType, ByVal computerIds() As String, ByVal userState As Object)
            If (Me.DeleteComputersOperationCompleted Is Nothing) Then
                Me.DeleteComputersOperationCompleted = AddressOf Me.OnDeleteComputersOperationCompleted
            End If
            Me.InvokeAsync("DeleteComputers", New Object() {sessionId, computerType, computerIds}, Me.DeleteComputersOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteComputersOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteComputersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteComputersCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="DeleteComputersResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteComputersByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal computerType As ComputerType, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal computerHostNames() As String)
            Me.Invoke("DeleteComputersByName", New Object() {sessionId, computerType, computerHostNames})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteComputersByNameAsync(ByVal sessionId As String, ByVal computerType As ComputerType, ByVal computerHostNames() As String)
            Me.DeleteComputersByNameAsync(sessionId, computerType, computerHostNames, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteComputersByNameAsync(ByVal sessionId As String, ByVal computerType As ComputerType, ByVal computerHostNames() As String, ByVal userState As Object)
            If (Me.DeleteComputersByNameOperationCompleted Is Nothing) Then
                Me.DeleteComputersByNameOperationCompleted = AddressOf Me.OnDeleteComputersByNameOperationCompleted
            End If
            Me.InvokeAsync("DeleteComputersByName", New Object() {sessionId, computerType, computerHostNames}, Me.DeleteComputersByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteComputersByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteComputersByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteComputersByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteUserProfiles(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal userProfileIds() As String)
            Me.Invoke("DeleteUserProfiles", New Object() {sessionId, userProfileIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteUserProfilesAsync(ByVal sessionId As String, ByVal userProfileIds() As String)
            Me.DeleteUserProfilesAsync(sessionId, userProfileIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteUserProfilesAsync(ByVal sessionId As String, ByVal userProfileIds() As String, ByVal userState As Object)
            If (Me.DeleteUserProfilesOperationCompleted Is Nothing) Then
                Me.DeleteUserProfilesOperationCompleted = AddressOf Me.OnDeleteUserProfilesOperationCompleted
            End If
            Me.InvokeAsync("DeleteUserProfiles", New Object() {sessionId, userProfileIds}, Me.DeleteUserProfilesOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteUserProfilesOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteUserProfilesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteUserProfilesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="DeleteUserProfilesResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteUserProfilesByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal userProfileNames() As String)
            Me.Invoke("DeleteUserProfilesByName", New Object() {sessionId, userProfileNames})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteUserProfilesByNameAsync(ByVal sessionId As String, ByVal userProfileNames() As String)
            Me.DeleteUserProfilesByNameAsync(sessionId, userProfileNames, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteUserProfilesByNameAsync(ByVal sessionId As String, ByVal userProfileNames() As String, ByVal userState As Object)
            If (Me.DeleteUserProfilesByNameOperationCompleted Is Nothing) Then
                Me.DeleteUserProfilesByNameOperationCompleted = AddressOf Me.OnDeleteUserProfilesByNameOperationCompleted
            End If
            Me.InvokeAsync("DeleteUserProfilesByName", New Object() {sessionId, userProfileNames}, Me.DeleteUserProfilesByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteUserProfilesByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteUserProfilesByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteUserProfilesByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteSoftwareJobsInComputer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwareJobIds() As String)
            Me.Invoke("DeleteSoftwareJobsInComputer", New Object() {sessionId, softwareJobIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwareJobsInComputerAsync(ByVal sessionId As String, ByVal softwareJobIds() As String)
            Me.DeleteSoftwareJobsInComputerAsync(sessionId, softwareJobIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwareJobsInComputerAsync(ByVal sessionId As String, ByVal softwareJobIds() As String, ByVal userState As Object)
            If (Me.DeleteSoftwareJobsInComputerOperationCompleted Is Nothing) Then
                Me.DeleteSoftwareJobsInComputerOperationCompleted = AddressOf Me.OnDeleteSoftwareJobsInComputerOperationCompleted
            End If
            Me.InvokeAsync("DeleteSoftwareJobsInComputer", New Object() {sessionId, softwareJobIds}, Me.DeleteSoftwareJobsInComputerOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSoftwareJobsInComputerOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSoftwareJobsInComputerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSoftwareJobsInComputerCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateSoftwarePolicyResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSoftwarePolicy2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal createSoftwarePolicyProperties2 As CreateSoftwarePolicyProperties2) As <System.Xml.Serialization.XmlElementAttribute("softwarePolicyId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSoftwarePolicy2", New Object() {sessionId, unitGroupId, createSoftwarePolicyProperties2})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePolicy2Async(ByVal sessionId As String, ByVal unitGroupId As String, ByVal createSoftwarePolicyProperties2 As CreateSoftwarePolicyProperties2)
            Me.CreateSoftwarePolicy2Async(sessionId, unitGroupId, createSoftwarePolicyProperties2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePolicy2Async(ByVal sessionId As String, ByVal unitGroupId As String, ByVal createSoftwarePolicyProperties2 As CreateSoftwarePolicyProperties2, ByVal userState As Object)
            If (Me.CreateSoftwarePolicy2OperationCompleted Is Nothing) Then
                Me.CreateSoftwarePolicy2OperationCompleted = AddressOf Me.OnCreateSoftwarePolicy2OperationCompleted
            End If
            Me.InvokeAsync("CreateSoftwarePolicy2", New Object() {sessionId, unitGroupId, createSoftwarePolicyProperties2}, Me.CreateSoftwarePolicy2OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSoftwarePolicy2OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSoftwarePolicy2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSoftwarePolicy2Completed(Me, New CreateSoftwarePolicy2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="SetSoftwarePolicyResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSoftwarePolicy2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setSoftwarePolicyProperties2 As SetSoftwarePolicyProperties2)
            Me.Invoke("SetSoftwarePolicy2", New Object() {sessionId, softwarePolicyId, setSoftwarePolicyProperties2})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePolicy2Async(ByVal sessionId As String, ByVal softwarePolicyId As String, ByVal setSoftwarePolicyProperties2 As SetSoftwarePolicyProperties2)
            Me.SetSoftwarePolicy2Async(sessionId, softwarePolicyId, setSoftwarePolicyProperties2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePolicy2Async(ByVal sessionId As String, ByVal softwarePolicyId As String, ByVal setSoftwarePolicyProperties2 As SetSoftwarePolicyProperties2, ByVal userState As Object)
            If (Me.SetSoftwarePolicy2OperationCompleted Is Nothing) Then
                Me.SetSoftwarePolicy2OperationCompleted = AddressOf Me.OnSetSoftwarePolicy2OperationCompleted
            End If
            Me.InvokeAsync("SetSoftwarePolicy2", New Object() {sessionId, softwarePolicyId, setSoftwarePolicyProperties2}, Me.SetSoftwarePolicy2OperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSoftwarePolicy2OperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSoftwarePolicy2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSoftwarePolicy2Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteSoftwarePoliciesInUnitGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String, ByVal isRecursive As Boolean)
            Me.Invoke("DeleteSoftwarePoliciesInUnitGroup", New Object() {sessionId, unitGroupId, isRecursive})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwarePoliciesInUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal isRecursive As Boolean)
            Me.DeleteSoftwarePoliciesInUnitGroupAsync(sessionId, unitGroupId, isRecursive, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwarePoliciesInUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal isRecursive As Boolean, ByVal userState As Object)
            If (Me.DeleteSoftwarePoliciesInUnitGroupOperationCompleted Is Nothing) Then
                Me.DeleteSoftwarePoliciesInUnitGroupOperationCompleted = AddressOf Me.OnDeleteSoftwarePoliciesInUnitGroupOperationCompleted
            End If
            Me.InvokeAsync("DeleteSoftwarePoliciesInUnitGroup", New Object() {sessionId, unitGroupId, isRecursive}, Me.DeleteSoftwarePoliciesInUnitGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSoftwarePoliciesInUnitGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSoftwarePoliciesInUnitGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSoftwarePoliciesInUnitGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateUnitGroupResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateUnitGroup2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal parentUnitGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal createUnitGroupProperties As CreateUnitGroupProperties2, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal computerUUIDS() As String, ByVal linkAllComputers As Boolean) As <System.Xml.Serialization.XmlElementAttribute("unitGroupId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateUnitGroup2", New Object() {sessionId, parentUnitGroupId, createUnitGroupProperties, computerUUIDS, linkAllComputers})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateUnitGroup2Async(ByVal sessionId As String, ByVal parentUnitGroupId As String, ByVal createUnitGroupProperties As CreateUnitGroupProperties2, ByVal computerUUIDS() As String, ByVal linkAllComputers As Boolean)
            Me.CreateUnitGroup2Async(sessionId, parentUnitGroupId, createUnitGroupProperties, computerUUIDS, linkAllComputers, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateUnitGroup2Async(ByVal sessionId As String, ByVal parentUnitGroupId As String, ByVal createUnitGroupProperties As CreateUnitGroupProperties2, ByVal computerUUIDS() As String, ByVal linkAllComputers As Boolean, ByVal userState As Object)
            If (Me.CreateUnitGroup2OperationCompleted Is Nothing) Then
                Me.CreateUnitGroup2OperationCompleted = AddressOf Me.OnCreateUnitGroup2OperationCompleted
            End If
            Me.InvokeAsync("CreateUnitGroup2", New Object() {sessionId, parentUnitGroupId, createUnitGroupProperties, computerUUIDS, linkAllComputers}, Me.CreateUnitGroup2OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateUnitGroup2OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateUnitGroup2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateUnitGroup2Completed(Me, New CreateUnitGroup2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateUnitGroupResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateUnitGroupByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal parentUnitGroupName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupPropertiesByName As CreateUnitGroupPropertiesByName, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal computerNames() As String, ByVal linkAllComputers As Boolean) As <System.Xml.Serialization.XmlElementAttribute("unitGroupId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateUnitGroupByName", New Object() {sessionId, parentUnitGroupName, unitGroupPropertiesByName, computerNames, linkAllComputers})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateUnitGroupByNameAsync(ByVal sessionId As String, ByVal parentUnitGroupName As String, ByVal unitGroupPropertiesByName As CreateUnitGroupPropertiesByName, ByVal computerNames() As String, ByVal linkAllComputers As Boolean)
            Me.CreateUnitGroupByNameAsync(sessionId, parentUnitGroupName, unitGroupPropertiesByName, computerNames, linkAllComputers, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateUnitGroupByNameAsync(ByVal sessionId As String, ByVal parentUnitGroupName As String, ByVal unitGroupPropertiesByName As CreateUnitGroupPropertiesByName, ByVal computerNames() As String, ByVal linkAllComputers As Boolean, ByVal userState As Object)
            If (Me.CreateUnitGroupByNameOperationCompleted Is Nothing) Then
                Me.CreateUnitGroupByNameOperationCompleted = AddressOf Me.OnCreateUnitGroupByNameOperationCompleted
            End If
            Me.InvokeAsync("CreateUnitGroupByName", New Object() {sessionId, parentUnitGroupName, unitGroupPropertiesByName, computerNames, linkAllComputers}, Me.CreateUnitGroupByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateUnitGroupByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateUnitGroupByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateUnitGroupByNameCompleted(Me, New CreateUnitGroupByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateSoftwarePolicyResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSoftwarePolicyByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupPropertiesForSoftwarePolicy As UnitGroupPropertiesForSoftwarePolicy, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal createSoftwarePolicyProperties2 As CreateSoftwarePolicyProperties2) As <System.Xml.Serialization.XmlElementAttribute("softwarePolicyId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSoftwarePolicyByName", New Object() {sessionId, unitGroupPropertiesForSoftwarePolicy, createSoftwarePolicyProperties2})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePolicyByNameAsync(ByVal sessionId As String, ByVal unitGroupPropertiesForSoftwarePolicy As UnitGroupPropertiesForSoftwarePolicy, ByVal createSoftwarePolicyProperties2 As CreateSoftwarePolicyProperties2)
            Me.CreateSoftwarePolicyByNameAsync(sessionId, unitGroupPropertiesForSoftwarePolicy, createSoftwarePolicyProperties2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePolicyByNameAsync(ByVal sessionId As String, ByVal unitGroupPropertiesForSoftwarePolicy As UnitGroupPropertiesForSoftwarePolicy, ByVal createSoftwarePolicyProperties2 As CreateSoftwarePolicyProperties2, ByVal userState As Object)
            If (Me.CreateSoftwarePolicyByNameOperationCompleted Is Nothing) Then
                Me.CreateSoftwarePolicyByNameOperationCompleted = AddressOf Me.OnCreateSoftwarePolicyByNameOperationCompleted
            End If
            Me.InvokeAsync("CreateSoftwarePolicyByName", New Object() {sessionId, unitGroupPropertiesForSoftwarePolicy, createSoftwarePolicyProperties2}, Me.CreateSoftwarePolicyByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSoftwarePolicyByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSoftwarePolicyByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSoftwarePolicyByNameCompleted(Me, New CreateSoftwarePolicyByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="SetSoftwarePolicyResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSoftwarePolicyByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setSoftwarePolicyPropertiesByName As SetSoftwarePolicyPropertiesByName)
            Me.Invoke("SetSoftwarePolicyByName", New Object() {sessionId, softwarePolicyName, setSoftwarePolicyPropertiesByName})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePolicyByNameAsync(ByVal sessionId As String, ByVal softwarePolicyName As String, ByVal setSoftwarePolicyPropertiesByName As SetSoftwarePolicyPropertiesByName)
            Me.SetSoftwarePolicyByNameAsync(sessionId, softwarePolicyName, setSoftwarePolicyPropertiesByName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePolicyByNameAsync(ByVal sessionId As String, ByVal softwarePolicyName As String, ByVal setSoftwarePolicyPropertiesByName As SetSoftwarePolicyPropertiesByName, ByVal userState As Object)
            If (Me.SetSoftwarePolicyByNameOperationCompleted Is Nothing) Then
                Me.SetSoftwarePolicyByNameOperationCompleted = AddressOf Me.OnSetSoftwarePolicyByNameOperationCompleted
            End If
            Me.InvokeAsync("SetSoftwarePolicyByName", New Object() {sessionId, softwarePolicyName, setSoftwarePolicyPropertiesByName}, Me.SetSoftwarePolicyByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSoftwarePolicyByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSoftwarePolicyByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSoftwarePolicyByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="DeleteSoftwarePoliciesInUnitGroupResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteSoftwarePoliciesInUnitGroupByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupName As String, ByVal isRecursive As Boolean)
            Me.Invoke("DeleteSoftwarePoliciesInUnitGroupByName", New Object() {sessionId, unitGroupName, isRecursive})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwarePoliciesInUnitGroupByNameAsync(ByVal sessionId As String, ByVal unitGroupName As String, ByVal isRecursive As Boolean)
            Me.DeleteSoftwarePoliciesInUnitGroupByNameAsync(sessionId, unitGroupName, isRecursive, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwarePoliciesInUnitGroupByNameAsync(ByVal sessionId As String, ByVal unitGroupName As String, ByVal isRecursive As Boolean, ByVal userState As Object)
            If (Me.DeleteSoftwarePoliciesInUnitGroupByNameOperationCompleted Is Nothing) Then
                Me.DeleteSoftwarePoliciesInUnitGroupByNameOperationCompleted = AddressOf Me.OnDeleteSoftwarePoliciesInUnitGroupByNameOperationCompleted
            End If
            Me.InvokeAsync("DeleteSoftwarePoliciesInUnitGroupByName", New Object() {sessionId, unitGroupName, isRecursive}, Me.DeleteSoftwarePoliciesInUnitGroupByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSoftwarePoliciesInUnitGroupByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSoftwarePoliciesInUnitGroupByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSoftwarePoliciesInUnitGroupByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="ImportSoftwarePackageResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ImportSoftwarePackageByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal importSoftwarePackagePropertiesByName As ImportSoftwarePackagePropertiesByName) As <System.Xml.Serialization.XmlElementAttribute("softwarePackageId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("ImportSoftwarePackageByName", New Object() {sessionId, importSoftwarePackagePropertiesByName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ImportSoftwarePackageByNameAsync(ByVal sessionId As String, ByVal importSoftwarePackagePropertiesByName As ImportSoftwarePackagePropertiesByName)
            Me.ImportSoftwarePackageByNameAsync(sessionId, importSoftwarePackagePropertiesByName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ImportSoftwarePackageByNameAsync(ByVal sessionId As String, ByVal importSoftwarePackagePropertiesByName As ImportSoftwarePackagePropertiesByName, ByVal userState As Object)
            If (Me.ImportSoftwarePackageByNameOperationCompleted Is Nothing) Then
                Me.ImportSoftwarePackageByNameOperationCompleted = AddressOf Me.OnImportSoftwarePackageByNameOperationCompleted
            End If
            Me.InvokeAsync("ImportSoftwarePackageByName", New Object() {sessionId, importSoftwarePackagePropertiesByName}, Me.ImportSoftwarePackageByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnImportSoftwarePackageByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.ImportSoftwarePackageByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ImportSoftwarePackageByNameCompleted(Me, New ImportSoftwarePackageByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="RepositionSoftwarePackageProcedureResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RepositionSoftwarePackageProcedureByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureGroupName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedure As SoftwarePackageProcedure, ByVal repositionNumber As Long)
            Me.Invoke("RepositionSoftwarePackageProcedureByName", New Object() {sessionId, softwarePackageProcedureGroupName, softwarePackageProcedure, repositionNumber})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepositionSoftwarePackageProcedureByNameAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroupName As String, ByVal softwarePackageProcedure As SoftwarePackageProcedure, ByVal repositionNumber As Long)
            Me.RepositionSoftwarePackageProcedureByNameAsync(sessionId, softwarePackageProcedureGroupName, softwarePackageProcedure, repositionNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepositionSoftwarePackageProcedureByNameAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroupName As String, ByVal softwarePackageProcedure As SoftwarePackageProcedure, ByVal repositionNumber As Long, ByVal userState As Object)
            If (Me.RepositionSoftwarePackageProcedureByNameOperationCompleted Is Nothing) Then
                Me.RepositionSoftwarePackageProcedureByNameOperationCompleted = AddressOf Me.OnRepositionSoftwarePackageProcedureByNameOperationCompleted
            End If
            Me.InvokeAsync("RepositionSoftwarePackageProcedureByName", New Object() {sessionId, softwarePackageProcedureGroupName, softwarePackageProcedure, repositionNumber}, Me.RepositionSoftwarePackageProcedureByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepositionSoftwarePackageProcedureByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepositionSoftwarePackageProcedureByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepositionSoftwarePackageProcedureByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="LinkSoftwareGroupsToSoftwarePackageGroupResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkSoftwareGroupsToSoftwarePackageGroupByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupName As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwareGroupNames() As String)
            Me.Invoke("LinkSoftwareGroupsToSoftwarePackageGroupByName", New Object() {sessionId, softwarePackageGroupName, softwareGroupNames})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSoftwareGroupsToSoftwarePackageGroupByNameAsync(ByVal sessionId As String, ByVal softwarePackageGroupName As String, ByVal softwareGroupNames() As String)
            Me.LinkSoftwareGroupsToSoftwarePackageGroupByNameAsync(sessionId, softwarePackageGroupName, softwareGroupNames, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSoftwareGroupsToSoftwarePackageGroupByNameAsync(ByVal sessionId As String, ByVal softwarePackageGroupName As String, ByVal softwareGroupNames() As String, ByVal userState As Object)
            If (Me.LinkSoftwareGroupsToSoftwarePackageGroupByNameOperationCompleted Is Nothing) Then
                Me.LinkSoftwareGroupsToSoftwarePackageGroupByNameOperationCompleted = AddressOf Me.OnLinkSoftwareGroupsToSoftwarePackageGroupByNameOperationCompleted
            End If
            Me.InvokeAsync("LinkSoftwareGroupsToSoftwarePackageGroupByName", New Object() {sessionId, softwarePackageGroupName, softwareGroupNames}, Me.LinkSoftwareGroupsToSoftwarePackageGroupByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkSoftwareGroupsToSoftwarePackageGroupByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkSoftwareGroupsToSoftwarePackageGroupByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkSoftwareGroupsToSoftwarePackageGroupByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="UnlinkSoftwareGroupsFromSoftwarePackageGroupResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnlinkSoftwareGroupsFromSoftwarePackageGroupByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupName As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwareGroupNames() As String)
            Me.Invoke("UnlinkSoftwareGroupsFromSoftwarePackageGroupByName", New Object() {sessionId, softwarePackageGroupName, softwareGroupNames})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSoftwareGroupsFromSoftwarePackageGroupByNameAsync(ByVal sessionId As String, ByVal softwarePackageGroupName As String, ByVal softwareGroupNames() As String)
            Me.UnlinkSoftwareGroupsFromSoftwarePackageGroupByNameAsync(sessionId, softwarePackageGroupName, softwareGroupNames, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSoftwareGroupsFromSoftwarePackageGroupByNameAsync(ByVal sessionId As String, ByVal softwarePackageGroupName As String, ByVal softwareGroupNames() As String, ByVal userState As Object)
            If (Me.UnlinkSoftwareGroupsFromSoftwarePackageGroupByNameOperationCompleted Is Nothing) Then
                Me.UnlinkSoftwareGroupsFromSoftwarePackageGroupByNameOperationCompleted = AddressOf Me.OnUnlinkSoftwareGroupsFromSoftwarePackageGroupByNameOperationCompleted
            End If
            Me.InvokeAsync("UnlinkSoftwareGroupsFromSoftwarePackageGroupByName", New Object() {sessionId, softwarePackageGroupName, softwareGroupNames}, Me.UnlinkSoftwareGroupsFromSoftwarePackageGroupByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnlinkSoftwareGroupsFromSoftwarePackageGroupByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnlinkSoftwareGroupsFromSoftwarePackageGroupByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnlinkSoftwareGroupsFromSoftwarePackageGroupByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateSoftwareGroupResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSoftwareGroupByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal parentSoftwarePackageGroupName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal createSoftwareGroupProperties As CreateSoftwareGroupProperties) As <System.Xml.Serialization.XmlElementAttribute("softwareGroupId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSoftwareGroupByName", New Object() {sessionId, parentSoftwarePackageGroupName, createSoftwareGroupProperties})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwareGroupByNameAsync(ByVal sessionId As String, ByVal parentSoftwarePackageGroupName As String, ByVal createSoftwareGroupProperties As CreateSoftwareGroupProperties)
            Me.CreateSoftwareGroupByNameAsync(sessionId, parentSoftwarePackageGroupName, createSoftwareGroupProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwareGroupByNameAsync(ByVal sessionId As String, ByVal parentSoftwarePackageGroupName As String, ByVal createSoftwareGroupProperties As CreateSoftwareGroupProperties, ByVal userState As Object)
            If (Me.CreateSoftwareGroupByNameOperationCompleted Is Nothing) Then
                Me.CreateSoftwareGroupByNameOperationCompleted = AddressOf Me.OnCreateSoftwareGroupByNameOperationCompleted
            End If
            Me.InvokeAsync("CreateSoftwareGroupByName", New Object() {sessionId, parentSoftwarePackageGroupName, createSoftwareGroupProperties}, Me.CreateSoftwareGroupByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSoftwareGroupByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSoftwareGroupByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSoftwareGroupByNameCompleted(Me, New CreateSoftwareGroupByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="DeleteSoftwareGroupsResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteSoftwareGroupsByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareGroupName As String, ByVal isRecursive As Boolean)
            Me.Invoke("DeleteSoftwareGroupsByName", New Object() {sessionId, softwareGroupName, isRecursive})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwareGroupsByNameAsync(ByVal sessionId As String, ByVal softwareGroupName As String, ByVal isRecursive As Boolean)
            Me.DeleteSoftwareGroupsByNameAsync(sessionId, softwareGroupName, isRecursive, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwareGroupsByNameAsync(ByVal sessionId As String, ByVal softwareGroupName As String, ByVal isRecursive As Boolean, ByVal userState As Object)
            If (Me.DeleteSoftwareGroupsByNameOperationCompleted Is Nothing) Then
                Me.DeleteSoftwareGroupsByNameOperationCompleted = AddressOf Me.OnDeleteSoftwareGroupsByNameOperationCompleted
            End If
            Me.InvokeAsync("DeleteSoftwareGroupsByName", New Object() {sessionId, softwareGroupName, isRecursive}, Me.DeleteSoftwareGroupsByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSoftwareGroupsByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSoftwareGroupsByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSoftwareGroupsByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="SetSoftwareGroupResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSoftwareGroupByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareGroupName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setSoftwareGroupProperties As SetSoftwareGroupProperties)
            Me.Invoke("SetSoftwareGroupByName", New Object() {sessionId, softwareGroupName, setSoftwareGroupProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwareGroupByNameAsync(ByVal sessionId As String, ByVal softwareGroupName As String, ByVal setSoftwareGroupProperties As SetSoftwareGroupProperties)
            Me.SetSoftwareGroupByNameAsync(sessionId, softwareGroupName, setSoftwareGroupProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwareGroupByNameAsync(ByVal sessionId As String, ByVal softwareGroupName As String, ByVal setSoftwareGroupProperties As SetSoftwareGroupProperties, ByVal userState As Object)
            If (Me.SetSoftwareGroupByNameOperationCompleted Is Nothing) Then
                Me.SetSoftwareGroupByNameOperationCompleted = AddressOf Me.OnSetSoftwareGroupByNameOperationCompleted
            End If
            Me.InvokeAsync("SetSoftwareGroupByName", New Object() {sessionId, softwareGroupName, setSoftwareGroupProperties}, Me.SetSoftwareGroupByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSoftwareGroupByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSoftwareGroupByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSoftwareGroupByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateInstallSoftwareJobResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateInstallSoftwareJob2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal createInstallSoftwareJobOrderProperties As CreateInstallSoftwareJobOrderProperties, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarejobContainerId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitGroupIds() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitIds() As String) As <System.Xml.Serialization.XmlElementAttribute("softwareJobId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateInstallSoftwareJob2", New Object() {sessionId, softwarePackageProcedureId, createInstallSoftwareJobOrderProperties, softwarejobContainerId, unitGroupIds, unitIds})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateInstallSoftwareJob2Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal createInstallSoftwareJobOrderProperties As CreateInstallSoftwareJobOrderProperties, ByVal softwarejobContainerId As String, ByVal unitGroupIds() As String, ByVal unitIds() As String)
            Me.CreateInstallSoftwareJob2Async(sessionId, softwarePackageProcedureId, createInstallSoftwareJobOrderProperties, softwarejobContainerId, unitGroupIds, unitIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateInstallSoftwareJob2Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal createInstallSoftwareJobOrderProperties As CreateInstallSoftwareJobOrderProperties, ByVal softwarejobContainerId As String, ByVal unitGroupIds() As String, ByVal unitIds() As String, ByVal userState As Object)
            If (Me.CreateInstallSoftwareJob2OperationCompleted Is Nothing) Then
                Me.CreateInstallSoftwareJob2OperationCompleted = AddressOf Me.OnCreateInstallSoftwareJob2OperationCompleted
            End If
            Me.InvokeAsync("CreateInstallSoftwareJob2", New Object() {sessionId, softwarePackageProcedureId, createInstallSoftwareJobOrderProperties, softwarejobContainerId, unitGroupIds, unitIds}, Me.CreateInstallSoftwareJob2OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateInstallSoftwareJob2OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateInstallSoftwareJob2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateInstallSoftwareJob2Completed(Me, New CreateInstallSoftwareJob2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateInstallSoftwareJobInSoftwarePolicyResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateInstallSoftwareJobInSoftwarePolicy2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal createInstallSoftwareJobOrderPolicyProperties As CreateInstallSoftwareJobOrderPolicyProperties, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyId As String) As <System.Xml.Serialization.XmlElementAttribute("softwareJobId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateInstallSoftwareJobInSoftwarePolicy2", New Object() {sessionId, softwarePackageProcedureId, createInstallSoftwareJobOrderPolicyProperties, softwarePolicyId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateInstallSoftwareJobInSoftwarePolicy2Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal createInstallSoftwareJobOrderPolicyProperties As CreateInstallSoftwareJobOrderPolicyProperties, ByVal softwarePolicyId As String)
            Me.CreateInstallSoftwareJobInSoftwarePolicy2Async(sessionId, softwarePackageProcedureId, createInstallSoftwareJobOrderPolicyProperties, softwarePolicyId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateInstallSoftwareJobInSoftwarePolicy2Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal createInstallSoftwareJobOrderPolicyProperties As CreateInstallSoftwareJobOrderPolicyProperties, ByVal softwarePolicyId As String, ByVal userState As Object)
            If (Me.CreateInstallSoftwareJobInSoftwarePolicy2OperationCompleted Is Nothing) Then
                Me.CreateInstallSoftwareJobInSoftwarePolicy2OperationCompleted = AddressOf Me.OnCreateInstallSoftwareJobInSoftwarePolicy2OperationCompleted
            End If
            Me.InvokeAsync("CreateInstallSoftwareJobInSoftwarePolicy2", New Object() {sessionId, softwarePackageProcedureId, createInstallSoftwareJobOrderPolicyProperties, softwarePolicyId}, Me.CreateInstallSoftwareJobInSoftwarePolicy2OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateInstallSoftwareJobInSoftwarePolicy2OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateInstallSoftwareJobInSoftwarePolicy2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateInstallSoftwareJobInSoftwarePolicy2Completed(Me, New CreateInstallSoftwareJobInSoftwarePolicy2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="SetSoftwareJobResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSoftwareJob2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setSoftwareJobProperties2 As SetSoftwareJobProperties2)
            Me.Invoke("SetSoftwareJob2", New Object() {sessionId, softwareJobId, setSoftwareJobProperties2})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwareJob2Async(ByVal sessionId As String, ByVal softwareJobId As String, ByVal setSoftwareJobProperties2 As SetSoftwareJobProperties2)
            Me.SetSoftwareJob2Async(sessionId, softwareJobId, setSoftwareJobProperties2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwareJob2Async(ByVal sessionId As String, ByVal softwareJobId As String, ByVal setSoftwareJobProperties2 As SetSoftwareJobProperties2, ByVal userState As Object)
            If (Me.SetSoftwareJob2OperationCompleted Is Nothing) Then
                Me.SetSoftwareJob2OperationCompleted = AddressOf Me.OnSetSoftwareJob2OperationCompleted
            End If
            Me.InvokeAsync("SetSoftwareJob2", New Object() {sessionId, softwareJobId, setSoftwareJobProperties2}, Me.SetSoftwareJob2OperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSoftwareJob2OperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSoftwareJob2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSoftwareJob2Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwareJobResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwareJob2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobPropertiesRequired As SoftwareJobPropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("softwareJobProperties2", IsNullable:=true)> SoftwareJobProperties2
            Dim results() As Object = Me.Invoke("GetSoftwareJob2", New Object() {sessionId, softwareJobId, softwareJobPropertiesRequired})
            Return CType(results(0),SoftwareJobProperties2)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJob2Async(ByVal sessionId As String, ByVal softwareJobId As String, ByVal softwareJobPropertiesRequired As SoftwareJobPropertiesRequired)
            Me.GetSoftwareJob2Async(sessionId, softwareJobId, softwareJobPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJob2Async(ByVal sessionId As String, ByVal softwareJobId As String, ByVal softwareJobPropertiesRequired As SoftwareJobPropertiesRequired, ByVal userState As Object)
            If (Me.GetSoftwareJob2OperationCompleted Is Nothing) Then
                Me.GetSoftwareJob2OperationCompleted = AddressOf Me.OnGetSoftwareJob2OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwareJob2", New Object() {sessionId, softwareJobId, softwareJobPropertiesRequired}, Me.GetSoftwareJob2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwareJob2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwareJob2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwareJob2Completed(Me, New GetSoftwareJob2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwareJobsResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwareJobs2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfSoftwareJobProperties2", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwareJobProperties2", IsNullable:=false)> SoftwareJobProperties2()
            Dim results() As Object = Me.Invoke("GetSoftwareJobs2", New Object() {sessionId, listHandle, noOfSoftwareJobs})
            Return CType(results(0),SoftwareJobProperties2())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobs2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long)
            Me.GetSoftwareJobs2Async(sessionId, listHandle, noOfSoftwareJobs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobs2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long, ByVal userState As Object)
            If (Me.GetSoftwareJobs2OperationCompleted Is Nothing) Then
                Me.GetSoftwareJobs2OperationCompleted = AddressOf Me.OnGetSoftwareJobs2OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwareJobs2", New Object() {sessionId, listHandle, noOfSoftwareJobs}, Me.GetSoftwareJobs2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwareJobs2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwareJobs2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwareJobs2Completed(Me, New GetSoftwareJobs2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwareJobContainerSoftwareJobsResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwareJobContainerSoftwareJobs2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfSoftwareJobProperties2", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwareJobProperties2", IsNullable:=false)> SoftwareJobProperties2()
            Dim results() As Object = Me.Invoke("GetSoftwareJobContainerSoftwareJobs2", New Object() {sessionId, listHandle, noOfSoftwareJobs})
            Return CType(results(0),SoftwareJobProperties2())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobContainerSoftwareJobs2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long)
            Me.GetSoftwareJobContainerSoftwareJobs2Async(sessionId, listHandle, noOfSoftwareJobs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobContainerSoftwareJobs2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long, ByVal userState As Object)
            If (Me.GetSoftwareJobContainerSoftwareJobs2OperationCompleted Is Nothing) Then
                Me.GetSoftwareJobContainerSoftwareJobs2OperationCompleted = AddressOf Me.OnGetSoftwareJobContainerSoftwareJobs2OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwareJobContainerSoftwareJobs2", New Object() {sessionId, listHandle, noOfSoftwareJobs}, Me.GetSoftwareJobContainerSoftwareJobs2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwareJobContainerSoftwareJobs2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwareJobContainerSoftwareJobs2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwareJobContainerSoftwareJobs2Completed(Me, New GetSoftwareJobContainerSoftwareJobs2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwarePolicySoftwareJobsResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePolicySoftwareJobs2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfSoftwareJobProperties2", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwareJobProperties2", IsNullable:=false)> SoftwareJobProperties2()
            Dim results() As Object = Me.Invoke("GetSoftwarePolicySoftwareJobs2", New Object() {sessionId, listHandle, noOfSoftwareJobs})
            Return CType(results(0),SoftwareJobProperties2())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePolicySoftwareJobs2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long)
            Me.GetSoftwarePolicySoftwareJobs2Async(sessionId, listHandle, noOfSoftwareJobs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePolicySoftwareJobs2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long, ByVal userState As Object)
            If (Me.GetSoftwarePolicySoftwareJobs2OperationCompleted Is Nothing) Then
                Me.GetSoftwarePolicySoftwareJobs2OperationCompleted = AddressOf Me.OnGetSoftwarePolicySoftwareJobs2OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePolicySoftwareJobs2", New Object() {sessionId, listHandle, noOfSoftwareJobs}, Me.GetSoftwarePolicySoftwareJobs2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePolicySoftwareJobs2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePolicySoftwareJobs2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePolicySoftwareJobs2Completed(Me, New GetSoftwarePolicySoftwareJobs2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateSoftwareJobContainerResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSoftwareJobContainer2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarejobContainer2 As CreateSoftwareJobContainerProperties2) As <System.Xml.Serialization.XmlElementAttribute("softwareJobContainerId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSoftwareJobContainer2", New Object() {sessionId, softwarejobContainer2})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwareJobContainer2Async(ByVal sessionId As String, ByVal softwarejobContainer2 As CreateSoftwareJobContainerProperties2)
            Me.CreateSoftwareJobContainer2Async(sessionId, softwarejobContainer2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwareJobContainer2Async(ByVal sessionId As String, ByVal softwarejobContainer2 As CreateSoftwareJobContainerProperties2, ByVal userState As Object)
            If (Me.CreateSoftwareJobContainer2OperationCompleted Is Nothing) Then
                Me.CreateSoftwareJobContainer2OperationCompleted = AddressOf Me.OnCreateSoftwareJobContainer2OperationCompleted
            End If
            Me.InvokeAsync("CreateSoftwareJobContainer2", New Object() {sessionId, softwarejobContainer2}, Me.CreateSoftwareJobContainer2OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSoftwareJobContainer2OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSoftwareJobContainer2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSoftwareJobContainer2Completed(Me, New CreateSoftwareJobContainer2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="SetSoftwareJobContainerResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSoftwareJobContainer2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainer2 As SetSoftwareJobContainerProperties2)
            Me.Invoke("SetSoftwareJobContainer2", New Object() {sessionId, softwareJobContainerId, softwareJobContainer2})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwareJobContainer2Async(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainer2 As SetSoftwareJobContainerProperties2)
            Me.SetSoftwareJobContainer2Async(sessionId, softwareJobContainerId, softwareJobContainer2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwareJobContainer2Async(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainer2 As SetSoftwareJobContainerProperties2, ByVal userState As Object)
            If (Me.SetSoftwareJobContainer2OperationCompleted Is Nothing) Then
                Me.SetSoftwareJobContainer2OperationCompleted = AddressOf Me.OnSetSoftwareJobContainer2OperationCompleted
            End If
            Me.InvokeAsync("SetSoftwareJobContainer2", New Object() {sessionId, softwareJobContainerId, softwareJobContainer2}, Me.SetSoftwareJobContainer2OperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSoftwareJobContainer2OperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSoftwareJobContainer2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSoftwareJobContainer2Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwareJobContainerResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwareJobContainer2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerPropertiesRequired2 As SoftwareJobContainerPropertiesRequired2) As <System.Xml.Serialization.XmlElementAttribute("softwareJobContainerProperties2", IsNullable:=true)> SoftwareJobContainerProperties2
            Dim results() As Object = Me.Invoke("GetSoftwareJobContainer2", New Object() {sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired2})
            Return CType(results(0),SoftwareJobContainerProperties2)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobContainer2Async(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainerPropertiesRequired2 As SoftwareJobContainerPropertiesRequired2)
            Me.GetSoftwareJobContainer2Async(sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobContainer2Async(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainerPropertiesRequired2 As SoftwareJobContainerPropertiesRequired2, ByVal userState As Object)
            If (Me.GetSoftwareJobContainer2OperationCompleted Is Nothing) Then
                Me.GetSoftwareJobContainer2OperationCompleted = AddressOf Me.OnGetSoftwareJobContainer2OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwareJobContainer2", New Object() {sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired2}, Me.GetSoftwareJobContainer2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwareJobContainer2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwareJobContainer2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwareJobContainer2Completed(Me, New GetSoftwareJobContainer2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="OpenSoftwareJobContainerListResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwareJobContainerList2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerPropertiesRequired2 As SoftwareJobContainerPropertiesRequired2, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwareJobContainers As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwareJobContainersSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwareJobContainerList2", New Object() {sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired2})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwareJobContainers = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwareJobContainersSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwareJobContainerList2Async(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainerPropertiesRequired2 As SoftwareJobContainerPropertiesRequired2)
            Me.OpenSoftwareJobContainerList2Async(sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwareJobContainerList2Async(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainerPropertiesRequired2 As SoftwareJobContainerPropertiesRequired2, ByVal userState As Object)
            If (Me.OpenSoftwareJobContainerList2OperationCompleted Is Nothing) Then
                Me.OpenSoftwareJobContainerList2OperationCompleted = AddressOf Me.OnOpenSoftwareJobContainerList2OperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwareJobContainerList2", New Object() {sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired2}, Me.OpenSoftwareJobContainerList2OperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwareJobContainerList2OperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwareJobContainerList2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwareJobContainerList2Completed(Me, New OpenSoftwareJobContainerList2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwareJobContainersResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwareJobContainers2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobContainers As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfSoftwareJobContainerProperties2", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwareJobContainerProperties2", IsNullable:=false)> SoftwareJobContainerProperties2()
            Dim results() As Object = Me.Invoke("GetSoftwareJobContainers2", New Object() {sessionId, listHandle, noOfSoftwareJobContainers})
            Return CType(results(0),SoftwareJobContainerProperties2())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobContainers2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobContainers As Long)
            Me.GetSoftwareJobContainers2Async(sessionId, listHandle, noOfSoftwareJobContainers, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobContainers2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobContainers As Long, ByVal userState As Object)
            If (Me.GetSoftwareJobContainers2OperationCompleted Is Nothing) Then
                Me.GetSoftwareJobContainers2OperationCompleted = AddressOf Me.OnGetSoftwareJobContainers2OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwareJobContainers2", New Object() {sessionId, listHandle, noOfSoftwareJobContainers}, Me.GetSoftwareJobContainers2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwareJobContainers2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwareJobContainers2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwareJobContainers2Completed(Me, New GetSoftwareJobContainers2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CloseSoftwareJobContainerListResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwareJobContainerList2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwareJobContainerList2", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwareJobContainerList2Async(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwareJobContainerList2Async(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwareJobContainerList2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwareJobContainerList2OperationCompleted Is Nothing) Then
                Me.CloseSoftwareJobContainerList2OperationCompleted = AddressOf Me.OnCloseSoftwareJobContainerList2OperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwareJobContainerList2", New Object() {sessionId, listHandle}, Me.CloseSoftwareJobContainerList2OperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwareJobContainerList2OperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwareJobContainerList2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwareJobContainerList2Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="OpenSoftwareJobContainerListRecursiveResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwareJobContainerListRecursive2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerPropertiesRequired2 As SoftwareJobContainerPropertiesRequired2, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwareJobContainers As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwareJobContainersSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwareJobContainerListRecursive2", New Object() {sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired2})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwareJobContainers = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwareJobContainersSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwareJobContainerListRecursive2Async(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainerPropertiesRequired2 As SoftwareJobContainerPropertiesRequired2)
            Me.OpenSoftwareJobContainerListRecursive2Async(sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwareJobContainerListRecursive2Async(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainerPropertiesRequired2 As SoftwareJobContainerPropertiesRequired2, ByVal userState As Object)
            If (Me.OpenSoftwareJobContainerListRecursive2OperationCompleted Is Nothing) Then
                Me.OpenSoftwareJobContainerListRecursive2OperationCompleted = AddressOf Me.OnOpenSoftwareJobContainerListRecursive2OperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwareJobContainerListRecursive2", New Object() {sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired2}, Me.OpenSoftwareJobContainerListRecursive2OperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwareJobContainerListRecursive2OperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwareJobContainerListRecursive2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwareJobContainerListRecursive2Completed(Me, New OpenSoftwareJobContainerListRecursive2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwareJobContainersRecursiveResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwareJobContainersRecursive2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobContainers As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfSoftwareJobContainerProperties2", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwareJobContainerProperties2", IsNullable:=false)> SoftwareJobContainerProperties2()
            Dim results() As Object = Me.Invoke("GetSoftwareJobContainersRecursive2", New Object() {sessionId, listHandle, noOfSoftwareJobContainers})
            Return CType(results(0),SoftwareJobContainerProperties2())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobContainersRecursive2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobContainers As Long)
            Me.GetSoftwareJobContainersRecursive2Async(sessionId, listHandle, noOfSoftwareJobContainers, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobContainersRecursive2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobContainers As Long, ByVal userState As Object)
            If (Me.GetSoftwareJobContainersRecursive2OperationCompleted Is Nothing) Then
                Me.GetSoftwareJobContainersRecursive2OperationCompleted = AddressOf Me.OnGetSoftwareJobContainersRecursive2OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwareJobContainersRecursive2", New Object() {sessionId, listHandle, noOfSoftwareJobContainers}, Me.GetSoftwareJobContainersRecursive2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwareJobContainersRecursive2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwareJobContainersRecursive2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwareJobContainersRecursive2Completed(Me, New GetSoftwareJobContainersRecursive2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CloseSoftwareJobContainerListRecursiveResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwareJobContainerListRecursive2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwareJobContainerListRecursive2", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwareJobContainerListRecursive2Async(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwareJobContainerListRecursive2Async(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwareJobContainerListRecursive2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwareJobContainerListRecursive2OperationCompleted Is Nothing) Then
                Me.CloseSoftwareJobContainerListRecursive2OperationCompleted = AddressOf Me.OnCloseSoftwareJobContainerListRecursive2OperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwareJobContainerListRecursive2", New Object() {sessionId, listHandle}, Me.CloseSoftwareJobContainerListRecursive2OperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwareJobContainerListRecursive2OperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwareJobContainerListRecursive2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwareJobContainerListRecursive2Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="OpenParentSoftwareJobContainerListResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenParentSoftwareJobContainerList2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerPropertiesRequired2 As SoftwareJobContainerPropertiesRequired2, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfParentSoftwareJobContainers As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfParentSoftwareJobContainersSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenParentSoftwareJobContainerList2", New Object() {sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired2})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfParentSoftwareJobContainers = CType(results(2),System.Nullable(Of Long))
            totalNoOfParentSoftwareJobContainersSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenParentSoftwareJobContainerList2Async(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainerPropertiesRequired2 As SoftwareJobContainerPropertiesRequired2)
            Me.OpenParentSoftwareJobContainerList2Async(sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenParentSoftwareJobContainerList2Async(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainerPropertiesRequired2 As SoftwareJobContainerPropertiesRequired2, ByVal userState As Object)
            If (Me.OpenParentSoftwareJobContainerList2OperationCompleted Is Nothing) Then
                Me.OpenParentSoftwareJobContainerList2OperationCompleted = AddressOf Me.OnOpenParentSoftwareJobContainerList2OperationCompleted
            End If
            Me.InvokeAsync("OpenParentSoftwareJobContainerList2", New Object() {sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired2}, Me.OpenParentSoftwareJobContainerList2OperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenParentSoftwareJobContainerList2OperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenParentSoftwareJobContainerList2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenParentSoftwareJobContainerList2Completed(Me, New OpenParentSoftwareJobContainerList2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetParentSoftwareJobContainersResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetParentSoftwareJobContainers2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfParentSoftwareJobContainers As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfSoftwareJobContainerProperties2", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwareJobContainerProperties2", IsNullable:=false)> SoftwareJobContainerProperties2()
            Dim results() As Object = Me.Invoke("GetParentSoftwareJobContainers2", New Object() {sessionId, listHandle, noOfParentSoftwareJobContainers})
            Return CType(results(0),SoftwareJobContainerProperties2())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetParentSoftwareJobContainers2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfParentSoftwareJobContainers As Long)
            Me.GetParentSoftwareJobContainers2Async(sessionId, listHandle, noOfParentSoftwareJobContainers, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetParentSoftwareJobContainers2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfParentSoftwareJobContainers As Long, ByVal userState As Object)
            If (Me.GetParentSoftwareJobContainers2OperationCompleted Is Nothing) Then
                Me.GetParentSoftwareJobContainers2OperationCompleted = AddressOf Me.OnGetParentSoftwareJobContainers2OperationCompleted
            End If
            Me.InvokeAsync("GetParentSoftwareJobContainers2", New Object() {sessionId, listHandle, noOfParentSoftwareJobContainers}, Me.GetParentSoftwareJobContainers2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetParentSoftwareJobContainers2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetParentSoftwareJobContainers2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetParentSoftwareJobContainers2Completed(Me, New GetParentSoftwareJobContainers2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CloseParentSoftwareJobContainerListResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseParentSoftwareJobContainerList2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseParentSoftwareJobContainerList2", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseParentSoftwareJobContainerList2Async(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseParentSoftwareJobContainerList2Async(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseParentSoftwareJobContainerList2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseParentSoftwareJobContainerList2OperationCompleted Is Nothing) Then
                Me.CloseParentSoftwareJobContainerList2OperationCompleted = AddressOf Me.OnCloseParentSoftwareJobContainerList2OperationCompleted
            End If
            Me.InvokeAsync("CloseParentSoftwareJobContainerList2", New Object() {sessionId, listHandle}, Me.CloseParentSoftwareJobContainerList2OperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseParentSoftwareJobContainerList2OperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseParentSoftwareJobContainerList2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseParentSoftwareJobContainerList2Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSoftwareJobContainerPriority(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, ByVal priority As Long)
            Me.Invoke("SetSoftwareJobContainerPriority", New Object() {sessionId, softwareJobContainerId, priority})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwareJobContainerPriorityAsync(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal priority As Long)
            Me.SetSoftwareJobContainerPriorityAsync(sessionId, softwareJobContainerId, priority, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwareJobContainerPriorityAsync(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal priority As Long, ByVal userState As Object)
            If (Me.SetSoftwareJobContainerPriorityOperationCompleted Is Nothing) Then
                Me.SetSoftwareJobContainerPriorityOperationCompleted = AddressOf Me.OnSetSoftwareJobContainerPriorityOperationCompleted
            End If
            Me.InvokeAsync("SetSoftwareJobContainerPriority", New Object() {sessionId, softwareJobContainerId, priority}, Me.SetSoftwareJobContainerPriorityOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSoftwareJobContainerPriorityOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSoftwareJobContainerPriorityCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSoftwareJobContainerPriorityCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwarePolicyResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePolicy2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyPropertiesRequired2 As SoftwarePolicyPropertiesRequired2) As <System.Xml.Serialization.XmlElementAttribute("softwarePolicyProperties2", IsNullable:=true)> SoftwarePolicyProperties2
            Dim results() As Object = Me.Invoke("GetSoftwarePolicy2", New Object() {sessionId, softwarePolicyId, softwarePolicyPropertiesRequired2})
            Return CType(results(0),SoftwarePolicyProperties2)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePolicy2Async(ByVal sessionId As String, ByVal softwarePolicyId As String, ByVal softwarePolicyPropertiesRequired2 As SoftwarePolicyPropertiesRequired2)
            Me.GetSoftwarePolicy2Async(sessionId, softwarePolicyId, softwarePolicyPropertiesRequired2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePolicy2Async(ByVal sessionId As String, ByVal softwarePolicyId As String, ByVal softwarePolicyPropertiesRequired2 As SoftwarePolicyPropertiesRequired2, ByVal userState As Object)
            If (Me.GetSoftwarePolicy2OperationCompleted Is Nothing) Then
                Me.GetSoftwarePolicy2OperationCompleted = AddressOf Me.OnGetSoftwarePolicy2OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePolicy2", New Object() {sessionId, softwarePolicyId, softwarePolicyPropertiesRequired2}, Me.GetSoftwarePolicy2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePolicy2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePolicy2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePolicy2Completed(Me, New GetSoftwarePolicy2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="OpenSoftwarePolicyListResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwarePolicyList2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyPropertiesRequired2 As SoftwarePolicyPropertiesRequired2, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwarePolicies As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwarePoliciesSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwarePolicyList2", New Object() {sessionId, softwarePolicyId, softwarePolicyPropertiesRequired2})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwarePolicies = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwarePoliciesSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePolicyList2Async(ByVal sessionId As String, ByVal softwarePolicyId As String, ByVal softwarePolicyPropertiesRequired2 As SoftwarePolicyPropertiesRequired2)
            Me.OpenSoftwarePolicyList2Async(sessionId, softwarePolicyId, softwarePolicyPropertiesRequired2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePolicyList2Async(ByVal sessionId As String, ByVal softwarePolicyId As String, ByVal softwarePolicyPropertiesRequired2 As SoftwarePolicyPropertiesRequired2, ByVal userState As Object)
            If (Me.OpenSoftwarePolicyList2OperationCompleted Is Nothing) Then
                Me.OpenSoftwarePolicyList2OperationCompleted = AddressOf Me.OnOpenSoftwarePolicyList2OperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwarePolicyList2", New Object() {sessionId, softwarePolicyId, softwarePolicyPropertiesRequired2}, Me.OpenSoftwarePolicyList2OperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwarePolicyList2OperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwarePolicyList2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwarePolicyList2Completed(Me, New OpenSoftwarePolicyList2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwarePoliciesResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePolicies2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePolicies As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfSoftwarePolicyProperties2", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePolicyProperties2", IsNullable:=false)> SoftwarePolicyProperties2()
            Dim results() As Object = Me.Invoke("GetSoftwarePolicies2", New Object() {sessionId, listHandle, noOfSoftwarePolicies})
            Return CType(results(0),SoftwarePolicyProperties2())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePolicies2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePolicies As Long)
            Me.GetSoftwarePolicies2Async(sessionId, listHandle, noOfSoftwarePolicies, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePolicies2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePolicies As Long, ByVal userState As Object)
            If (Me.GetSoftwarePolicies2OperationCompleted Is Nothing) Then
                Me.GetSoftwarePolicies2OperationCompleted = AddressOf Me.OnGetSoftwarePolicies2OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePolicies2", New Object() {sessionId, listHandle, noOfSoftwarePolicies}, Me.GetSoftwarePolicies2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePolicies2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePolicies2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePolicies2Completed(Me, New GetSoftwarePolicies2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CloseSoftwarePolicyListResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSoftwarePolicyList2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSoftwarePolicyList2", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePolicyList2Async(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSoftwarePolicyList2Async(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSoftwarePolicyList2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSoftwarePolicyList2OperationCompleted Is Nothing) Then
                Me.CloseSoftwarePolicyList2OperationCompleted = AddressOf Me.OnCloseSoftwarePolicyList2OperationCompleted
            End If
            Me.InvokeAsync("CloseSoftwarePolicyList2", New Object() {sessionId, listHandle}, Me.CloseSoftwarePolicyList2OperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSoftwarePolicyList2OperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSoftwarePolicyList2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSoftwarePolicyList2Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="DeleteUnitGroupsResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteUnitGroupsByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitGroupNames() As String)
            Me.Invoke("DeleteUnitGroupsByName", New Object() {sessionId, unitGroupNames})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteUnitGroupsByNameAsync(ByVal sessionId As String, ByVal unitGroupNames() As String)
            Me.DeleteUnitGroupsByNameAsync(sessionId, unitGroupNames, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteUnitGroupsByNameAsync(ByVal sessionId As String, ByVal unitGroupNames() As String, ByVal userState As Object)
            If (Me.DeleteUnitGroupsByNameOperationCompleted Is Nothing) Then
                Me.DeleteUnitGroupsByNameOperationCompleted = AddressOf Me.OnDeleteUnitGroupsByNameOperationCompleted
            End If
            Me.InvokeAsync("DeleteUnitGroupsByName", New Object() {sessionId, unitGroupNames}, Me.DeleteUnitGroupsByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteUnitGroupsByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteUnitGroupsByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteUnitGroupsByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="LinkUnitGroupsToUnitGroupResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkUnitGroupsToUnitGroupByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupName As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitGroupNames() As String)
            Me.Invoke("LinkUnitGroupsToUnitGroupByName", New Object() {sessionId, unitGroupName, unitGroupNames})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkUnitGroupsToUnitGroupByNameAsync(ByVal sessionId As String, ByVal unitGroupName As String, ByVal unitGroupNames() As String)
            Me.LinkUnitGroupsToUnitGroupByNameAsync(sessionId, unitGroupName, unitGroupNames, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkUnitGroupsToUnitGroupByNameAsync(ByVal sessionId As String, ByVal unitGroupName As String, ByVal unitGroupNames() As String, ByVal userState As Object)
            If (Me.LinkUnitGroupsToUnitGroupByNameOperationCompleted Is Nothing) Then
                Me.LinkUnitGroupsToUnitGroupByNameOperationCompleted = AddressOf Me.OnLinkUnitGroupsToUnitGroupByNameOperationCompleted
            End If
            Me.InvokeAsync("LinkUnitGroupsToUnitGroupByName", New Object() {sessionId, unitGroupName, unitGroupNames}, Me.LinkUnitGroupsToUnitGroupByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkUnitGroupsToUnitGroupByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkUnitGroupsToUnitGroupByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkUnitGroupsToUnitGroupByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="LinkComputersToUnitGroupResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkComputersToUnitGroupByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupPropertiesByName As UnitGroupPropertiesByName, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("computerPropertiesByName", IsNullable:=false)> ByVal arrayOfComputerPropertiesByName() As ComputerPropertiesByName)
            Me.Invoke("LinkComputersToUnitGroupByName", New Object() {sessionId, unitGroupPropertiesByName, arrayOfComputerPropertiesByName})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkComputersToUnitGroupByNameAsync(ByVal sessionId As String, ByVal unitGroupPropertiesByName As UnitGroupPropertiesByName, ByVal arrayOfComputerPropertiesByName() As ComputerPropertiesByName)
            Me.LinkComputersToUnitGroupByNameAsync(sessionId, unitGroupPropertiesByName, arrayOfComputerPropertiesByName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkComputersToUnitGroupByNameAsync(ByVal sessionId As String, ByVal unitGroupPropertiesByName As UnitGroupPropertiesByName, ByVal arrayOfComputerPropertiesByName() As ComputerPropertiesByName, ByVal userState As Object)
            If (Me.LinkComputersToUnitGroupByNameOperationCompleted Is Nothing) Then
                Me.LinkComputersToUnitGroupByNameOperationCompleted = AddressOf Me.OnLinkComputersToUnitGroupByNameOperationCompleted
            End If
            Me.InvokeAsync("LinkComputersToUnitGroupByName", New Object() {sessionId, unitGroupPropertiesByName, arrayOfComputerPropertiesByName}, Me.LinkComputersToUnitGroupByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkComputersToUnitGroupByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkComputersToUnitGroupByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkComputersToUnitGroupByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="UnlinkComputersFromUnitGroupResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnlinkComputersFromUnitGroupByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupPropertiesByName As UnitGroupPropertiesByName, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("computerPropertiesByName", IsNullable:=false)> ByVal arrayOfComputerPropertiesByName() As ComputerPropertiesByName)
            Me.Invoke("UnlinkComputersFromUnitGroupByName", New Object() {sessionId, unitGroupPropertiesByName, arrayOfComputerPropertiesByName})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkComputersFromUnitGroupByNameAsync(ByVal sessionId As String, ByVal unitGroupPropertiesByName As UnitGroupPropertiesByName, ByVal arrayOfComputerPropertiesByName() As ComputerPropertiesByName)
            Me.UnlinkComputersFromUnitGroupByNameAsync(sessionId, unitGroupPropertiesByName, arrayOfComputerPropertiesByName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkComputersFromUnitGroupByNameAsync(ByVal sessionId As String, ByVal unitGroupPropertiesByName As UnitGroupPropertiesByName, ByVal arrayOfComputerPropertiesByName() As ComputerPropertiesByName, ByVal userState As Object)
            If (Me.UnlinkComputersFromUnitGroupByNameOperationCompleted Is Nothing) Then
                Me.UnlinkComputersFromUnitGroupByNameOperationCompleted = AddressOf Me.OnUnlinkComputersFromUnitGroupByNameOperationCompleted
            End If
            Me.InvokeAsync("UnlinkComputersFromUnitGroupByName", New Object() {sessionId, unitGroupPropertiesByName, arrayOfComputerPropertiesByName}, Me.UnlinkComputersFromUnitGroupByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnlinkComputersFromUnitGroupByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnlinkComputersFromUnitGroupByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnlinkComputersFromUnitGroupByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="UnlinkUnitGroupsFromUnitGroupResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnlinkUnitGroupsFromUnitGroupByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupName As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitGroupNames() As String)
            Me.Invoke("UnlinkUnitGroupsFromUnitGroupByName", New Object() {sessionId, unitGroupName, unitGroupNames})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkUnitGroupsFromUnitGroupByNameAsync(ByVal sessionId As String, ByVal unitGroupName As String, ByVal unitGroupNames() As String)
            Me.UnlinkUnitGroupsFromUnitGroupByNameAsync(sessionId, unitGroupName, unitGroupNames, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkUnitGroupsFromUnitGroupByNameAsync(ByVal sessionId As String, ByVal unitGroupName As String, ByVal unitGroupNames() As String, ByVal userState As Object)
            If (Me.UnlinkUnitGroupsFromUnitGroupByNameOperationCompleted Is Nothing) Then
                Me.UnlinkUnitGroupsFromUnitGroupByNameOperationCompleted = AddressOf Me.OnUnlinkUnitGroupsFromUnitGroupByNameOperationCompleted
            End If
            Me.InvokeAsync("UnlinkUnitGroupsFromUnitGroupByName", New Object() {sessionId, unitGroupName, unitGroupNames}, Me.UnlinkUnitGroupsFromUnitGroupByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnlinkUnitGroupsFromUnitGroupByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnlinkUnitGroupsFromUnitGroupByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnlinkUnitGroupsFromUnitGroupByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="LinkSoftwarePackagesToSoftwarePackageGroupResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkSoftwarePackagesToSoftwarePackageGroupByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupName As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackage", IsNullable:=false)> ByVal softwarePackages() As SoftwarePackage)
            Me.Invoke("LinkSoftwarePackagesToSoftwarePackageGroupByName", New Object() {sessionId, softwarePackageGroupName, softwarePackages})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSoftwarePackagesToSoftwarePackageGroupByNameAsync(ByVal sessionId As String, ByVal softwarePackageGroupName As String, ByVal softwarePackages() As SoftwarePackage)
            Me.LinkSoftwarePackagesToSoftwarePackageGroupByNameAsync(sessionId, softwarePackageGroupName, softwarePackages, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSoftwarePackagesToSoftwarePackageGroupByNameAsync(ByVal sessionId As String, ByVal softwarePackageGroupName As String, ByVal softwarePackages() As SoftwarePackage, ByVal userState As Object)
            If (Me.LinkSoftwarePackagesToSoftwarePackageGroupByNameOperationCompleted Is Nothing) Then
                Me.LinkSoftwarePackagesToSoftwarePackageGroupByNameOperationCompleted = AddressOf Me.OnLinkSoftwarePackagesToSoftwarePackageGroupByNameOperationCompleted
            End If
            Me.InvokeAsync("LinkSoftwarePackagesToSoftwarePackageGroupByName", New Object() {sessionId, softwarePackageGroupName, softwarePackages}, Me.LinkSoftwarePackagesToSoftwarePackageGroupByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkSoftwarePackagesToSoftwarePackageGroupByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkSoftwarePackagesToSoftwarePackageGroupByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkSoftwarePackagesToSoftwarePackageGroupByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="UnlinkSoftwarePackagesFromSoftwarePackageGroupResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnlinkSoftwarePackagesFromSoftwarePackageGroupByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupName As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackage", IsNullable:=false)> ByVal softwarePackages() As SoftwarePackage)
            Me.Invoke("UnlinkSoftwarePackagesFromSoftwarePackageGroupByName", New Object() {sessionId, softwarePackageGroupName, softwarePackages})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSoftwarePackagesFromSoftwarePackageGroupByNameAsync(ByVal sessionId As String, ByVal softwarePackageGroupName As String, ByVal softwarePackages() As SoftwarePackage)
            Me.UnlinkSoftwarePackagesFromSoftwarePackageGroupByNameAsync(sessionId, softwarePackageGroupName, softwarePackages, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSoftwarePackagesFromSoftwarePackageGroupByNameAsync(ByVal sessionId As String, ByVal softwarePackageGroupName As String, ByVal softwarePackages() As SoftwarePackage, ByVal userState As Object)
            If (Me.UnlinkSoftwarePackagesFromSoftwarePackageGroupByNameOperationCompleted Is Nothing) Then
                Me.UnlinkSoftwarePackagesFromSoftwarePackageGroupByNameOperationCompleted = AddressOf Me.OnUnlinkSoftwarePackagesFromSoftwarePackageGroupByNameOperationCompleted
            End If
            Me.InvokeAsync("UnlinkSoftwarePackagesFromSoftwarePackageGroupByName", New Object() {sessionId, softwarePackageGroupName, softwarePackages}, Me.UnlinkSoftwarePackagesFromSoftwarePackageGroupByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnlinkSoftwarePackagesFromSoftwarePackageGroupByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnlinkSoftwarePackagesFromSoftwarePackageGroupByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnlinkSoftwarePackagesFromSoftwarePackageGroupByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="DeleteSoftwarePackagesResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteSoftwarePackagesByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackage", IsNullable:=false)> ByVal softwarePackages() As SoftwarePackage)
            Me.Invoke("DeleteSoftwarePackagesByName", New Object() {sessionId, softwarePackages})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwarePackagesByNameAsync(ByVal sessionId As String, ByVal softwarePackages() As SoftwarePackage)
            Me.DeleteSoftwarePackagesByNameAsync(sessionId, softwarePackages, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwarePackagesByNameAsync(ByVal sessionId As String, ByVal softwarePackages() As SoftwarePackage, ByVal userState As Object)
            If (Me.DeleteSoftwarePackagesByNameOperationCompleted Is Nothing) Then
                Me.DeleteSoftwarePackagesByNameOperationCompleted = AddressOf Me.OnDeleteSoftwarePackagesByNameOperationCompleted
            End If
            Me.InvokeAsync("DeleteSoftwarePackagesByName", New Object() {sessionId, softwarePackages}, Me.DeleteSoftwarePackagesByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSoftwarePackagesByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSoftwarePackagesByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSoftwarePackagesByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureGroupName As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageProcedure", IsNullable:=false)> ByVal softwarePackageProcedures() As SoftwarePackageProcedure)
            Me.Invoke("LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupByName", New Object() {sessionId, softwarePackageProcedureGroupName, softwarePackageProcedures})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupByNameAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroupName As String, ByVal softwarePackageProcedures() As SoftwarePackageProcedure)
            Me.LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupByNameAsync(sessionId, softwarePackageProcedureGroupName, softwarePackageProcedures, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupByNameAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroupName As String, ByVal softwarePackageProcedures() As SoftwarePackageProcedure, ByVal userState As Object)
            If (Me.LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupByNameOperationCompleted Is Nothing) Then
                Me.LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupByNameOperationCompleted = AddressOf Me.OnLinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupByNameOperationCompleted
            End If
            Me.InvokeAsync("LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupByName", New Object() {sessionId, softwarePackageProcedureGroupName, softwarePackageProcedures}, Me.LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateInstallSoftwareJobInSoftwarePolicyResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateInstallSoftwareJobInSoftwarePolicyByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackage As SoftwarePackage, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal installSoftwareJobOrderPolicyProperties As CreateInstallSoftwareJobOrderPolicyProperties, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyName As String) As <System.Xml.Serialization.XmlElementAttribute("softwareJobId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateInstallSoftwareJobInSoftwarePolicyByName", New Object() {sessionId, softwarePackage, softwarePackageProcedureName, installSoftwareJobOrderPolicyProperties, softwarePolicyName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateInstallSoftwareJobInSoftwarePolicyByNameAsync(ByVal sessionId As String, ByVal softwarePackage As SoftwarePackage, ByVal softwarePackageProcedureName As String, ByVal installSoftwareJobOrderPolicyProperties As CreateInstallSoftwareJobOrderPolicyProperties, ByVal softwarePolicyName As String)
            Me.CreateInstallSoftwareJobInSoftwarePolicyByNameAsync(sessionId, softwarePackage, softwarePackageProcedureName, installSoftwareJobOrderPolicyProperties, softwarePolicyName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateInstallSoftwareJobInSoftwarePolicyByNameAsync(ByVal sessionId As String, ByVal softwarePackage As SoftwarePackage, ByVal softwarePackageProcedureName As String, ByVal installSoftwareJobOrderPolicyProperties As CreateInstallSoftwareJobOrderPolicyProperties, ByVal softwarePolicyName As String, ByVal userState As Object)
            If (Me.CreateInstallSoftwareJobInSoftwarePolicyByNameOperationCompleted Is Nothing) Then
                Me.CreateInstallSoftwareJobInSoftwarePolicyByNameOperationCompleted = AddressOf Me.OnCreateInstallSoftwareJobInSoftwarePolicyByNameOperationCompleted
            End If
            Me.InvokeAsync("CreateInstallSoftwareJobInSoftwarePolicyByName", New Object() {sessionId, softwarePackage, softwarePackageProcedureName, installSoftwareJobOrderPolicyProperties, softwarePolicyName}, Me.CreateInstallSoftwareJobInSoftwarePolicyByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateInstallSoftwareJobInSoftwarePolicyByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateInstallSoftwareJobInSoftwarePolicyByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateInstallSoftwareJobInSoftwarePolicyByNameCompleted(Me, New CreateInstallSoftwareJobInSoftwarePolicyByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateActivateSoftwareJobInSoftwarePolicyResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateActivateSoftwareJobInSoftwarePolicyByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackage As SoftwarePackage, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageInstallProcedureName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobOrderPolicyProperties As CreateSoftwareJobOrderPolicyProperties, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyName As String) As <System.Xml.Serialization.XmlElementAttribute("softwareJobId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateActivateSoftwareJobInSoftwarePolicyByName", New Object() {sessionId, softwarePackage, softwarePackageProcedureName, softwarePackageInstallProcedureName, softwareJobOrderPolicyProperties, softwarePolicyName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateActivateSoftwareJobInSoftwarePolicyByNameAsync(ByVal sessionId As String, ByVal softwarePackage As SoftwarePackage, ByVal softwarePackageProcedureName As String, ByVal softwarePackageInstallProcedureName As String, ByVal softwareJobOrderPolicyProperties As CreateSoftwareJobOrderPolicyProperties, ByVal softwarePolicyName As String)
            Me.CreateActivateSoftwareJobInSoftwarePolicyByNameAsync(sessionId, softwarePackage, softwarePackageProcedureName, softwarePackageInstallProcedureName, softwareJobOrderPolicyProperties, softwarePolicyName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateActivateSoftwareJobInSoftwarePolicyByNameAsync(ByVal sessionId As String, ByVal softwarePackage As SoftwarePackage, ByVal softwarePackageProcedureName As String, ByVal softwarePackageInstallProcedureName As String, ByVal softwareJobOrderPolicyProperties As CreateSoftwareJobOrderPolicyProperties, ByVal softwarePolicyName As String, ByVal userState As Object)
            If (Me.CreateActivateSoftwareJobInSoftwarePolicyByNameOperationCompleted Is Nothing) Then
                Me.CreateActivateSoftwareJobInSoftwarePolicyByNameOperationCompleted = AddressOf Me.OnCreateActivateSoftwareJobInSoftwarePolicyByNameOperationCompleted
            End If
            Me.InvokeAsync("CreateActivateSoftwareJobInSoftwarePolicyByName", New Object() {sessionId, softwarePackage, softwarePackageProcedureName, softwarePackageInstallProcedureName, softwareJobOrderPolicyProperties, softwarePolicyName}, Me.CreateActivateSoftwareJobInSoftwarePolicyByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateActivateSoftwareJobInSoftwarePolicyByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateActivateSoftwareJobInSoftwarePolicyByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateActivateSoftwareJobInSoftwarePolicyByNameCompleted(Me, New CreateActivateSoftwareJobInSoftwarePolicyByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateConfigureSoftwareJobInSoftwarePolicyResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateConfigureSoftwareJobInSoftwarePolicyByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackage As SoftwarePackage, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageInstallProcedureName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobOrderPolicyProperties As CreateSoftwareJobOrderPolicyProperties, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyName As String) As <System.Xml.Serialization.XmlElementAttribute("softwareJobId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateConfigureSoftwareJobInSoftwarePolicyByName", New Object() {sessionId, softwarePackage, softwarePackageProcedureName, softwarePackageInstallProcedureName, softwareJobOrderPolicyProperties, softwarePolicyName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateConfigureSoftwareJobInSoftwarePolicyByNameAsync(ByVal sessionId As String, ByVal softwarePackage As SoftwarePackage, ByVal softwarePackageProcedureName As String, ByVal softwarePackageInstallProcedureName As String, ByVal softwareJobOrderPolicyProperties As CreateSoftwareJobOrderPolicyProperties, ByVal softwarePolicyName As String)
            Me.CreateConfigureSoftwareJobInSoftwarePolicyByNameAsync(sessionId, softwarePackage, softwarePackageProcedureName, softwarePackageInstallProcedureName, softwareJobOrderPolicyProperties, softwarePolicyName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateConfigureSoftwareJobInSoftwarePolicyByNameAsync(ByVal sessionId As String, ByVal softwarePackage As SoftwarePackage, ByVal softwarePackageProcedureName As String, ByVal softwarePackageInstallProcedureName As String, ByVal softwareJobOrderPolicyProperties As CreateSoftwareJobOrderPolicyProperties, ByVal softwarePolicyName As String, ByVal userState As Object)
            If (Me.CreateConfigureSoftwareJobInSoftwarePolicyByNameOperationCompleted Is Nothing) Then
                Me.CreateConfigureSoftwareJobInSoftwarePolicyByNameOperationCompleted = AddressOf Me.OnCreateConfigureSoftwareJobInSoftwarePolicyByNameOperationCompleted
            End If
            Me.InvokeAsync("CreateConfigureSoftwareJobInSoftwarePolicyByName", New Object() {sessionId, softwarePackage, softwarePackageProcedureName, softwarePackageInstallProcedureName, softwareJobOrderPolicyProperties, softwarePolicyName}, Me.CreateConfigureSoftwareJobInSoftwarePolicyByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateConfigureSoftwareJobInSoftwarePolicyByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateConfigureSoftwareJobInSoftwarePolicyByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateConfigureSoftwareJobInSoftwarePolicyByNameCompleted(Me, New CreateConfigureSoftwareJobInSoftwarePolicyByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateUninstallSoftwareJobInSoftwarePolicyResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateUninstallSoftwareJobInSoftwarePolicyByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackage As SoftwarePackage, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageInstallProcedureName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobOrderPolicyProperties As CreateSoftwareJobOrderPolicyProperties, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyName As String) As <System.Xml.Serialization.XmlElementAttribute("softwareJobId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateUninstallSoftwareJobInSoftwarePolicyByName", New Object() {sessionId, softwarePackage, softwarePackageProcedureName, softwarePackageInstallProcedureName, softwareJobOrderPolicyProperties, softwarePolicyName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateUninstallSoftwareJobInSoftwarePolicyByNameAsync(ByVal sessionId As String, ByVal softwarePackage As SoftwarePackage, ByVal softwarePackageProcedureName As String, ByVal softwarePackageInstallProcedureName As String, ByVal softwareJobOrderPolicyProperties As CreateSoftwareJobOrderPolicyProperties, ByVal softwarePolicyName As String)
            Me.CreateUninstallSoftwareJobInSoftwarePolicyByNameAsync(sessionId, softwarePackage, softwarePackageProcedureName, softwarePackageInstallProcedureName, softwareJobOrderPolicyProperties, softwarePolicyName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateUninstallSoftwareJobInSoftwarePolicyByNameAsync(ByVal sessionId As String, ByVal softwarePackage As SoftwarePackage, ByVal softwarePackageProcedureName As String, ByVal softwarePackageInstallProcedureName As String, ByVal softwareJobOrderPolicyProperties As CreateSoftwareJobOrderPolicyProperties, ByVal softwarePolicyName As String, ByVal userState As Object)
            If (Me.CreateUninstallSoftwareJobInSoftwarePolicyByNameOperationCompleted Is Nothing) Then
                Me.CreateUninstallSoftwareJobInSoftwarePolicyByNameOperationCompleted = AddressOf Me.OnCreateUninstallSoftwareJobInSoftwarePolicyByNameOperationCompleted
            End If
            Me.InvokeAsync("CreateUninstallSoftwareJobInSoftwarePolicyByName", New Object() {sessionId, softwarePackage, softwarePackageProcedureName, softwarePackageInstallProcedureName, softwareJobOrderPolicyProperties, softwarePolicyName}, Me.CreateUninstallSoftwareJobInSoftwarePolicyByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateUninstallSoftwareJobInSoftwarePolicyByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateUninstallSoftwareJobInSoftwarePolicyByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateUninstallSoftwareJobInSoftwarePolicyByNameCompleted(Me, New CreateUninstallSoftwareJobInSoftwarePolicyByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="UnsealSoftwarePoliciesResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnsealSoftwarePoliciesByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePolicyNames() As String)
            Me.Invoke("UnsealSoftwarePoliciesByName", New Object() {sessionId, softwarePolicyNames})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnsealSoftwarePoliciesByNameAsync(ByVal sessionId As String, ByVal softwarePolicyNames() As String)
            Me.UnsealSoftwarePoliciesByNameAsync(sessionId, softwarePolicyNames, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnsealSoftwarePoliciesByNameAsync(ByVal sessionId As String, ByVal softwarePolicyNames() As String, ByVal userState As Object)
            If (Me.UnsealSoftwarePoliciesByNameOperationCompleted Is Nothing) Then
                Me.UnsealSoftwarePoliciesByNameOperationCompleted = AddressOf Me.OnUnsealSoftwarePoliciesByNameOperationCompleted
            End If
            Me.InvokeAsync("UnsealSoftwarePoliciesByName", New Object() {sessionId, softwarePolicyNames}, Me.UnsealSoftwarePoliciesByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnsealSoftwarePoliciesByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnsealSoftwarePoliciesByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnsealSoftwarePoliciesByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkSoftwarePoliciesToUnitGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePolicyIds() As String)
            Me.Invoke("LinkSoftwarePoliciesToUnitGroup", New Object() {sessionId, unitGroupId, softwarePolicyIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSoftwarePoliciesToUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal softwarePolicyIds() As String)
            Me.LinkSoftwarePoliciesToUnitGroupAsync(sessionId, unitGroupId, softwarePolicyIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSoftwarePoliciesToUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal softwarePolicyIds() As String, ByVal userState As Object)
            If (Me.LinkSoftwarePoliciesToUnitGroupOperationCompleted Is Nothing) Then
                Me.LinkSoftwarePoliciesToUnitGroupOperationCompleted = AddressOf Me.OnLinkSoftwarePoliciesToUnitGroupOperationCompleted
            End If
            Me.InvokeAsync("LinkSoftwarePoliciesToUnitGroup", New Object() {sessionId, unitGroupId, softwarePolicyIds}, Me.LinkSoftwarePoliciesToUnitGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkSoftwarePoliciesToUnitGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkSoftwarePoliciesToUnitGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkSoftwarePoliciesToUnitGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="LinkSoftwarePoliciesToUnitGroupResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkSoftwarePoliciesToUnitGroupByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupPropertiesByName As UnitGroupPropertiesByName, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePolicyPropertiesByName", IsNullable:=false)> ByVal arrayofSoftwarePolicyPropertiesByName() As SoftwarePolicyPropertiesByName)
            Me.Invoke("LinkSoftwarePoliciesToUnitGroupByName", New Object() {sessionId, unitGroupPropertiesByName, arrayofSoftwarePolicyPropertiesByName})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSoftwarePoliciesToUnitGroupByNameAsync(ByVal sessionId As String, ByVal unitGroupPropertiesByName As UnitGroupPropertiesByName, ByVal arrayofSoftwarePolicyPropertiesByName() As SoftwarePolicyPropertiesByName)
            Me.LinkSoftwarePoliciesToUnitGroupByNameAsync(sessionId, unitGroupPropertiesByName, arrayofSoftwarePolicyPropertiesByName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSoftwarePoliciesToUnitGroupByNameAsync(ByVal sessionId As String, ByVal unitGroupPropertiesByName As UnitGroupPropertiesByName, ByVal arrayofSoftwarePolicyPropertiesByName() As SoftwarePolicyPropertiesByName, ByVal userState As Object)
            If (Me.LinkSoftwarePoliciesToUnitGroupByNameOperationCompleted Is Nothing) Then
                Me.LinkSoftwarePoliciesToUnitGroupByNameOperationCompleted = AddressOf Me.OnLinkSoftwarePoliciesToUnitGroupByNameOperationCompleted
            End If
            Me.InvokeAsync("LinkSoftwarePoliciesToUnitGroupByName", New Object() {sessionId, unitGroupPropertiesByName, arrayofSoftwarePolicyPropertiesByName}, Me.LinkSoftwarePoliciesToUnitGroupByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkSoftwarePoliciesToUnitGroupByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkSoftwarePoliciesToUnitGroupByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkSoftwarePoliciesToUnitGroupByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnlinkSoftwarePoliciesFromUnitGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePolicyIds() As String)
            Me.Invoke("UnlinkSoftwarePoliciesFromUnitGroup", New Object() {sessionId, unitGroupId, softwarePolicyIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSoftwarePoliciesFromUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal softwarePolicyIds() As String)
            Me.UnlinkSoftwarePoliciesFromUnitGroupAsync(sessionId, unitGroupId, softwarePolicyIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSoftwarePoliciesFromUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal softwarePolicyIds() As String, ByVal userState As Object)
            If (Me.UnlinkSoftwarePoliciesFromUnitGroupOperationCompleted Is Nothing) Then
                Me.UnlinkSoftwarePoliciesFromUnitGroupOperationCompleted = AddressOf Me.OnUnlinkSoftwarePoliciesFromUnitGroupOperationCompleted
            End If
            Me.InvokeAsync("UnlinkSoftwarePoliciesFromUnitGroup", New Object() {sessionId, unitGroupId, softwarePolicyIds}, Me.UnlinkSoftwarePoliciesFromUnitGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnlinkSoftwarePoliciesFromUnitGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnlinkSoftwarePoliciesFromUnitGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnlinkSoftwarePoliciesFromUnitGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="UnlinkSoftwarePoliciesFromUnitGroupResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnlinkSoftwarePoliciesFromUnitGroupByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupPropertiesByName As UnitGroupPropertiesByName, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePolicyPropertiesByName", IsNullable:=false)> ByVal arrayofSoftwarePolicyPropertiesByName() As SoftwarePolicyPropertiesByName)
            Me.Invoke("UnlinkSoftwarePoliciesFromUnitGroupByName", New Object() {sessionId, unitGroupPropertiesByName, arrayofSoftwarePolicyPropertiesByName})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSoftwarePoliciesFromUnitGroupByNameAsync(ByVal sessionId As String, ByVal unitGroupPropertiesByName As UnitGroupPropertiesByName, ByVal arrayofSoftwarePolicyPropertiesByName() As SoftwarePolicyPropertiesByName)
            Me.UnlinkSoftwarePoliciesFromUnitGroupByNameAsync(sessionId, unitGroupPropertiesByName, arrayofSoftwarePolicyPropertiesByName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSoftwarePoliciesFromUnitGroupByNameAsync(ByVal sessionId As String, ByVal unitGroupPropertiesByName As UnitGroupPropertiesByName, ByVal arrayofSoftwarePolicyPropertiesByName() As SoftwarePolicyPropertiesByName, ByVal userState As Object)
            If (Me.UnlinkSoftwarePoliciesFromUnitGroupByNameOperationCompleted Is Nothing) Then
                Me.UnlinkSoftwarePoliciesFromUnitGroupByNameOperationCompleted = AddressOf Me.OnUnlinkSoftwarePoliciesFromUnitGroupByNameOperationCompleted
            End If
            Me.InvokeAsync("UnlinkSoftwarePoliciesFromUnitGroupByName", New Object() {sessionId, unitGroupPropertiesByName, arrayofSoftwarePolicyPropertiesByName}, Me.UnlinkSoftwarePoliciesFromUnitGroupByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnlinkSoftwarePoliciesFromUnitGroupByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnlinkSoftwarePoliciesFromUnitGroupByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnlinkSoftwarePoliciesFromUnitGroupByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="DeleteSoftwareJobsInComputerResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteSoftwareJobsInComputerByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal computerHostName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareByName As SoftwareByName)
            Me.Invoke("DeleteSoftwareJobsInComputerByName", New Object() {sessionId, computerHostName, softwareByName})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwareJobsInComputerByNameAsync(ByVal sessionId As String, ByVal computerHostName As String, ByVal softwareByName As SoftwareByName)
            Me.DeleteSoftwareJobsInComputerByNameAsync(sessionId, computerHostName, softwareByName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwareJobsInComputerByNameAsync(ByVal sessionId As String, ByVal computerHostName As String, ByVal softwareByName As SoftwareByName, ByVal userState As Object)
            If (Me.DeleteSoftwareJobsInComputerByNameOperationCompleted Is Nothing) Then
                Me.DeleteSoftwareJobsInComputerByNameOperationCompleted = AddressOf Me.OnDeleteSoftwareJobsInComputerByNameOperationCompleted
            End If
            Me.InvokeAsync("DeleteSoftwareJobsInComputerByName", New Object() {sessionId, computerHostName, softwareByName}, Me.DeleteSoftwareJobsInComputerByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSoftwareJobsInComputerByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSoftwareJobsInComputerByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSoftwareJobsInComputerByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureGroupName As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageProcedure", IsNullable:=false)> ByVal softwarePackageProcedures() As SoftwarePackageProcedure)
            Me.Invoke("UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupByName", New Object() {sessionId, softwarePackageProcedureGroupName, softwarePackageProcedures})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupByNameAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroupName As String, ByVal softwarePackageProcedures() As SoftwarePackageProcedure)
            Me.UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupByNameAsync(sessionId, softwarePackageProcedureGroupName, softwarePackageProcedures, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupByNameAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroupName As String, ByVal softwarePackageProcedures() As SoftwarePackageProcedure, ByVal userState As Object)
            If (Me.UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupByNameOperationCompleted Is Nothing) Then
                Me.UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupByNameOperationCompleted = AddressOf Me.OnUnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupByNameOperationCompleted
            End If
            Me.InvokeAsync("UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupByName", New Object() {sessionId, softwarePackageProcedureGroupName, softwarePackageProcedures}, Me.UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="DeleteSoftwarePoliciesResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteSoftwarePoliciesByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePolicyNames() As String)
            Me.Invoke("DeleteSoftwarePoliciesByName", New Object() {sessionId, softwarePolicyNames})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwarePoliciesByNameAsync(ByVal sessionId As String, ByVal softwarePolicyNames() As String)
            Me.DeleteSoftwarePoliciesByNameAsync(sessionId, softwarePolicyNames, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSoftwarePoliciesByNameAsync(ByVal sessionId As String, ByVal softwarePolicyNames() As String, ByVal userState As Object)
            If (Me.DeleteSoftwarePoliciesByNameOperationCompleted Is Nothing) Then
                Me.DeleteSoftwarePoliciesByNameOperationCompleted = AddressOf Me.OnDeleteSoftwarePoliciesByNameOperationCompleted
            End If
            Me.InvokeAsync("DeleteSoftwarePoliciesByName", New Object() {sessionId, softwarePolicyNames}, Me.DeleteSoftwarePoliciesByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSoftwarePoliciesByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSoftwarePoliciesByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSoftwarePoliciesByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDomain(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domainUUID As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domainPropertiesRequired As DomainPropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("domainProperties", IsNullable:=true)> DomainProperties
            Dim results() As Object = Me.Invoke("GetDomain", New Object() {sessionId, domainUUID, domainPropertiesRequired})
            Return CType(results(0),DomainProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDomainAsync(ByVal sessionId As String, ByVal domainUUID As String, ByVal domainPropertiesRequired As DomainPropertiesRequired)
            Me.GetDomainAsync(sessionId, domainUUID, domainPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDomainAsync(ByVal sessionId As String, ByVal domainUUID As String, ByVal domainPropertiesRequired As DomainPropertiesRequired, ByVal userState As Object)
            If (Me.GetDomainOperationCompleted Is Nothing) Then
                Me.GetDomainOperationCompleted = AddressOf Me.OnGetDomainOperationCompleted
            End If
            Me.InvokeAsync("GetDomain", New Object() {sessionId, domainUUID, domainPropertiesRequired}, Me.GetDomainOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDomainOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDomainCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDomainCompleted(Me, New GetDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindDomain(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domainName As String, ByVal noOfDomains As Long, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domainPropertiesRequired As DomainPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfDomainsFound As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfDomainsFoundSpecified As Boolean) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfDomainProperties", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("domainProperties", IsNullable:=false)> DomainProperties()
            Dim results() As Object = Me.Invoke("FindDomain", New Object() {sessionId, domainName, noOfDomains, domainPropertiesRequired})
            totalNoOfDomainsFound = CType(results(1),System.Nullable(Of Long))
            totalNoOfDomainsFoundSpecified = CType(results(2),Boolean)
            Return CType(results(0),DomainProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindDomainAsync(ByVal sessionId As String, ByVal domainName As String, ByVal noOfDomains As Long, ByVal domainPropertiesRequired As DomainPropertiesRequired)
            Me.FindDomainAsync(sessionId, domainName, noOfDomains, domainPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindDomainAsync(ByVal sessionId As String, ByVal domainName As String, ByVal noOfDomains As Long, ByVal domainPropertiesRequired As DomainPropertiesRequired, ByVal userState As Object)
            If (Me.FindDomainOperationCompleted Is Nothing) Then
                Me.FindDomainOperationCompleted = AddressOf Me.OnFindDomainOperationCompleted
            End If
            Me.InvokeAsync("FindDomain", New Object() {sessionId, domainName, noOfDomains, domainPropertiesRequired}, Me.FindDomainOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindDomainOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindDomainCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindDomainCompleted(Me, New FindDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindDomainGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domainGroupName As String, ByVal noOfDomainGroups As Long, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domainGroupPropertiesRequired As DomainGroupPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfDomainGroupsFound As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfDomainGroupsFoundSpecified As Boolean) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfDomainGroupProperties", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("domainGroupProperties", IsNullable:=false)> DomainGroupProperties()
            Dim results() As Object = Me.Invoke("FindDomainGroup", New Object() {sessionId, domainGroupName, noOfDomainGroups, domainGroupPropertiesRequired})
            totalNoOfDomainGroupsFound = CType(results(1),System.Nullable(Of Long))
            totalNoOfDomainGroupsFoundSpecified = CType(results(2),Boolean)
            Return CType(results(0),DomainGroupProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindDomainGroupAsync(ByVal sessionId As String, ByVal domainGroupName As String, ByVal noOfDomainGroups As Long, ByVal domainGroupPropertiesRequired As DomainGroupPropertiesRequired)
            Me.FindDomainGroupAsync(sessionId, domainGroupName, noOfDomainGroups, domainGroupPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindDomainGroupAsync(ByVal sessionId As String, ByVal domainGroupName As String, ByVal noOfDomainGroups As Long, ByVal domainGroupPropertiesRequired As DomainGroupPropertiesRequired, ByVal userState As Object)
            If (Me.FindDomainGroupOperationCompleted Is Nothing) Then
                Me.FindDomainGroupOperationCompleted = AddressOf Me.OnFindDomainGroupOperationCompleted
            End If
            Me.InvokeAsync("FindDomainGroup", New Object() {sessionId, domainGroupName, noOfDomainGroups, domainGroupPropertiesRequired}, Me.FindDomainGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindDomainGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindDomainGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindDomainGroupCompleted(Me, New FindDomainGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateDomainGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal parentDomainGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal createDomainGroupProperties As CreateDomainGroupProperties) As <System.Xml.Serialization.XmlElementAttribute("domainGroupID", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateDomainGroup", New Object() {sessionId, parentDomainGroupId, createDomainGroupProperties})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateDomainGroupAsync(ByVal sessionId As String, ByVal parentDomainGroupId As String, ByVal createDomainGroupProperties As CreateDomainGroupProperties)
            Me.CreateDomainGroupAsync(sessionId, parentDomainGroupId, createDomainGroupProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateDomainGroupAsync(ByVal sessionId As String, ByVal parentDomainGroupId As String, ByVal createDomainGroupProperties As CreateDomainGroupProperties, ByVal userState As Object)
            If (Me.CreateDomainGroupOperationCompleted Is Nothing) Then
                Me.CreateDomainGroupOperationCompleted = AddressOf Me.OnCreateDomainGroupOperationCompleted
            End If
            Me.InvokeAsync("CreateDomainGroup", New Object() {sessionId, parentDomainGroupId, createDomainGroupProperties}, Me.CreateDomainGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateDomainGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateDomainGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateDomainGroupCompleted(Me, New CreateDomainGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkDomainsToDomainGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domainGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal domainIds() As String)
            Me.Invoke("LinkDomainsToDomainGroup", New Object() {sessionId, domainGroupId, domainIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkDomainsToDomainGroupAsync(ByVal sessionId As String, ByVal domainGroupId As String, ByVal domainIds() As String)
            Me.LinkDomainsToDomainGroupAsync(sessionId, domainGroupId, domainIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkDomainsToDomainGroupAsync(ByVal sessionId As String, ByVal domainGroupId As String, ByVal domainIds() As String, ByVal userState As Object)
            If (Me.LinkDomainsToDomainGroupOperationCompleted Is Nothing) Then
                Me.LinkDomainsToDomainGroupOperationCompleted = AddressOf Me.OnLinkDomainsToDomainGroupOperationCompleted
            End If
            Me.InvokeAsync("LinkDomainsToDomainGroup", New Object() {sessionId, domainGroupId, domainIds}, Me.LinkDomainsToDomainGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkDomainsToDomainGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkDomainsToDomainGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkDomainsToDomainGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkDomainGroupsToDomainGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domainGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal domainGroupIds() As String)
            Me.Invoke("LinkDomainGroupsToDomainGroup", New Object() {sessionId, domainGroupId, domainGroupIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkDomainGroupsToDomainGroupAsync(ByVal sessionId As String, ByVal domainGroupId As String, ByVal domainGroupIds() As String)
            Me.LinkDomainGroupsToDomainGroupAsync(sessionId, domainGroupId, domainGroupIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkDomainGroupsToDomainGroupAsync(ByVal sessionId As String, ByVal domainGroupId As String, ByVal domainGroupIds() As String, ByVal userState As Object)
            If (Me.LinkDomainGroupsToDomainGroupOperationCompleted Is Nothing) Then
                Me.LinkDomainGroupsToDomainGroupOperationCompleted = AddressOf Me.OnLinkDomainGroupsToDomainGroupOperationCompleted
            End If
            Me.InvokeAsync("LinkDomainGroupsToDomainGroup", New Object() {sessionId, domainGroupId, domainGroupIds}, Me.LinkDomainGroupsToDomainGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkDomainGroupsToDomainGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkDomainGroupsToDomainGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkDomainGroupsToDomainGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetDomainGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal groupUUID As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setDomainGroupProperties As SetDomainGroupProperties)
            Me.Invoke("SetDomainGroup", New Object() {sessionId, groupUUID, setDomainGroupProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetDomainGroupAsync(ByVal sessionId As String, ByVal groupUUID As String, ByVal setDomainGroupProperties As SetDomainGroupProperties)
            Me.SetDomainGroupAsync(sessionId, groupUUID, setDomainGroupProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetDomainGroupAsync(ByVal sessionId As String, ByVal groupUUID As String, ByVal setDomainGroupProperties As SetDomainGroupProperties, ByVal userState As Object)
            If (Me.SetDomainGroupOperationCompleted Is Nothing) Then
                Me.SetDomainGroupOperationCompleted = AddressOf Me.OnSetDomainGroupOperationCompleted
            End If
            Me.InvokeAsync("SetDomainGroup", New Object() {sessionId, groupUUID, setDomainGroupProperties}, Me.SetDomainGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetDomainGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetDomainGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetDomainGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDomainGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domainGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domainGroupPropertiesRequired As DomainGroupPropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("domainGroupProperties", IsNullable:=true)> DomainGroupProperties
            Dim results() As Object = Me.Invoke("GetDomainGroup", New Object() {sessionId, domainGroupId, domainGroupPropertiesRequired})
            Return CType(results(0),DomainGroupProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDomainGroupAsync(ByVal sessionId As String, ByVal domainGroupId As String, ByVal domainGroupPropertiesRequired As DomainGroupPropertiesRequired)
            Me.GetDomainGroupAsync(sessionId, domainGroupId, domainGroupPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDomainGroupAsync(ByVal sessionId As String, ByVal domainGroupId As String, ByVal domainGroupPropertiesRequired As DomainGroupPropertiesRequired, ByVal userState As Object)
            If (Me.GetDomainGroupOperationCompleted Is Nothing) Then
                Me.GetDomainGroupOperationCompleted = AddressOf Me.OnGetDomainGroupOperationCompleted
            End If
            Me.InvokeAsync("GetDomainGroup", New Object() {sessionId, domainGroupId, domainGroupPropertiesRequired}, Me.GetDomainGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDomainGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDomainGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDomainGroupCompleted(Me, New GetDomainGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteDomainGroups(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal domainGroupIds() As String)
            Me.Invoke("DeleteDomainGroups", New Object() {sessionId, domainGroupIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteDomainGroupsAsync(ByVal sessionId As String, ByVal domainGroupIds() As String)
            Me.DeleteDomainGroupsAsync(sessionId, domainGroupIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteDomainGroupsAsync(ByVal sessionId As String, ByVal domainGroupIds() As String, ByVal userState As Object)
            If (Me.DeleteDomainGroupsOperationCompleted Is Nothing) Then
                Me.DeleteDomainGroupsOperationCompleted = AddressOf Me.OnDeleteDomainGroupsOperationCompleted
            End If
            Me.InvokeAsync("DeleteDomainGroups", New Object() {sessionId, domainGroupIds}, Me.DeleteDomainGroupsOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteDomainGroupsOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteDomainGroupsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteDomainGroupsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnlinkDomainsFromDomainGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domainGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal domainUUIDs() As String)
            Me.Invoke("UnlinkDomainsFromDomainGroup", New Object() {sessionId, domainGroupId, domainUUIDs})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkDomainsFromDomainGroupAsync(ByVal sessionId As String, ByVal domainGroupId As String, ByVal domainUUIDs() As String)
            Me.UnlinkDomainsFromDomainGroupAsync(sessionId, domainGroupId, domainUUIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkDomainsFromDomainGroupAsync(ByVal sessionId As String, ByVal domainGroupId As String, ByVal domainUUIDs() As String, ByVal userState As Object)
            If (Me.UnlinkDomainsFromDomainGroupOperationCompleted Is Nothing) Then
                Me.UnlinkDomainsFromDomainGroupOperationCompleted = AddressOf Me.OnUnlinkDomainsFromDomainGroupOperationCompleted
            End If
            Me.InvokeAsync("UnlinkDomainsFromDomainGroup", New Object() {sessionId, domainGroupId, domainUUIDs}, Me.UnlinkDomainsFromDomainGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnlinkDomainsFromDomainGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnlinkDomainsFromDomainGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnlinkDomainsFromDomainGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnlinkDomainGroupsFromDomainGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domainGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal domainGroupIds() As String)
            Me.Invoke("UnlinkDomainGroupsFromDomainGroup", New Object() {sessionId, domainGroupId, domainGroupIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkDomainGroupsFromDomainGroupAsync(ByVal sessionId As String, ByVal domainGroupId As String, ByVal domainGroupIds() As String)
            Me.UnlinkDomainGroupsFromDomainGroupAsync(sessionId, domainGroupId, domainGroupIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkDomainGroupsFromDomainGroupAsync(ByVal sessionId As String, ByVal domainGroupId As String, ByVal domainGroupIds() As String, ByVal userState As Object)
            If (Me.UnlinkDomainGroupsFromDomainGroupOperationCompleted Is Nothing) Then
                Me.UnlinkDomainGroupsFromDomainGroupOperationCompleted = AddressOf Me.OnUnlinkDomainGroupsFromDomainGroupOperationCompleted
            End If
            Me.InvokeAsync("UnlinkDomainGroupsFromDomainGroup", New Object() {sessionId, domainGroupId, domainGroupIds}, Me.UnlinkDomainGroupsFromDomainGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnlinkDomainGroupsFromDomainGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnlinkDomainGroupsFromDomainGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnlinkDomainGroupsFromDomainGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenDomainGroupDomainGroupMembersList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domainGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domainGroupPropertiesRequired As DomainGroupPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef openListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef openListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfDomainGroups As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfDomainGroupsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenDomainGroupDomainGroupMembersList", New Object() {sessionId, domainGroupId, domainGroupPropertiesRequired})
            openListHandle = CType(results(0),System.Nullable(Of Long))
            openListHandleSpecified = CType(results(1),Boolean)
            totalNoOfDomainGroups = CType(results(2),System.Nullable(Of Long))
            totalNoOfDomainGroupsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenDomainGroupDomainGroupMembersListAsync(ByVal sessionId As String, ByVal domainGroupId As String, ByVal domainGroupPropertiesRequired As DomainGroupPropertiesRequired)
            Me.OpenDomainGroupDomainGroupMembersListAsync(sessionId, domainGroupId, domainGroupPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenDomainGroupDomainGroupMembersListAsync(ByVal sessionId As String, ByVal domainGroupId As String, ByVal domainGroupPropertiesRequired As DomainGroupPropertiesRequired, ByVal userState As Object)
            If (Me.OpenDomainGroupDomainGroupMembersListOperationCompleted Is Nothing) Then
                Me.OpenDomainGroupDomainGroupMembersListOperationCompleted = AddressOf Me.OnOpenDomainGroupDomainGroupMembersListOperationCompleted
            End If
            Me.InvokeAsync("OpenDomainGroupDomainGroupMembersList", New Object() {sessionId, domainGroupId, domainGroupPropertiesRequired}, Me.OpenDomainGroupDomainGroupMembersListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenDomainGroupDomainGroupMembersListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenDomainGroupDomainGroupMembersListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenDomainGroupDomainGroupMembersListCompleted(Me, New OpenDomainGroupDomainGroupMembersListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDomainGroupDomainGroupMembers(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal fromIndex As Long, ByVal noOfDomainGroups As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfDomainGroupProperties", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("domainGroupProperties", IsNullable:=false)> DomainGroupProperties()
            Dim results() As Object = Me.Invoke("GetDomainGroupDomainGroupMembers", New Object() {sessionId, listHandle, fromIndex, noOfDomainGroups})
            Return CType(results(0),DomainGroupProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDomainGroupDomainGroupMembersAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal fromIndex As Long, ByVal noOfDomainGroups As Long)
            Me.GetDomainGroupDomainGroupMembersAsync(sessionId, listHandle, fromIndex, noOfDomainGroups, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDomainGroupDomainGroupMembersAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal fromIndex As Long, ByVal noOfDomainGroups As Long, ByVal userState As Object)
            If (Me.GetDomainGroupDomainGroupMembersOperationCompleted Is Nothing) Then
                Me.GetDomainGroupDomainGroupMembersOperationCompleted = AddressOf Me.OnGetDomainGroupDomainGroupMembersOperationCompleted
            End If
            Me.InvokeAsync("GetDomainGroupDomainGroupMembers", New Object() {sessionId, listHandle, fromIndex, noOfDomainGroups}, Me.GetDomainGroupDomainGroupMembersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDomainGroupDomainGroupMembersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDomainGroupDomainGroupMembersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDomainGroupDomainGroupMembersCompleted(Me, New GetDomainGroupDomainGroupMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseDomainGroupDomainGroupMembersList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseDomainGroupDomainGroupMembersList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseDomainGroupDomainGroupMembersListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseDomainGroupDomainGroupMembersListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseDomainGroupDomainGroupMembersListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseDomainGroupDomainGroupMembersListOperationCompleted Is Nothing) Then
                Me.CloseDomainGroupDomainGroupMembersListOperationCompleted = AddressOf Me.OnCloseDomainGroupDomainGroupMembersListOperationCompleted
            End If
            Me.InvokeAsync("CloseDomainGroupDomainGroupMembersList", New Object() {sessionId, listHandle}, Me.CloseDomainGroupDomainGroupMembersListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseDomainGroupDomainGroupMembersListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseDomainGroupDomainGroupMembersListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseDomainGroupDomainGroupMembersListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenDomainGroupDomainMembersList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domainGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("domainPropertyFilter", IsNullable:=false)> ByVal domainPropertyFilters() As DomainPropertyFilter, ByVal domainPropertiesRequired As DomainPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef openListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef openListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfDomains As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfDomainsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenDomainGroupDomainMembersList", New Object() {sessionId, domainGroupId, domainPropertyFilters, domainPropertiesRequired})
            openListHandle = CType(results(0),System.Nullable(Of Long))
            openListHandleSpecified = CType(results(1),Boolean)
            totalNoOfDomains = CType(results(2),System.Nullable(Of Long))
            totalNoOfDomainsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenDomainGroupDomainMembersListAsync(ByVal sessionId As String, ByVal domainGroupId As String, ByVal domainPropertyFilters() As DomainPropertyFilter, ByVal domainPropertiesRequired As DomainPropertiesRequired)
            Me.OpenDomainGroupDomainMembersListAsync(sessionId, domainGroupId, domainPropertyFilters, domainPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenDomainGroupDomainMembersListAsync(ByVal sessionId As String, ByVal domainGroupId As String, ByVal domainPropertyFilters() As DomainPropertyFilter, ByVal domainPropertiesRequired As DomainPropertiesRequired, ByVal userState As Object)
            If (Me.OpenDomainGroupDomainMembersListOperationCompleted Is Nothing) Then
                Me.OpenDomainGroupDomainMembersListOperationCompleted = AddressOf Me.OnOpenDomainGroupDomainMembersListOperationCompleted
            End If
            Me.InvokeAsync("OpenDomainGroupDomainMembersList", New Object() {sessionId, domainGroupId, domainPropertyFilters, domainPropertiesRequired}, Me.OpenDomainGroupDomainMembersListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenDomainGroupDomainMembersListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenDomainGroupDomainMembersListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenDomainGroupDomainMembersListCompleted(Me, New OpenDomainGroupDomainMembersListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDomainGroupDomainMembers(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal fromIndex As Long, ByVal noOfDomains As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfDomainProperties", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("domainProperties", IsNullable:=false)> DomainProperties()
            Dim results() As Object = Me.Invoke("GetDomainGroupDomainMembers", New Object() {sessionId, listHandle, fromIndex, noOfDomains})
            Return CType(results(0),DomainProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDomainGroupDomainMembersAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal fromIndex As Long, ByVal noOfDomains As Long)
            Me.GetDomainGroupDomainMembersAsync(sessionId, listHandle, fromIndex, noOfDomains, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDomainGroupDomainMembersAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal fromIndex As Long, ByVal noOfDomains As Long, ByVal userState As Object)
            If (Me.GetDomainGroupDomainMembersOperationCompleted Is Nothing) Then
                Me.GetDomainGroupDomainMembersOperationCompleted = AddressOf Me.OnGetDomainGroupDomainMembersOperationCompleted
            End If
            Me.InvokeAsync("GetDomainGroupDomainMembers", New Object() {sessionId, listHandle, fromIndex, noOfDomains}, Me.GetDomainGroupDomainMembersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDomainGroupDomainMembersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDomainGroupDomainMembersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDomainGroupDomainMembersCompleted(Me, New GetDomainGroupDomainMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseDomainGroupDomainMembersList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseDomainGroupDomainMembersList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseDomainGroupDomainMembersListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseDomainGroupDomainMembersListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseDomainGroupDomainMembersListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseDomainGroupDomainMembersListOperationCompleted Is Nothing) Then
                Me.CloseDomainGroupDomainMembersListOperationCompleted = AddressOf Me.OnCloseDomainGroupDomainMembersListOperationCompleted
            End If
            Me.InvokeAsync("CloseDomainGroupDomainMembersList", New Object() {sessionId, listHandle}, Me.CloseDomainGroupDomainMembersListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseDomainGroupDomainMembersListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseDomainGroupDomainMembersListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseDomainGroupDomainMembersListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateDistributionContainer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal createDistributionContainerProperties As CreateDistributionContainerProperties) As <System.Xml.Serialization.XmlElementAttribute("distributionContainerId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateDistributionContainer", New Object() {sessionId, createDistributionContainerProperties})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateDistributionContainerAsync(ByVal sessionId As String, ByVal createDistributionContainerProperties As CreateDistributionContainerProperties)
            Me.CreateDistributionContainerAsync(sessionId, createDistributionContainerProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateDistributionContainerAsync(ByVal sessionId As String, ByVal createDistributionContainerProperties As CreateDistributionContainerProperties, ByVal userState As Object)
            If (Me.CreateDistributionContainerOperationCompleted Is Nothing) Then
                Me.CreateDistributionContainerOperationCompleted = AddressOf Me.OnCreateDistributionContainerOperationCompleted
            End If
            Me.InvokeAsync("CreateDistributionContainer", New Object() {sessionId, createDistributionContainerProperties}, Me.CreateDistributionContainerOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateDistributionContainerOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateDistributionContainerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateDistributionContainerCompleted(Me, New CreateDistributionContainerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddRegisterSoftwarePackageOrdersToDistributionContainer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal distributionContainerId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageOrder", IsNullable:=false)> ByVal softwarePackageOrders() As SoftwarePackageOrder) As <System.Xml.Serialization.XmlArrayAttribute("orderIds", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> String()
            Dim results() As Object = Me.Invoke("AddRegisterSoftwarePackageOrdersToDistributionContainer", New Object() {sessionId, distributionContainerId, softwarePackageOrders})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddRegisterSoftwarePackageOrdersToDistributionContainerAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal softwarePackageOrders() As SoftwarePackageOrder)
            Me.AddRegisterSoftwarePackageOrdersToDistributionContainerAsync(sessionId, distributionContainerId, softwarePackageOrders, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddRegisterSoftwarePackageOrdersToDistributionContainerAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal softwarePackageOrders() As SoftwarePackageOrder, ByVal userState As Object)
            If (Me.AddRegisterSoftwarePackageOrdersToDistributionContainerOperationCompleted Is Nothing) Then
                Me.AddRegisterSoftwarePackageOrdersToDistributionContainerOperationCompleted = AddressOf Me.OnAddRegisterSoftwarePackageOrdersToDistributionContainerOperationCompleted
            End If
            Me.InvokeAsync("AddRegisterSoftwarePackageOrdersToDistributionContainer", New Object() {sessionId, distributionContainerId, softwarePackageOrders}, Me.AddRegisterSoftwarePackageOrdersToDistributionContainerOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddRegisterSoftwarePackageOrdersToDistributionContainerOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddRegisterSoftwarePackageOrdersToDistributionContainerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddRegisterSoftwarePackageOrdersToDistributionContainerCompleted(Me, New AddRegisterSoftwarePackageOrdersToDistributionContainerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddDeregisterSoftwarePackageOrdersToDistributionContainer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal distributionContainerId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageOrder", IsNullable:=false)> ByVal softwarePackageOrders() As SoftwarePackageOrder) As <System.Xml.Serialization.XmlArrayAttribute("orderIds", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> String()
            Dim results() As Object = Me.Invoke("AddDeregisterSoftwarePackageOrdersToDistributionContainer", New Object() {sessionId, distributionContainerId, softwarePackageOrders})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddDeregisterSoftwarePackageOrdersToDistributionContainerAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal softwarePackageOrders() As SoftwarePackageOrder)
            Me.AddDeregisterSoftwarePackageOrdersToDistributionContainerAsync(sessionId, distributionContainerId, softwarePackageOrders, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddDeregisterSoftwarePackageOrdersToDistributionContainerAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal softwarePackageOrders() As SoftwarePackageOrder, ByVal userState As Object)
            If (Me.AddDeregisterSoftwarePackageOrdersToDistributionContainerOperationCompleted Is Nothing) Then
                Me.AddDeregisterSoftwarePackageOrdersToDistributionContainerOperationCompleted = AddressOf Me.OnAddDeregisterSoftwarePackageOrdersToDistributionContainerOperationCompleted
            End If
            Me.InvokeAsync("AddDeregisterSoftwarePackageOrdersToDistributionContainer", New Object() {sessionId, distributionContainerId, softwarePackageOrders}, Me.AddDeregisterSoftwarePackageOrdersToDistributionContainerOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddDeregisterSoftwarePackageOrdersToDistributionContainerOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddDeregisterSoftwarePackageOrdersToDistributionContainerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddDeregisterSoftwarePackageOrdersToDistributionContainerCompleted(Me, New AddDeregisterSoftwarePackageOrdersToDistributionContainerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddRegisterSoftwarePackageProcedureOrdersToDistributionContainer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal distributionContainerId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageProcedureOrder", IsNullable:=false)> ByVal softwarePackageProcedureOrders() As SoftwarePackageProcedureOrder) As <System.Xml.Serialization.XmlArrayAttribute("orderIds", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> String()
            Dim results() As Object = Me.Invoke("AddRegisterSoftwarePackageProcedureOrdersToDistributionContainer", New Object() {sessionId, distributionContainerId, softwarePackageProcedureOrders})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddRegisterSoftwarePackageProcedureOrdersToDistributionContainerAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal softwarePackageProcedureOrders() As SoftwarePackageProcedureOrder)
            Me.AddRegisterSoftwarePackageProcedureOrdersToDistributionContainerAsync(sessionId, distributionContainerId, softwarePackageProcedureOrders, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddRegisterSoftwarePackageProcedureOrdersToDistributionContainerAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal softwarePackageProcedureOrders() As SoftwarePackageProcedureOrder, ByVal userState As Object)
            If (Me.AddRegisterSoftwarePackageProcedureOrdersToDistributionContainerOperationCompleted Is Nothing) Then
                Me.AddRegisterSoftwarePackageProcedureOrdersToDistributionContainerOperationCompleted = AddressOf Me.OnAddRegisterSoftwarePackageProcedureOrdersToDistributionContainerOperationCompleted
            End If
            Me.InvokeAsync("AddRegisterSoftwarePackageProcedureOrdersToDistributionContainer", New Object() {sessionId, distributionContainerId, softwarePackageProcedureOrders}, Me.AddRegisterSoftwarePackageProcedureOrdersToDistributionContainerOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddRegisterSoftwarePackageProcedureOrdersToDistributionContainerOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddRegisterSoftwarePackageProcedureOrdersToDistributionContainerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddRegisterSoftwarePackageProcedureOrdersToDistributionContainerCompleted(Me, New AddRegisterSoftwarePackageProcedureOrdersToDistributionContainerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddDeregisterSoftwarePackageProcedureOrdersToDistributionContainer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal distributionContainerId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageProcedureOrder", IsNullable:=false)> ByVal softwarePackageProcedureOrders() As SoftwarePackageProcedureOrder) As <System.Xml.Serialization.XmlArrayAttribute("orderIds", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> String()
            Dim results() As Object = Me.Invoke("AddDeregisterSoftwarePackageProcedureOrdersToDistributionContainer", New Object() {sessionId, distributionContainerId, softwarePackageProcedureOrders})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddDeregisterSoftwarePackageProcedureOrdersToDistributionContainerAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal softwarePackageProcedureOrders() As SoftwarePackageProcedureOrder)
            Me.AddDeregisterSoftwarePackageProcedureOrdersToDistributionContainerAsync(sessionId, distributionContainerId, softwarePackageProcedureOrders, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddDeregisterSoftwarePackageProcedureOrdersToDistributionContainerAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal softwarePackageProcedureOrders() As SoftwarePackageProcedureOrder, ByVal userState As Object)
            If (Me.AddDeregisterSoftwarePackageProcedureOrdersToDistributionContainerOperationCompleted Is Nothing) Then
                Me.AddDeregisterSoftwarePackageProcedureOrdersToDistributionContainerOperationCompleted = AddressOf Me.OnAddDeregisterSoftwarePackageProcedureOrdersToDistributionContainerOperationCompleted
            End If
            Me.InvokeAsync("AddDeregisterSoftwarePackageProcedureOrdersToDistributionContainer", New Object() {sessionId, distributionContainerId, softwarePackageProcedureOrders}, Me.AddDeregisterSoftwarePackageProcedureOrdersToDistributionContainerOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddDeregisterSoftwarePackageProcedureOrdersToDistributionContainerOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddDeregisterSoftwarePackageProcedureOrdersToDistributionContainerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddDeregisterSoftwarePackageProcedureOrdersToDistributionContainerCompleted(Me, New AddDeregisterSoftwarePackageProcedureOrdersToDistributionContainerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddRegisterSoftwarePolicyOrdersToDistributionContainer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal distributionContainerId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePolicyOrder", IsNullable:=false)> ByVal softwarePolicyOrders() As SoftwarePolicyOrder) As <System.Xml.Serialization.XmlArrayAttribute("orderIds", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> String()
            Dim results() As Object = Me.Invoke("AddRegisterSoftwarePolicyOrdersToDistributionContainer", New Object() {sessionId, distributionContainerId, softwarePolicyOrders})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddRegisterSoftwarePolicyOrdersToDistributionContainerAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal softwarePolicyOrders() As SoftwarePolicyOrder)
            Me.AddRegisterSoftwarePolicyOrdersToDistributionContainerAsync(sessionId, distributionContainerId, softwarePolicyOrders, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddRegisterSoftwarePolicyOrdersToDistributionContainerAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal softwarePolicyOrders() As SoftwarePolicyOrder, ByVal userState As Object)
            If (Me.AddRegisterSoftwarePolicyOrdersToDistributionContainerOperationCompleted Is Nothing) Then
                Me.AddRegisterSoftwarePolicyOrdersToDistributionContainerOperationCompleted = AddressOf Me.OnAddRegisterSoftwarePolicyOrdersToDistributionContainerOperationCompleted
            End If
            Me.InvokeAsync("AddRegisterSoftwarePolicyOrdersToDistributionContainer", New Object() {sessionId, distributionContainerId, softwarePolicyOrders}, Me.AddRegisterSoftwarePolicyOrdersToDistributionContainerOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddRegisterSoftwarePolicyOrdersToDistributionContainerOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddRegisterSoftwarePolicyOrdersToDistributionContainerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddRegisterSoftwarePolicyOrdersToDistributionContainerCompleted(Me, New AddRegisterSoftwarePolicyOrdersToDistributionContainerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddDeregisterSoftwarePolicyOrdersToDistributionContainer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal distributionContainerId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePolicyOrder", IsNullable:=false)> ByVal softwarePolicyOrders() As SoftwarePolicyOrder) As <System.Xml.Serialization.XmlArrayAttribute("orderIds", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> String()
            Dim results() As Object = Me.Invoke("AddDeregisterSoftwarePolicyOrdersToDistributionContainer", New Object() {sessionId, distributionContainerId, softwarePolicyOrders})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddDeregisterSoftwarePolicyOrdersToDistributionContainerAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal softwarePolicyOrders() As SoftwarePolicyOrder)
            Me.AddDeregisterSoftwarePolicyOrdersToDistributionContainerAsync(sessionId, distributionContainerId, softwarePolicyOrders, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddDeregisterSoftwarePolicyOrdersToDistributionContainerAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal softwarePolicyOrders() As SoftwarePolicyOrder, ByVal userState As Object)
            If (Me.AddDeregisterSoftwarePolicyOrdersToDistributionContainerOperationCompleted Is Nothing) Then
                Me.AddDeregisterSoftwarePolicyOrdersToDistributionContainerOperationCompleted = AddressOf Me.OnAddDeregisterSoftwarePolicyOrdersToDistributionContainerOperationCompleted
            End If
            Me.InvokeAsync("AddDeregisterSoftwarePolicyOrdersToDistributionContainer", New Object() {sessionId, distributionContainerId, softwarePolicyOrders}, Me.AddDeregisterSoftwarePolicyOrdersToDistributionContainerOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddDeregisterSoftwarePolicyOrdersToDistributionContainerOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddDeregisterSoftwarePolicyOrdersToDistributionContainerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddDeregisterSoftwarePolicyOrdersToDistributionContainerCompleted(Me, New AddDeregisterSoftwarePolicyOrdersToDistributionContainerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddRegisterSoftwareJobContainerOrdersToDistributionContainer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal distributionContainerId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwareJobContainerOrder", IsNullable:=false)> ByVal softwareJobContainerOrders() As SoftwareJobContainerOrder) As <System.Xml.Serialization.XmlArrayAttribute("orderIds", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> String()
            Dim results() As Object = Me.Invoke("AddRegisterSoftwareJobContainerOrdersToDistributionContainer", New Object() {sessionId, distributionContainerId, softwareJobContainerOrders})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddRegisterSoftwareJobContainerOrdersToDistributionContainerAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal softwareJobContainerOrders() As SoftwareJobContainerOrder)
            Me.AddRegisterSoftwareJobContainerOrdersToDistributionContainerAsync(sessionId, distributionContainerId, softwareJobContainerOrders, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddRegisterSoftwareJobContainerOrdersToDistributionContainerAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal softwareJobContainerOrders() As SoftwareJobContainerOrder, ByVal userState As Object)
            If (Me.AddRegisterSoftwareJobContainerOrdersToDistributionContainerOperationCompleted Is Nothing) Then
                Me.AddRegisterSoftwareJobContainerOrdersToDistributionContainerOperationCompleted = AddressOf Me.OnAddRegisterSoftwareJobContainerOrdersToDistributionContainerOperationCompleted
            End If
            Me.InvokeAsync("AddRegisterSoftwareJobContainerOrdersToDistributionContainer", New Object() {sessionId, distributionContainerId, softwareJobContainerOrders}, Me.AddRegisterSoftwareJobContainerOrdersToDistributionContainerOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddRegisterSoftwareJobContainerOrdersToDistributionContainerOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddRegisterSoftwareJobContainerOrdersToDistributionContainerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddRegisterSoftwareJobContainerOrdersToDistributionContainerCompleted(Me, New AddRegisterSoftwareJobContainerOrdersToDistributionContainerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddDeregisterSoftwareJobContainerOrdersToDistributionContainer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal distributionContainerId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwareJobContainerOrder", IsNullable:=false)> ByVal softwareJobContainerOrders() As SoftwareJobContainerOrder) As <System.Xml.Serialization.XmlArrayAttribute("orderIds", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> String()
            Dim results() As Object = Me.Invoke("AddDeregisterSoftwareJobContainerOrdersToDistributionContainer", New Object() {sessionId, distributionContainerId, softwareJobContainerOrders})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddDeregisterSoftwareJobContainerOrdersToDistributionContainerAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal softwareJobContainerOrders() As SoftwareJobContainerOrder)
            Me.AddDeregisterSoftwareJobContainerOrdersToDistributionContainerAsync(sessionId, distributionContainerId, softwareJobContainerOrders, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddDeregisterSoftwareJobContainerOrdersToDistributionContainerAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal softwareJobContainerOrders() As SoftwareJobContainerOrder, ByVal userState As Object)
            If (Me.AddDeregisterSoftwareJobContainerOrdersToDistributionContainerOperationCompleted Is Nothing) Then
                Me.AddDeregisterSoftwareJobContainerOrdersToDistributionContainerOperationCompleted = AddressOf Me.OnAddDeregisterSoftwareJobContainerOrdersToDistributionContainerOperationCompleted
            End If
            Me.InvokeAsync("AddDeregisterSoftwareJobContainerOrdersToDistributionContainer", New Object() {sessionId, distributionContainerId, softwareJobContainerOrders}, Me.AddDeregisterSoftwareJobContainerOrdersToDistributionContainerOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddDeregisterSoftwareJobContainerOrdersToDistributionContainerOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddDeregisterSoftwareJobContainerOrdersToDistributionContainerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddDeregisterSoftwareJobContainerOrdersToDistributionContainerCompleted(Me, New AddDeregisterSoftwareJobContainerOrdersToDistributionContainerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetDistributionContainer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal distributionContainerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setDistributionContainerProperties As SetDistributionContainerProperties)
            Me.Invoke("SetDistributionContainer", New Object() {sessionId, distributionContainerId, setDistributionContainerProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetDistributionContainerAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal setDistributionContainerProperties As SetDistributionContainerProperties)
            Me.SetDistributionContainerAsync(sessionId, distributionContainerId, setDistributionContainerProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetDistributionContainerAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal setDistributionContainerProperties As SetDistributionContainerProperties, ByVal userState As Object)
            If (Me.SetDistributionContainerOperationCompleted Is Nothing) Then
                Me.SetDistributionContainerOperationCompleted = AddressOf Me.OnSetDistributionContainerOperationCompleted
            End If
            Me.InvokeAsync("SetDistributionContainer", New Object() {sessionId, distributionContainerId, setDistributionContainerProperties}, Me.SetDistributionContainerOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetDistributionContainerOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetDistributionContainerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetDistributionContainerCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteDistributionContainers(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal distributionContainerIds() As String)
            Me.Invoke("DeleteDistributionContainers", New Object() {sessionId, distributionContainerIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteDistributionContainersAsync(ByVal sessionId As String, ByVal distributionContainerIds() As String)
            Me.DeleteDistributionContainersAsync(sessionId, distributionContainerIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteDistributionContainersAsync(ByVal sessionId As String, ByVal distributionContainerIds() As String, ByVal userState As Object)
            If (Me.DeleteDistributionContainersOperationCompleted Is Nothing) Then
                Me.DeleteDistributionContainersOperationCompleted = AddressOf Me.OnDeleteDistributionContainersOperationCompleted
            End If
            Me.InvokeAsync("DeleteDistributionContainers", New Object() {sessionId, distributionContainerIds}, Me.DeleteDistributionContainersOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteDistributionContainersOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteDistributionContainersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteDistributionContainersCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub HaltDeliveryDistributionContainers(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal distributionContainerIds() As String)
            Me.Invoke("HaltDeliveryDistributionContainers", New Object() {sessionId, distributionContainerIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HaltDeliveryDistributionContainersAsync(ByVal sessionId As String, ByVal distributionContainerIds() As String)
            Me.HaltDeliveryDistributionContainersAsync(sessionId, distributionContainerIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HaltDeliveryDistributionContainersAsync(ByVal sessionId As String, ByVal distributionContainerIds() As String, ByVal userState As Object)
            If (Me.HaltDeliveryDistributionContainersOperationCompleted Is Nothing) Then
                Me.HaltDeliveryDistributionContainersOperationCompleted = AddressOf Me.OnHaltDeliveryDistributionContainersOperationCompleted
            End If
            Me.InvokeAsync("HaltDeliveryDistributionContainers", New Object() {sessionId, distributionContainerIds}, Me.HaltDeliveryDistributionContainersOperationCompleted, userState)
        End Sub
        
        Private Sub OnHaltDeliveryDistributionContainersOperationCompleted(ByVal arg As Object)
            If (Not (Me.HaltDeliveryDistributionContainersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HaltDeliveryDistributionContainersCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ResumeDeliveryDistributionContainers(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("deliveryDistributionContainerProperties", IsNullable:=false)> ByVal arrayOfDeliveryDistributionContainerProperties() As DeliveryDistributionContainerProperties)
            Me.Invoke("ResumeDeliveryDistributionContainers", New Object() {sessionId, arrayOfDeliveryDistributionContainerProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResumeDeliveryDistributionContainersAsync(ByVal sessionId As String, ByVal arrayOfDeliveryDistributionContainerProperties() As DeliveryDistributionContainerProperties)
            Me.ResumeDeliveryDistributionContainersAsync(sessionId, arrayOfDeliveryDistributionContainerProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResumeDeliveryDistributionContainersAsync(ByVal sessionId As String, ByVal arrayOfDeliveryDistributionContainerProperties() As DeliveryDistributionContainerProperties, ByVal userState As Object)
            If (Me.ResumeDeliveryDistributionContainersOperationCompleted Is Nothing) Then
                Me.ResumeDeliveryDistributionContainersOperationCompleted = AddressOf Me.OnResumeDeliveryDistributionContainersOperationCompleted
            End If
            Me.InvokeAsync("ResumeDeliveryDistributionContainers", New Object() {sessionId, arrayOfDeliveryDistributionContainerProperties}, Me.ResumeDeliveryDistributionContainersOperationCompleted, userState)
        End Sub
        
        Private Sub OnResumeDeliveryDistributionContainersOperationCompleted(ByVal arg As Object)
            If (Not (Me.ResumeDeliveryDistributionContainersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ResumeDeliveryDistributionContainersCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RenewDeliveryDistributionContainers(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("deliveryDistributionContainerProperties", IsNullable:=false)> ByVal arrayOfDeliveryDistributionContainerProperties() As DeliveryDistributionContainerProperties)
            Me.Invoke("RenewDeliveryDistributionContainers", New Object() {sessionId, arrayOfDeliveryDistributionContainerProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RenewDeliveryDistributionContainersAsync(ByVal sessionId As String, ByVal arrayOfDeliveryDistributionContainerProperties() As DeliveryDistributionContainerProperties)
            Me.RenewDeliveryDistributionContainersAsync(sessionId, arrayOfDeliveryDistributionContainerProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RenewDeliveryDistributionContainersAsync(ByVal sessionId As String, ByVal arrayOfDeliveryDistributionContainerProperties() As DeliveryDistributionContainerProperties, ByVal userState As Object)
            If (Me.RenewDeliveryDistributionContainersOperationCompleted Is Nothing) Then
                Me.RenewDeliveryDistributionContainersOperationCompleted = AddressOf Me.OnRenewDeliveryDistributionContainersOperationCompleted
            End If
            Me.InvokeAsync("RenewDeliveryDistributionContainers", New Object() {sessionId, arrayOfDeliveryDistributionContainerProperties}, Me.RenewDeliveryDistributionContainersOperationCompleted, userState)
        End Sub
        
        Private Sub OnRenewDeliveryDistributionContainersOperationCompleted(ByVal arg As Object)
            If (Not (Me.RenewDeliveryDistributionContainersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RenewDeliveryDistributionContainersCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SendDistributionContainer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal distributionContainerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal distributionDateTime As DateTime, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal haltDateTime As DateTime, ByVal toAllDomains As Boolean, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal domainIds() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal domainGroupIds() As String)
            Me.Invoke("SendDistributionContainer", New Object() {sessionId, distributionContainerId, distributionDateTime, haltDateTime, toAllDomains, domainIds, domainGroupIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendDistributionContainerAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal distributionDateTime As DateTime, ByVal haltDateTime As DateTime, ByVal toAllDomains As Boolean, ByVal domainIds() As String, ByVal domainGroupIds() As String)
            Me.SendDistributionContainerAsync(sessionId, distributionContainerId, distributionDateTime, haltDateTime, toAllDomains, domainIds, domainGroupIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendDistributionContainerAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal distributionDateTime As DateTime, ByVal haltDateTime As DateTime, ByVal toAllDomains As Boolean, ByVal domainIds() As String, ByVal domainGroupIds() As String, ByVal userState As Object)
            If (Me.SendDistributionContainerOperationCompleted Is Nothing) Then
                Me.SendDistributionContainerOperationCompleted = AddressOf Me.OnSendDistributionContainerOperationCompleted
            End If
            Me.InvokeAsync("SendDistributionContainer", New Object() {sessionId, distributionContainerId, distributionDateTime, haltDateTime, toAllDomains, domainIds, domainGroupIds}, Me.SendDistributionContainerOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendDistributionContainerOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendDistributionContainerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendDistributionContainerCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDistributionContainer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal distributionContainerId As String) As <System.Xml.Serialization.XmlElementAttribute("distributionContainerProperties", IsNullable:=true)> DistributionContainerProperties
            Dim results() As Object = Me.Invoke("GetDistributionContainer", New Object() {sessionId, distributionContainerId})
            Return CType(results(0),DistributionContainerProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDistributionContainerAsync(ByVal sessionId As String, ByVal distributionContainerId As String)
            Me.GetDistributionContainerAsync(sessionId, distributionContainerId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDistributionContainerAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal userState As Object)
            If (Me.GetDistributionContainerOperationCompleted Is Nothing) Then
                Me.GetDistributionContainerOperationCompleted = AddressOf Me.OnGetDistributionContainerOperationCompleted
            End If
            Me.InvokeAsync("GetDistributionContainer", New Object() {sessionId, distributionContainerId}, Me.GetDistributionContainerOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDistributionContainerOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDistributionContainerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDistributionContainerCompleted(Me, New GetDistributionContainerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenDistributionContainerList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal distributionContainerPropertiesRequired As DistributionContainerPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef openListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef openListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfDistributionContainers As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfDistributionContainersSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenDistributionContainerList", New Object() {sessionId, distributionContainerPropertiesRequired})
            openListHandle = CType(results(0),System.Nullable(Of Long))
            openListHandleSpecified = CType(results(1),Boolean)
            totalNoOfDistributionContainers = CType(results(2),System.Nullable(Of Long))
            totalNoOfDistributionContainersSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenDistributionContainerListAsync(ByVal sessionId As String, ByVal distributionContainerPropertiesRequired As DistributionContainerPropertiesRequired)
            Me.OpenDistributionContainerListAsync(sessionId, distributionContainerPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenDistributionContainerListAsync(ByVal sessionId As String, ByVal distributionContainerPropertiesRequired As DistributionContainerPropertiesRequired, ByVal userState As Object)
            If (Me.OpenDistributionContainerListOperationCompleted Is Nothing) Then
                Me.OpenDistributionContainerListOperationCompleted = AddressOf Me.OnOpenDistributionContainerListOperationCompleted
            End If
            Me.InvokeAsync("OpenDistributionContainerList", New Object() {sessionId, distributionContainerPropertiesRequired}, Me.OpenDistributionContainerListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenDistributionContainerListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenDistributionContainerListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenDistributionContainerListCompleted(Me, New OpenDistributionContainerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDistributionContainers(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal fromIndex As Long, ByVal noOfDistributionContainers As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfDistributionContainerProperties", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("distributionContainerProperties", IsNullable:=false)> DistributionContainerProperties()
            Dim results() As Object = Me.Invoke("GetDistributionContainers", New Object() {sessionId, listHandle, fromIndex, noOfDistributionContainers})
            Return CType(results(0),DistributionContainerProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDistributionContainersAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal fromIndex As Long, ByVal noOfDistributionContainers As Long)
            Me.GetDistributionContainersAsync(sessionId, listHandle, fromIndex, noOfDistributionContainers, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDistributionContainersAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal fromIndex As Long, ByVal noOfDistributionContainers As Long, ByVal userState As Object)
            If (Me.GetDistributionContainersOperationCompleted Is Nothing) Then
                Me.GetDistributionContainersOperationCompleted = AddressOf Me.OnGetDistributionContainersOperationCompleted
            End If
            Me.InvokeAsync("GetDistributionContainers", New Object() {sessionId, listHandle, fromIndex, noOfDistributionContainers}, Me.GetDistributionContainersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDistributionContainersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDistributionContainersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDistributionContainersCompleted(Me, New GetDistributionContainersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseDistributionContainerList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseDistributionContainerList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseDistributionContainerListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseDistributionContainerListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseDistributionContainerListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseDistributionContainerListOperationCompleted Is Nothing) Then
                Me.CloseDistributionContainerListOperationCompleted = AddressOf Me.OnCloseDistributionContainerListOperationCompleted
            End If
            Me.InvokeAsync("CloseDistributionContainerList", New Object() {sessionId, listHandle}, Me.CloseDistributionContainerListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseDistributionContainerListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseDistributionContainerListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseDistributionContainerListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenDistributionContainerDistributionDomainList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal distributionContainerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal distributionDomainPropertiesRequired As DistributionDomainPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef openListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef openListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfDistributionDomains As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfDistributionDomainsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenDistributionContainerDistributionDomainList", New Object() {sessionId, distributionContainerId, distributionDomainPropertiesRequired})
            openListHandle = CType(results(0),System.Nullable(Of Long))
            openListHandleSpecified = CType(results(1),Boolean)
            totalNoOfDistributionDomains = CType(results(2),System.Nullable(Of Long))
            totalNoOfDistributionDomainsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenDistributionContainerDistributionDomainListAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal distributionDomainPropertiesRequired As DistributionDomainPropertiesRequired)
            Me.OpenDistributionContainerDistributionDomainListAsync(sessionId, distributionContainerId, distributionDomainPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenDistributionContainerDistributionDomainListAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal distributionDomainPropertiesRequired As DistributionDomainPropertiesRequired, ByVal userState As Object)
            If (Me.OpenDistributionContainerDistributionDomainListOperationCompleted Is Nothing) Then
                Me.OpenDistributionContainerDistributionDomainListOperationCompleted = AddressOf Me.OnOpenDistributionContainerDistributionDomainListOperationCompleted
            End If
            Me.InvokeAsync("OpenDistributionContainerDistributionDomainList", New Object() {sessionId, distributionContainerId, distributionDomainPropertiesRequired}, Me.OpenDistributionContainerDistributionDomainListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenDistributionContainerDistributionDomainListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenDistributionContainerDistributionDomainListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenDistributionContainerDistributionDomainListCompleted(Me, New OpenDistributionContainerDistributionDomainListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDistributionContainerDistributionDomains(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal fromIndex As Long, ByVal noOfDistributionDomains As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfDistributionDomainProperties", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("distributionDomainProperties", IsNullable:=false)> DistributionDomainProperties()
            Dim results() As Object = Me.Invoke("GetDistributionContainerDistributionDomains", New Object() {sessionId, listHandle, fromIndex, noOfDistributionDomains})
            Return CType(results(0),DistributionDomainProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDistributionContainerDistributionDomainsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal fromIndex As Long, ByVal noOfDistributionDomains As Long)
            Me.GetDistributionContainerDistributionDomainsAsync(sessionId, listHandle, fromIndex, noOfDistributionDomains, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDistributionContainerDistributionDomainsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal fromIndex As Long, ByVal noOfDistributionDomains As Long, ByVal userState As Object)
            If (Me.GetDistributionContainerDistributionDomainsOperationCompleted Is Nothing) Then
                Me.GetDistributionContainerDistributionDomainsOperationCompleted = AddressOf Me.OnGetDistributionContainerDistributionDomainsOperationCompleted
            End If
            Me.InvokeAsync("GetDistributionContainerDistributionDomains", New Object() {sessionId, listHandle, fromIndex, noOfDistributionDomains}, Me.GetDistributionContainerDistributionDomainsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDistributionContainerDistributionDomainsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDistributionContainerDistributionDomainsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDistributionContainerDistributionDomainsCompleted(Me, New GetDistributionContainerDistributionDomainsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseDistributionContainerDistributionDomainList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseDistributionContainerDistributionDomainList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseDistributionContainerDistributionDomainListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseDistributionContainerDistributionDomainListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseDistributionContainerDistributionDomainListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseDistributionContainerDistributionDomainListOperationCompleted Is Nothing) Then
                Me.CloseDistributionContainerDistributionDomainListOperationCompleted = AddressOf Me.OnCloseDistributionContainerDistributionDomainListOperationCompleted
            End If
            Me.InvokeAsync("CloseDistributionContainerDistributionDomainList", New Object() {sessionId, listHandle}, Me.CloseDistributionContainerDistributionDomainListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseDistributionContainerDistributionDomainListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseDistributionContainerDistributionDomainListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseDistributionContainerDistributionDomainListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDistributionContainerOrder(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal distributionContainerOrderId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal distributionContainerOrderPropertiesRequired As DistributionContainerOrderPropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("distributionContainerOrderProperties", IsNullable:=true)> DistributionContainerOrderProperties
            Dim results() As Object = Me.Invoke("GetDistributionContainerOrder", New Object() {sessionId, distributionContainerOrderId, distributionContainerOrderPropertiesRequired})
            Return CType(results(0),DistributionContainerOrderProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDistributionContainerOrderAsync(ByVal sessionId As String, ByVal distributionContainerOrderId As String, ByVal distributionContainerOrderPropertiesRequired As DistributionContainerOrderPropertiesRequired)
            Me.GetDistributionContainerOrderAsync(sessionId, distributionContainerOrderId, distributionContainerOrderPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDistributionContainerOrderAsync(ByVal sessionId As String, ByVal distributionContainerOrderId As String, ByVal distributionContainerOrderPropertiesRequired As DistributionContainerOrderPropertiesRequired, ByVal userState As Object)
            If (Me.GetDistributionContainerOrderOperationCompleted Is Nothing) Then
                Me.GetDistributionContainerOrderOperationCompleted = AddressOf Me.OnGetDistributionContainerOrderOperationCompleted
            End If
            Me.InvokeAsync("GetDistributionContainerOrder", New Object() {sessionId, distributionContainerOrderId, distributionContainerOrderPropertiesRequired}, Me.GetDistributionContainerOrderOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDistributionContainerOrderOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDistributionContainerOrderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDistributionContainerOrderCompleted(Me, New GetDistributionContainerOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddFetchItemJobOrdersToDistributionContainer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal distributionContainerId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("fetchItemJobOrders", IsNullable:=false)> ByVal fetchItemJobOrders() As FetchItemJobOrderProperties) As <System.Xml.Serialization.XmlArrayAttribute("fetchItemJobOrderIds", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> String()
            Dim results() As Object = Me.Invoke("AddFetchItemJobOrdersToDistributionContainer", New Object() {sessionId, distributionContainerId, fetchItemJobOrders})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddFetchItemJobOrdersToDistributionContainerAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal fetchItemJobOrders() As FetchItemJobOrderProperties)
            Me.AddFetchItemJobOrdersToDistributionContainerAsync(sessionId, distributionContainerId, fetchItemJobOrders, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddFetchItemJobOrdersToDistributionContainerAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal fetchItemJobOrders() As FetchItemJobOrderProperties, ByVal userState As Object)
            If (Me.AddFetchItemJobOrdersToDistributionContainerOperationCompleted Is Nothing) Then
                Me.AddFetchItemJobOrdersToDistributionContainerOperationCompleted = AddressOf Me.OnAddFetchItemJobOrdersToDistributionContainerOperationCompleted
            End If
            Me.InvokeAsync("AddFetchItemJobOrdersToDistributionContainer", New Object() {sessionId, distributionContainerId, fetchItemJobOrders}, Me.AddFetchItemJobOrdersToDistributionContainerOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddFetchItemJobOrdersToDistributionContainerOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddFetchItemJobOrdersToDistributionContainerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddFetchItemJobOrdersToDistributionContainerCompleted(Me, New AddFetchItemJobOrdersToDistributionContainerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenDistributionContainerOrderList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal distributionContainerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal distributionContainerOrderPropertiesRequired As DistributionContainerOrderPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef openListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef openListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNumberOfDistributionContainerOrder As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNumberOfDistributionContainerOrderSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenDistributionContainerOrderList", New Object() {sessionId, distributionContainerId, distributionContainerOrderPropertiesRequired})
            openListHandle = CType(results(0),System.Nullable(Of Long))
            openListHandleSpecified = CType(results(1),Boolean)
            totalNumberOfDistributionContainerOrder = CType(results(2),System.Nullable(Of Long))
            totalNumberOfDistributionContainerOrderSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenDistributionContainerOrderListAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal distributionContainerOrderPropertiesRequired As DistributionContainerOrderPropertiesRequired)
            Me.OpenDistributionContainerOrderListAsync(sessionId, distributionContainerId, distributionContainerOrderPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenDistributionContainerOrderListAsync(ByVal sessionId As String, ByVal distributionContainerId As String, ByVal distributionContainerOrderPropertiesRequired As DistributionContainerOrderPropertiesRequired, ByVal userState As Object)
            If (Me.OpenDistributionContainerOrderListOperationCompleted Is Nothing) Then
                Me.OpenDistributionContainerOrderListOperationCompleted = AddressOf Me.OnOpenDistributionContainerOrderListOperationCompleted
            End If
            Me.InvokeAsync("OpenDistributionContainerOrderList", New Object() {sessionId, distributionContainerId, distributionContainerOrderPropertiesRequired}, Me.OpenDistributionContainerOrderListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenDistributionContainerOrderListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenDistributionContainerOrderListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenDistributionContainerOrderListCompleted(Me, New OpenDistributionContainerOrderListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDistributionContainerOrders(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal openListHandle As Long, ByVal fromIndex As Long, ByVal numberOfDistributionContainerOrders As Long) As <System.Xml.Serialization.XmlArrayAttribute("distributionContainerOrders", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("distributionContainerOrders", IsNullable:=false)> DistributionContainerOrderProperties()
            Dim results() As Object = Me.Invoke("GetDistributionContainerOrders", New Object() {sessionId, openListHandle, fromIndex, numberOfDistributionContainerOrders})
            Return CType(results(0),DistributionContainerOrderProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDistributionContainerOrdersAsync(ByVal sessionId As String, ByVal openListHandle As Long, ByVal fromIndex As Long, ByVal numberOfDistributionContainerOrders As Long)
            Me.GetDistributionContainerOrdersAsync(sessionId, openListHandle, fromIndex, numberOfDistributionContainerOrders, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDistributionContainerOrdersAsync(ByVal sessionId As String, ByVal openListHandle As Long, ByVal fromIndex As Long, ByVal numberOfDistributionContainerOrders As Long, ByVal userState As Object)
            If (Me.GetDistributionContainerOrdersOperationCompleted Is Nothing) Then
                Me.GetDistributionContainerOrdersOperationCompleted = AddressOf Me.OnGetDistributionContainerOrdersOperationCompleted
            End If
            Me.InvokeAsync("GetDistributionContainerOrders", New Object() {sessionId, openListHandle, fromIndex, numberOfDistributionContainerOrders}, Me.GetDistributionContainerOrdersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDistributionContainerOrdersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDistributionContainerOrdersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDistributionContainerOrdersCompleted(Me, New GetDistributionContainerOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseDistributionContainerOrders(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal openListHandle As Long)
            Me.Invoke("CloseDistributionContainerOrders", New Object() {sessionId, openListHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseDistributionContainerOrdersAsync(ByVal sessionId As String, ByVal openListHandle As Long)
            Me.CloseDistributionContainerOrdersAsync(sessionId, openListHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseDistributionContainerOrdersAsync(ByVal sessionId As String, ByVal openListHandle As Long, ByVal userState As Object)
            If (Me.CloseDistributionContainerOrdersOperationCompleted Is Nothing) Then
                Me.CloseDistributionContainerOrdersOperationCompleted = AddressOf Me.OnCloseDistributionContainerOrdersOperationCompleted
            End If
            Me.InvokeAsync("CloseDistributionContainerOrders", New Object() {sessionId, openListHandle}, Me.CloseDistributionContainerOrdersOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseDistributionContainerOrdersOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseDistributionContainerOrdersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseDistributionContainerOrdersCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetManagerDateTime(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String) As <System.Xml.Serialization.XmlElementAttribute("managerDateTime", IsNullable:=true)> DateTime
            Dim results() As Object = Me.Invoke("GetManagerDateTime", New Object() {sessionId})
            Return CType(results(0),DateTime)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetManagerDateTimeAsync(ByVal sessionId As String)
            Me.GetManagerDateTimeAsync(sessionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetManagerDateTimeAsync(ByVal sessionId As String, ByVal userState As Object)
            If (Me.GetManagerDateTimeOperationCompleted Is Nothing) Then
                Me.GetManagerDateTimeOperationCompleted = AddressOf Me.OnGetManagerDateTimeOperationCompleted
            End If
            Me.InvokeAsync("GetManagerDateTime", New Object() {sessionId}, Me.GetManagerDateTimeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetManagerDateTimeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetManagerDateTimeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetManagerDateTimeCompleted(Me, New GetManagerDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetInstalledComponentsResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInstalledComponents2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String) As <System.Xml.Serialization.XmlElementAttribute("GetInstalledComponentsReturn", IsNullable:=true)> Components2
            Dim results() As Object = Me.Invoke("GetInstalledComponents2", New Object() {sessionId})
            Return CType(results(0),Components2)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetInstalledComponents2Async(ByVal sessionId As String)
            Me.GetInstalledComponents2Async(sessionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetInstalledComponents2Async(ByVal sessionId As String, ByVal userState As Object)
            If (Me.GetInstalledComponents2OperationCompleted Is Nothing) Then
                Me.GetInstalledComponents2OperationCompleted = AddressOf Me.OnGetInstalledComponents2OperationCompleted
            End If
            Me.InvokeAsync("GetInstalledComponents2", New Object() {sessionId}, Me.GetInstalledComponents2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetInstalledComponents2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetInstalledComponents2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetInstalledComponents2Completed(Me, New GetInstalledComponents2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateQueryResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateQuery2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal createQueryProperties2 As CreateQueryProperties2) As <System.Xml.Serialization.XmlElementAttribute("CreateQueryReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateQuery2", New Object() {sessionId, createQueryProperties2})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateQuery2Async(ByVal sessionId As String, ByVal createQueryProperties2 As CreateQueryProperties2)
            Me.CreateQuery2Async(sessionId, createQueryProperties2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateQuery2Async(ByVal sessionId As String, ByVal createQueryProperties2 As CreateQueryProperties2, ByVal userState As Object)
            If (Me.CreateQuery2OperationCompleted Is Nothing) Then
                Me.CreateQuery2OperationCompleted = AddressOf Me.OnCreateQuery2OperationCompleted
            End If
            Me.InvokeAsync("CreateQuery2", New Object() {sessionId, createQueryProperties2}, Me.CreateQuery2OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateQuery2OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateQuery2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateQuery2Completed(Me, New CreateQuery2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSecurityArea(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal createSecurityAreaProperties As CreateSecurityAreaProperties) As <System.Xml.Serialization.XmlElementAttribute("securityAreaUUID", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSecurityArea", New Object() {sessionId, createSecurityAreaProperties})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSecurityAreaAsync(ByVal sessionId As String, ByVal createSecurityAreaProperties As CreateSecurityAreaProperties)
            Me.CreateSecurityAreaAsync(sessionId, createSecurityAreaProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSecurityAreaAsync(ByVal sessionId As String, ByVal createSecurityAreaProperties As CreateSecurityAreaProperties, ByVal userState As Object)
            If (Me.CreateSecurityAreaOperationCompleted Is Nothing) Then
                Me.CreateSecurityAreaOperationCompleted = AddressOf Me.OnCreateSecurityAreaOperationCompleted
            End If
            Me.InvokeAsync("CreateSecurityArea", New Object() {sessionId, createSecurityAreaProperties}, Me.CreateSecurityAreaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSecurityAreaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSecurityAreaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSecurityAreaCompleted(Me, New CreateSecurityAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteSecurityAreas(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal areaIds() As String)
            Me.Invoke("DeleteSecurityAreas", New Object() {sessionId, areaIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSecurityAreasAsync(ByVal sessionId As String, ByVal areaIds() As String)
            Me.DeleteSecurityAreasAsync(sessionId, areaIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSecurityAreasAsync(ByVal sessionId As String, ByVal areaIds() As String, ByVal userState As Object)
            If (Me.DeleteSecurityAreasOperationCompleted Is Nothing) Then
                Me.DeleteSecurityAreasOperationCompleted = AddressOf Me.OnDeleteSecurityAreasOperationCompleted
            End If
            Me.InvokeAsync("DeleteSecurityAreas", New Object() {sessionId, areaIds}, Me.DeleteSecurityAreasOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSecurityAreasOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSecurityAreasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSecurityAreasCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="DeleteSecurityAreasResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteSecurityAreasByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal areaNames() As String)
            Me.Invoke("DeleteSecurityAreasByName", New Object() {sessionId, areaNames})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSecurityAreasByNameAsync(ByVal sessionId As String, ByVal areaNames() As String)
            Me.DeleteSecurityAreasByNameAsync(sessionId, areaNames, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSecurityAreasByNameAsync(ByVal sessionId As String, ByVal areaNames() As String, ByVal userState As Object)
            If (Me.DeleteSecurityAreasByNameOperationCompleted Is Nothing) Then
                Me.DeleteSecurityAreasByNameOperationCompleted = AddressOf Me.OnDeleteSecurityAreasByNameOperationCompleted
            End If
            Me.InvokeAsync("DeleteSecurityAreasByName", New Object() {sessionId, areaNames}, Me.DeleteSecurityAreasByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSecurityAreasByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSecurityAreasByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSecurityAreasByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSecurityAreaList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityAreaPropertiesRequired As SecurityAreaPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSecurityAreas As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSecurityAreasSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSecurityAreaList", New Object() {sessionId, securityAreaPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSecurityAreas = CType(results(2),System.Nullable(Of Long))
            totalNoOfSecurityAreasSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSecurityAreaListAsync(ByVal sessionId As String, ByVal securityAreaPropertiesRequired As SecurityAreaPropertiesRequired)
            Me.OpenSecurityAreaListAsync(sessionId, securityAreaPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSecurityAreaListAsync(ByVal sessionId As String, ByVal securityAreaPropertiesRequired As SecurityAreaPropertiesRequired, ByVal userState As Object)
            If (Me.OpenSecurityAreaListOperationCompleted Is Nothing) Then
                Me.OpenSecurityAreaListOperationCompleted = AddressOf Me.OnOpenSecurityAreaListOperationCompleted
            End If
            Me.InvokeAsync("OpenSecurityAreaList", New Object() {sessionId, securityAreaPropertiesRequired}, Me.OpenSecurityAreaListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSecurityAreaListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSecurityAreaListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSecurityAreaListCompleted(Me, New OpenSecurityAreaListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSecurityAreas(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSecurityAreas As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSecurityAreasReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("securityAreaPropertiesArray", IsNullable:=false)> SecurityAreaProperties()
            Dim results() As Object = Me.Invoke("GetSecurityAreas", New Object() {sessionId, listHandle, noOfSecurityAreas})
            Return CType(results(0),SecurityAreaProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSecurityAreasAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSecurityAreas As Long)
            Me.GetSecurityAreasAsync(sessionId, listHandle, noOfSecurityAreas, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSecurityAreasAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSecurityAreas As Long, ByVal userState As Object)
            If (Me.GetSecurityAreasOperationCompleted Is Nothing) Then
                Me.GetSecurityAreasOperationCompleted = AddressOf Me.OnGetSecurityAreasOperationCompleted
            End If
            Me.InvokeAsync("GetSecurityAreas", New Object() {sessionId, listHandle, noOfSecurityAreas}, Me.GetSecurityAreasOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSecurityAreasOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSecurityAreasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSecurityAreasCompleted(Me, New GetSecurityAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSecurityAreaList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSecurityAreaList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSecurityAreaListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSecurityAreaListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSecurityAreaListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSecurityAreaListOperationCompleted Is Nothing) Then
                Me.CloseSecurityAreaListOperationCompleted = AddressOf Me.OnCloseSecurityAreaListOperationCompleted
            End If
            Me.InvokeAsync("CloseSecurityAreaList", New Object() {sessionId, listHandle}, Me.CloseSecurityAreaListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSecurityAreaListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSecurityAreaListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSecurityAreaListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSecurityArea(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityAreaUUID As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityAreaPropertiesRequired As SecurityAreaPropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("GetSecurityAreaReturn", IsNullable:=true)> SecurityAreaProperties
            Dim results() As Object = Me.Invoke("GetSecurityArea", New Object() {sessionId, securityAreaUUID, securityAreaPropertiesRequired})
            Return CType(results(0),SecurityAreaProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSecurityAreaAsync(ByVal sessionId As String, ByVal securityAreaUUID As String, ByVal securityAreaPropertiesRequired As SecurityAreaPropertiesRequired)
            Me.GetSecurityAreaAsync(sessionId, securityAreaUUID, securityAreaPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSecurityAreaAsync(ByVal sessionId As String, ByVal securityAreaUUID As String, ByVal securityAreaPropertiesRequired As SecurityAreaPropertiesRequired, ByVal userState As Object)
            If (Me.GetSecurityAreaOperationCompleted Is Nothing) Then
                Me.GetSecurityAreaOperationCompleted = AddressOf Me.OnGetSecurityAreaOperationCompleted
            End If
            Me.InvokeAsync("GetSecurityArea", New Object() {sessionId, securityAreaUUID, securityAreaPropertiesRequired}, Me.GetSecurityAreaOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSecurityAreaOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSecurityAreaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSecurityAreaCompleted(Me, New GetSecurityAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSecurityAreaResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSecurityAreaByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityAreaName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityAreaPropertiesRequired As SecurityAreaPropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("GetSecurityAreaReturn", IsNullable:=true)> SecurityAreaProperties
            Dim results() As Object = Me.Invoke("GetSecurityAreaByName", New Object() {sessionId, securityAreaName, securityAreaPropertiesRequired})
            Return CType(results(0),SecurityAreaProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSecurityAreaByNameAsync(ByVal sessionId As String, ByVal securityAreaName As String, ByVal securityAreaPropertiesRequired As SecurityAreaPropertiesRequired)
            Me.GetSecurityAreaByNameAsync(sessionId, securityAreaName, securityAreaPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSecurityAreaByNameAsync(ByVal sessionId As String, ByVal securityAreaName As String, ByVal securityAreaPropertiesRequired As SecurityAreaPropertiesRequired, ByVal userState As Object)
            If (Me.GetSecurityAreaByNameOperationCompleted Is Nothing) Then
                Me.GetSecurityAreaByNameOperationCompleted = AddressOf Me.OnGetSecurityAreaByNameOperationCompleted
            End If
            Me.InvokeAsync("GetSecurityAreaByName", New Object() {sessionId, securityAreaName, securityAreaPropertiesRequired}, Me.GetSecurityAreaByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSecurityAreaByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSecurityAreaByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSecurityAreaByNameCompleted(Me, New GetSecurityAreaByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSecurityArea(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityAreaUUID As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setSecurityAreaProperties As SetSecurityAreaProperties)
            Me.Invoke("SetSecurityArea", New Object() {sessionId, securityAreaUUID, setSecurityAreaProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSecurityAreaAsync(ByVal sessionId As String, ByVal securityAreaUUID As String, ByVal setSecurityAreaProperties As SetSecurityAreaProperties)
            Me.SetSecurityAreaAsync(sessionId, securityAreaUUID, setSecurityAreaProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSecurityAreaAsync(ByVal sessionId As String, ByVal securityAreaUUID As String, ByVal setSecurityAreaProperties As SetSecurityAreaProperties, ByVal userState As Object)
            If (Me.SetSecurityAreaOperationCompleted Is Nothing) Then
                Me.SetSecurityAreaOperationCompleted = AddressOf Me.OnSetSecurityAreaOperationCompleted
            End If
            Me.InvokeAsync("SetSecurityArea", New Object() {sessionId, securityAreaUUID, setSecurityAreaProperties}, Me.SetSecurityAreaOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSecurityAreaOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSecurityAreaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSecurityAreaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="SetSecurityAreaResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSecurityAreaByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityAreaName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setSecurityAreaProperties As SetSecurityAreaProperties)
            Me.Invoke("SetSecurityAreaByName", New Object() {sessionId, securityAreaName, setSecurityAreaProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSecurityAreaByNameAsync(ByVal sessionId As String, ByVal securityAreaName As String, ByVal setSecurityAreaProperties As SetSecurityAreaProperties)
            Me.SetSecurityAreaByNameAsync(sessionId, securityAreaName, setSecurityAreaProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSecurityAreaByNameAsync(ByVal sessionId As String, ByVal securityAreaName As String, ByVal setSecurityAreaProperties As SetSecurityAreaProperties, ByVal userState As Object)
            If (Me.SetSecurityAreaByNameOperationCompleted Is Nothing) Then
                Me.SetSecurityAreaByNameOperationCompleted = AddressOf Me.OnSetSecurityAreaByNameOperationCompleted
            End If
            Me.InvokeAsync("SetSecurityAreaByName", New Object() {sessionId, securityAreaName, setSecurityAreaProperties}, Me.SetSecurityAreaByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSecurityAreaByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSecurityAreaByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSecurityAreaByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSecurityAreaConfiguration(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityAreaConfiguration As SecurityAreaConfiguration)
            Me.Invoke("SetSecurityAreaConfiguration", New Object() {sessionId, securityAreaConfiguration})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSecurityAreaConfigurationAsync(ByVal sessionId As String, ByVal securityAreaConfiguration As SecurityAreaConfiguration)
            Me.SetSecurityAreaConfigurationAsync(sessionId, securityAreaConfiguration, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSecurityAreaConfigurationAsync(ByVal sessionId As String, ByVal securityAreaConfiguration As SecurityAreaConfiguration, ByVal userState As Object)
            If (Me.SetSecurityAreaConfigurationOperationCompleted Is Nothing) Then
                Me.SetSecurityAreaConfigurationOperationCompleted = AddressOf Me.OnSetSecurityAreaConfigurationOperationCompleted
            End If
            Me.InvokeAsync("SetSecurityAreaConfiguration", New Object() {sessionId, securityAreaConfiguration}, Me.SetSecurityAreaConfigurationOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSecurityAreaConfigurationOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSecurityAreaConfigurationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSecurityAreaConfigurationCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSecurityAreaConfiguration(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("securityAreaArray", IsNullable:=false)> ByRef GetsecurityAreasReturn() As SecurityArea) As <System.Xml.Serialization.XmlElementAttribute("securityAreaSupport")> Boolean
            Dim results() As Object = Me.Invoke("GetSecurityAreaConfiguration", New Object() {sessionId})
            GetsecurityAreasReturn = CType(results(1),SecurityArea())
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSecurityAreaConfigurationAsync(ByVal sessionId As String)
            Me.GetSecurityAreaConfigurationAsync(sessionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSecurityAreaConfigurationAsync(ByVal sessionId As String, ByVal userState As Object)
            If (Me.GetSecurityAreaConfigurationOperationCompleted Is Nothing) Then
                Me.GetSecurityAreaConfigurationOperationCompleted = AddressOf Me.OnGetSecurityAreaConfigurationOperationCompleted
            End If
            Me.InvokeAsync("GetSecurityAreaConfiguration", New Object() {sessionId}, Me.GetSecurityAreaConfigurationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSecurityAreaConfigurationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSecurityAreaConfigurationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSecurityAreaConfigurationCompleted(Me, New GetSecurityAreaConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="SetSecurityAreaConfigurationResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSecurityAreaConfigurationByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityAreaConfiguration As SecurityAreaConfigurationByName)
            Me.Invoke("SetSecurityAreaConfigurationByName", New Object() {sessionId, securityAreaConfiguration})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSecurityAreaConfigurationByNameAsync(ByVal sessionId As String, ByVal securityAreaConfiguration As SecurityAreaConfigurationByName)
            Me.SetSecurityAreaConfigurationByNameAsync(sessionId, securityAreaConfiguration, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSecurityAreaConfigurationByNameAsync(ByVal sessionId As String, ByVal securityAreaConfiguration As SecurityAreaConfigurationByName, ByVal userState As Object)
            If (Me.SetSecurityAreaConfigurationByNameOperationCompleted Is Nothing) Then
                Me.SetSecurityAreaConfigurationByNameOperationCompleted = AddressOf Me.OnSetSecurityAreaConfigurationByNameOperationCompleted
            End If
            Me.InvokeAsync("SetSecurityAreaConfigurationByName", New Object() {sessionId, securityAreaConfiguration}, Me.SetSecurityAreaConfigurationByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSecurityAreaConfigurationByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSecurityAreaConfigurationByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSecurityAreaConfigurationByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSecurityAreaConfigurationResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSecurityAreaConfigurationByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("securityAreaArray", IsNullable:=false)> ByRef GetsecurityAreasReturn() As SecurityAreaByName) As <System.Xml.Serialization.XmlElementAttribute("securityAreaSupport")> Boolean
            Dim results() As Object = Me.Invoke("GetSecurityAreaConfigurationByName", New Object() {sessionId})
            GetsecurityAreasReturn = CType(results(1),SecurityAreaByName())
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSecurityAreaConfigurationByNameAsync(ByVal sessionId As String)
            Me.GetSecurityAreaConfigurationByNameAsync(sessionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSecurityAreaConfigurationByNameAsync(ByVal sessionId As String, ByVal userState As Object)
            If (Me.GetSecurityAreaConfigurationByNameOperationCompleted Is Nothing) Then
                Me.GetSecurityAreaConfigurationByNameOperationCompleted = AddressOf Me.OnGetSecurityAreaConfigurationByNameOperationCompleted
            End If
            Me.InvokeAsync("GetSecurityAreaConfigurationByName", New Object() {sessionId}, Me.GetSecurityAreaConfigurationByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSecurityAreaConfigurationByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSecurityAreaConfigurationByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSecurityAreaConfigurationByNameCompleted(Me, New GetSecurityAreaConfigurationByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSecurityObjectsSecurityAreaLinkages(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal securityClassType As SecurityClassType, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal securityObjectUUIDs() As String) As <System.Xml.Serialization.XmlArrayAttribute("GetSecurityObjectsSecurityAreaLinkagesReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("securityObjectsSecurityAreaProperties", IsNullable:=false)> SecurityObjectsSecurityAreaProperties()
            Dim results() As Object = Me.Invoke("GetSecurityObjectsSecurityAreaLinkages", New Object() {sessionId, securityClassType, securityObjectUUIDs})
            Return CType(results(0),SecurityObjectsSecurityAreaProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSecurityObjectsSecurityAreaLinkagesAsync(ByVal sessionId As String, ByVal securityClassType As SecurityClassType, ByVal securityObjectUUIDs() As String)
            Me.GetSecurityObjectsSecurityAreaLinkagesAsync(sessionId, securityClassType, securityObjectUUIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSecurityObjectsSecurityAreaLinkagesAsync(ByVal sessionId As String, ByVal securityClassType As SecurityClassType, ByVal securityObjectUUIDs() As String, ByVal userState As Object)
            If (Me.GetSecurityObjectsSecurityAreaLinkagesOperationCompleted Is Nothing) Then
                Me.GetSecurityObjectsSecurityAreaLinkagesOperationCompleted = AddressOf Me.OnGetSecurityObjectsSecurityAreaLinkagesOperationCompleted
            End If
            Me.InvokeAsync("GetSecurityObjectsSecurityAreaLinkages", New Object() {sessionId, securityClassType, securityObjectUUIDs}, Me.GetSecurityObjectsSecurityAreaLinkagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSecurityObjectsSecurityAreaLinkagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSecurityObjectsSecurityAreaLinkagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSecurityObjectsSecurityAreaLinkagesCompleted(Me, New GetSecurityObjectsSecurityAreaLinkagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkSecurityAreasToSecurityProfile(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityProfileUUID As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal securityAreasUUIDs() As String)
            Me.Invoke("LinkSecurityAreasToSecurityProfile", New Object() {sessionId, securityProfileUUID, securityAreasUUIDs})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSecurityAreasToSecurityProfileAsync(ByVal sessionId As String, ByVal securityProfileUUID As String, ByVal securityAreasUUIDs() As String)
            Me.LinkSecurityAreasToSecurityProfileAsync(sessionId, securityProfileUUID, securityAreasUUIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSecurityAreasToSecurityProfileAsync(ByVal sessionId As String, ByVal securityProfileUUID As String, ByVal securityAreasUUIDs() As String, ByVal userState As Object)
            If (Me.LinkSecurityAreasToSecurityProfileOperationCompleted Is Nothing) Then
                Me.LinkSecurityAreasToSecurityProfileOperationCompleted = AddressOf Me.OnLinkSecurityAreasToSecurityProfileOperationCompleted
            End If
            Me.InvokeAsync("LinkSecurityAreasToSecurityProfile", New Object() {sessionId, securityProfileUUID, securityAreasUUIDs}, Me.LinkSecurityAreasToSecurityProfileOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkSecurityAreasToSecurityProfileOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkSecurityAreasToSecurityProfileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkSecurityAreasToSecurityProfileCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnlinkSecurityAreasFromSecurityProfile(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityProfileUUID As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal securityAreasUUIDs() As String)
            Me.Invoke("UnlinkSecurityAreasFromSecurityProfile", New Object() {sessionId, securityProfileUUID, securityAreasUUIDs})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSecurityAreasFromSecurityProfileAsync(ByVal sessionId As String, ByVal securityProfileUUID As String, ByVal securityAreasUUIDs() As String)
            Me.UnlinkSecurityAreasFromSecurityProfileAsync(sessionId, securityProfileUUID, securityAreasUUIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSecurityAreasFromSecurityProfileAsync(ByVal sessionId As String, ByVal securityProfileUUID As String, ByVal securityAreasUUIDs() As String, ByVal userState As Object)
            If (Me.UnlinkSecurityAreasFromSecurityProfileOperationCompleted Is Nothing) Then
                Me.UnlinkSecurityAreasFromSecurityProfileOperationCompleted = AddressOf Me.OnUnlinkSecurityAreasFromSecurityProfileOperationCompleted
            End If
            Me.InvokeAsync("UnlinkSecurityAreasFromSecurityProfile", New Object() {sessionId, securityProfileUUID, securityAreasUUIDs}, Me.UnlinkSecurityAreasFromSecurityProfileOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnlinkSecurityAreasFromSecurityProfileOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnlinkSecurityAreasFromSecurityProfileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnlinkSecurityAreasFromSecurityProfileCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="LinkSecurityAreasToSecurityProfileResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkSecurityAreasToSecurityProfileByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityProfileName As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal securityAreasNames() As String)
            Me.Invoke("LinkSecurityAreasToSecurityProfileByName", New Object() {sessionId, securityProfileName, securityAreasNames})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSecurityAreasToSecurityProfileByNameAsync(ByVal sessionId As String, ByVal securityProfileName As String, ByVal securityAreasNames() As String)
            Me.LinkSecurityAreasToSecurityProfileByNameAsync(sessionId, securityProfileName, securityAreasNames, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSecurityAreasToSecurityProfileByNameAsync(ByVal sessionId As String, ByVal securityProfileName As String, ByVal securityAreasNames() As String, ByVal userState As Object)
            If (Me.LinkSecurityAreasToSecurityProfileByNameOperationCompleted Is Nothing) Then
                Me.LinkSecurityAreasToSecurityProfileByNameOperationCompleted = AddressOf Me.OnLinkSecurityAreasToSecurityProfileByNameOperationCompleted
            End If
            Me.InvokeAsync("LinkSecurityAreasToSecurityProfileByName", New Object() {sessionId, securityProfileName, securityAreasNames}, Me.LinkSecurityAreasToSecurityProfileByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkSecurityAreasToSecurityProfileByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkSecurityAreasToSecurityProfileByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkSecurityAreasToSecurityProfileByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="UnlinkSecurityAreasFromSecurityProfileResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnlinkSecurityAreasFromSecurityProfileByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityProfileName As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal securityAreasNames() As String)
            Me.Invoke("UnlinkSecurityAreasFromSecurityProfileByName", New Object() {sessionId, securityProfileName, securityAreasNames})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSecurityAreasFromSecurityProfileByNameAsync(ByVal sessionId As String, ByVal securityProfileName As String, ByVal securityAreasNames() As String)
            Me.UnlinkSecurityAreasFromSecurityProfileByNameAsync(sessionId, securityProfileName, securityAreasNames, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSecurityAreasFromSecurityProfileByNameAsync(ByVal sessionId As String, ByVal securityProfileName As String, ByVal securityAreasNames() As String, ByVal userState As Object)
            If (Me.UnlinkSecurityAreasFromSecurityProfileByNameOperationCompleted Is Nothing) Then
                Me.UnlinkSecurityAreasFromSecurityProfileByNameOperationCompleted = AddressOf Me.OnUnlinkSecurityAreasFromSecurityProfileByNameOperationCompleted
            End If
            Me.InvokeAsync("UnlinkSecurityAreasFromSecurityProfileByName", New Object() {sessionId, securityProfileName, securityAreasNames}, Me.UnlinkSecurityAreasFromSecurityProfileByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnlinkSecurityAreasFromSecurityProfileByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnlinkSecurityAreasFromSecurityProfileByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnlinkSecurityAreasFromSecurityProfileByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkSecurityProfilesToSecurityArea(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityAreaUUID As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal securityProfileUUIDs() As String)
            Me.Invoke("LinkSecurityProfilesToSecurityArea", New Object() {sessionId, securityAreaUUID, securityProfileUUIDs})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSecurityProfilesToSecurityAreaAsync(ByVal sessionId As String, ByVal securityAreaUUID As String, ByVal securityProfileUUIDs() As String)
            Me.LinkSecurityProfilesToSecurityAreaAsync(sessionId, securityAreaUUID, securityProfileUUIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSecurityProfilesToSecurityAreaAsync(ByVal sessionId As String, ByVal securityAreaUUID As String, ByVal securityProfileUUIDs() As String, ByVal userState As Object)
            If (Me.LinkSecurityProfilesToSecurityAreaOperationCompleted Is Nothing) Then
                Me.LinkSecurityProfilesToSecurityAreaOperationCompleted = AddressOf Me.OnLinkSecurityProfilesToSecurityAreaOperationCompleted
            End If
            Me.InvokeAsync("LinkSecurityProfilesToSecurityArea", New Object() {sessionId, securityAreaUUID, securityProfileUUIDs}, Me.LinkSecurityProfilesToSecurityAreaOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkSecurityProfilesToSecurityAreaOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkSecurityProfilesToSecurityAreaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkSecurityProfilesToSecurityAreaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnlinkSecurityProfilesFromSecurityArea(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityAreaUUID As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal securityProfileUUIDs() As String)
            Me.Invoke("UnlinkSecurityProfilesFromSecurityArea", New Object() {sessionId, securityAreaUUID, securityProfileUUIDs})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSecurityProfilesFromSecurityAreaAsync(ByVal sessionId As String, ByVal securityAreaUUID As String, ByVal securityProfileUUIDs() As String)
            Me.UnlinkSecurityProfilesFromSecurityAreaAsync(sessionId, securityAreaUUID, securityProfileUUIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSecurityProfilesFromSecurityAreaAsync(ByVal sessionId As String, ByVal securityAreaUUID As String, ByVal securityProfileUUIDs() As String, ByVal userState As Object)
            If (Me.UnlinkSecurityProfilesFromSecurityAreaOperationCompleted Is Nothing) Then
                Me.UnlinkSecurityProfilesFromSecurityAreaOperationCompleted = AddressOf Me.OnUnlinkSecurityProfilesFromSecurityAreaOperationCompleted
            End If
            Me.InvokeAsync("UnlinkSecurityProfilesFromSecurityArea", New Object() {sessionId, securityAreaUUID, securityProfileUUIDs}, Me.UnlinkSecurityProfilesFromSecurityAreaOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnlinkSecurityProfilesFromSecurityAreaOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnlinkSecurityProfilesFromSecurityAreaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnlinkSecurityProfilesFromSecurityAreaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkSecurityProfilesToSecurityAreaByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityAreaName As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal securityProfileNames() As String)
            Me.Invoke("LinkSecurityProfilesToSecurityAreaByName", New Object() {sessionId, securityAreaName, securityProfileNames})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSecurityProfilesToSecurityAreaByNameAsync(ByVal sessionId As String, ByVal securityAreaName As String, ByVal securityProfileNames() As String)
            Me.LinkSecurityProfilesToSecurityAreaByNameAsync(sessionId, securityAreaName, securityProfileNames, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkSecurityProfilesToSecurityAreaByNameAsync(ByVal sessionId As String, ByVal securityAreaName As String, ByVal securityProfileNames() As String, ByVal userState As Object)
            If (Me.LinkSecurityProfilesToSecurityAreaByNameOperationCompleted Is Nothing) Then
                Me.LinkSecurityProfilesToSecurityAreaByNameOperationCompleted = AddressOf Me.OnLinkSecurityProfilesToSecurityAreaByNameOperationCompleted
            End If
            Me.InvokeAsync("LinkSecurityProfilesToSecurityAreaByName", New Object() {sessionId, securityAreaName, securityProfileNames}, Me.LinkSecurityProfilesToSecurityAreaByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkSecurityProfilesToSecurityAreaByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkSecurityProfilesToSecurityAreaByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkSecurityProfilesToSecurityAreaByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnlinkSecurityProfilesFromSecurityAreaByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityAreaName As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal securityProfileNames() As String)
            Me.Invoke("UnlinkSecurityProfilesFromSecurityAreaByName", New Object() {sessionId, securityAreaName, securityProfileNames})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSecurityProfilesFromSecurityAreaByNameAsync(ByVal sessionId As String, ByVal securityAreaName As String, ByVal securityProfileNames() As String)
            Me.UnlinkSecurityProfilesFromSecurityAreaByNameAsync(sessionId, securityAreaName, securityProfileNames, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnlinkSecurityProfilesFromSecurityAreaByNameAsync(ByVal sessionId As String, ByVal securityAreaName As String, ByVal securityProfileNames() As String, ByVal userState As Object)
            If (Me.UnlinkSecurityProfilesFromSecurityAreaByNameOperationCompleted Is Nothing) Then
                Me.UnlinkSecurityProfilesFromSecurityAreaByNameOperationCompleted = AddressOf Me.OnUnlinkSecurityProfilesFromSecurityAreaByNameOperationCompleted
            End If
            Me.InvokeAsync("UnlinkSecurityProfilesFromSecurityAreaByName", New Object() {sessionId, securityAreaName, securityProfileNames}, Me.UnlinkSecurityProfilesFromSecurityAreaByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnlinkSecurityProfilesFromSecurityAreaByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnlinkSecurityProfilesFromSecurityAreaByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnlinkSecurityProfilesFromSecurityAreaByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSecurityObjectsSecurityAreaLinkages(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal securityClassType As SecurityClassType, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("securityObjectSecurityAreaLinkages", IsNullable:=false)> ByVal securityObjectsSecurityAreaLinkagesArray() As SecurityObjectSecurityAreaLinkages)
            Me.Invoke("SetSecurityObjectsSecurityAreaLinkages", New Object() {sessionId, securityClassType, securityObjectsSecurityAreaLinkagesArray})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSecurityObjectsSecurityAreaLinkagesAsync(ByVal sessionId As String, ByVal securityClassType As SecurityClassType, ByVal securityObjectsSecurityAreaLinkagesArray() As SecurityObjectSecurityAreaLinkages)
            Me.SetSecurityObjectsSecurityAreaLinkagesAsync(sessionId, securityClassType, securityObjectsSecurityAreaLinkagesArray, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSecurityObjectsSecurityAreaLinkagesAsync(ByVal sessionId As String, ByVal securityClassType As SecurityClassType, ByVal securityObjectsSecurityAreaLinkagesArray() As SecurityObjectSecurityAreaLinkages, ByVal userState As Object)
            If (Me.SetSecurityObjectsSecurityAreaLinkagesOperationCompleted Is Nothing) Then
                Me.SetSecurityObjectsSecurityAreaLinkagesOperationCompleted = AddressOf Me.OnSetSecurityObjectsSecurityAreaLinkagesOperationCompleted
            End If
            Me.InvokeAsync("SetSecurityObjectsSecurityAreaLinkages", New Object() {sessionId, securityClassType, securityObjectsSecurityAreaLinkagesArray}, Me.SetSecurityObjectsSecurityAreaLinkagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSecurityObjectsSecurityAreaLinkagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSecurityObjectsSecurityAreaLinkagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSecurityObjectsSecurityAreaLinkagesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSecurityObjectOwnerShip(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal securityClassType As SecurityClassType, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal securityObjectUUIDs() As String)
            Me.Invoke("SetSecurityObjectOwnerShip", New Object() {sessionId, securityClassType, securityObjectUUIDs})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSecurityObjectOwnerShipAsync(ByVal sessionId As String, ByVal securityClassType As SecurityClassType, ByVal securityObjectUUIDs() As String)
            Me.SetSecurityObjectOwnerShipAsync(sessionId, securityClassType, securityObjectUUIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSecurityObjectOwnerShipAsync(ByVal sessionId As String, ByVal securityClassType As SecurityClassType, ByVal securityObjectUUIDs() As String, ByVal userState As Object)
            If (Me.SetSecurityObjectOwnerShipOperationCompleted Is Nothing) Then
                Me.SetSecurityObjectOwnerShipOperationCompleted = AddressOf Me.OnSetSecurityObjectOwnerShipOperationCompleted
            End If
            Me.InvokeAsync("SetSecurityObjectOwnerShip", New Object() {sessionId, securityClassType, securityObjectUUIDs}, Me.SetSecurityObjectOwnerShipOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSecurityObjectOwnerShipOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSecurityObjectOwnerShipCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSecurityObjectOwnerShipCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSecurityObjectOwnerShip(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal securityClassType As SecurityClassType, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal securityObjectUUIDs() As String) As <System.Xml.Serialization.XmlArrayAttribute("GetSecurityObjectOwnerReturn"), System.Xml.Serialization.XmlArrayItemAttribute("securityObjectOwner", IsNullable:=false)> SecurityObjectOwner()
            Dim results() As Object = Me.Invoke("GetSecurityObjectOwnerShip", New Object() {sessionId, securityClassType, securityObjectUUIDs})
            Return CType(results(0),SecurityObjectOwner())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSecurityObjectOwnerShipAsync(ByVal sessionId As String, ByVal securityClassType As SecurityClassType, ByVal securityObjectUUIDs() As String)
            Me.GetSecurityObjectOwnerShipAsync(sessionId, securityClassType, securityObjectUUIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSecurityObjectOwnerShipAsync(ByVal sessionId As String, ByVal securityClassType As SecurityClassType, ByVal securityObjectUUIDs() As String, ByVal userState As Object)
            If (Me.GetSecurityObjectOwnerShipOperationCompleted Is Nothing) Then
                Me.GetSecurityObjectOwnerShipOperationCompleted = AddressOf Me.OnGetSecurityObjectOwnerShipOperationCompleted
            End If
            Me.InvokeAsync("GetSecurityObjectOwnerShip", New Object() {sessionId, securityClassType, securityObjectUUIDs}, Me.GetSecurityObjectOwnerShipOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSecurityObjectOwnerShipOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSecurityObjectOwnerShipCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSecurityObjectOwnerShipCompleted(Me, New GetSecurityObjectOwnerShipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSecurityObjectPermissionsString(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal securityClassType As SecurityClassType, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityObjectUUID As String) As <System.Xml.Serialization.XmlElementAttribute("securityObjectPermissionsString", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("GetSecurityObjectPermissionsString", New Object() {sessionId, securityClassType, securityObjectUUID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSecurityObjectPermissionsStringAsync(ByVal sessionId As String, ByVal securityClassType As SecurityClassType, ByVal securityObjectUUID As String)
            Me.GetSecurityObjectPermissionsStringAsync(sessionId, securityClassType, securityObjectUUID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSecurityObjectPermissionsStringAsync(ByVal sessionId As String, ByVal securityClassType As SecurityClassType, ByVal securityObjectUUID As String, ByVal userState As Object)
            If (Me.GetSecurityObjectPermissionsStringOperationCompleted Is Nothing) Then
                Me.GetSecurityObjectPermissionsStringOperationCompleted = AddressOf Me.OnGetSecurityObjectPermissionsStringOperationCompleted
            End If
            Me.InvokeAsync("GetSecurityObjectPermissionsString", New Object() {sessionId, securityClassType, securityObjectUUID}, Me.GetSecurityObjectPermissionsStringOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSecurityObjectPermissionsStringOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSecurityObjectPermissionsStringCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSecurityObjectPermissionsStringCompleted(Me, New GetSecurityObjectPermissionsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="DeleteSecurityProfilesResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteSecurityProfilesByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal securityProfileNames() As String)
            Me.Invoke("DeleteSecurityProfilesByName", New Object() {sessionId, securityProfileNames})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSecurityProfilesByNameAsync(ByVal sessionId As String, ByVal securityProfileNames() As String)
            Me.DeleteSecurityProfilesByNameAsync(sessionId, securityProfileNames, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSecurityProfilesByNameAsync(ByVal sessionId As String, ByVal securityProfileNames() As String, ByVal userState As Object)
            If (Me.DeleteSecurityProfilesByNameOperationCompleted Is Nothing) Then
                Me.DeleteSecurityProfilesByNameOperationCompleted = AddressOf Me.OnDeleteSecurityProfilesByNameOperationCompleted
            End If
            Me.InvokeAsync("DeleteSecurityProfilesByName", New Object() {sessionId, securityProfileNames}, Me.DeleteSecurityProfilesByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSecurityProfilesByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSecurityProfilesByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSecurityProfilesByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSecurityProfileResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSecurityProfileByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityProfileName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityProfilePropertiesRequried As SecurityProfilePropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("securityProfileProperties", IsNullable:=true)> SecurityProfileProperties
            Dim results() As Object = Me.Invoke("GetSecurityProfileByName", New Object() {sessionId, securityProfileName, securityProfilePropertiesRequried})
            Return CType(results(0),SecurityProfileProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSecurityProfileByNameAsync(ByVal sessionId As String, ByVal securityProfileName As String, ByVal securityProfilePropertiesRequried As SecurityProfilePropertiesRequired)
            Me.GetSecurityProfileByNameAsync(sessionId, securityProfileName, securityProfilePropertiesRequried, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSecurityProfileByNameAsync(ByVal sessionId As String, ByVal securityProfileName As String, ByVal securityProfilePropertiesRequried As SecurityProfilePropertiesRequired, ByVal userState As Object)
            If (Me.GetSecurityProfileByNameOperationCompleted Is Nothing) Then
                Me.GetSecurityProfileByNameOperationCompleted = AddressOf Me.OnGetSecurityProfileByNameOperationCompleted
            End If
            Me.InvokeAsync("GetSecurityProfileByName", New Object() {sessionId, securityProfileName, securityProfilePropertiesRequried}, Me.GetSecurityProfileByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSecurityProfileByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSecurityProfileByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSecurityProfileByNameCompleted(Me, New GetSecurityProfileByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="SetSecurityProfileResponseByName", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSecurityProfileByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityProfileName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setSecurityProfileProperties As SetSecurityProfileProperties)
            Me.Invoke("SetSecurityProfileByName", New Object() {sessionId, securityProfileName, setSecurityProfileProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSecurityProfileByNameAsync(ByVal sessionId As String, ByVal securityProfileName As String, ByVal setSecurityProfileProperties As SetSecurityProfileProperties)
            Me.SetSecurityProfileByNameAsync(sessionId, securityProfileName, setSecurityProfileProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSecurityProfileByNameAsync(ByVal sessionId As String, ByVal securityProfileName As String, ByVal setSecurityProfileProperties As SetSecurityProfileProperties, ByVal userState As Object)
            If (Me.SetSecurityProfileByNameOperationCompleted Is Nothing) Then
                Me.SetSecurityProfileByNameOperationCompleted = AddressOf Me.OnSetSecurityProfileByNameOperationCompleted
            End If
            Me.InvokeAsync("SetSecurityProfileByName", New Object() {sessionId, securityProfileName, setSecurityProfileProperties}, Me.SetSecurityProfileByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSecurityProfileByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSecurityProfileByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSecurityProfileByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSecurityProfile(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal createSecurityProfileProperties As CreateSecurityProfileProperties) As <System.Xml.Serialization.XmlElementAttribute("securityProfileUUID", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSecurityProfile", New Object() {sessionId, createSecurityProfileProperties})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSecurityProfileAsync(ByVal sessionId As String, ByVal createSecurityProfileProperties As CreateSecurityProfileProperties)
            Me.CreateSecurityProfileAsync(sessionId, createSecurityProfileProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSecurityProfileAsync(ByVal sessionId As String, ByVal createSecurityProfileProperties As CreateSecurityProfileProperties, ByVal userState As Object)
            If (Me.CreateSecurityProfileOperationCompleted Is Nothing) Then
                Me.CreateSecurityProfileOperationCompleted = AddressOf Me.OnCreateSecurityProfileOperationCompleted
            End If
            Me.InvokeAsync("CreateSecurityProfile", New Object() {sessionId, createSecurityProfileProperties}, Me.CreateSecurityProfileOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSecurityProfileOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSecurityProfileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSecurityProfileCompleted(Me, New CreateSecurityProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteSecurityProfiles(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal securityProfileUUIDs() As String)
            Me.Invoke("DeleteSecurityProfiles", New Object() {sessionId, securityProfileUUIDs})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSecurityProfilesAsync(ByVal sessionId As String, ByVal securityProfileUUIDs() As String)
            Me.DeleteSecurityProfilesAsync(sessionId, securityProfileUUIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSecurityProfilesAsync(ByVal sessionId As String, ByVal securityProfileUUIDs() As String, ByVal userState As Object)
            If (Me.DeleteSecurityProfilesOperationCompleted Is Nothing) Then
                Me.DeleteSecurityProfilesOperationCompleted = AddressOf Me.OnDeleteSecurityProfilesOperationCompleted
            End If
            Me.InvokeAsync("DeleteSecurityProfiles", New Object() {sessionId, securityProfileUUIDs}, Me.DeleteSecurityProfilesOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSecurityProfilesOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSecurityProfilesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSecurityProfilesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSecurityProfileList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityProfilePropertiesRequired As SecurityProfilePropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef openListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef openListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSecurityProfiles As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSecurityProfilesSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSecurityProfileList", New Object() {sessionId, securityProfilePropertiesRequired})
            openListHandle = CType(results(0),System.Nullable(Of Long))
            openListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSecurityProfiles = CType(results(2),System.Nullable(Of Long))
            totalNoOfSecurityProfilesSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSecurityProfileListAsync(ByVal sessionId As String, ByVal securityProfilePropertiesRequired As SecurityProfilePropertiesRequired)
            Me.OpenSecurityProfileListAsync(sessionId, securityProfilePropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSecurityProfileListAsync(ByVal sessionId As String, ByVal securityProfilePropertiesRequired As SecurityProfilePropertiesRequired, ByVal userState As Object)
            If (Me.OpenSecurityProfileListOperationCompleted Is Nothing) Then
                Me.OpenSecurityProfileListOperationCompleted = AddressOf Me.OnOpenSecurityProfileListOperationCompleted
            End If
            Me.InvokeAsync("OpenSecurityProfileList", New Object() {sessionId, securityProfilePropertiesRequired}, Me.OpenSecurityProfileListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSecurityProfileListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSecurityProfileListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSecurityProfileListCompleted(Me, New OpenSecurityProfileListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSecurityProfiles(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSecurityProfiles As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrOfSecurityProfileProperties", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("securityProfilePropertiesArray", IsNullable:=false)> SecurityProfileProperties()
            Dim results() As Object = Me.Invoke("GetSecurityProfiles", New Object() {sessionId, listHandle, noOfSecurityProfiles})
            Return CType(results(0),SecurityProfileProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSecurityProfilesAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSecurityProfiles As Long)
            Me.GetSecurityProfilesAsync(sessionId, listHandle, noOfSecurityProfiles, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSecurityProfilesAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSecurityProfiles As Long, ByVal userState As Object)
            If (Me.GetSecurityProfilesOperationCompleted Is Nothing) Then
                Me.GetSecurityProfilesOperationCompleted = AddressOf Me.OnGetSecurityProfilesOperationCompleted
            End If
            Me.InvokeAsync("GetSecurityProfiles", New Object() {sessionId, listHandle, noOfSecurityProfiles}, Me.GetSecurityProfilesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSecurityProfilesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSecurityProfilesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSecurityProfilesCompleted(Me, New GetSecurityProfilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSecurityProfileList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSecurityProfileList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSecurityProfileListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSecurityProfileListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSecurityProfileListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSecurityProfileListOperationCompleted Is Nothing) Then
                Me.CloseSecurityProfileListOperationCompleted = AddressOf Me.OnCloseSecurityProfileListOperationCompleted
            End If
            Me.InvokeAsync("CloseSecurityProfileList", New Object() {sessionId, listHandle}, Me.CloseSecurityProfileListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSecurityProfileListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSecurityProfileListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSecurityProfileListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSecurityProfile(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityProfileId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityProfilePropertiesRequired As SecurityProfilePropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("securityProfileProperties", IsNullable:=true)> SecurityProfileProperties
            Dim results() As Object = Me.Invoke("GetSecurityProfile", New Object() {sessionId, securityProfileId, securityProfilePropertiesRequired})
            Return CType(results(0),SecurityProfileProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSecurityProfileAsync(ByVal sessionId As String, ByVal securityProfileId As String, ByVal securityProfilePropertiesRequired As SecurityProfilePropertiesRequired)
            Me.GetSecurityProfileAsync(sessionId, securityProfileId, securityProfilePropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSecurityProfileAsync(ByVal sessionId As String, ByVal securityProfileId As String, ByVal securityProfilePropertiesRequired As SecurityProfilePropertiesRequired, ByVal userState As Object)
            If (Me.GetSecurityProfileOperationCompleted Is Nothing) Then
                Me.GetSecurityProfileOperationCompleted = AddressOf Me.OnGetSecurityProfileOperationCompleted
            End If
            Me.InvokeAsync("GetSecurityProfile", New Object() {sessionId, securityProfileId, securityProfilePropertiesRequired}, Me.GetSecurityProfileOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSecurityProfileOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSecurityProfileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSecurityProfileCompleted(Me, New GetSecurityProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSecurityProfile(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityProfileUUID As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setSecurityProfileProperties As SetSecurityProfileProperties)
            Me.Invoke("SetSecurityProfile", New Object() {sessionId, securityProfileUUID, setSecurityProfileProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSecurityProfileAsync(ByVal sessionId As String, ByVal securityProfileUUID As String, ByVal setSecurityProfileProperties As SetSecurityProfileProperties)
            Me.SetSecurityProfileAsync(sessionId, securityProfileUUID, setSecurityProfileProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSecurityProfileAsync(ByVal sessionId As String, ByVal securityProfileUUID As String, ByVal setSecurityProfileProperties As SetSecurityProfileProperties, ByVal userState As Object)
            If (Me.SetSecurityProfileOperationCompleted Is Nothing) Then
                Me.SetSecurityProfileOperationCompleted = AddressOf Me.OnSetSecurityProfileOperationCompleted
            End If
            Me.InvokeAsync("SetSecurityProfile", New Object() {sessionId, securityProfileUUID, setSecurityProfileProperties}, Me.SetSecurityProfileOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSecurityProfileOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSecurityProfileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSecurityProfileCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSecurityClassList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityClassPropertiesRequired As SecurityClassPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef openListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef openListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSecurityClasses As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSecurityClassesSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSecurityClassList", New Object() {sessionId, securityClassPropertiesRequired})
            openListHandle = CType(results(0),System.Nullable(Of Long))
            openListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSecurityClasses = CType(results(2),System.Nullable(Of Long))
            totalNoOfSecurityClassesSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSecurityClassListAsync(ByVal sessionId As String, ByVal securityClassPropertiesRequired As SecurityClassPropertiesRequired)
            Me.OpenSecurityClassListAsync(sessionId, securityClassPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSecurityClassListAsync(ByVal sessionId As String, ByVal securityClassPropertiesRequired As SecurityClassPropertiesRequired, ByVal userState As Object)
            If (Me.OpenSecurityClassListOperationCompleted Is Nothing) Then
                Me.OpenSecurityClassListOperationCompleted = AddressOf Me.OnOpenSecurityClassListOperationCompleted
            End If
            Me.InvokeAsync("OpenSecurityClassList", New Object() {sessionId, securityClassPropertiesRequired}, Me.OpenSecurityClassListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSecurityClassListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSecurityClassListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSecurityClassListCompleted(Me, New OpenSecurityClassListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSecurityClasses(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSecurityclasses As Long, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal securityProfileUUIDs() As String) As <System.Xml.Serialization.XmlArrayAttribute("arrOfSecurityClassesProperties", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("securityClassesPropertiesArray", IsNullable:=false)> SecurityClassProperties()
            Dim results() As Object = Me.Invoke("GetSecurityClasses", New Object() {sessionId, listHandle, noOfSecurityclasses, securityProfileUUIDs})
            Return CType(results(0),SecurityClassProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSecurityClassesAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSecurityclasses As Long, ByVal securityProfileUUIDs() As String)
            Me.GetSecurityClassesAsync(sessionId, listHandle, noOfSecurityclasses, securityProfileUUIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSecurityClassesAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSecurityclasses As Long, ByVal securityProfileUUIDs() As String, ByVal userState As Object)
            If (Me.GetSecurityClassesOperationCompleted Is Nothing) Then
                Me.GetSecurityClassesOperationCompleted = AddressOf Me.OnGetSecurityClassesOperationCompleted
            End If
            Me.InvokeAsync("GetSecurityClasses", New Object() {sessionId, listHandle, noOfSecurityclasses, securityProfileUUIDs}, Me.GetSecurityClassesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSecurityClassesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSecurityClassesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSecurityClassesCompleted(Me, New GetSecurityClassesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseSecurityClassList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseSecurityClassList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSecurityClassListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseSecurityClassListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseSecurityClassListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseSecurityClassListOperationCompleted Is Nothing) Then
                Me.CloseSecurityClassListOperationCompleted = AddressOf Me.OnCloseSecurityClassListOperationCompleted
            End If
            Me.InvokeAsync("CloseSecurityClassList", New Object() {sessionId, listHandle}, Me.CloseSecurityClassListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseSecurityClassListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseSecurityClassListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseSecurityClassListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSecurityClassPermissions(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("securityClassTypes", IsNullable:=false)> ByVal securityClassTypeArray() As SecurityClassType, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal securityProfileUUIDs() As String) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfGetSecurityClassPermissions", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("securityClassPermissionPropertiesArray", IsNullable:=false)> SecurityClassPermissionProperties()
            Dim results() As Object = Me.Invoke("GetSecurityClassPermissions", New Object() {sessionId, securityClassTypeArray, securityProfileUUIDs})
            Return CType(results(0),SecurityClassPermissionProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSecurityClassPermissionsAsync(ByVal sessionId As String, ByVal securityClassTypeArray() As SecurityClassType, ByVal securityProfileUUIDs() As String)
            Me.GetSecurityClassPermissionsAsync(sessionId, securityClassTypeArray, securityProfileUUIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSecurityClassPermissionsAsync(ByVal sessionId As String, ByVal securityClassTypeArray() As SecurityClassType, ByVal securityProfileUUIDs() As String, ByVal userState As Object)
            If (Me.GetSecurityClassPermissionsOperationCompleted Is Nothing) Then
                Me.GetSecurityClassPermissionsOperationCompleted = AddressOf Me.OnGetSecurityClassPermissionsOperationCompleted
            End If
            Me.InvokeAsync("GetSecurityClassPermissions", New Object() {sessionId, securityClassTypeArray, securityProfileUUIDs}, Me.GetSecurityClassPermissionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSecurityClassPermissionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSecurityClassPermissionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSecurityClassPermissionsCompleted(Me, New GetSecurityClassPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSecurityClassPermissions(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("securityClassTypes", IsNullable:=false)> ByVal securityClassTypeArray() As SecurityClassType, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("securityClassPermissionsArray", IsNullable:=false)> ByVal setSecurityClassPermissionsArray() As SecurityClassPermissions)
            Me.Invoke("SetSecurityClassPermissions", New Object() {sessionId, securityClassTypeArray, setSecurityClassPermissionsArray})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSecurityClassPermissionsAsync(ByVal sessionId As String, ByVal securityClassTypeArray() As SecurityClassType, ByVal setSecurityClassPermissionsArray() As SecurityClassPermissions)
            Me.SetSecurityClassPermissionsAsync(sessionId, securityClassTypeArray, setSecurityClassPermissionsArray, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSecurityClassPermissionsAsync(ByVal sessionId As String, ByVal securityClassTypeArray() As SecurityClassType, ByVal setSecurityClassPermissionsArray() As SecurityClassPermissions, ByVal userState As Object)
            If (Me.SetSecurityClassPermissionsOperationCompleted Is Nothing) Then
                Me.SetSecurityClassPermissionsOperationCompleted = AddressOf Me.OnSetSecurityClassPermissionsOperationCompleted
            End If
            Me.InvokeAsync("SetSecurityClassPermissions", New Object() {sessionId, securityClassTypeArray, setSecurityClassPermissionsArray}, Me.SetSecurityClassPermissionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSecurityClassPermissionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSecurityClassPermissionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSecurityClassPermissionsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSecurityClassPermissionsForAllSecurityProfiles(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal securityClassType As SecurityClassType) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfSecurityClassPermissions", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("securityClassPermissionsArray", IsNullable:=false)> SecurityClassPermissions()
            Dim results() As Object = Me.Invoke("GetSecurityClassPermissionsForAllSecurityProfiles", New Object() {sessionId, securityClassType})
            Return CType(results(0),SecurityClassPermissions())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSecurityClassPermissionsForAllSecurityProfilesAsync(ByVal sessionId As String, ByVal securityClassType As SecurityClassType)
            Me.GetSecurityClassPermissionsForAllSecurityProfilesAsync(sessionId, securityClassType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSecurityClassPermissionsForAllSecurityProfilesAsync(ByVal sessionId As String, ByVal securityClassType As SecurityClassType, ByVal userState As Object)
            If (Me.GetSecurityClassPermissionsForAllSecurityProfilesOperationCompleted Is Nothing) Then
                Me.GetSecurityClassPermissionsForAllSecurityProfilesOperationCompleted = AddressOf Me.OnGetSecurityClassPermissionsForAllSecurityProfilesOperationCompleted
            End If
            Me.InvokeAsync("GetSecurityClassPermissionsForAllSecurityProfiles", New Object() {sessionId, securityClassType}, Me.GetSecurityClassPermissionsForAllSecurityProfilesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSecurityClassPermissionsForAllSecurityProfilesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSecurityClassPermissionsForAllSecurityProfilesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSecurityClassPermissionsForAllSecurityProfilesCompleted(Me, New GetSecurityClassPermissionsForAllSecurityProfilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllSecurityClassPermissionsForSecurityProfile(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityProfileUUID As String) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfGetSecurityClassPermissions", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("securityClassPermissionsArray", IsNullable:=false)> SecurityClassPermissionsForSecurityProfile()
            Dim results() As Object = Me.Invoke("GetAllSecurityClassPermissionsForSecurityProfile", New Object() {sessionId, securityProfileUUID})
            Return CType(results(0),SecurityClassPermissionsForSecurityProfile())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllSecurityClassPermissionsForSecurityProfileAsync(ByVal sessionId As String, ByVal securityProfileUUID As String)
            Me.GetAllSecurityClassPermissionsForSecurityProfileAsync(sessionId, securityProfileUUID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllSecurityClassPermissionsForSecurityProfileAsync(ByVal sessionId As String, ByVal securityProfileUUID As String, ByVal userState As Object)
            If (Me.GetAllSecurityClassPermissionsForSecurityProfileOperationCompleted Is Nothing) Then
                Me.GetAllSecurityClassPermissionsForSecurityProfileOperationCompleted = AddressOf Me.OnGetAllSecurityClassPermissionsForSecurityProfileOperationCompleted
            End If
            Me.InvokeAsync("GetAllSecurityClassPermissionsForSecurityProfile", New Object() {sessionId, securityProfileUUID}, Me.GetAllSecurityClassPermissionsForSecurityProfileOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllSecurityClassPermissionsForSecurityProfileOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllSecurityClassPermissionsForSecurityProfileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllSecurityClassPermissionsForSecurityProfileCompleted(Me, New GetAllSecurityClassPermissionsForSecurityProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSecurityGroupsPermissions(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal securityClassType As SecurityClassType, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal securityGroupsUUIDs() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal securityProfilesUUIDs() As String) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfGetSecurityGroupsPermissions", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("securityGroupPermissionsArray", IsNullable:=false)> GetSecurityGroupPermissions()
            Dim results() As Object = Me.Invoke("GetSecurityGroupsPermissions", New Object() {sessionId, securityClassType, securityGroupsUUIDs, securityProfilesUUIDs})
            Return CType(results(0),GetSecurityGroupPermissions())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSecurityGroupsPermissionsAsync(ByVal sessionId As String, ByVal securityClassType As SecurityClassType, ByVal securityGroupsUUIDs() As String, ByVal securityProfilesUUIDs() As String)
            Me.GetSecurityGroupsPermissionsAsync(sessionId, securityClassType, securityGroupsUUIDs, securityProfilesUUIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSecurityGroupsPermissionsAsync(ByVal sessionId As String, ByVal securityClassType As SecurityClassType, ByVal securityGroupsUUIDs() As String, ByVal securityProfilesUUIDs() As String, ByVal userState As Object)
            If (Me.GetSecurityGroupsPermissionsOperationCompleted Is Nothing) Then
                Me.GetSecurityGroupsPermissionsOperationCompleted = AddressOf Me.OnGetSecurityGroupsPermissionsOperationCompleted
            End If
            Me.InvokeAsync("GetSecurityGroupsPermissions", New Object() {sessionId, securityClassType, securityGroupsUUIDs, securityProfilesUUIDs}, Me.GetSecurityGroupsPermissionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSecurityGroupsPermissionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSecurityGroupsPermissionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSecurityGroupsPermissionsCompleted(Me, New GetSecurityGroupsPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSecurityGroupsPermissions(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal securityClassType As SecurityClassType, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal securityGroupsUUIDs() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("securityGroupPermissionsArray", IsNullable:=false)> ByVal securityGroupPermissionsArray() As SetSecurityGroupPermissions)
            Me.Invoke("SetSecurityGroupsPermissions", New Object() {sessionId, securityClassType, securityGroupsUUIDs, securityGroupPermissionsArray})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSecurityGroupsPermissionsAsync(ByVal sessionId As String, ByVal securityClassType As SecurityClassType, ByVal securityGroupsUUIDs() As String, ByVal securityGroupPermissionsArray() As SetSecurityGroupPermissions)
            Me.SetSecurityGroupsPermissionsAsync(sessionId, securityClassType, securityGroupsUUIDs, securityGroupPermissionsArray, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSecurityGroupsPermissionsAsync(ByVal sessionId As String, ByVal securityClassType As SecurityClassType, ByVal securityGroupsUUIDs() As String, ByVal securityGroupPermissionsArray() As SetSecurityGroupPermissions, ByVal userState As Object)
            If (Me.SetSecurityGroupsPermissionsOperationCompleted Is Nothing) Then
                Me.SetSecurityGroupsPermissionsOperationCompleted = AddressOf Me.OnSetSecurityGroupsPermissionsOperationCompleted
            End If
            Me.InvokeAsync("SetSecurityGroupsPermissions", New Object() {sessionId, securityClassType, securityGroupsUUIDs, securityGroupPermissionsArray}, Me.SetSecurityGroupsPermissionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSecurityGroupsPermissionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSecurityGroupsPermissionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSecurityGroupsPermissionsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSecurityGroupPermissionsForAllSecurityProfiles(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal securityClassType As SecurityClassType, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityGroupUUID As String) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfSecurityGroupPermissions", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("securityGroupPermissionsPropertiesArray", IsNullable:=false)> SecurityGroupPermissionsForAllSecurityProfiles()
            Dim results() As Object = Me.Invoke("GetSecurityGroupPermissionsForAllSecurityProfiles", New Object() {sessionId, securityClassType, securityGroupUUID})
            Return CType(results(0),SecurityGroupPermissionsForAllSecurityProfiles())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSecurityGroupPermissionsForAllSecurityProfilesAsync(ByVal sessionId As String, ByVal securityClassType As SecurityClassType, ByVal securityGroupUUID As String)
            Me.GetSecurityGroupPermissionsForAllSecurityProfilesAsync(sessionId, securityClassType, securityGroupUUID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSecurityGroupPermissionsForAllSecurityProfilesAsync(ByVal sessionId As String, ByVal securityClassType As SecurityClassType, ByVal securityGroupUUID As String, ByVal userState As Object)
            If (Me.GetSecurityGroupPermissionsForAllSecurityProfilesOperationCompleted Is Nothing) Then
                Me.GetSecurityGroupPermissionsForAllSecurityProfilesOperationCompleted = AddressOf Me.OnGetSecurityGroupPermissionsForAllSecurityProfilesOperationCompleted
            End If
            Me.InvokeAsync("GetSecurityGroupPermissionsForAllSecurityProfiles", New Object() {sessionId, securityClassType, securityGroupUUID}, Me.GetSecurityGroupPermissionsForAllSecurityProfilesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSecurityGroupPermissionsForAllSecurityProfilesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSecurityGroupPermissionsForAllSecurityProfilesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSecurityGroupPermissionsForAllSecurityProfilesCompleted(Me, New GetSecurityGroupPermissionsForAllSecurityProfilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSecurityObjectPermissions(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal securityClassType As SecurityClassType, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal securityObjectUUIDs() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal securityProfileUUIDs() As String) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfGetSecurityObjectsPermissions", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("securityObjectPermissionsArray", IsNullable:=false)> GetSecurityObjectsPermissions()
            Dim results() As Object = Me.Invoke("GetSecurityObjectPermissions", New Object() {sessionId, securityClassType, securityObjectUUIDs, securityProfileUUIDs})
            Return CType(results(0),GetSecurityObjectsPermissions())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSecurityObjectPermissionsAsync(ByVal sessionId As String, ByVal securityClassType As SecurityClassType, ByVal securityObjectUUIDs() As String, ByVal securityProfileUUIDs() As String)
            Me.GetSecurityObjectPermissionsAsync(sessionId, securityClassType, securityObjectUUIDs, securityProfileUUIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSecurityObjectPermissionsAsync(ByVal sessionId As String, ByVal securityClassType As SecurityClassType, ByVal securityObjectUUIDs() As String, ByVal securityProfileUUIDs() As String, ByVal userState As Object)
            If (Me.GetSecurityObjectPermissionsOperationCompleted Is Nothing) Then
                Me.GetSecurityObjectPermissionsOperationCompleted = AddressOf Me.OnGetSecurityObjectPermissionsOperationCompleted
            End If
            Me.InvokeAsync("GetSecurityObjectPermissions", New Object() {sessionId, securityClassType, securityObjectUUIDs, securityProfileUUIDs}, Me.GetSecurityObjectPermissionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSecurityObjectPermissionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSecurityObjectPermissionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSecurityObjectPermissionsCompleted(Me, New GetSecurityObjectPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSecurityObjectsPermissions(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal securityClassType As SecurityClassType, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal securityObjectsUUIDs() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("securityObjectPermissionsArray", IsNullable:=false)> ByVal securityObjectPermissionsArray() As SetSecurityObjectPermissions)
            Me.Invoke("SetSecurityObjectsPermissions", New Object() {sessionId, securityClassType, securityObjectsUUIDs, securityObjectPermissionsArray})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSecurityObjectsPermissionsAsync(ByVal sessionId As String, ByVal securityClassType As SecurityClassType, ByVal securityObjectsUUIDs() As String, ByVal securityObjectPermissionsArray() As SetSecurityObjectPermissions)
            Me.SetSecurityObjectsPermissionsAsync(sessionId, securityClassType, securityObjectsUUIDs, securityObjectPermissionsArray, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSecurityObjectsPermissionsAsync(ByVal sessionId As String, ByVal securityClassType As SecurityClassType, ByVal securityObjectsUUIDs() As String, ByVal securityObjectPermissionsArray() As SetSecurityObjectPermissions, ByVal userState As Object)
            If (Me.SetSecurityObjectsPermissionsOperationCompleted Is Nothing) Then
                Me.SetSecurityObjectsPermissionsOperationCompleted = AddressOf Me.OnSetSecurityObjectsPermissionsOperationCompleted
            End If
            Me.InvokeAsync("SetSecurityObjectsPermissions", New Object() {sessionId, securityClassType, securityObjectsUUIDs, securityObjectPermissionsArray}, Me.SetSecurityObjectsPermissionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSecurityObjectsPermissionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSecurityObjectsPermissionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSecurityObjectsPermissionsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSecurityObjectPermissionsForAllSecurityProfiles(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal securityClassType As SecurityClassType, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal securityObjectUUID As String) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfSecurityObjectPermissions", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("securityObjectPermissionsArray", IsNullable:=false)> SecurityObjectPermissionsForAllSecurityProfiles()
            Dim results() As Object = Me.Invoke("GetSecurityObjectPermissionsForAllSecurityProfiles", New Object() {sessionId, securityClassType, securityObjectUUID})
            Return CType(results(0),SecurityObjectPermissionsForAllSecurityProfiles())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSecurityObjectPermissionsForAllSecurityProfilesAsync(ByVal sessionId As String, ByVal securityClassType As SecurityClassType, ByVal securityObjectUUID As String)
            Me.GetSecurityObjectPermissionsForAllSecurityProfilesAsync(sessionId, securityClassType, securityObjectUUID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSecurityObjectPermissionsForAllSecurityProfilesAsync(ByVal sessionId As String, ByVal securityClassType As SecurityClassType, ByVal securityObjectUUID As String, ByVal userState As Object)
            If (Me.GetSecurityObjectPermissionsForAllSecurityProfilesOperationCompleted Is Nothing) Then
                Me.GetSecurityObjectPermissionsForAllSecurityProfilesOperationCompleted = AddressOf Me.OnGetSecurityObjectPermissionsForAllSecurityProfilesOperationCompleted
            End If
            Me.InvokeAsync("GetSecurityObjectPermissionsForAllSecurityProfiles", New Object() {sessionId, securityClassType, securityObjectUUID}, Me.GetSecurityObjectPermissionsForAllSecurityProfilesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSecurityObjectPermissionsForAllSecurityProfilesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSecurityObjectPermissionsForAllSecurityProfilesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSecurityObjectPermissionsForAllSecurityProfilesCompleted(Me, New GetSecurityObjectPermissionsForAllSecurityProfilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetUnitGroup2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupUUID As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupProperties As SetUnitGroupProperties2)
            Me.Invoke("SetUnitGroup2", New Object() {sessionId, unitGroupUUID, unitGroupProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetUnitGroup2Async(ByVal sessionId As String, ByVal unitGroupUUID As String, ByVal unitGroupProperties As SetUnitGroupProperties2)
            Me.SetUnitGroup2Async(sessionId, unitGroupUUID, unitGroupProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetUnitGroup2Async(ByVal sessionId As String, ByVal unitGroupUUID As String, ByVal unitGroupProperties As SetUnitGroupProperties2, ByVal userState As Object)
            If (Me.SetUnitGroup2OperationCompleted Is Nothing) Then
                Me.SetUnitGroup2OperationCompleted = AddressOf Me.OnSetUnitGroup2OperationCompleted
            End If
            Me.InvokeAsync("SetUnitGroup2", New Object() {sessionId, unitGroupUUID, unitGroupProperties}, Me.SetUnitGroup2OperationCompleted, userState)
        End Sub
        
        Private Sub OnSetUnitGroup2OperationCompleted(ByVal arg As Object)
            If (Not (Me.SetUnitGroup2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetUnitGroup2Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDeploymentPackages(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal deploymentPackagePropertiesRequired As DeploymentPackagePropertiesRequired) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfDeploymentPackageProperties", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("deploymentPackagePropertiesArray", IsNullable:=false)> DeploymentPackageProperties()
            Dim results() As Object = Me.Invoke("GetDeploymentPackages", New Object() {sessionId, deploymentPackagePropertiesRequired})
            Return CType(results(0),DeploymentPackageProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDeploymentPackagesAsync(ByVal sessionId As String, ByVal deploymentPackagePropertiesRequired As DeploymentPackagePropertiesRequired)
            Me.GetDeploymentPackagesAsync(sessionId, deploymentPackagePropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDeploymentPackagesAsync(ByVal sessionId As String, ByVal deploymentPackagePropertiesRequired As DeploymentPackagePropertiesRequired, ByVal userState As Object)
            If (Me.GetDeploymentPackagesOperationCompleted Is Nothing) Then
                Me.GetDeploymentPackagesOperationCompleted = AddressOf Me.OnGetDeploymentPackagesOperationCompleted
            End If
            Me.InvokeAsync("GetDeploymentPackages", New Object() {sessionId, deploymentPackagePropertiesRequired}, Me.GetDeploymentPackagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDeploymentPackagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDeploymentPackagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDeploymentPackagesCompleted(Me, New GetDeploymentPackagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ScanPackageOnTargetComputers(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal scanParameters As ScanParameters, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal scanPackageInfo As ScanPackageInfo, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal jobName As String) As <System.Xml.Serialization.XmlElementAttribute("jobId")> Integer
            Dim results() As Object = Me.Invoke("ScanPackageOnTargetComputers", New Object() {sessionId, scanParameters, scanPackageInfo, jobName})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ScanPackageOnTargetComputersAsync(ByVal sessionId As String, ByVal scanParameters As ScanParameters, ByVal scanPackageInfo As ScanPackageInfo, ByVal jobName As String)
            Me.ScanPackageOnTargetComputersAsync(sessionId, scanParameters, scanPackageInfo, jobName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ScanPackageOnTargetComputersAsync(ByVal sessionId As String, ByVal scanParameters As ScanParameters, ByVal scanPackageInfo As ScanPackageInfo, ByVal jobName As String, ByVal userState As Object)
            If (Me.ScanPackageOnTargetComputersOperationCompleted Is Nothing) Then
                Me.ScanPackageOnTargetComputersOperationCompleted = AddressOf Me.OnScanPackageOnTargetComputersOperationCompleted
            End If
            Me.InvokeAsync("ScanPackageOnTargetComputers", New Object() {sessionId, scanParameters, scanPackageInfo, jobName}, Me.ScanPackageOnTargetComputersOperationCompleted, userState)
        End Sub
        
        Private Sub OnScanPackageOnTargetComputersOperationCompleted(ByVal arg As Object)
            If (Not (Me.ScanPackageOnTargetComputersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ScanPackageOnTargetComputersCompleted(Me, New ScanPackageOnTargetComputersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeployPackage(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal jobId As Long, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal deploymentInfo As DeploymentInfo, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal deploymentPackageInfo As DeploymentPackageInfo)
            Me.Invoke("DeployPackage", New Object() {sessionId, jobId, deploymentInfo, deploymentPackageInfo})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeployPackageAsync(ByVal sessionId As String, ByVal jobId As Long, ByVal deploymentInfo As DeploymentInfo, ByVal deploymentPackageInfo As DeploymentPackageInfo)
            Me.DeployPackageAsync(sessionId, jobId, deploymentInfo, deploymentPackageInfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeployPackageAsync(ByVal sessionId As String, ByVal jobId As Long, ByVal deploymentInfo As DeploymentInfo, ByVal deploymentPackageInfo As DeploymentPackageInfo, ByVal userState As Object)
            If (Me.DeployPackageOperationCompleted Is Nothing) Then
                Me.DeployPackageOperationCompleted = AddressOf Me.OnDeployPackageOperationCompleted
            End If
            Me.InvokeAsync("DeployPackage", New Object() {sessionId, jobId, deploymentInfo, deploymentPackageInfo}, Me.DeployPackageOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeployPackageOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeployPackageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeployPackageCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDeploymentJobStatus(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal jobId As Long, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal computerStatusInfoRequired As ComputerStatusInfoRequired, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("computerStatusInfoArray", IsNullable:=false)> ByRef arrayOfComputerStatusInfo() As ComputerStatusInfo) As <System.Xml.Serialization.XmlElementAttribute("bNoMoreComputers")> Boolean
            Dim results() As Object = Me.Invoke("GetDeploymentJobStatus", New Object() {sessionId, jobId, computerStatusInfoRequired})
            arrayOfComputerStatusInfo = CType(results(1),ComputerStatusInfo())
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDeploymentJobStatusAsync(ByVal sessionId As String, ByVal jobId As Long, ByVal computerStatusInfoRequired As ComputerStatusInfoRequired)
            Me.GetDeploymentJobStatusAsync(sessionId, jobId, computerStatusInfoRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDeploymentJobStatusAsync(ByVal sessionId As String, ByVal jobId As Long, ByVal computerStatusInfoRequired As ComputerStatusInfoRequired, ByVal userState As Object)
            If (Me.GetDeploymentJobStatusOperationCompleted Is Nothing) Then
                Me.GetDeploymentJobStatusOperationCompleted = AddressOf Me.OnGetDeploymentJobStatusOperationCompleted
            End If
            Me.InvokeAsync("GetDeploymentJobStatus", New Object() {sessionId, jobId, computerStatusInfoRequired}, Me.GetDeploymentJobStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDeploymentJobStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDeploymentJobStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDeploymentJobStatusCompleted(Me, New GetDeploymentJobStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub StagePackage(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal jobId As Long, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal stagingCredentials As StagingCredentials, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal deploymentPackageInfo As DeploymentPackageInfo)
            Me.Invoke("StagePackage", New Object() {sessionId, jobId, stagingCredentials, deploymentPackageInfo})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StagePackageAsync(ByVal sessionId As String, ByVal jobId As Long, ByVal stagingCredentials As StagingCredentials, ByVal deploymentPackageInfo As DeploymentPackageInfo)
            Me.StagePackageAsync(sessionId, jobId, stagingCredentials, deploymentPackageInfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StagePackageAsync(ByVal sessionId As String, ByVal jobId As Long, ByVal stagingCredentials As StagingCredentials, ByVal deploymentPackageInfo As DeploymentPackageInfo, ByVal userState As Object)
            If (Me.StagePackageOperationCompleted Is Nothing) Then
                Me.StagePackageOperationCompleted = AddressOf Me.OnStagePackageOperationCompleted
            End If
            Me.InvokeAsync("StagePackage", New Object() {sessionId, jobId, stagingCredentials, deploymentPackageInfo}, Me.StagePackageOperationCompleted, userState)
        End Sub
        
        Private Sub OnStagePackageOperationCompleted(ByVal arg As Object)
            If (Not (Me.StagePackageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StagePackageCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetDeploymentPackagesOnScalabilitySeverResponse", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDeploymentPackagesOnScalabilityServer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal scalabilityServerName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal ssPackageInfoRequired As SSPackageInfoRequired) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfSSPackageInfo", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("ssPackageInfoArray", IsNullable:=false)> SSPackageInfo()
            Dim results() As Object = Me.Invoke("GetDeploymentPackagesOnScalabilityServer", New Object() {sessionId, scalabilityServerName, ssPackageInfoRequired})
            Return CType(results(0),SSPackageInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDeploymentPackagesOnScalabilityServerAsync(ByVal sessionId As String, ByVal scalabilityServerName As String, ByVal ssPackageInfoRequired As SSPackageInfoRequired)
            Me.GetDeploymentPackagesOnScalabilityServerAsync(sessionId, scalabilityServerName, ssPackageInfoRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDeploymentPackagesOnScalabilityServerAsync(ByVal sessionId As String, ByVal scalabilityServerName As String, ByVal ssPackageInfoRequired As SSPackageInfoRequired, ByVal userState As Object)
            If (Me.GetDeploymentPackagesOnScalabilityServerOperationCompleted Is Nothing) Then
                Me.GetDeploymentPackagesOnScalabilityServerOperationCompleted = AddressOf Me.OnGetDeploymentPackagesOnScalabilityServerOperationCompleted
            End If
            Me.InvokeAsync("GetDeploymentPackagesOnScalabilityServer", New Object() {sessionId, scalabilityServerName, ssPackageInfoRequired}, Me.GetDeploymentPackagesOnScalabilityServerOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDeploymentPackagesOnScalabilityServerOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDeploymentPackagesOnScalabilityServerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDeploymentPackagesOnScalabilityServerCompleted(Me, New GetDeploymentPackagesOnScalabilityServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SuspendDeploymentJob(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal jobId As Long)
            Me.Invoke("SuspendDeploymentJob", New Object() {sessionId, jobId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SuspendDeploymentJobAsync(ByVal sessionId As String, ByVal jobId As Long)
            Me.SuspendDeploymentJobAsync(sessionId, jobId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SuspendDeploymentJobAsync(ByVal sessionId As String, ByVal jobId As Long, ByVal userState As Object)
            If (Me.SuspendDeploymentJobOperationCompleted Is Nothing) Then
                Me.SuspendDeploymentJobOperationCompleted = AddressOf Me.OnSuspendDeploymentJobOperationCompleted
            End If
            Me.InvokeAsync("SuspendDeploymentJob", New Object() {sessionId, jobId}, Me.SuspendDeploymentJobOperationCompleted, userState)
        End Sub
        
        Private Sub OnSuspendDeploymentJobOperationCompleted(ByVal arg As Object)
            If (Not (Me.SuspendDeploymentJobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SuspendDeploymentJobCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ResumeDeploymentJob(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal jobId As Long)
            Me.Invoke("ResumeDeploymentJob", New Object() {sessionId, jobId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResumeDeploymentJobAsync(ByVal sessionId As String, ByVal jobId As Long)
            Me.ResumeDeploymentJobAsync(sessionId, jobId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResumeDeploymentJobAsync(ByVal sessionId As String, ByVal jobId As Long, ByVal userState As Object)
            If (Me.ResumeDeploymentJobOperationCompleted Is Nothing) Then
                Me.ResumeDeploymentJobOperationCompleted = AddressOf Me.OnResumeDeploymentJobOperationCompleted
            End If
            Me.InvokeAsync("ResumeDeploymentJob", New Object() {sessionId, jobId}, Me.ResumeDeploymentJobOperationCompleted, userState)
        End Sub
        
        Private Sub OnResumeDeploymentJobOperationCompleted(ByVal arg As Object)
            If (Not (Me.ResumeDeploymentJobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ResumeDeploymentJobCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DiscardDeploymentJob(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal jobId As Long)
            Me.Invoke("DiscardDeploymentJob", New Object() {sessionId, jobId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DiscardDeploymentJobAsync(ByVal sessionId As String, ByVal jobId As Long)
            Me.DiscardDeploymentJobAsync(sessionId, jobId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DiscardDeploymentJobAsync(ByVal sessionId As String, ByVal jobId As Long, ByVal userState As Object)
            If (Me.DiscardDeploymentJobOperationCompleted Is Nothing) Then
                Me.DiscardDeploymentJobOperationCompleted = AddressOf Me.OnDiscardDeploymentJobOperationCompleted
            End If
            Me.InvokeAsync("DiscardDeploymentJob", New Object() {sessionId, jobId}, Me.DiscardDeploymentJobOperationCompleted, userState)
        End Sub
        
        Private Sub OnDiscardDeploymentJobOperationCompleted(ByVal arg As Object)
            If (Not (Me.DiscardDeploymentJobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DiscardDeploymentJobCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub AbortDeploymentJob(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal jobId As Long)
            Me.Invoke("AbortDeploymentJob", New Object() {sessionId, jobId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AbortDeploymentJobAsync(ByVal sessionId As String, ByVal jobId As Long)
            Me.AbortDeploymentJobAsync(sessionId, jobId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AbortDeploymentJobAsync(ByVal sessionId As String, ByVal jobId As Long, ByVal userState As Object)
            If (Me.AbortDeploymentJobOperationCompleted Is Nothing) Then
                Me.AbortDeploymentJobOperationCompleted = AddressOf Me.OnAbortDeploymentJobOperationCompleted
            End If
            Me.InvokeAsync("AbortDeploymentJob", New Object() {sessionId, jobId}, Me.AbortDeploymentJobOperationCompleted, userState)
        End Sub
        
        Private Sub OnAbortDeploymentJobOperationCompleted(ByVal arg As Object)
            If (Not (Me.AbortDeploymentJobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AbortDeploymentJobCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RetryDeploymentJob(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal jobId As Long, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("machineCredentialsArray", IsNullable:=false)> ByVal arrayOfTargetMachines() As MachineCredentials)
            Me.Invoke("RetryDeploymentJob", New Object() {sessionId, jobId, arrayOfTargetMachines})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetryDeploymentJobAsync(ByVal sessionId As String, ByVal jobId As Long, ByVal arrayOfTargetMachines() As MachineCredentials)
            Me.RetryDeploymentJobAsync(sessionId, jobId, arrayOfTargetMachines, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetryDeploymentJobAsync(ByVal sessionId As String, ByVal jobId As Long, ByVal arrayOfTargetMachines() As MachineCredentials, ByVal userState As Object)
            If (Me.RetryDeploymentJobOperationCompleted Is Nothing) Then
                Me.RetryDeploymentJobOperationCompleted = AddressOf Me.OnRetryDeploymentJobOperationCompleted
            End If
            Me.InvokeAsync("RetryDeploymentJob", New Object() {sessionId, jobId, arrayOfTargetMachines}, Me.RetryDeploymentJobOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetryDeploymentJobOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetryDeploymentJobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetryDeploymentJobCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="ExportSoftwarePkgResponse", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ExportSoftwarePackage(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePkgId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal pkgProperties As ExportSoftwarePkgProperties)
            Me.Invoke("ExportSoftwarePackage", New Object() {sessionId, softwarePkgId, pkgProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExportSoftwarePackageAsync(ByVal sessionId As String, ByVal softwarePkgId As String, ByVal pkgProperties As ExportSoftwarePkgProperties)
            Me.ExportSoftwarePackageAsync(sessionId, softwarePkgId, pkgProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExportSoftwarePackageAsync(ByVal sessionId As String, ByVal softwarePkgId As String, ByVal pkgProperties As ExportSoftwarePkgProperties, ByVal userState As Object)
            If (Me.ExportSoftwarePackageOperationCompleted Is Nothing) Then
                Me.ExportSoftwarePackageOperationCompleted = AddressOf Me.OnExportSoftwarePackageOperationCompleted
            End If
            Me.InvokeAsync("ExportSoftwarePackage", New Object() {sessionId, softwarePkgId, pkgProperties}, Me.ExportSoftwarePackageOperationCompleted, userState)
        End Sub
        
        Private Sub OnExportSoftwarePackageOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExportSoftwarePackageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExportSoftwarePackageCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="ExportSoftwarePkgByNameResponse", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ExportSoftwarePackageByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePkgName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageVersion As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal pkgProperties As ExportSoftwarePkgProperties)
            Me.Invoke("ExportSoftwarePackageByName", New Object() {sessionId, softwarePkgName, softwarePackageVersion, pkgProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExportSoftwarePackageByNameAsync(ByVal sessionId As String, ByVal softwarePkgName As String, ByVal softwarePackageVersion As String, ByVal pkgProperties As ExportSoftwarePkgProperties)
            Me.ExportSoftwarePackageByNameAsync(sessionId, softwarePkgName, softwarePackageVersion, pkgProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExportSoftwarePackageByNameAsync(ByVal sessionId As String, ByVal softwarePkgName As String, ByVal softwarePackageVersion As String, ByVal pkgProperties As ExportSoftwarePkgProperties, ByVal userState As Object)
            If (Me.ExportSoftwarePackageByNameOperationCompleted Is Nothing) Then
                Me.ExportSoftwarePackageByNameOperationCompleted = AddressOf Me.OnExportSoftwarePackageByNameOperationCompleted
            End If
            Me.InvokeAsync("ExportSoftwarePackageByName", New Object() {sessionId, softwarePkgName, softwarePackageVersion, pkgProperties}, Me.ExportSoftwarePackageByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnExportSoftwarePackageByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExportSoftwarePackageByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExportSoftwarePackageByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="DeleteUnitGroupsResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteUnitGroups2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionid As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitGroupIds() As String, ByVal forceDelete As Boolean, ByVal objectType As LinkedObjectTypeRequired)
            Me.Invoke("DeleteUnitGroups2", New Object() {sessionid, unitGroupIds, forceDelete, objectType})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteUnitGroups2Async(ByVal sessionid As String, ByVal unitGroupIds() As String, ByVal forceDelete As Boolean, ByVal objectType As LinkedObjectTypeRequired)
            Me.DeleteUnitGroups2Async(sessionid, unitGroupIds, forceDelete, objectType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteUnitGroups2Async(ByVal sessionid As String, ByVal unitGroupIds() As String, ByVal forceDelete As Boolean, ByVal objectType As LinkedObjectTypeRequired, ByVal userState As Object)
            If (Me.DeleteUnitGroups2OperationCompleted Is Nothing) Then
                Me.DeleteUnitGroups2OperationCompleted = AddressOf Me.OnDeleteUnitGroups2OperationCompleted
            End If
            Me.InvokeAsync("DeleteUnitGroups2", New Object() {sessionid, unitGroupIds, forceDelete, objectType}, Me.DeleteUnitGroups2OperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteUnitGroups2OperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteUnitGroups2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteUnitGroups2Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="DeleteUnitGroupsByNameResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteUnitGroupsByName2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionid As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitGroupNames() As String, ByVal forceDelete As Boolean, ByVal objectType As LinkedObjectTypeRequired)
            Me.Invoke("DeleteUnitGroupsByName2", New Object() {sessionid, unitGroupNames, forceDelete, objectType})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteUnitGroupsByName2Async(ByVal sessionid As String, ByVal unitGroupNames() As String, ByVal forceDelete As Boolean, ByVal objectType As LinkedObjectTypeRequired)
            Me.DeleteUnitGroupsByName2Async(sessionid, unitGroupNames, forceDelete, objectType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteUnitGroupsByName2Async(ByVal sessionid As String, ByVal unitGroupNames() As String, ByVal forceDelete As Boolean, ByVal objectType As LinkedObjectTypeRequired, ByVal userState As Object)
            If (Me.DeleteUnitGroupsByName2OperationCompleted Is Nothing) Then
                Me.DeleteUnitGroupsByName2OperationCompleted = AddressOf Me.OnDeleteUnitGroupsByName2OperationCompleted
            End If
            Me.InvokeAsync("DeleteUnitGroupsByName2", New Object() {sessionid, unitGroupNames, forceDelete, objectType}, Me.DeleteUnitGroupsByName2OperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteUnitGroupsByName2OperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteUnitGroupsByName2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteUnitGroupsByName2Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateSoftwareJobContainerResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSoftwareJobContainer3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarejobContainer3 As CreateSoftwareJobContainerProperties3) As <System.Xml.Serialization.XmlElementAttribute("softwareJobContainerId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSoftwareJobContainer3", New Object() {sessionId, softwarejobContainer3})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwareJobContainer3Async(ByVal sessionId As String, ByVal softwarejobContainer3 As CreateSoftwareJobContainerProperties3)
            Me.CreateSoftwareJobContainer3Async(sessionId, softwarejobContainer3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwareJobContainer3Async(ByVal sessionId As String, ByVal softwarejobContainer3 As CreateSoftwareJobContainerProperties3, ByVal userState As Object)
            If (Me.CreateSoftwareJobContainer3OperationCompleted Is Nothing) Then
                Me.CreateSoftwareJobContainer3OperationCompleted = AddressOf Me.OnCreateSoftwareJobContainer3OperationCompleted
            End If
            Me.InvokeAsync("CreateSoftwareJobContainer3", New Object() {sessionId, softwarejobContainer3}, Me.CreateSoftwareJobContainer3OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSoftwareJobContainer3OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSoftwareJobContainer3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSoftwareJobContainer3Completed(Me, New CreateSoftwareJobContainer3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="SetSoftwareJobContainerResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSoftwareJobContainer3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainer3 As SetSoftwareJobContainerProperties3)
            Me.Invoke("SetSoftwareJobContainer3", New Object() {sessionId, softwareJobContainerId, softwareJobContainer3})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwareJobContainer3Async(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainer3 As SetSoftwareJobContainerProperties3)
            Me.SetSoftwareJobContainer3Async(sessionId, softwareJobContainerId, softwareJobContainer3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwareJobContainer3Async(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainer3 As SetSoftwareJobContainerProperties3, ByVal userState As Object)
            If (Me.SetSoftwareJobContainer3OperationCompleted Is Nothing) Then
                Me.SetSoftwareJobContainer3OperationCompleted = AddressOf Me.OnSetSoftwareJobContainer3OperationCompleted
            End If
            Me.InvokeAsync("SetSoftwareJobContainer3", New Object() {sessionId, softwareJobContainerId, softwareJobContainer3}, Me.SetSoftwareJobContainer3OperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSoftwareJobContainer3OperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSoftwareJobContainer3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSoftwareJobContainer3Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwareJobContainerResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwareJobContainer3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerPropertiesRequired3 As SoftwareJobContainerPropertiesRequired3) As <System.Xml.Serialization.XmlElementAttribute("softwareJobContainerProperties3", IsNullable:=true)> SoftwareJobContainerProperties3
            Dim results() As Object = Me.Invoke("GetSoftwareJobContainer3", New Object() {sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired3})
            Return CType(results(0),SoftwareJobContainerProperties3)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobContainer3Async(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainerPropertiesRequired3 As SoftwareJobContainerPropertiesRequired3)
            Me.GetSoftwareJobContainer3Async(sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobContainer3Async(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainerPropertiesRequired3 As SoftwareJobContainerPropertiesRequired3, ByVal userState As Object)
            If (Me.GetSoftwareJobContainer3OperationCompleted Is Nothing) Then
                Me.GetSoftwareJobContainer3OperationCompleted = AddressOf Me.OnGetSoftwareJobContainer3OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwareJobContainer3", New Object() {sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired3}, Me.GetSoftwareJobContainer3OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwareJobContainer3OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwareJobContainer3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwareJobContainer3Completed(Me, New GetSoftwareJobContainer3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="OpenSoftwareJobContainerListResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwareJobContainerList3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerPropertiesRequired3 As SoftwareJobContainerPropertiesRequired3, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwareJobContainers As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwareJobContainersSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwareJobContainerList3", New Object() {sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired3})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwareJobContainers = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwareJobContainersSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwareJobContainerList3Async(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainerPropertiesRequired3 As SoftwareJobContainerPropertiesRequired3)
            Me.OpenSoftwareJobContainerList3Async(sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwareJobContainerList3Async(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainerPropertiesRequired3 As SoftwareJobContainerPropertiesRequired3, ByVal userState As Object)
            If (Me.OpenSoftwareJobContainerList3OperationCompleted Is Nothing) Then
                Me.OpenSoftwareJobContainerList3OperationCompleted = AddressOf Me.OnOpenSoftwareJobContainerList3OperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwareJobContainerList3", New Object() {sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired3}, Me.OpenSoftwareJobContainerList3OperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwareJobContainerList3OperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwareJobContainerList3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwareJobContainerList3Completed(Me, New OpenSoftwareJobContainerList3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwareJobContainersResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwareJobContainers3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobContainers As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfSoftwareJobContainerProperties3", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwareJobContainerProperties3", IsNullable:=false)> SoftwareJobContainerProperties3()
            Dim results() As Object = Me.Invoke("GetSoftwareJobContainers3", New Object() {sessionId, listHandle, noOfSoftwareJobContainers})
            Return CType(results(0),SoftwareJobContainerProperties3())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobContainers3Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobContainers As Long)
            Me.GetSoftwareJobContainers3Async(sessionId, listHandle, noOfSoftwareJobContainers, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobContainers3Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobContainers As Long, ByVal userState As Object)
            If (Me.GetSoftwareJobContainers3OperationCompleted Is Nothing) Then
                Me.GetSoftwareJobContainers3OperationCompleted = AddressOf Me.OnGetSoftwareJobContainers3OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwareJobContainers3", New Object() {sessionId, listHandle, noOfSoftwareJobContainers}, Me.GetSoftwareJobContainers3OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwareJobContainers3OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwareJobContainers3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwareJobContainers3Completed(Me, New GetSoftwareJobContainers3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="OpenSoftwareJobContainerListRecursiveResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwareJobContainerListRecursive3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerPropertiesRequired3 As SoftwareJobContainerPropertiesRequired3, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwareJobContainers As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwareJobContainersSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwareJobContainerListRecursive3", New Object() {sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired3})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwareJobContainers = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwareJobContainersSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwareJobContainerListRecursive3Async(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainerPropertiesRequired3 As SoftwareJobContainerPropertiesRequired3)
            Me.OpenSoftwareJobContainerListRecursive3Async(sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwareJobContainerListRecursive3Async(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainerPropertiesRequired3 As SoftwareJobContainerPropertiesRequired3, ByVal userState As Object)
            If (Me.OpenSoftwareJobContainerListRecursive3OperationCompleted Is Nothing) Then
                Me.OpenSoftwareJobContainerListRecursive3OperationCompleted = AddressOf Me.OnOpenSoftwareJobContainerListRecursive3OperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwareJobContainerListRecursive3", New Object() {sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired3}, Me.OpenSoftwareJobContainerListRecursive3OperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwareJobContainerListRecursive3OperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwareJobContainerListRecursive3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwareJobContainerListRecursive3Completed(Me, New OpenSoftwareJobContainerListRecursive3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwareJobContainersRecursiveResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwareJobContainersRecursive3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobContainers As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfSoftwareJobContainerProperties3", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwareJobContainerProperties3", IsNullable:=false)> SoftwareJobContainerProperties3()
            Dim results() As Object = Me.Invoke("GetSoftwareJobContainersRecursive3", New Object() {sessionId, listHandle, noOfSoftwareJobContainers})
            Return CType(results(0),SoftwareJobContainerProperties3())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobContainersRecursive3Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobContainers As Long)
            Me.GetSoftwareJobContainersRecursive3Async(sessionId, listHandle, noOfSoftwareJobContainers, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobContainersRecursive3Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobContainers As Long, ByVal userState As Object)
            If (Me.GetSoftwareJobContainersRecursive3OperationCompleted Is Nothing) Then
                Me.GetSoftwareJobContainersRecursive3OperationCompleted = AddressOf Me.OnGetSoftwareJobContainersRecursive3OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwareJobContainersRecursive3", New Object() {sessionId, listHandle, noOfSoftwareJobContainers}, Me.GetSoftwareJobContainersRecursive3OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwareJobContainersRecursive3OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwareJobContainersRecursive3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwareJobContainersRecursive3Completed(Me, New GetSoftwareJobContainersRecursive3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="OpenParentSoftwareJobContainerListResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenParentSoftwareJobContainerList3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerPropertiesRequired3 As SoftwareJobContainerPropertiesRequired3, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfParentSoftwareJobContainers As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfParentSoftwareJobContainersSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenParentSoftwareJobContainerList3", New Object() {sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired3})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfParentSoftwareJobContainers = CType(results(2),System.Nullable(Of Long))
            totalNoOfParentSoftwareJobContainersSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenParentSoftwareJobContainerList3Async(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainerPropertiesRequired3 As SoftwareJobContainerPropertiesRequired3)
            Me.OpenParentSoftwareJobContainerList3Async(sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenParentSoftwareJobContainerList3Async(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal softwareJobContainerPropertiesRequired3 As SoftwareJobContainerPropertiesRequired3, ByVal userState As Object)
            If (Me.OpenParentSoftwareJobContainerList3OperationCompleted Is Nothing) Then
                Me.OpenParentSoftwareJobContainerList3OperationCompleted = AddressOf Me.OnOpenParentSoftwareJobContainerList3OperationCompleted
            End If
            Me.InvokeAsync("OpenParentSoftwareJobContainerList3", New Object() {sessionId, softwareJobContainerId, softwareJobContainerPropertiesRequired3}, Me.OpenParentSoftwareJobContainerList3OperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenParentSoftwareJobContainerList3OperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenParentSoftwareJobContainerList3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenParentSoftwareJobContainerList3Completed(Me, New OpenParentSoftwareJobContainerList3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetParentSoftwareJobContainersResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetParentSoftwareJobContainers3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfParentSoftwareJobContainers As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfSoftwareJobContainerProperties3", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwareJobContainerProperties3", IsNullable:=false)> SoftwareJobContainerProperties3()
            Dim results() As Object = Me.Invoke("GetParentSoftwareJobContainers3", New Object() {sessionId, listHandle, noOfParentSoftwareJobContainers})
            Return CType(results(0),SoftwareJobContainerProperties3())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetParentSoftwareJobContainers3Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfParentSoftwareJobContainers As Long)
            Me.GetParentSoftwareJobContainers3Async(sessionId, listHandle, noOfParentSoftwareJobContainers, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetParentSoftwareJobContainers3Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfParentSoftwareJobContainers As Long, ByVal userState As Object)
            If (Me.GetParentSoftwareJobContainers3OperationCompleted Is Nothing) Then
                Me.GetParentSoftwareJobContainers3OperationCompleted = AddressOf Me.OnGetParentSoftwareJobContainers3OperationCompleted
            End If
            Me.InvokeAsync("GetParentSoftwareJobContainers3", New Object() {sessionId, listHandle, noOfParentSoftwareJobContainers}, Me.GetParentSoftwareJobContainers3OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetParentSoftwareJobContainers3OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetParentSoftwareJobContainers3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetParentSoftwareJobContainers3Completed(Me, New GetParentSoftwareJobContainers3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetDistributionContainerOrderResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDistributionContainerOrder3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal distributionContainerOrderId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal distributionContainerOrderPropertiesRequired As DistributionContainerOrderPropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("distributionContainerOrderProperties3", IsNullable:=true)> DistributionContainerOrderProperties3
            Dim results() As Object = Me.Invoke("GetDistributionContainerOrder3", New Object() {sessionId, distributionContainerOrderId, distributionContainerOrderPropertiesRequired})
            Return CType(results(0),DistributionContainerOrderProperties3)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDistributionContainerOrder3Async(ByVal sessionId As String, ByVal distributionContainerOrderId As String, ByVal distributionContainerOrderPropertiesRequired As DistributionContainerOrderPropertiesRequired)
            Me.GetDistributionContainerOrder3Async(sessionId, distributionContainerOrderId, distributionContainerOrderPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDistributionContainerOrder3Async(ByVal sessionId As String, ByVal distributionContainerOrderId As String, ByVal distributionContainerOrderPropertiesRequired As DistributionContainerOrderPropertiesRequired, ByVal userState As Object)
            If (Me.GetDistributionContainerOrder3OperationCompleted Is Nothing) Then
                Me.GetDistributionContainerOrder3OperationCompleted = AddressOf Me.OnGetDistributionContainerOrder3OperationCompleted
            End If
            Me.InvokeAsync("GetDistributionContainerOrder3", New Object() {sessionId, distributionContainerOrderId, distributionContainerOrderPropertiesRequired}, Me.GetDistributionContainerOrder3OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDistributionContainerOrder3OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDistributionContainerOrder3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDistributionContainerOrder3Completed(Me, New GetDistributionContainerOrder3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetDistributionContainerOrdersResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDistributionContainerOrders3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal openListHandle As Long, ByVal fromIndex As Long, ByVal numberOfDistributionContainerOrders As Long) As <System.Xml.Serialization.XmlArrayAttribute("distributionContainerOrders3", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("distributionContainerOrders3", IsNullable:=false)> DistributionContainerOrderProperties3()
            Dim results() As Object = Me.Invoke("GetDistributionContainerOrders3", New Object() {sessionId, openListHandle, fromIndex, numberOfDistributionContainerOrders})
            Return CType(results(0),DistributionContainerOrderProperties3())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDistributionContainerOrders3Async(ByVal sessionId As String, ByVal openListHandle As Long, ByVal fromIndex As Long, ByVal numberOfDistributionContainerOrders As Long)
            Me.GetDistributionContainerOrders3Async(sessionId, openListHandle, fromIndex, numberOfDistributionContainerOrders, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDistributionContainerOrders3Async(ByVal sessionId As String, ByVal openListHandle As Long, ByVal fromIndex As Long, ByVal numberOfDistributionContainerOrders As Long, ByVal userState As Object)
            If (Me.GetDistributionContainerOrders3OperationCompleted Is Nothing) Then
                Me.GetDistributionContainerOrders3OperationCompleted = AddressOf Me.OnGetDistributionContainerOrders3OperationCompleted
            End If
            Me.InvokeAsync("GetDistributionContainerOrders3", New Object() {sessionId, openListHandle, fromIndex, numberOfDistributionContainerOrders}, Me.GetDistributionContainerOrders3OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDistributionContainerOrders3OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDistributionContainerOrders3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDistributionContainerOrders3Completed(Me, New GetDistributionContainerOrders3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateSoftwarePolicyResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSoftwarePolicy3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal createSoftwarePolicyProperties3 As CreateSoftwarePolicyProperties3) As <System.Xml.Serialization.XmlElementAttribute("softwarePolicyId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSoftwarePolicy3", New Object() {sessionId, unitGroupId, createSoftwarePolicyProperties3})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePolicy3Async(ByVal sessionId As String, ByVal unitGroupId As String, ByVal createSoftwarePolicyProperties3 As CreateSoftwarePolicyProperties3)
            Me.CreateSoftwarePolicy3Async(sessionId, unitGroupId, createSoftwarePolicyProperties3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePolicy3Async(ByVal sessionId As String, ByVal unitGroupId As String, ByVal createSoftwarePolicyProperties3 As CreateSoftwarePolicyProperties3, ByVal userState As Object)
            If (Me.CreateSoftwarePolicy3OperationCompleted Is Nothing) Then
                Me.CreateSoftwarePolicy3OperationCompleted = AddressOf Me.OnCreateSoftwarePolicy3OperationCompleted
            End If
            Me.InvokeAsync("CreateSoftwarePolicy3", New Object() {sessionId, unitGroupId, createSoftwarePolicyProperties3}, Me.CreateSoftwarePolicy3OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSoftwarePolicy3OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSoftwarePolicy3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSoftwarePolicy3Completed(Me, New CreateSoftwarePolicy3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateSoftwarePolicyResponseByName3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSoftwarePolicyByName3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupPropertiesForSoftwarePolicy As UnitGroupPropertiesForSoftwarePolicy, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal createSoftwarePolicyProperties3 As CreateSoftwarePolicyProperties3) As <System.Xml.Serialization.XmlElementAttribute("softwarePolicyId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSoftwarePolicyByName3", New Object() {sessionId, unitGroupPropertiesForSoftwarePolicy, createSoftwarePolicyProperties3})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePolicyByName3Async(ByVal sessionId As String, ByVal unitGroupPropertiesForSoftwarePolicy As UnitGroupPropertiesForSoftwarePolicy, ByVal createSoftwarePolicyProperties3 As CreateSoftwarePolicyProperties3)
            Me.CreateSoftwarePolicyByName3Async(sessionId, unitGroupPropertiesForSoftwarePolicy, createSoftwarePolicyProperties3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePolicyByName3Async(ByVal sessionId As String, ByVal unitGroupPropertiesForSoftwarePolicy As UnitGroupPropertiesForSoftwarePolicy, ByVal createSoftwarePolicyProperties3 As CreateSoftwarePolicyProperties3, ByVal userState As Object)
            If (Me.CreateSoftwarePolicyByName3OperationCompleted Is Nothing) Then
                Me.CreateSoftwarePolicyByName3OperationCompleted = AddressOf Me.OnCreateSoftwarePolicyByName3OperationCompleted
            End If
            Me.InvokeAsync("CreateSoftwarePolicyByName3", New Object() {sessionId, unitGroupPropertiesForSoftwarePolicy, createSoftwarePolicyProperties3}, Me.CreateSoftwarePolicyByName3OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSoftwarePolicyByName3OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSoftwarePolicyByName3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSoftwarePolicyByName3Completed(Me, New CreateSoftwarePolicyByName3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="SetSoftwarePolicyResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSoftwarePolicy3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setSoftwarePolicyProperties3 As SetSoftwarePolicyProperties3)
            Me.Invoke("SetSoftwarePolicy3", New Object() {sessionId, softwarePolicyId, setSoftwarePolicyProperties3})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePolicy3Async(ByVal sessionId As String, ByVal softwarePolicyId As String, ByVal setSoftwarePolicyProperties3 As SetSoftwarePolicyProperties3)
            Me.SetSoftwarePolicy3Async(sessionId, softwarePolicyId, setSoftwarePolicyProperties3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePolicy3Async(ByVal sessionId As String, ByVal softwarePolicyId As String, ByVal setSoftwarePolicyProperties3 As SetSoftwarePolicyProperties3, ByVal userState As Object)
            If (Me.SetSoftwarePolicy3OperationCompleted Is Nothing) Then
                Me.SetSoftwarePolicy3OperationCompleted = AddressOf Me.OnSetSoftwarePolicy3OperationCompleted
            End If
            Me.InvokeAsync("SetSoftwarePolicy3", New Object() {sessionId, softwarePolicyId, setSoftwarePolicyProperties3}, Me.SetSoftwarePolicy3OperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSoftwarePolicy3OperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSoftwarePolicy3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSoftwarePolicy3Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="SetSoftwarePolicyResponseByName3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSoftwarePolicyByName3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setSoftwarePolicyPropertiesByName3 As SetSoftwarePolicyPropertiesByName3)
            Me.Invoke("SetSoftwarePolicyByName3", New Object() {sessionId, softwarePolicyName, setSoftwarePolicyPropertiesByName3})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePolicyByName3Async(ByVal sessionId As String, ByVal softwarePolicyName As String, ByVal setSoftwarePolicyPropertiesByName3 As SetSoftwarePolicyPropertiesByName3)
            Me.SetSoftwarePolicyByName3Async(sessionId, softwarePolicyName, setSoftwarePolicyPropertiesByName3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePolicyByName3Async(ByVal sessionId As String, ByVal softwarePolicyName As String, ByVal setSoftwarePolicyPropertiesByName3 As SetSoftwarePolicyPropertiesByName3, ByVal userState As Object)
            If (Me.SetSoftwarePolicyByName3OperationCompleted Is Nothing) Then
                Me.SetSoftwarePolicyByName3OperationCompleted = AddressOf Me.OnSetSoftwarePolicyByName3OperationCompleted
            End If
            Me.InvokeAsync("SetSoftwarePolicyByName3", New Object() {sessionId, softwarePolicyName, setSoftwarePolicyPropertiesByName3}, Me.SetSoftwarePolicyByName3OperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSoftwarePolicyByName3OperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSoftwarePolicyByName3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSoftwarePolicyByName3Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwarePolicyResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePolicy3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyPropertiesRequired3 As SoftwarePolicyPropertiesRequired3) As <System.Xml.Serialization.XmlElementAttribute("softwarePolicyProperties3", IsNullable:=true)> SoftwarePolicyProperties3
            Dim results() As Object = Me.Invoke("GetSoftwarePolicy3", New Object() {sessionId, softwarePolicyId, softwarePolicyPropertiesRequired3})
            Return CType(results(0),SoftwarePolicyProperties3)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePolicy3Async(ByVal sessionId As String, ByVal softwarePolicyId As String, ByVal softwarePolicyPropertiesRequired3 As SoftwarePolicyPropertiesRequired3)
            Me.GetSoftwarePolicy3Async(sessionId, softwarePolicyId, softwarePolicyPropertiesRequired3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePolicy3Async(ByVal sessionId As String, ByVal softwarePolicyId As String, ByVal softwarePolicyPropertiesRequired3 As SoftwarePolicyPropertiesRequired3, ByVal userState As Object)
            If (Me.GetSoftwarePolicy3OperationCompleted Is Nothing) Then
                Me.GetSoftwarePolicy3OperationCompleted = AddressOf Me.OnGetSoftwarePolicy3OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePolicy3", New Object() {sessionId, softwarePolicyId, softwarePolicyPropertiesRequired3}, Me.GetSoftwarePolicy3OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePolicy3OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePolicy3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePolicy3Completed(Me, New GetSoftwarePolicy3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="OpenSoftwarePolicyListResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenSoftwarePolicyList3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyPropertiesRequired3 As SoftwarePolicyPropertiesRequired3, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfSoftwarePolicies As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfSoftwarePoliciesSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenSoftwarePolicyList3", New Object() {sessionId, softwarePolicyId, softwarePolicyPropertiesRequired3})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfSoftwarePolicies = CType(results(2),System.Nullable(Of Long))
            totalNoOfSoftwarePoliciesSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePolicyList3Async(ByVal sessionId As String, ByVal softwarePolicyId As String, ByVal softwarePolicyPropertiesRequired3 As SoftwarePolicyPropertiesRequired3)
            Me.OpenSoftwarePolicyList3Async(sessionId, softwarePolicyId, softwarePolicyPropertiesRequired3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenSoftwarePolicyList3Async(ByVal sessionId As String, ByVal softwarePolicyId As String, ByVal softwarePolicyPropertiesRequired3 As SoftwarePolicyPropertiesRequired3, ByVal userState As Object)
            If (Me.OpenSoftwarePolicyList3OperationCompleted Is Nothing) Then
                Me.OpenSoftwarePolicyList3OperationCompleted = AddressOf Me.OnOpenSoftwarePolicyList3OperationCompleted
            End If
            Me.InvokeAsync("OpenSoftwarePolicyList3", New Object() {sessionId, softwarePolicyId, softwarePolicyPropertiesRequired3}, Me.OpenSoftwarePolicyList3OperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenSoftwarePolicyList3OperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenSoftwarePolicyList3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenSoftwarePolicyList3Completed(Me, New OpenSoftwarePolicyList3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwarePoliciesResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePolicies3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePolicies As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfSoftwarePolicyProperties3", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePolicyProperties3", IsNullable:=false)> SoftwarePolicyProperties3()
            Dim results() As Object = Me.Invoke("GetSoftwarePolicies3", New Object() {sessionId, listHandle, noOfSoftwarePolicies})
            Return CType(results(0),SoftwarePolicyProperties3())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePolicies3Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePolicies As Long)
            Me.GetSoftwarePolicies3Async(sessionId, listHandle, noOfSoftwarePolicies, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePolicies3Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePolicies As Long, ByVal userState As Object)
            If (Me.GetSoftwarePolicies3OperationCompleted Is Nothing) Then
                Me.GetSoftwarePolicies3OperationCompleted = AddressOf Me.OnGetSoftwarePolicies3OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePolicies3", New Object() {sessionId, listHandle, noOfSoftwarePolicies}, Me.GetSoftwarePolicies3OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePolicies3OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePolicies3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePolicies3Completed(Me, New GetSoftwarePolicies3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateInstallSoftwareJobResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateInstallSoftwareJob3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal createInstallSoftwareJobOrderProperties3 As CreateInstallSoftwareJobOrderProperties3, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarejobContainerId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitGroupIds() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitIds() As String) As <System.Xml.Serialization.XmlElementAttribute("softwareJobId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateInstallSoftwareJob3", New Object() {sessionId, softwarePackageProcedureId, createInstallSoftwareJobOrderProperties3, softwarejobContainerId, unitGroupIds, unitIds})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateInstallSoftwareJob3Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal createInstallSoftwareJobOrderProperties3 As CreateInstallSoftwareJobOrderProperties3, ByVal softwarejobContainerId As String, ByVal unitGroupIds() As String, ByVal unitIds() As String)
            Me.CreateInstallSoftwareJob3Async(sessionId, softwarePackageProcedureId, createInstallSoftwareJobOrderProperties3, softwarejobContainerId, unitGroupIds, unitIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateInstallSoftwareJob3Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal createInstallSoftwareJobOrderProperties3 As CreateInstallSoftwareJobOrderProperties3, ByVal softwarejobContainerId As String, ByVal unitGroupIds() As String, ByVal unitIds() As String, ByVal userState As Object)
            If (Me.CreateInstallSoftwareJob3OperationCompleted Is Nothing) Then
                Me.CreateInstallSoftwareJob3OperationCompleted = AddressOf Me.OnCreateInstallSoftwareJob3OperationCompleted
            End If
            Me.InvokeAsync("CreateInstallSoftwareJob3", New Object() {sessionId, softwarePackageProcedureId, createInstallSoftwareJobOrderProperties3, softwarejobContainerId, unitGroupIds, unitIds}, Me.CreateInstallSoftwareJob3OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateInstallSoftwareJob3OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateInstallSoftwareJob3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateInstallSoftwareJob3Completed(Me, New CreateInstallSoftwareJob3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateInstallSoftwareJobInSoftwarePolicyResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateInstallSoftwareJobInSoftwarePolicy3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal createInstallSoftwareJobOrderPolicyProperties3 As CreateInstallSoftwareJobOrderPolicyProperties3, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyId As String) As <System.Xml.Serialization.XmlElementAttribute("softwareJobId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateInstallSoftwareJobInSoftwarePolicy3", New Object() {sessionId, softwarePackageProcedureId, createInstallSoftwareJobOrderPolicyProperties3, softwarePolicyId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateInstallSoftwareJobInSoftwarePolicy3Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal createInstallSoftwareJobOrderPolicyProperties3 As CreateInstallSoftwareJobOrderPolicyProperties3, ByVal softwarePolicyId As String)
            Me.CreateInstallSoftwareJobInSoftwarePolicy3Async(sessionId, softwarePackageProcedureId, createInstallSoftwareJobOrderPolicyProperties3, softwarePolicyId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateInstallSoftwareJobInSoftwarePolicy3Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal createInstallSoftwareJobOrderPolicyProperties3 As CreateInstallSoftwareJobOrderPolicyProperties3, ByVal softwarePolicyId As String, ByVal userState As Object)
            If (Me.CreateInstallSoftwareJobInSoftwarePolicy3OperationCompleted Is Nothing) Then
                Me.CreateInstallSoftwareJobInSoftwarePolicy3OperationCompleted = AddressOf Me.OnCreateInstallSoftwareJobInSoftwarePolicy3OperationCompleted
            End If
            Me.InvokeAsync("CreateInstallSoftwareJobInSoftwarePolicy3", New Object() {sessionId, softwarePackageProcedureId, createInstallSoftwareJobOrderPolicyProperties3, softwarePolicyId}, Me.CreateInstallSoftwareJobInSoftwarePolicy3OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateInstallSoftwareJobInSoftwarePolicy3OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateInstallSoftwareJobInSoftwarePolicy3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateInstallSoftwareJobInSoftwarePolicy3Completed(Me, New CreateInstallSoftwareJobInSoftwarePolicy3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="SetSoftwareJobResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSoftwareJob3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setSoftwareJobProperties3 As SetSoftwareJobProperties3)
            Me.Invoke("SetSoftwareJob3", New Object() {sessionId, softwareJobId, setSoftwareJobProperties3})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwareJob3Async(ByVal sessionId As String, ByVal softwareJobId As String, ByVal setSoftwareJobProperties3 As SetSoftwareJobProperties3)
            Me.SetSoftwareJob3Async(sessionId, softwareJobId, setSoftwareJobProperties3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwareJob3Async(ByVal sessionId As String, ByVal softwareJobId As String, ByVal setSoftwareJobProperties3 As SetSoftwareJobProperties3, ByVal userState As Object)
            If (Me.SetSoftwareJob3OperationCompleted Is Nothing) Then
                Me.SetSoftwareJob3OperationCompleted = AddressOf Me.OnSetSoftwareJob3OperationCompleted
            End If
            Me.InvokeAsync("SetSoftwareJob3", New Object() {sessionId, softwareJobId, setSoftwareJobProperties3}, Me.SetSoftwareJob3OperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSoftwareJob3OperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSoftwareJob3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSoftwareJob3Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwareJobResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwareJob3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobPropertiesRequired As SoftwareJobPropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("softwareJobProperties3", IsNullable:=true)> SoftwareJobProperties3
            Dim results() As Object = Me.Invoke("GetSoftwareJob3", New Object() {sessionId, softwareJobId, softwareJobPropertiesRequired})
            Return CType(results(0),SoftwareJobProperties3)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJob3Async(ByVal sessionId As String, ByVal softwareJobId As String, ByVal softwareJobPropertiesRequired As SoftwareJobPropertiesRequired)
            Me.GetSoftwareJob3Async(sessionId, softwareJobId, softwareJobPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJob3Async(ByVal sessionId As String, ByVal softwareJobId As String, ByVal softwareJobPropertiesRequired As SoftwareJobPropertiesRequired, ByVal userState As Object)
            If (Me.GetSoftwareJob3OperationCompleted Is Nothing) Then
                Me.GetSoftwareJob3OperationCompleted = AddressOf Me.OnGetSoftwareJob3OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwareJob3", New Object() {sessionId, softwareJobId, softwareJobPropertiesRequired}, Me.GetSoftwareJob3OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwareJob3OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwareJob3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwareJob3Completed(Me, New GetSoftwareJob3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwareJobsResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwareJobs3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfSoftwareJobProperties3", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwareJobProperties3", IsNullable:=false)> SoftwareJobProperties3()
            Dim results() As Object = Me.Invoke("GetSoftwareJobs3", New Object() {sessionId, listHandle, noOfSoftwareJobs})
            Return CType(results(0),SoftwareJobProperties3())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobs3Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long)
            Me.GetSoftwareJobs3Async(sessionId, listHandle, noOfSoftwareJobs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobs3Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long, ByVal userState As Object)
            If (Me.GetSoftwareJobs3OperationCompleted Is Nothing) Then
                Me.GetSoftwareJobs3OperationCompleted = AddressOf Me.OnGetSoftwareJobs3OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwareJobs3", New Object() {sessionId, listHandle, noOfSoftwareJobs}, Me.GetSoftwareJobs3OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwareJobs3OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwareJobs3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwareJobs3Completed(Me, New GetSoftwareJobs3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwareJobContainerSoftwareJobsResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwareJobContainerSoftwareJobs3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfSoftwareJobProperties3", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwareJobProperties3", IsNullable:=false)> SoftwareJobProperties3()
            Dim results() As Object = Me.Invoke("GetSoftwareJobContainerSoftwareJobs3", New Object() {sessionId, listHandle, noOfSoftwareJobs})
            Return CType(results(0),SoftwareJobProperties3())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobContainerSoftwareJobs3Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long)
            Me.GetSoftwareJobContainerSoftwareJobs3Async(sessionId, listHandle, noOfSoftwareJobs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobContainerSoftwareJobs3Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long, ByVal userState As Object)
            If (Me.GetSoftwareJobContainerSoftwareJobs3OperationCompleted Is Nothing) Then
                Me.GetSoftwareJobContainerSoftwareJobs3OperationCompleted = AddressOf Me.OnGetSoftwareJobContainerSoftwareJobs3OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwareJobContainerSoftwareJobs3", New Object() {sessionId, listHandle, noOfSoftwareJobs}, Me.GetSoftwareJobContainerSoftwareJobs3OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwareJobContainerSoftwareJobs3OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwareJobContainerSoftwareJobs3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwareJobContainerSoftwareJobs3Completed(Me, New GetSoftwareJobContainerSoftwareJobs3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwarePolicySoftwareJobsResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePolicySoftwareJobs3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfSoftwareJobProperties3", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwareJobProperties3", IsNullable:=false)> SoftwareJobProperties3()
            Dim results() As Object = Me.Invoke("GetSoftwarePolicySoftwareJobs3", New Object() {sessionId, listHandle, noOfSoftwareJobs})
            Return CType(results(0),SoftwareJobProperties3())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePolicySoftwareJobs3Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long)
            Me.GetSoftwarePolicySoftwareJobs3Async(sessionId, listHandle, noOfSoftwareJobs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePolicySoftwareJobs3Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobs As Long, ByVal userState As Object)
            If (Me.GetSoftwarePolicySoftwareJobs3OperationCompleted Is Nothing) Then
                Me.GetSoftwarePolicySoftwareJobs3OperationCompleted = AddressOf Me.OnGetSoftwarePolicySoftwareJobs3OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePolicySoftwareJobs3", New Object() {sessionId, listHandle, noOfSoftwareJobs}, Me.GetSoftwarePolicySoftwareJobs3OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePolicySoftwareJobs3OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePolicySoftwareJobs3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePolicySoftwareJobs3Completed(Me, New GetSoftwarePolicySoftwareJobs3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateActivateSoftwareJobResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateActivateSoftwareJob3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageInstallProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobOrderProperties3 As CreateSoftwareJobOrderProperties3, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageInstallationIds() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitGroupIds() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitIds() As String) As <System.Xml.Serialization.XmlElementAttribute("CreateActivateSoftwareJobReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateActivateSoftwareJob3", New Object() {sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderProperties3, softwareJobContainerId, softwarePackageInstallationIds, unitGroupIds, unitIds})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateActivateSoftwareJob3Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwareJobOrderProperties3 As CreateSoftwareJobOrderProperties3, ByVal softwareJobContainerId As String, ByVal softwarePackageInstallationIds() As String, ByVal unitGroupIds() As String, ByVal unitIds() As String)
            Me.CreateActivateSoftwareJob3Async(sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderProperties3, softwareJobContainerId, softwarePackageInstallationIds, unitGroupIds, unitIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateActivateSoftwareJob3Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwareJobOrderProperties3 As CreateSoftwareJobOrderProperties3, ByVal softwareJobContainerId As String, ByVal softwarePackageInstallationIds() As String, ByVal unitGroupIds() As String, ByVal unitIds() As String, ByVal userState As Object)
            If (Me.CreateActivateSoftwareJob3OperationCompleted Is Nothing) Then
                Me.CreateActivateSoftwareJob3OperationCompleted = AddressOf Me.OnCreateActivateSoftwareJob3OperationCompleted
            End If
            Me.InvokeAsync("CreateActivateSoftwareJob3", New Object() {sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderProperties3, softwareJobContainerId, softwarePackageInstallationIds, unitGroupIds, unitIds}, Me.CreateActivateSoftwareJob3OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateActivateSoftwareJob3OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateActivateSoftwareJob3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateActivateSoftwareJob3Completed(Me, New CreateActivateSoftwareJob3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateConfigureSoftwareJobResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateConfigureSoftwareJob3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageInstallProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobOrderProperties3 As CreateSoftwareJobOrderProperties3, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageInstallationIds() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitGroupIds() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitIds() As String) As <System.Xml.Serialization.XmlElementAttribute("CreateConfigureSoftwareJobReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateConfigureSoftwareJob3", New Object() {sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderProperties3, softwareJobContainerId, softwarePackageInstallationIds, unitGroupIds, unitIds})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateConfigureSoftwareJob3Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwareJobOrderProperties3 As CreateSoftwareJobOrderProperties3, ByVal softwareJobContainerId As String, ByVal softwarePackageInstallationIds() As String, ByVal unitGroupIds() As String, ByVal unitIds() As String)
            Me.CreateConfigureSoftwareJob3Async(sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderProperties3, softwareJobContainerId, softwarePackageInstallationIds, unitGroupIds, unitIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateConfigureSoftwareJob3Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwareJobOrderProperties3 As CreateSoftwareJobOrderProperties3, ByVal softwareJobContainerId As String, ByVal softwarePackageInstallationIds() As String, ByVal unitGroupIds() As String, ByVal unitIds() As String, ByVal userState As Object)
            If (Me.CreateConfigureSoftwareJob3OperationCompleted Is Nothing) Then
                Me.CreateConfigureSoftwareJob3OperationCompleted = AddressOf Me.OnCreateConfigureSoftwareJob3OperationCompleted
            End If
            Me.InvokeAsync("CreateConfigureSoftwareJob3", New Object() {sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderProperties3, softwareJobContainerId, softwarePackageInstallationIds, unitGroupIds, unitIds}, Me.CreateConfigureSoftwareJob3OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateConfigureSoftwareJob3OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateConfigureSoftwareJob3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateConfigureSoftwareJob3Completed(Me, New CreateConfigureSoftwareJob3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateUninstallSoftwareJobResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateUninstallSoftwareJob3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageInstallProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobOrderProperties3 As CreateSoftwareJobOrderProperties3, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal softwarePackageInstallationIds() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitGroupIds() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitIds() As String) As <System.Xml.Serialization.XmlElementAttribute("CreateUninstallSoftwareJobReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateUninstallSoftwareJob3", New Object() {sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderProperties3, softwareJobContainerId, softwarePackageInstallationIds, unitGroupIds, unitIds})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateUninstallSoftwareJob3Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwareJobOrderProperties3 As CreateSoftwareJobOrderProperties3, ByVal softwareJobContainerId As String, ByVal softwarePackageInstallationIds() As String, ByVal unitGroupIds() As String, ByVal unitIds() As String)
            Me.CreateUninstallSoftwareJob3Async(sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderProperties3, softwareJobContainerId, softwarePackageInstallationIds, unitGroupIds, unitIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateUninstallSoftwareJob3Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwareJobOrderProperties3 As CreateSoftwareJobOrderProperties3, ByVal softwareJobContainerId As String, ByVal softwarePackageInstallationIds() As String, ByVal unitGroupIds() As String, ByVal unitIds() As String, ByVal userState As Object)
            If (Me.CreateUninstallSoftwareJob3OperationCompleted Is Nothing) Then
                Me.CreateUninstallSoftwareJob3OperationCompleted = AddressOf Me.OnCreateUninstallSoftwareJob3OperationCompleted
            End If
            Me.InvokeAsync("CreateUninstallSoftwareJob3", New Object() {sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderProperties3, softwareJobContainerId, softwarePackageInstallationIds, unitGroupIds, unitIds}, Me.CreateUninstallSoftwareJob3OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateUninstallSoftwareJob3OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateUninstallSoftwareJob3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateUninstallSoftwareJob3Completed(Me, New CreateUninstallSoftwareJob3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateRecoverSoftwareJobResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateRecoverSoftwareJob3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobOrderProperties3 As SoftwareJobOrderProperties3) As <System.Xml.Serialization.XmlElementAttribute("CreateRecoverSoftwareJobReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateRecoverSoftwareJob3", New Object() {sessionId, softwareJobId, softwareJobContainerId, softwarePackageProcedureId, softwareJobOrderProperties3})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateRecoverSoftwareJob3Async(ByVal sessionId As String, ByVal softwareJobId As String, ByVal softwareJobContainerId As String, ByVal softwarePackageProcedureId As String, ByVal softwareJobOrderProperties3 As SoftwareJobOrderProperties3)
            Me.CreateRecoverSoftwareJob3Async(sessionId, softwareJobId, softwareJobContainerId, softwarePackageProcedureId, softwareJobOrderProperties3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateRecoverSoftwareJob3Async(ByVal sessionId As String, ByVal softwareJobId As String, ByVal softwareJobContainerId As String, ByVal softwarePackageProcedureId As String, ByVal softwareJobOrderProperties3 As SoftwareJobOrderProperties3, ByVal userState As Object)
            If (Me.CreateRecoverSoftwareJob3OperationCompleted Is Nothing) Then
                Me.CreateRecoverSoftwareJob3OperationCompleted = AddressOf Me.OnCreateRecoverSoftwareJob3OperationCompleted
            End If
            Me.InvokeAsync("CreateRecoverSoftwareJob3", New Object() {sessionId, softwareJobId, softwareJobContainerId, softwarePackageProcedureId, softwareJobOrderProperties3}, Me.CreateRecoverSoftwareJob3OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateRecoverSoftwareJob3OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateRecoverSoftwareJob3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateRecoverSoftwareJob3Completed(Me, New CreateRecoverSoftwareJob3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateRenewSoftwareJobResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateRenewSoftwareJob3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobOrderProperties3 As SoftwareJobOrderProperties3) As <System.Xml.Serialization.XmlElementAttribute("CreateRenewSoftwareJobReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateRenewSoftwareJob3", New Object() {sessionId, softwareJobId, softwareJobContainerId, softwareJobOrderProperties3})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateRenewSoftwareJob3Async(ByVal sessionId As String, ByVal softwareJobId As String, ByVal softwareJobContainerId As String, ByVal softwareJobOrderProperties3 As SoftwareJobOrderProperties3)
            Me.CreateRenewSoftwareJob3Async(sessionId, softwareJobId, softwareJobContainerId, softwareJobOrderProperties3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateRenewSoftwareJob3Async(ByVal sessionId As String, ByVal softwareJobId As String, ByVal softwareJobContainerId As String, ByVal softwareJobOrderProperties3 As SoftwareJobOrderProperties3, ByVal userState As Object)
            If (Me.CreateRenewSoftwareJob3OperationCompleted Is Nothing) Then
                Me.CreateRenewSoftwareJob3OperationCompleted = AddressOf Me.OnCreateRenewSoftwareJob3OperationCompleted
            End If
            Me.InvokeAsync("CreateRenewSoftwareJob3", New Object() {sessionId, softwareJobId, softwareJobContainerId, softwareJobOrderProperties3}, Me.CreateRenewSoftwareJob3OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateRenewSoftwareJob3OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateRenewSoftwareJob3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateRenewSoftwareJob3Completed(Me, New CreateRenewSoftwareJob3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateActivateSoftwareJobInSoftwarePolicyResponseByName3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateActivateSoftwareJobInSoftwarePolicyByName3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackage As SoftwarePackage, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageInstallProcedureName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobOrderPolicyProperties3 As CreateSoftwareJobOrderPolicyProperties3, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyName As String) As <System.Xml.Serialization.XmlElementAttribute("softwareJobId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateActivateSoftwareJobInSoftwarePolicyByName3", New Object() {sessionId, softwarePackage, softwarePackageProcedureName, softwarePackageInstallProcedureName, softwareJobOrderPolicyProperties3, softwarePolicyName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateActivateSoftwareJobInSoftwarePolicyByName3Async(ByVal sessionId As String, ByVal softwarePackage As SoftwarePackage, ByVal softwarePackageProcedureName As String, ByVal softwarePackageInstallProcedureName As String, ByVal softwareJobOrderPolicyProperties3 As CreateSoftwareJobOrderPolicyProperties3, ByVal softwarePolicyName As String)
            Me.CreateActivateSoftwareJobInSoftwarePolicyByName3Async(sessionId, softwarePackage, softwarePackageProcedureName, softwarePackageInstallProcedureName, softwareJobOrderPolicyProperties3, softwarePolicyName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateActivateSoftwareJobInSoftwarePolicyByName3Async(ByVal sessionId As String, ByVal softwarePackage As SoftwarePackage, ByVal softwarePackageProcedureName As String, ByVal softwarePackageInstallProcedureName As String, ByVal softwareJobOrderPolicyProperties3 As CreateSoftwareJobOrderPolicyProperties3, ByVal softwarePolicyName As String, ByVal userState As Object)
            If (Me.CreateActivateSoftwareJobInSoftwarePolicyByName3OperationCompleted Is Nothing) Then
                Me.CreateActivateSoftwareJobInSoftwarePolicyByName3OperationCompleted = AddressOf Me.OnCreateActivateSoftwareJobInSoftwarePolicyByName3OperationCompleted
            End If
            Me.InvokeAsync("CreateActivateSoftwareJobInSoftwarePolicyByName3", New Object() {sessionId, softwarePackage, softwarePackageProcedureName, softwarePackageInstallProcedureName, softwareJobOrderPolicyProperties3, softwarePolicyName}, Me.CreateActivateSoftwareJobInSoftwarePolicyByName3OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateActivateSoftwareJobInSoftwarePolicyByName3OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateActivateSoftwareJobInSoftwarePolicyByName3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateActivateSoftwareJobInSoftwarePolicyByName3Completed(Me, New CreateActivateSoftwareJobInSoftwarePolicyByName3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateConfigureSoftwareJobInSoftwarePolicyResponseByName3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateConfigureSoftwareJobInSoftwarePolicyByName3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackage As SoftwarePackage, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageInstallProcedureName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobOrderPolicyProperties3 As CreateSoftwareJobOrderPolicyProperties3, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyName As String) As <System.Xml.Serialization.XmlElementAttribute("softwareJobId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateConfigureSoftwareJobInSoftwarePolicyByName3", New Object() {sessionId, softwarePackage, softwarePackageProcedureName, softwarePackageInstallProcedureName, softwareJobOrderPolicyProperties3, softwarePolicyName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateConfigureSoftwareJobInSoftwarePolicyByName3Async(ByVal sessionId As String, ByVal softwarePackage As SoftwarePackage, ByVal softwarePackageProcedureName As String, ByVal softwarePackageInstallProcedureName As String, ByVal softwareJobOrderPolicyProperties3 As CreateSoftwareJobOrderPolicyProperties3, ByVal softwarePolicyName As String)
            Me.CreateConfigureSoftwareJobInSoftwarePolicyByName3Async(sessionId, softwarePackage, softwarePackageProcedureName, softwarePackageInstallProcedureName, softwareJobOrderPolicyProperties3, softwarePolicyName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateConfigureSoftwareJobInSoftwarePolicyByName3Async(ByVal sessionId As String, ByVal softwarePackage As SoftwarePackage, ByVal softwarePackageProcedureName As String, ByVal softwarePackageInstallProcedureName As String, ByVal softwareJobOrderPolicyProperties3 As CreateSoftwareJobOrderPolicyProperties3, ByVal softwarePolicyName As String, ByVal userState As Object)
            If (Me.CreateConfigureSoftwareJobInSoftwarePolicyByName3OperationCompleted Is Nothing) Then
                Me.CreateConfigureSoftwareJobInSoftwarePolicyByName3OperationCompleted = AddressOf Me.OnCreateConfigureSoftwareJobInSoftwarePolicyByName3OperationCompleted
            End If
            Me.InvokeAsync("CreateConfigureSoftwareJobInSoftwarePolicyByName3", New Object() {sessionId, softwarePackage, softwarePackageProcedureName, softwarePackageInstallProcedureName, softwareJobOrderPolicyProperties3, softwarePolicyName}, Me.CreateConfigureSoftwareJobInSoftwarePolicyByName3OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateConfigureSoftwareJobInSoftwarePolicyByName3OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateConfigureSoftwareJobInSoftwarePolicyByName3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateConfigureSoftwareJobInSoftwarePolicyByName3Completed(Me, New CreateConfigureSoftwareJobInSoftwarePolicyByName3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateUninstallSoftwareJobInSoftwarePolicyResponseByName3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateUninstallSoftwareJobInSoftwarePolicyByName3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackage As SoftwarePackage, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageInstallProcedureName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobOrderPolicyProperties3 As CreateSoftwareJobOrderPolicyProperties3, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyName As String) As <System.Xml.Serialization.XmlElementAttribute("softwareJobId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateUninstallSoftwareJobInSoftwarePolicyByName3", New Object() {sessionId, softwarePackage, softwarePackageProcedureName, softwarePackageInstallProcedureName, softwareJobOrderPolicyProperties3, softwarePolicyName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateUninstallSoftwareJobInSoftwarePolicyByName3Async(ByVal sessionId As String, ByVal softwarePackage As SoftwarePackage, ByVal softwarePackageProcedureName As String, ByVal softwarePackageInstallProcedureName As String, ByVal softwareJobOrderPolicyProperties3 As CreateSoftwareJobOrderPolicyProperties3, ByVal softwarePolicyName As String)
            Me.CreateUninstallSoftwareJobInSoftwarePolicyByName3Async(sessionId, softwarePackage, softwarePackageProcedureName, softwarePackageInstallProcedureName, softwareJobOrderPolicyProperties3, softwarePolicyName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateUninstallSoftwareJobInSoftwarePolicyByName3Async(ByVal sessionId As String, ByVal softwarePackage As SoftwarePackage, ByVal softwarePackageProcedureName As String, ByVal softwarePackageInstallProcedureName As String, ByVal softwareJobOrderPolicyProperties3 As CreateSoftwareJobOrderPolicyProperties3, ByVal softwarePolicyName As String, ByVal userState As Object)
            If (Me.CreateUninstallSoftwareJobInSoftwarePolicyByName3OperationCompleted Is Nothing) Then
                Me.CreateUninstallSoftwareJobInSoftwarePolicyByName3OperationCompleted = AddressOf Me.OnCreateUninstallSoftwareJobInSoftwarePolicyByName3OperationCompleted
            End If
            Me.InvokeAsync("CreateUninstallSoftwareJobInSoftwarePolicyByName3", New Object() {sessionId, softwarePackage, softwarePackageProcedureName, softwarePackageInstallProcedureName, softwareJobOrderPolicyProperties3, softwarePolicyName}, Me.CreateUninstallSoftwareJobInSoftwarePolicyByName3OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateUninstallSoftwareJobInSoftwarePolicyByName3OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateUninstallSoftwareJobInSoftwarePolicyByName3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateUninstallSoftwareJobInSoftwarePolicyByName3Completed(Me, New CreateUninstallSoftwareJobInSoftwarePolicyByName3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateInstallSoftwareJobInSoftwarePolicyResponseByName3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateInstallSoftwareJobInSoftwarePolicyByName3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackage As SoftwarePackage, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal installSoftwareJobOrderPolicyProperties3 As CreateInstallSoftwareJobOrderPolicyProperties3, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyName As String) As <System.Xml.Serialization.XmlElementAttribute("softwareJobId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateInstallSoftwareJobInSoftwarePolicyByName3", New Object() {sessionId, softwarePackage, softwarePackageProcedureName, installSoftwareJobOrderPolicyProperties3, softwarePolicyName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateInstallSoftwareJobInSoftwarePolicyByName3Async(ByVal sessionId As String, ByVal softwarePackage As SoftwarePackage, ByVal softwarePackageProcedureName As String, ByVal installSoftwareJobOrderPolicyProperties3 As CreateInstallSoftwareJobOrderPolicyProperties3, ByVal softwarePolicyName As String)
            Me.CreateInstallSoftwareJobInSoftwarePolicyByName3Async(sessionId, softwarePackage, softwarePackageProcedureName, installSoftwareJobOrderPolicyProperties3, softwarePolicyName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateInstallSoftwareJobInSoftwarePolicyByName3Async(ByVal sessionId As String, ByVal softwarePackage As SoftwarePackage, ByVal softwarePackageProcedureName As String, ByVal installSoftwareJobOrderPolicyProperties3 As CreateInstallSoftwareJobOrderPolicyProperties3, ByVal softwarePolicyName As String, ByVal userState As Object)
            If (Me.CreateInstallSoftwareJobInSoftwarePolicyByName3OperationCompleted Is Nothing) Then
                Me.CreateInstallSoftwareJobInSoftwarePolicyByName3OperationCompleted = AddressOf Me.OnCreateInstallSoftwareJobInSoftwarePolicyByName3OperationCompleted
            End If
            Me.InvokeAsync("CreateInstallSoftwareJobInSoftwarePolicyByName3", New Object() {sessionId, softwarePackage, softwarePackageProcedureName, installSoftwareJobOrderPolicyProperties3, softwarePolicyName}, Me.CreateInstallSoftwareJobInSoftwarePolicyByName3OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateInstallSoftwareJobInSoftwarePolicyByName3OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateInstallSoftwareJobInSoftwarePolicyByName3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateInstallSoftwareJobInSoftwarePolicyByName3Completed(Me, New CreateInstallSoftwareJobInSoftwarePolicyByName3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateUninstallSoftwareJobInSoftwarePolicyResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateUninstallSoftwareJobInSoftwarePolicy3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageInstallProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobOrderPolicyProperties3 As CreateSoftwareJobOrderPolicyProperties3, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyId As String) As <System.Xml.Serialization.XmlElementAttribute("createUninstallSoftwareJobInSoftwarePolicy", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateUninstallSoftwareJobInSoftwarePolicy3", New Object() {sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderPolicyProperties3, softwarePolicyId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateUninstallSoftwareJobInSoftwarePolicy3Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwareJobOrderPolicyProperties3 As CreateSoftwareJobOrderPolicyProperties3, ByVal softwarePolicyId As String)
            Me.CreateUninstallSoftwareJobInSoftwarePolicy3Async(sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderPolicyProperties3, softwarePolicyId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateUninstallSoftwareJobInSoftwarePolicy3Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwareJobOrderPolicyProperties3 As CreateSoftwareJobOrderPolicyProperties3, ByVal softwarePolicyId As String, ByVal userState As Object)
            If (Me.CreateUninstallSoftwareJobInSoftwarePolicy3OperationCompleted Is Nothing) Then
                Me.CreateUninstallSoftwareJobInSoftwarePolicy3OperationCompleted = AddressOf Me.OnCreateUninstallSoftwareJobInSoftwarePolicy3OperationCompleted
            End If
            Me.InvokeAsync("CreateUninstallSoftwareJobInSoftwarePolicy3", New Object() {sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderPolicyProperties3, softwarePolicyId}, Me.CreateUninstallSoftwareJobInSoftwarePolicy3OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateUninstallSoftwareJobInSoftwarePolicy3OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateUninstallSoftwareJobInSoftwarePolicy3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateUninstallSoftwareJobInSoftwarePolicy3Completed(Me, New CreateUninstallSoftwareJobInSoftwarePolicy3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateActivateSoftwareJobInSoftwarePolicyResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateActivateSoftwareJobInSoftwarePolicy3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageInstallProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobOrderPolicyProperties3 As CreateSoftwareJobOrderPolicyProperties3, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyId As String) As <System.Xml.Serialization.XmlElementAttribute("createActivateSoftwareJobInSoftwarePolicy", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateActivateSoftwareJobInSoftwarePolicy3", New Object() {sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderPolicyProperties3, softwarePolicyId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateActivateSoftwareJobInSoftwarePolicy3Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwareJobOrderPolicyProperties3 As CreateSoftwareJobOrderPolicyProperties3, ByVal softwarePolicyId As String)
            Me.CreateActivateSoftwareJobInSoftwarePolicy3Async(sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderPolicyProperties3, softwarePolicyId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateActivateSoftwareJobInSoftwarePolicy3Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwareJobOrderPolicyProperties3 As CreateSoftwareJobOrderPolicyProperties3, ByVal softwarePolicyId As String, ByVal userState As Object)
            If (Me.CreateActivateSoftwareJobInSoftwarePolicy3OperationCompleted Is Nothing) Then
                Me.CreateActivateSoftwareJobInSoftwarePolicy3OperationCompleted = AddressOf Me.OnCreateActivateSoftwareJobInSoftwarePolicy3OperationCompleted
            End If
            Me.InvokeAsync("CreateActivateSoftwareJobInSoftwarePolicy3", New Object() {sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderPolicyProperties3, softwarePolicyId}, Me.CreateActivateSoftwareJobInSoftwarePolicy3OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateActivateSoftwareJobInSoftwarePolicy3OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateActivateSoftwareJobInSoftwarePolicy3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateActivateSoftwareJobInSoftwarePolicy3Completed(Me, New CreateActivateSoftwareJobInSoftwarePolicy3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateConfigureSoftwareJobInSoftwarePolicyResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateConfigureSoftwareJobInSoftwarePolicy3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageInstallProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobOrderPolicyProperties3 As CreateSoftwareJobOrderPolicyProperties3, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePolicyId As String) As <System.Xml.Serialization.XmlElementAttribute("createConfigureSoftwareJobInSoftwarePolicy", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateConfigureSoftwareJobInSoftwarePolicy3", New Object() {sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderPolicyProperties3, softwarePolicyId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateConfigureSoftwareJobInSoftwarePolicy3Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwareJobOrderPolicyProperties3 As CreateSoftwareJobOrderPolicyProperties3, ByVal softwarePolicyId As String)
            Me.CreateConfigureSoftwareJobInSoftwarePolicy3Async(sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderPolicyProperties3, softwarePolicyId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateConfigureSoftwareJobInSoftwarePolicy3Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageInstallProcedureId As String, ByVal softwareJobOrderPolicyProperties3 As CreateSoftwareJobOrderPolicyProperties3, ByVal softwarePolicyId As String, ByVal userState As Object)
            If (Me.CreateConfigureSoftwareJobInSoftwarePolicy3OperationCompleted Is Nothing) Then
                Me.CreateConfigureSoftwareJobInSoftwarePolicy3OperationCompleted = AddressOf Me.OnCreateConfigureSoftwareJobInSoftwarePolicy3OperationCompleted
            End If
            Me.InvokeAsync("CreateConfigureSoftwareJobInSoftwarePolicy3", New Object() {sessionId, softwarePackageProcedureId, softwarePackageInstallProcedureId, softwareJobOrderPolicyProperties3, softwarePolicyId}, Me.CreateConfigureSoftwareJobInSoftwarePolicy3OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateConfigureSoftwareJobInSoftwarePolicy3OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateConfigureSoftwareJobInSoftwarePolicy3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateConfigureSoftwareJobInSoftwarePolicy3Completed(Me, New CreateConfigureSoftwareJobInSoftwarePolicy3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateSoftwarePackageProcedureResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSoftwarePackageProcedure2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureProperties As CreateSoftwarePackageProcedureProperties2) As <System.Xml.Serialization.XmlElementAttribute("createSoftwarePackageProcedureReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSoftwarePackageProcedure2", New Object() {sessionId, softwarePackageProcedureProperties})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePackageProcedure2Async(ByVal sessionId As String, ByVal softwarePackageProcedureProperties As CreateSoftwarePackageProcedureProperties2)
            Me.CreateSoftwarePackageProcedure2Async(sessionId, softwarePackageProcedureProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePackageProcedure2Async(ByVal sessionId As String, ByVal softwarePackageProcedureProperties As CreateSoftwarePackageProcedureProperties2, ByVal userState As Object)
            If (Me.CreateSoftwarePackageProcedure2OperationCompleted Is Nothing) Then
                Me.CreateSoftwarePackageProcedure2OperationCompleted = AddressOf Me.OnCreateSoftwarePackageProcedure2OperationCompleted
            End If
            Me.InvokeAsync("CreateSoftwarePackageProcedure2", New Object() {sessionId, softwarePackageProcedureProperties}, Me.CreateSoftwarePackageProcedure2OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSoftwarePackageProcedure2OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSoftwarePackageProcedure2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSoftwarePackageProcedure2Completed(Me, New CreateSoftwarePackageProcedure2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateAddedSoftwarePackageProcedureResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateAddedSoftwarePackageProcedure2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureProperties As CreateSoftwarePackageProcedureProperties2, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sourcePath As String) As <System.Xml.Serialization.XmlElementAttribute("CreateAddedSoftwarePackageProcedureReturn", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateAddedSoftwarePackageProcedure2", New Object() {sessionId, softwarePackageProcedureProperties, sourcePath})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateAddedSoftwarePackageProcedure2Async(ByVal sessionId As String, ByVal softwarePackageProcedureProperties As CreateSoftwarePackageProcedureProperties2, ByVal sourcePath As String)
            Me.CreateAddedSoftwarePackageProcedure2Async(sessionId, softwarePackageProcedureProperties, sourcePath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateAddedSoftwarePackageProcedure2Async(ByVal sessionId As String, ByVal softwarePackageProcedureProperties As CreateSoftwarePackageProcedureProperties2, ByVal sourcePath As String, ByVal userState As Object)
            If (Me.CreateAddedSoftwarePackageProcedure2OperationCompleted Is Nothing) Then
                Me.CreateAddedSoftwarePackageProcedure2OperationCompleted = AddressOf Me.OnCreateAddedSoftwarePackageProcedure2OperationCompleted
            End If
            Me.InvokeAsync("CreateAddedSoftwarePackageProcedure2", New Object() {sessionId, softwarePackageProcedureProperties, sourcePath}, Me.CreateAddedSoftwarePackageProcedure2OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateAddedSoftwarePackageProcedure2OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateAddedSoftwarePackageProcedure2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateAddedSoftwarePackageProcedure2Completed(Me, New CreateAddedSoftwarePackageProcedure2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwarePackageProceduresResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageProcedures2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedures As Long) As <System.Xml.Serialization.XmlArrayAttribute("getSoftwarePackageProcedures", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageProcedurePropertiesArray", IsNullable:=false)> SoftwarePackageProcedureProperties2()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageProcedures2", New Object() {sessionId, listHandle, noOfSoftwarePackageProcedures})
            Return CType(results(0),SoftwarePackageProcedureProperties2())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedures2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedures As Long)
            Me.GetSoftwarePackageProcedures2Async(sessionId, listHandle, noOfSoftwarePackageProcedures, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedures2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedures As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageProcedures2OperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageProcedures2OperationCompleted = AddressOf Me.OnGetSoftwarePackageProcedures2OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageProcedures2", New Object() {sessionId, listHandle, noOfSoftwarePackageProcedures}, Me.GetSoftwarePackageProcedures2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageProcedures2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageProcedures2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageProcedures2Completed(Me, New GetSoftwarePackageProcedures2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwarePackageProcedureResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageProcedure2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("GetSoftwarePackageProcedureReturn", IsNullable:=true)> SoftwarePackageProcedureProperties2
            Dim results() As Object = Me.Invoke("GetSoftwarePackageProcedure2", New Object() {sessionId, softwarePackageProcedureId, softwarePackageProcedurePropertiesRequired})
            Return CType(results(0),SoftwarePackageProcedureProperties2)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedure2Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired)
            Me.GetSoftwarePackageProcedure2Async(sessionId, softwarePackageProcedureId, softwarePackageProcedurePropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedure2Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired, ByVal userState As Object)
            If (Me.GetSoftwarePackageProcedure2OperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageProcedure2OperationCompleted = AddressOf Me.OnGetSoftwarePackageProcedure2OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageProcedure2", New Object() {sessionId, softwarePackageProcedureId, softwarePackageProcedurePropertiesRequired}, Me.GetSoftwarePackageProcedure2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageProcedure2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageProcedure2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageProcedure2Completed(Me, New GetSoftwarePackageProcedure2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="SetSoftwarePackageProcedureResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSoftwarePackageProcedure2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setSoftwarePackageProcedureProperties As SetSoftwarePackageProcedureProperties2)
            Me.Invoke("SetSoftwarePackageProcedure2", New Object() {sessionId, setSoftwarePackageProcedureProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePackageProcedure2Async(ByVal sessionId As String, ByVal setSoftwarePackageProcedureProperties As SetSoftwarePackageProcedureProperties2)
            Me.SetSoftwarePackageProcedure2Async(sessionId, setSoftwarePackageProcedureProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePackageProcedure2Async(ByVal sessionId As String, ByVal setSoftwarePackageProcedureProperties As SetSoftwarePackageProcedureProperties2, ByVal userState As Object)
            If (Me.SetSoftwarePackageProcedure2OperationCompleted Is Nothing) Then
                Me.SetSoftwarePackageProcedure2OperationCompleted = AddressOf Me.OnSetSoftwarePackageProcedure2OperationCompleted
            End If
            Me.InvokeAsync("SetSoftwarePackageProcedure2", New Object() {sessionId, setSoftwarePackageProcedureProperties}, Me.SetSoftwarePackageProcedure2OperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSoftwarePackageProcedure2OperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSoftwarePackageProcedure2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSoftwarePackageProcedure2Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwarePackageProcedureGroupSoftwarePackageProceduresResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageProcedureGroupSoftwarePackageProcedures2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedures As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwarePackageProcedureGroupSoftwarePackageProceduresReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageProcedurePropertiesArray", IsNullable:=false)> SoftwarePackageProcedureProperties2()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageProcedureGroupSoftwarePackageProcedures2", New Object() {sessionId, listHandle, noOfSoftwarePackageProcedures})
            Return CType(results(0),SoftwarePackageProcedureProperties2())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureGroupSoftwarePackageProcedures2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedures As Long)
            Me.GetSoftwarePackageProcedureGroupSoftwarePackageProcedures2Async(sessionId, listHandle, noOfSoftwarePackageProcedures, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureGroupSoftwarePackageProcedures2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedures As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageProcedureGroupSoftwarePackageProcedures2OperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageProcedureGroupSoftwarePackageProcedures2OperationCompleted = AddressOf Me.OnGetSoftwarePackageProcedureGroupSoftwarePackageProcedures2OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageProcedureGroupSoftwarePackageProcedures2", New Object() {sessionId, listHandle, noOfSoftwarePackageProcedures}, Me.GetSoftwarePackageProcedureGroupSoftwarePackageProcedures2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageProcedureGroupSoftwarePackageProcedures2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageProcedureGroupSoftwarePackageProcedures2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageProcedureGroupSoftwarePackageProcedures2Completed(Me, New GetSoftwarePackageProcedureGroupSoftwarePackageProcedures2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwarePackagesResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackages2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackages As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwarePackagesReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackagePropertiesArray", IsNullable:=false)> SoftwarePackageProperties2()
            Dim results() As Object = Me.Invoke("GetSoftwarePackages2", New Object() {sessionId, listHandle, noOfSoftwarePackages})
            Return CType(results(0),SoftwarePackageProperties2())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackages2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackages As Long)
            Me.GetSoftwarePackages2Async(sessionId, listHandle, noOfSoftwarePackages, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackages2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackages As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackages2OperationCompleted Is Nothing) Then
                Me.GetSoftwarePackages2OperationCompleted = AddressOf Me.OnGetSoftwarePackages2OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackages2", New Object() {sessionId, listHandle, noOfSoftwarePackages}, Me.GetSoftwarePackages2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackages2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackages2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackages2Completed(Me, New GetSoftwarePackages2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwarePackageResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackage2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackagePropertiesRequired As SoftwarePackagePropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("GetSoftwarePackageReturn", IsNullable:=true)> SoftwarePackageProperties2
            Dim results() As Object = Me.Invoke("GetSoftwarePackage2", New Object() {sessionId, softwarePackageId, softwarePackagePropertiesRequired})
            Return CType(results(0),SoftwarePackageProperties2)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackage2Async(ByVal sessionId As String, ByVal softwarePackageId As String, ByVal softwarePackagePropertiesRequired As SoftwarePackagePropertiesRequired)
            Me.GetSoftwarePackage2Async(sessionId, softwarePackageId, softwarePackagePropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackage2Async(ByVal sessionId As String, ByVal softwarePackageId As String, ByVal softwarePackagePropertiesRequired As SoftwarePackagePropertiesRequired, ByVal userState As Object)
            If (Me.GetSoftwarePackage2OperationCompleted Is Nothing) Then
                Me.GetSoftwarePackage2OperationCompleted = AddressOf Me.OnGetSoftwarePackage2OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackage2", New Object() {sessionId, softwarePackageId, softwarePackagePropertiesRequired}, Me.GetSoftwarePackage2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackage2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackage2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackage2Completed(Me, New GetSoftwarePackage2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwarePackageInstallationsResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageInstallations2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageInstallations As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwarePackageInstallationsReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("unitSoftwareJobPropertiesArray", IsNullable:=false)> UnitSoftwareJobProperties2()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageInstallations2", New Object() {sessionId, listHandle, noOfSoftwarePackageInstallations})
            Return CType(results(0),UnitSoftwareJobProperties2())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageInstallations2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageInstallations As Long)
            Me.GetSoftwarePackageInstallations2Async(sessionId, listHandle, noOfSoftwarePackageInstallations, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageInstallations2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageInstallations As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageInstallations2OperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageInstallations2OperationCompleted = AddressOf Me.OnGetSoftwarePackageInstallations2OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageInstallations2", New Object() {sessionId, listHandle, noOfSoftwarePackageInstallations}, Me.GetSoftwarePackageInstallations2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageInstallations2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageInstallations2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageInstallations2Completed(Me, New GetSoftwarePackageInstallations2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetUnitUnitSoftwareJobsResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitUnitSoftwareJobs2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitSoftwareJobs As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetUnitUnitSoftwareJobsReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("unitSoftwareJobPropertiesArray", IsNullable:=false)> UnitSoftwareJobProperties2()
            Dim results() As Object = Me.Invoke("GetUnitUnitSoftwareJobs2", New Object() {sessionId, listHandle, noOfUnitSoftwareJobs})
            Return CType(results(0),UnitSoftwareJobProperties2())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitUnitSoftwareJobs2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitSoftwareJobs As Long)
            Me.GetUnitUnitSoftwareJobs2Async(sessionId, listHandle, noOfUnitSoftwareJobs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitUnitSoftwareJobs2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitSoftwareJobs As Long, ByVal userState As Object)
            If (Me.GetUnitUnitSoftwareJobs2OperationCompleted Is Nothing) Then
                Me.GetUnitUnitSoftwareJobs2OperationCompleted = AddressOf Me.OnGetUnitUnitSoftwareJobs2OperationCompleted
            End If
            Me.InvokeAsync("GetUnitUnitSoftwareJobs2", New Object() {sessionId, listHandle, noOfUnitSoftwareJobs}, Me.GetUnitUnitSoftwareJobs2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitUnitSoftwareJobs2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitUnitSoftwareJobs2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitUnitSoftwareJobs2Completed(Me, New GetUnitUnitSoftwareJobs2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetUnitUnitSoftwareInstallationJobsResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitUnitSoftwareInstallationJobs2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitSoftwareInstallationJobs As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetUnitUnitSoftwareInstallationJobsReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("unitSoftwareJobPropertiesArray", IsNullable:=false)> UnitSoftwareJobProperties2()
            Dim results() As Object = Me.Invoke("GetUnitUnitSoftwareInstallationJobs2", New Object() {sessionId, listHandle, noOfUnitSoftwareInstallationJobs})
            Return CType(results(0),UnitSoftwareJobProperties2())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitUnitSoftwareInstallationJobs2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitSoftwareInstallationJobs As Long)
            Me.GetUnitUnitSoftwareInstallationJobs2Async(sessionId, listHandle, noOfUnitSoftwareInstallationJobs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitUnitSoftwareInstallationJobs2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfUnitSoftwareInstallationJobs As Long, ByVal userState As Object)
            If (Me.GetUnitUnitSoftwareInstallationJobs2OperationCompleted Is Nothing) Then
                Me.GetUnitUnitSoftwareInstallationJobs2OperationCompleted = AddressOf Me.OnGetUnitUnitSoftwareInstallationJobs2OperationCompleted
            End If
            Me.InvokeAsync("GetUnitUnitSoftwareInstallationJobs2", New Object() {sessionId, listHandle, noOfUnitSoftwareInstallationJobs}, Me.GetUnitUnitSoftwareInstallationJobs2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitUnitSoftwareInstallationJobs2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitUnitSoftwareInstallationJobs2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitUnitSoftwareInstallationJobs2Completed(Me, New GetUnitUnitSoftwareInstallationJobs2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwarePackageGroupSoftwarePackagesResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageGroupSoftwarePackages2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackages As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwarePackageGroupSoftwarePackagesReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackagePropertiesArray", IsNullable:=false)> SoftwarePackageProperties2()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageGroupSoftwarePackages2", New Object() {sessionId, listHandle, noOfSoftwarePackages})
            Return CType(results(0),SoftwarePackageProperties2())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageGroupSoftwarePackages2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackages As Long)
            Me.GetSoftwarePackageGroupSoftwarePackages2Async(sessionId, listHandle, noOfSoftwarePackages, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageGroupSoftwarePackages2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackages As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageGroupSoftwarePackages2OperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageGroupSoftwarePackages2OperationCompleted = AddressOf Me.OnGetSoftwarePackageGroupSoftwarePackages2OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageGroupSoftwarePackages2", New Object() {sessionId, listHandle, noOfSoftwarePackages}, Me.GetSoftwarePackageGroupSoftwarePackages2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageGroupSoftwarePackages2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageGroupSoftwarePackages2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageGroupSoftwarePackages2Completed(Me, New GetSoftwarePackageGroupSoftwarePackages2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwarePackageGroupSoftwarePackagesRecursiveResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageGroupSoftwarePackagesRecursive2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackages As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwarePackageGroupSoftwarePackagesRecursiveReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackagePropertiesArray", IsNullable:=false)> SoftwarePackageProperties2()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageGroupSoftwarePackagesRecursive2", New Object() {sessionId, listHandle, noOfSoftwarePackages})
            Return CType(results(0),SoftwarePackageProperties2())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageGroupSoftwarePackagesRecursive2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackages As Long)
            Me.GetSoftwarePackageGroupSoftwarePackagesRecursive2Async(sessionId, listHandle, noOfSoftwarePackages, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageGroupSoftwarePackagesRecursive2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackages As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageGroupSoftwarePackagesRecursive2OperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageGroupSoftwarePackagesRecursive2OperationCompleted = AddressOf Me.OnGetSoftwarePackageGroupSoftwarePackagesRecursive2OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageGroupSoftwarePackagesRecursive2", New Object() {sessionId, listHandle, noOfSoftwarePackages}, Me.GetSoftwarePackageGroupSoftwarePackagesRecursive2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageGroupSoftwarePackagesRecursive2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageGroupSoftwarePackagesRecursive2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageGroupSoftwarePackagesRecursive2Completed(Me, New GetSoftwarePackageGroupSoftwarePackagesRecursive2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwareJobUnitSoftwareJobsResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwareJobUnitSoftwareJobs2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobUnits As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwareJobUnitSoftwareJobsReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("unitSoftwareJobPropertiesArray", IsNullable:=false)> UnitSoftwareJobProperties2()
            Dim results() As Object = Me.Invoke("GetSoftwareJobUnitSoftwareJobs2", New Object() {sessionId, listHandle, noOfSoftwareJobUnits})
            Return CType(results(0),UnitSoftwareJobProperties2())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobUnitSoftwareJobs2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobUnits As Long)
            Me.GetSoftwareJobUnitSoftwareJobs2Async(sessionId, listHandle, noOfSoftwareJobUnits, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobUnitSoftwareJobs2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwareJobUnits As Long, ByVal userState As Object)
            If (Me.GetSoftwareJobUnitSoftwareJobs2OperationCompleted Is Nothing) Then
                Me.GetSoftwareJobUnitSoftwareJobs2OperationCompleted = AddressOf Me.OnGetSoftwareJobUnitSoftwareJobs2OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwareJobUnitSoftwareJobs2", New Object() {sessionId, listHandle, noOfSoftwareJobUnits}, Me.GetSoftwareJobUnitSoftwareJobs2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwareJobUnitSoftwareJobs2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwareJobUnitSoftwareJobs2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwareJobUnitSoftwareJobs2Completed(Me, New GetSoftwareJobUnitSoftwareJobs2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WSChallenge(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal manager As String, ByVal compRequiresAuthentication As CompRequiresAuthentication, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal negotiateData As AuthenticationData, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef authenticationData As String) As <System.Xml.Serialization.XmlElementAttribute("size")> Long
            Dim results() As Object = Me.Invoke("WSChallenge", New Object() {sessionId, manager, compRequiresAuthentication, negotiateData})
            sessionId = CType(results(1),String)
            authenticationData = CType(results(2),String)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WSChallengeAsync(ByVal sessionId As String, ByVal manager As String, ByVal compRequiresAuthentication As CompRequiresAuthentication, ByVal negotiateData As AuthenticationData)
            Me.WSChallengeAsync(sessionId, manager, compRequiresAuthentication, negotiateData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WSChallengeAsync(ByVal sessionId As String, ByVal manager As String, ByVal compRequiresAuthentication As CompRequiresAuthentication, ByVal negotiateData As AuthenticationData, ByVal userState As Object)
            If (Me.WSChallengeOperationCompleted Is Nothing) Then
                Me.WSChallengeOperationCompleted = AddressOf Me.OnWSChallengeOperationCompleted
            End If
            Me.InvokeAsync("WSChallenge", New Object() {sessionId, manager, compRequiresAuthentication, negotiateData}, Me.WSChallengeOperationCompleted, userState)
        End Sub
        
        Private Sub OnWSChallengeOperationCompleted(ByVal arg As Object)
            If (Not (Me.WSChallengeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WSChallengeCompleted(Me, New WSChallengeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WSAuthenticate(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal manager As String, ByVal compRequiresAuthentication As CompRequiresAuthentication, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal challengeData As AuthenticationData, ByRef bAuthorized As Boolean) As <System.Xml.Serialization.XmlElementAttribute("userName", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("WSAuthenticate", New Object() {sessionId, manager, compRequiresAuthentication, challengeData})
            bAuthorized = CType(results(1),Boolean)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WSAuthenticateAsync(ByVal sessionId As String, ByVal manager As String, ByVal compRequiresAuthentication As CompRequiresAuthentication, ByVal challengeData As AuthenticationData)
            Me.WSAuthenticateAsync(sessionId, manager, compRequiresAuthentication, challengeData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WSAuthenticateAsync(ByVal sessionId As String, ByVal manager As String, ByVal compRequiresAuthentication As CompRequiresAuthentication, ByVal challengeData As AuthenticationData, ByVal userState As Object)
            If (Me.WSAuthenticateOperationCompleted Is Nothing) Then
                Me.WSAuthenticateOperationCompleted = AddressOf Me.OnWSAuthenticateOperationCompleted
            End If
            Me.InvokeAsync("WSAuthenticate", New Object() {sessionId, manager, compRequiresAuthentication, challengeData}, Me.WSAuthenticateOperationCompleted, userState)
        End Sub
        
        Private Sub OnWSAuthenticateOperationCompleted(ByVal arg As Object)
            If (Not (Me.WSAuthenticateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WSAuthenticateCompleted(Me, New WSAuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenUnitQueryList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal queryPropertiesRequired As UnitQueryPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfQueries As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfQueriesSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenUnitQueryList", New Object() {sessionId, queryPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfQueries = CType(results(2),System.Nullable(Of Long))
            totalNoOfQueriesSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitQueryListAsync(ByVal sessionId As String, ByVal queryPropertiesRequired As UnitQueryPropertiesRequired)
            Me.OpenUnitQueryListAsync(sessionId, queryPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitQueryListAsync(ByVal sessionId As String, ByVal queryPropertiesRequired As UnitQueryPropertiesRequired, ByVal userState As Object)
            If (Me.OpenUnitQueryListOperationCompleted Is Nothing) Then
                Me.OpenUnitQueryListOperationCompleted = AddressOf Me.OnOpenUnitQueryListOperationCompleted
            End If
            Me.InvokeAsync("OpenUnitQueryList", New Object() {sessionId, queryPropertiesRequired}, Me.OpenUnitQueryListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenUnitQueryListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenUnitQueryListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenUnitQueryListCompleted(Me, New OpenUnitQueryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitQueries(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfQueries As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetQueriesReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("queryPropertiesArray", IsNullable:=false)> UnitQueryProperties()
            Dim results() As Object = Me.Invoke("GetUnitQueries", New Object() {sessionId, listHandle, noOfQueries})
            Return CType(results(0),UnitQueryProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitQueriesAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfQueries As Long)
            Me.GetUnitQueriesAsync(sessionId, listHandle, noOfQueries, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitQueriesAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfQueries As Long, ByVal userState As Object)
            If (Me.GetUnitQueriesOperationCompleted Is Nothing) Then
                Me.GetUnitQueriesOperationCompleted = AddressOf Me.OnGetUnitQueriesOperationCompleted
            End If
            Me.InvokeAsync("GetUnitQueries", New Object() {sessionId, listHandle, noOfQueries}, Me.GetUnitQueriesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitQueriesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitQueriesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitQueriesCompleted(Me, New GetUnitQueriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseUnitQueryList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseUnitQueryList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitQueryListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseUnitQueryListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseUnitQueryListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseUnitQueryListOperationCompleted Is Nothing) Then
                Me.CloseUnitQueryListOperationCompleted = AddressOf Me.OnCloseUnitQueryListOperationCompleted
            End If
            Me.InvokeAsync("CloseUnitQueryList", New Object() {sessionId, listHandle}, Me.CloseUnitQueryListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseUnitQueryListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseUnitQueryListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseUnitQueryListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateOSIMComputer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimProperties As CreateOSIMComputerProperties) As <System.Xml.Serialization.XmlElementAttribute("computerId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateOSIMComputer", New Object() {sessionId, osimProperties})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateOSIMComputerAsync(ByVal sessionId As String, ByVal osimProperties As CreateOSIMComputerProperties)
            Me.CreateOSIMComputerAsync(sessionId, osimProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateOSIMComputerAsync(ByVal sessionId As String, ByVal osimProperties As CreateOSIMComputerProperties, ByVal userState As Object)
            If (Me.CreateOSIMComputerOperationCompleted Is Nothing) Then
                Me.CreateOSIMComputerOperationCompleted = AddressOf Me.OnCreateOSIMComputerOperationCompleted
            End If
            Me.InvokeAsync("CreateOSIMComputer", New Object() {sessionId, osimProperties}, Me.CreateOSIMComputerOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateOSIMComputerOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateOSIMComputerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateOSIMComputerCompleted(Me, New CreateOSIMComputerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RegisterComputerWithOSIM(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetID As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimImage As String)
            Me.Invoke("RegisterComputerWithOSIM", New Object() {sessionId, osimTargetID, osimImage})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegisterComputerWithOSIMAsync(ByVal sessionId As String, ByVal osimTargetID As String, ByVal osimImage As String)
            Me.RegisterComputerWithOSIMAsync(sessionId, osimTargetID, osimImage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegisterComputerWithOSIMAsync(ByVal sessionId As String, ByVal osimTargetID As String, ByVal osimImage As String, ByVal userState As Object)
            If (Me.RegisterComputerWithOSIMOperationCompleted Is Nothing) Then
                Me.RegisterComputerWithOSIMOperationCompleted = AddressOf Me.OnRegisterComputerWithOSIMOperationCompleted
            End If
            Me.InvokeAsync("RegisterComputerWithOSIM", New Object() {sessionId, osimTargetID, osimImage}, Me.RegisterComputerWithOSIMOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegisterComputerWithOSIMOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegisterComputerWithOSIMCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegisterComputerWithOSIMCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RegisterComputerWithOSIMByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimImage As String)
            Me.Invoke("RegisterComputerWithOSIMByName", New Object() {sessionId, osimTargetName, osimImage})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegisterComputerWithOSIMByNameAsync(ByVal sessionId As String, ByVal osimTargetName As String, ByVal osimImage As String)
            Me.RegisterComputerWithOSIMByNameAsync(sessionId, osimTargetName, osimImage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegisterComputerWithOSIMByNameAsync(ByVal sessionId As String, ByVal osimTargetName As String, ByVal osimImage As String, ByVal userState As Object)
            If (Me.RegisterComputerWithOSIMByNameOperationCompleted Is Nothing) Then
                Me.RegisterComputerWithOSIMByNameOperationCompleted = AddressOf Me.OnRegisterComputerWithOSIMByNameOperationCompleted
            End If
            Me.InvokeAsync("RegisterComputerWithOSIMByName", New Object() {sessionId, osimTargetName, osimImage}, Me.RegisterComputerWithOSIMByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegisterComputerWithOSIMByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegisterComputerWithOSIMByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegisterComputerWithOSIMByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetOSInstallationParameter(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetMACAddress As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal installParameterName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal installParameterValue As String)
            Me.Invoke("SetOSInstallationParameter", New Object() {sessionId, osimTargetMACAddress, installParameterName, installParameterValue})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetOSInstallationParameterAsync(ByVal sessionId As String, ByVal osimTargetMACAddress As String, ByVal installParameterName As String, ByVal installParameterValue As String)
            Me.SetOSInstallationParameterAsync(sessionId, osimTargetMACAddress, installParameterName, installParameterValue, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetOSInstallationParameterAsync(ByVal sessionId As String, ByVal osimTargetMACAddress As String, ByVal installParameterName As String, ByVal installParameterValue As String, ByVal userState As Object)
            If (Me.SetOSInstallationParameterOperationCompleted Is Nothing) Then
                Me.SetOSInstallationParameterOperationCompleted = AddressOf Me.OnSetOSInstallationParameterOperationCompleted
            End If
            Me.InvokeAsync("SetOSInstallationParameter", New Object() {sessionId, osimTargetMACAddress, installParameterName, installParameterValue}, Me.SetOSInstallationParameterOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetOSInstallationParameterOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetOSInstallationParameterCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetOSInstallationParameterCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetOSInstallationParameterByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetComputerLabel As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal installParameterName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal installParameterValue As String)
            Me.Invoke("SetOSInstallationParameterByName", New Object() {sessionId, osimTargetComputerLabel, installParameterName, installParameterValue})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetOSInstallationParameterByNameAsync(ByVal sessionId As String, ByVal osimTargetComputerLabel As String, ByVal installParameterName As String, ByVal installParameterValue As String)
            Me.SetOSInstallationParameterByNameAsync(sessionId, osimTargetComputerLabel, installParameterName, installParameterValue, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetOSInstallationParameterByNameAsync(ByVal sessionId As String, ByVal osimTargetComputerLabel As String, ByVal installParameterName As String, ByVal installParameterValue As String, ByVal userState As Object)
            If (Me.SetOSInstallationParameterByNameOperationCompleted Is Nothing) Then
                Me.SetOSInstallationParameterByNameOperationCompleted = AddressOf Me.OnSetOSInstallationParameterByNameOperationCompleted
            End If
            Me.InvokeAsync("SetOSInstallationParameterByName", New Object() {sessionId, osimTargetComputerLabel, installParameterName, installParameterValue}, Me.SetOSInstallationParameterByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetOSInstallationParameterByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetOSInstallationParameterByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetOSInstallationParameterByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ActivateOSInstallation(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetMACAddress As String, ByVal bWakeOnLAN As Boolean, ByVal bReboot As Boolean, ByVal bWaitForBootServer As Boolean, ByVal bWaitForImages As WSOSIMDEPLOY, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal activateTime As DateTime)
            Me.Invoke("ActivateOSInstallation", New Object() {sessionId, osimTargetMACAddress, bWakeOnLAN, bReboot, bWaitForBootServer, bWaitForImages, activateTime})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActivateOSInstallationAsync(ByVal sessionId As String, ByVal osimTargetMACAddress As String, ByVal bWakeOnLAN As Boolean, ByVal bReboot As Boolean, ByVal bWaitForBootServer As Boolean, ByVal bWaitForImages As WSOSIMDEPLOY, ByVal activateTime As DateTime)
            Me.ActivateOSInstallationAsync(sessionId, osimTargetMACAddress, bWakeOnLAN, bReboot, bWaitForBootServer, bWaitForImages, activateTime, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActivateOSInstallationAsync(ByVal sessionId As String, ByVal osimTargetMACAddress As String, ByVal bWakeOnLAN As Boolean, ByVal bReboot As Boolean, ByVal bWaitForBootServer As Boolean, ByVal bWaitForImages As WSOSIMDEPLOY, ByVal activateTime As DateTime, ByVal userState As Object)
            If (Me.ActivateOSInstallationOperationCompleted Is Nothing) Then
                Me.ActivateOSInstallationOperationCompleted = AddressOf Me.OnActivateOSInstallationOperationCompleted
            End If
            Me.InvokeAsync("ActivateOSInstallation", New Object() {sessionId, osimTargetMACAddress, bWakeOnLAN, bReboot, bWaitForBootServer, bWaitForImages, activateTime}, Me.ActivateOSInstallationOperationCompleted, userState)
        End Sub
        
        Private Sub OnActivateOSInstallationOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActivateOSInstallationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActivateOSInstallationCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ActivateOSInstallationByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetComputerLabel As String, ByVal bWakeOnLAN As Boolean, ByVal bReboot As Boolean, ByVal bWaitForBootServer As Boolean, ByVal bWaitForImages As WSOSIMDEPLOY, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal activateTime As DateTime)
            Me.Invoke("ActivateOSInstallationByName", New Object() {sessionId, osimTargetComputerLabel, bWakeOnLAN, bReboot, bWaitForBootServer, bWaitForImages, activateTime})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActivateOSInstallationByNameAsync(ByVal sessionId As String, ByVal osimTargetComputerLabel As String, ByVal bWakeOnLAN As Boolean, ByVal bReboot As Boolean, ByVal bWaitForBootServer As Boolean, ByVal bWaitForImages As WSOSIMDEPLOY, ByVal activateTime As DateTime)
            Me.ActivateOSInstallationByNameAsync(sessionId, osimTargetComputerLabel, bWakeOnLAN, bReboot, bWaitForBootServer, bWaitForImages, activateTime, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActivateOSInstallationByNameAsync(ByVal sessionId As String, ByVal osimTargetComputerLabel As String, ByVal bWakeOnLAN As Boolean, ByVal bReboot As Boolean, ByVal bWaitForBootServer As Boolean, ByVal bWaitForImages As WSOSIMDEPLOY, ByVal activateTime As DateTime, ByVal userState As Object)
            If (Me.ActivateOSInstallationByNameOperationCompleted Is Nothing) Then
                Me.ActivateOSInstallationByNameOperationCompleted = AddressOf Me.OnActivateOSInstallationByNameOperationCompleted
            End If
            Me.InvokeAsync("ActivateOSInstallationByName", New Object() {sessionId, osimTargetComputerLabel, bWakeOnLAN, bReboot, bWaitForBootServer, bWaitForImages, activateTime}, Me.ActivateOSInstallationByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnActivateOSInstallationByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActivateOSInstallationByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActivateOSInstallationByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CancelOSInstallation(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetMACAddress As String, ByVal bForceCancel As Boolean)
            Me.Invoke("CancelOSInstallation", New Object() {sessionId, osimTargetMACAddress, bForceCancel})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CancelOSInstallationAsync(ByVal sessionId As String, ByVal osimTargetMACAddress As String, ByVal bForceCancel As Boolean)
            Me.CancelOSInstallationAsync(sessionId, osimTargetMACAddress, bForceCancel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CancelOSInstallationAsync(ByVal sessionId As String, ByVal osimTargetMACAddress As String, ByVal bForceCancel As Boolean, ByVal userState As Object)
            If (Me.CancelOSInstallationOperationCompleted Is Nothing) Then
                Me.CancelOSInstallationOperationCompleted = AddressOf Me.OnCancelOSInstallationOperationCompleted
            End If
            Me.InvokeAsync("CancelOSInstallation", New Object() {sessionId, osimTargetMACAddress, bForceCancel}, Me.CancelOSInstallationOperationCompleted, userState)
        End Sub
        
        Private Sub OnCancelOSInstallationOperationCompleted(ByVal arg As Object)
            If (Not (Me.CancelOSInstallationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CancelOSInstallationCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CancelOSInstallationByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetComputerLabel As String, ByVal bForceCancel As Boolean)
            Me.Invoke("CancelOSInstallationByName", New Object() {sessionId, osimTargetComputerLabel, bForceCancel})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CancelOSInstallationByNameAsync(ByVal sessionId As String, ByVal osimTargetComputerLabel As String, ByVal bForceCancel As Boolean)
            Me.CancelOSInstallationByNameAsync(sessionId, osimTargetComputerLabel, bForceCancel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CancelOSInstallationByNameAsync(ByVal sessionId As String, ByVal osimTargetComputerLabel As String, ByVal bForceCancel As Boolean, ByVal userState As Object)
            If (Me.CancelOSInstallationByNameOperationCompleted Is Nothing) Then
                Me.CancelOSInstallationByNameOperationCompleted = AddressOf Me.OnCancelOSInstallationByNameOperationCompleted
            End If
            Me.InvokeAsync("CancelOSInstallationByName", New Object() {sessionId, osimTargetComputerLabel, bForceCancel}, Me.CancelOSInstallationByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnCancelOSInstallationByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.CancelOSInstallationByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CancelOSInstallationByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ReActivateOSInstallation(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetMACAddress As String, ByVal bWakeOnLAN As Boolean, ByVal wakeOnLANSupplied As Boolean, ByVal bReboot As Boolean, ByVal rebootSupplied As Boolean, ByVal bWaitForBootServer As Boolean, ByVal waitForBootServerSupplied As Boolean, ByVal bWaitForImages As WSOSIMDEPLOY, ByVal waitForImagesSupplied As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal activateTime As DateTime)
            Me.Invoke("ReActivateOSInstallation", New Object() {sessionId, osimTargetMACAddress, bWakeOnLAN, wakeOnLANSupplied, bReboot, rebootSupplied, bWaitForBootServer, waitForBootServerSupplied, bWaitForImages, waitForImagesSupplied, activateTime})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReActivateOSInstallationAsync(ByVal sessionId As String, ByVal osimTargetMACAddress As String, ByVal bWakeOnLAN As Boolean, ByVal wakeOnLANSupplied As Boolean, ByVal bReboot As Boolean, ByVal rebootSupplied As Boolean, ByVal bWaitForBootServer As Boolean, ByVal waitForBootServerSupplied As Boolean, ByVal bWaitForImages As WSOSIMDEPLOY, ByVal waitForImagesSupplied As Boolean, ByVal activateTime As DateTime)
            Me.ReActivateOSInstallationAsync(sessionId, osimTargetMACAddress, bWakeOnLAN, wakeOnLANSupplied, bReboot, rebootSupplied, bWaitForBootServer, waitForBootServerSupplied, bWaitForImages, waitForImagesSupplied, activateTime, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReActivateOSInstallationAsync(ByVal sessionId As String, ByVal osimTargetMACAddress As String, ByVal bWakeOnLAN As Boolean, ByVal wakeOnLANSupplied As Boolean, ByVal bReboot As Boolean, ByVal rebootSupplied As Boolean, ByVal bWaitForBootServer As Boolean, ByVal waitForBootServerSupplied As Boolean, ByVal bWaitForImages As WSOSIMDEPLOY, ByVal waitForImagesSupplied As Boolean, ByVal activateTime As DateTime, ByVal userState As Object)
            If (Me.ReActivateOSInstallationOperationCompleted Is Nothing) Then
                Me.ReActivateOSInstallationOperationCompleted = AddressOf Me.OnReActivateOSInstallationOperationCompleted
            End If
            Me.InvokeAsync("ReActivateOSInstallation", New Object() {sessionId, osimTargetMACAddress, bWakeOnLAN, wakeOnLANSupplied, bReboot, rebootSupplied, bWaitForBootServer, waitForBootServerSupplied, bWaitForImages, waitForImagesSupplied, activateTime}, Me.ReActivateOSInstallationOperationCompleted, userState)
        End Sub
        
        Private Sub OnReActivateOSInstallationOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReActivateOSInstallationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReActivateOSInstallationCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ReActivateOSInstallationByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetComputerLabel As String, ByVal bWakeOnLAN As Boolean, ByVal wakeOnLANSupplied As Boolean, ByVal bReboot As Boolean, ByVal rebootSupplied As Boolean, ByVal bWaitForBootServer As Boolean, ByVal waitForBootServerSupplied As Boolean, ByVal bWaitForImages As WSOSIMDEPLOY, ByVal waitForImagesSupplied As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal activateTime As DateTime)
            Me.Invoke("ReActivateOSInstallationByName", New Object() {sessionId, osimTargetComputerLabel, bWakeOnLAN, wakeOnLANSupplied, bReboot, rebootSupplied, bWaitForBootServer, waitForBootServerSupplied, bWaitForImages, waitForImagesSupplied, activateTime})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReActivateOSInstallationByNameAsync(ByVal sessionId As String, ByVal osimTargetComputerLabel As String, ByVal bWakeOnLAN As Boolean, ByVal wakeOnLANSupplied As Boolean, ByVal bReboot As Boolean, ByVal rebootSupplied As Boolean, ByVal bWaitForBootServer As Boolean, ByVal waitForBootServerSupplied As Boolean, ByVal bWaitForImages As WSOSIMDEPLOY, ByVal waitForImagesSupplied As Boolean, ByVal activateTime As DateTime)
            Me.ReActivateOSInstallationByNameAsync(sessionId, osimTargetComputerLabel, bWakeOnLAN, wakeOnLANSupplied, bReboot, rebootSupplied, bWaitForBootServer, waitForBootServerSupplied, bWaitForImages, waitForImagesSupplied, activateTime, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReActivateOSInstallationByNameAsync(ByVal sessionId As String, ByVal osimTargetComputerLabel As String, ByVal bWakeOnLAN As Boolean, ByVal wakeOnLANSupplied As Boolean, ByVal bReboot As Boolean, ByVal rebootSupplied As Boolean, ByVal bWaitForBootServer As Boolean, ByVal waitForBootServerSupplied As Boolean, ByVal bWaitForImages As WSOSIMDEPLOY, ByVal waitForImagesSupplied As Boolean, ByVal activateTime As DateTime, ByVal userState As Object)
            If (Me.ReActivateOSInstallationByNameOperationCompleted Is Nothing) Then
                Me.ReActivateOSInstallationByNameOperationCompleted = AddressOf Me.OnReActivateOSInstallationByNameOperationCompleted
            End If
            Me.InvokeAsync("ReActivateOSInstallationByName", New Object() {sessionId, osimTargetComputerLabel, bWakeOnLAN, wakeOnLANSupplied, bReboot, rebootSupplied, bWaitForBootServer, waitForBootServerSupplied, bWaitForImages, waitForImagesSupplied, activateTime}, Me.ReActivateOSInstallationByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnReActivateOSInstallationByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReActivateOSInstallationByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReActivateOSInstallationByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ReInstallOS(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetMACAddress As String, ByVal bWakeOnLAN As Boolean, ByVal wakeOnLANSupplied As Boolean, ByVal bReboot As Boolean, ByVal rebootSupplied As Boolean, ByVal bWaitForBootServer As Boolean, ByVal waitForBootServerSupplied As Boolean, ByVal bWaitForImages As WSOSIMDEPLOY, ByVal waitForImagesSupplied As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal activateTime As DateTime)
            Me.Invoke("ReInstallOS", New Object() {sessionId, osimTargetMACAddress, bWakeOnLAN, wakeOnLANSupplied, bReboot, rebootSupplied, bWaitForBootServer, waitForBootServerSupplied, bWaitForImages, waitForImagesSupplied, activateTime})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReInstallOSAsync(ByVal sessionId As String, ByVal osimTargetMACAddress As String, ByVal bWakeOnLAN As Boolean, ByVal wakeOnLANSupplied As Boolean, ByVal bReboot As Boolean, ByVal rebootSupplied As Boolean, ByVal bWaitForBootServer As Boolean, ByVal waitForBootServerSupplied As Boolean, ByVal bWaitForImages As WSOSIMDEPLOY, ByVal waitForImagesSupplied As Boolean, ByVal activateTime As DateTime)
            Me.ReInstallOSAsync(sessionId, osimTargetMACAddress, bWakeOnLAN, wakeOnLANSupplied, bReboot, rebootSupplied, bWaitForBootServer, waitForBootServerSupplied, bWaitForImages, waitForImagesSupplied, activateTime, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReInstallOSAsync(ByVal sessionId As String, ByVal osimTargetMACAddress As String, ByVal bWakeOnLAN As Boolean, ByVal wakeOnLANSupplied As Boolean, ByVal bReboot As Boolean, ByVal rebootSupplied As Boolean, ByVal bWaitForBootServer As Boolean, ByVal waitForBootServerSupplied As Boolean, ByVal bWaitForImages As WSOSIMDEPLOY, ByVal waitForImagesSupplied As Boolean, ByVal activateTime As DateTime, ByVal userState As Object)
            If (Me.ReInstallOSOperationCompleted Is Nothing) Then
                Me.ReInstallOSOperationCompleted = AddressOf Me.OnReInstallOSOperationCompleted
            End If
            Me.InvokeAsync("ReInstallOS", New Object() {sessionId, osimTargetMACAddress, bWakeOnLAN, wakeOnLANSupplied, bReboot, rebootSupplied, bWaitForBootServer, waitForBootServerSupplied, bWaitForImages, waitForImagesSupplied, activateTime}, Me.ReInstallOSOperationCompleted, userState)
        End Sub
        
        Private Sub OnReInstallOSOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReInstallOSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReInstallOSCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ReInstallOSByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetComputerLabel As String, ByVal bWakeOnLAN As Boolean, ByVal wakeOnLANSupplied As Boolean, ByVal bReboot As Boolean, ByVal rebootSupplied As Boolean, ByVal bWaitForBootServer As Boolean, ByVal waitForBootServerSupplied As Boolean, ByVal bWaitForImages As WSOSIMDEPLOY, ByVal waitForImagesSupplied As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal activateTime As DateTime)
            Me.Invoke("ReInstallOSByName", New Object() {sessionId, osimTargetComputerLabel, bWakeOnLAN, wakeOnLANSupplied, bReboot, rebootSupplied, bWaitForBootServer, waitForBootServerSupplied, bWaitForImages, waitForImagesSupplied, activateTime})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReInstallOSByNameAsync(ByVal sessionId As String, ByVal osimTargetComputerLabel As String, ByVal bWakeOnLAN As Boolean, ByVal wakeOnLANSupplied As Boolean, ByVal bReboot As Boolean, ByVal rebootSupplied As Boolean, ByVal bWaitForBootServer As Boolean, ByVal waitForBootServerSupplied As Boolean, ByVal bWaitForImages As WSOSIMDEPLOY, ByVal waitForImagesSupplied As Boolean, ByVal activateTime As DateTime)
            Me.ReInstallOSByNameAsync(sessionId, osimTargetComputerLabel, bWakeOnLAN, wakeOnLANSupplied, bReboot, rebootSupplied, bWaitForBootServer, waitForBootServerSupplied, bWaitForImages, waitForImagesSupplied, activateTime, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReInstallOSByNameAsync(ByVal sessionId As String, ByVal osimTargetComputerLabel As String, ByVal bWakeOnLAN As Boolean, ByVal wakeOnLANSupplied As Boolean, ByVal bReboot As Boolean, ByVal rebootSupplied As Boolean, ByVal bWaitForBootServer As Boolean, ByVal waitForBootServerSupplied As Boolean, ByVal bWaitForImages As WSOSIMDEPLOY, ByVal waitForImagesSupplied As Boolean, ByVal activateTime As DateTime, ByVal userState As Object)
            If (Me.ReInstallOSByNameOperationCompleted Is Nothing) Then
                Me.ReInstallOSByNameOperationCompleted = AddressOf Me.OnReInstallOSByNameOperationCompleted
            End If
            Me.InvokeAsync("ReInstallOSByName", New Object() {sessionId, osimTargetComputerLabel, bWakeOnLAN, wakeOnLANSupplied, bReboot, rebootSupplied, bWaitForBootServer, waitForBootServerSupplied, bWaitForImages, waitForImagesSupplied, activateTime}, Me.ReInstallOSByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnReInstallOSByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReInstallOSByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReInstallOSByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnnamedOSIMRegisteredComputers(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfosimTargetAttributes", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("osimPropertiesArray", IsNullable:=false), System.Xml.Serialization.XmlArrayItemAttribute("osimProperties", IsNullable:=false, NestingLevel:=1)> OSIMProperties()()
            Dim results() As Object = Me.Invoke("GetUnnamedOSIMRegisteredComputers", New Object() {sessionId})
            Return CType(results(0),OSIMProperties()())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnnamedOSIMRegisteredComputersAsync(ByVal sessionId As String)
            Me.GetUnnamedOSIMRegisteredComputersAsync(sessionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnnamedOSIMRegisteredComputersAsync(ByVal sessionId As String, ByVal userState As Object)
            If (Me.GetUnnamedOSIMRegisteredComputersOperationCompleted Is Nothing) Then
                Me.GetUnnamedOSIMRegisteredComputersOperationCompleted = AddressOf Me.OnGetUnnamedOSIMRegisteredComputersOperationCompleted
            End If
            Me.InvokeAsync("GetUnnamedOSIMRegisteredComputers", New Object() {sessionId}, Me.GetUnnamedOSIMRegisteredComputersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnnamedOSIMRegisteredComputersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnnamedOSIMRegisteredComputersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnnamedOSIMRegisteredComputersCompleted(Me, New GetUnnamedOSIMRegisteredComputersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnmanagedOSIMRegisteredComputers(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfosimTargetAttributes", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("osimPropertiesArray", IsNullable:=false), System.Xml.Serialization.XmlArrayItemAttribute("osimProperties", IsNullable:=false, NestingLevel:=1)> OSIMProperties()()
            Dim results() As Object = Me.Invoke("GetUnmanagedOSIMRegisteredComputers", New Object() {sessionId})
            Return CType(results(0),OSIMProperties()())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnmanagedOSIMRegisteredComputersAsync(ByVal sessionId As String)
            Me.GetUnmanagedOSIMRegisteredComputersAsync(sessionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnmanagedOSIMRegisteredComputersAsync(ByVal sessionId As String, ByVal userState As Object)
            If (Me.GetUnmanagedOSIMRegisteredComputersOperationCompleted Is Nothing) Then
                Me.GetUnmanagedOSIMRegisteredComputersOperationCompleted = AddressOf Me.OnGetUnmanagedOSIMRegisteredComputersOperationCompleted
            End If
            Me.InvokeAsync("GetUnmanagedOSIMRegisteredComputers", New Object() {sessionId}, Me.GetUnmanagedOSIMRegisteredComputersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnmanagedOSIMRegisteredComputersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnmanagedOSIMRegisteredComputersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnmanagedOSIMRegisteredComputersCompleted(Me, New GetUnmanagedOSIMRegisteredComputersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOSInstallationRequest(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetMACAddress As String, ByVal confType As WSOSIMCONFTYPE, ByVal confTypeSupplied As Boolean) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfInstallationRequestProperties", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("osimProperties", IsNullable:=false)> OSIMProperties()
            Dim results() As Object = Me.Invoke("GetOSInstallationRequest", New Object() {sessionId, osimTargetMACAddress, confType, confTypeSupplied})
            Return CType(results(0),OSIMProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOSInstallationRequestAsync(ByVal sessionId As String, ByVal osimTargetMACAddress As String, ByVal confType As WSOSIMCONFTYPE, ByVal confTypeSupplied As Boolean)
            Me.GetOSInstallationRequestAsync(sessionId, osimTargetMACAddress, confType, confTypeSupplied, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOSInstallationRequestAsync(ByVal sessionId As String, ByVal osimTargetMACAddress As String, ByVal confType As WSOSIMCONFTYPE, ByVal confTypeSupplied As Boolean, ByVal userState As Object)
            If (Me.GetOSInstallationRequestOperationCompleted Is Nothing) Then
                Me.GetOSInstallationRequestOperationCompleted = AddressOf Me.OnGetOSInstallationRequestOperationCompleted
            End If
            Me.InvokeAsync("GetOSInstallationRequest", New Object() {sessionId, osimTargetMACAddress, confType, confTypeSupplied}, Me.GetOSInstallationRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOSInstallationRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOSInstallationRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOSInstallationRequestCompleted(Me, New GetOSInstallationRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOSInstallationRequestByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetLabel As String, ByVal confType As WSOSIMCONFTYPE, ByVal confTypeSupplied As Boolean) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfInstallationRequestProperties", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("osimProperties", IsNullable:=false)> OSIMProperties()
            Dim results() As Object = Me.Invoke("GetOSInstallationRequestByName", New Object() {sessionId, osimTargetLabel, confType, confTypeSupplied})
            Return CType(results(0),OSIMProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOSInstallationRequestByNameAsync(ByVal sessionId As String, ByVal osimTargetLabel As String, ByVal confType As WSOSIMCONFTYPE, ByVal confTypeSupplied As Boolean)
            Me.GetOSInstallationRequestByNameAsync(sessionId, osimTargetLabel, confType, confTypeSupplied, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOSInstallationRequestByNameAsync(ByVal sessionId As String, ByVal osimTargetLabel As String, ByVal confType As WSOSIMCONFTYPE, ByVal confTypeSupplied As Boolean, ByVal userState As Object)
            If (Me.GetOSInstallationRequestByNameOperationCompleted Is Nothing) Then
                Me.GetOSInstallationRequestByNameOperationCompleted = AddressOf Me.OnGetOSInstallationRequestByNameOperationCompleted
            End If
            Me.InvokeAsync("GetOSInstallationRequestByName", New Object() {sessionId, osimTargetLabel, confType, confTypeSupplied}, Me.GetOSInstallationRequestByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOSInstallationRequestByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOSInstallationRequestByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOSInstallationRequestByNameCompleted(Me, New GetOSInstallationRequestByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInstallationRequestList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetMACAddress As String) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfosimInstallationRequestsProperties", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("osimPropertiesArray", IsNullable:=false), System.Xml.Serialization.XmlArrayItemAttribute("osimProperties", IsNullable:=false, NestingLevel:=1)> OSIMProperties()()
            Dim results() As Object = Me.Invoke("GetInstallationRequestList", New Object() {sessionId, osimTargetMACAddress})
            Return CType(results(0),OSIMProperties()())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetInstallationRequestListAsync(ByVal sessionId As String, ByVal osimTargetMACAddress As String)
            Me.GetInstallationRequestListAsync(sessionId, osimTargetMACAddress, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetInstallationRequestListAsync(ByVal sessionId As String, ByVal osimTargetMACAddress As String, ByVal userState As Object)
            If (Me.GetInstallationRequestListOperationCompleted Is Nothing) Then
                Me.GetInstallationRequestListOperationCompleted = AddressOf Me.OnGetInstallationRequestListOperationCompleted
            End If
            Me.InvokeAsync("GetInstallationRequestList", New Object() {sessionId, osimTargetMACAddress}, Me.GetInstallationRequestListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetInstallationRequestListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetInstallationRequestListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetInstallationRequestListCompleted(Me, New GetInstallationRequestListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInstallationRequestListByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetLabel As String) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfosimInstallationRequestsProperties", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("osimPropertiesArray", IsNullable:=false), System.Xml.Serialization.XmlArrayItemAttribute("osimProperties", IsNullable:=false, NestingLevel:=1)> OSIMProperties()()
            Dim results() As Object = Me.Invoke("GetInstallationRequestListByName", New Object() {sessionId, osimTargetLabel})
            Return CType(results(0),OSIMProperties()())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetInstallationRequestListByNameAsync(ByVal sessionId As String, ByVal osimTargetLabel As String)
            Me.GetInstallationRequestListByNameAsync(sessionId, osimTargetLabel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetInstallationRequestListByNameAsync(ByVal sessionId As String, ByVal osimTargetLabel As String, ByVal userState As Object)
            If (Me.GetInstallationRequestListByNameOperationCompleted Is Nothing) Then
                Me.GetInstallationRequestListByNameOperationCompleted = AddressOf Me.OnGetInstallationRequestListByNameOperationCompleted
            End If
            Me.InvokeAsync("GetInstallationRequestListByName", New Object() {sessionId, osimTargetLabel}, Me.GetInstallationRequestListByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetInstallationRequestListByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetInstallationRequestListByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetInstallationRequestListByNameCompleted(Me, New GetInstallationRequestListByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteOSInstallationRequest(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetMACAddress As String, ByVal irStatus As WSOSIMIRSTATUS)
            Me.Invoke("DeleteOSInstallationRequest", New Object() {sessionId, osimTargetMACAddress, irStatus})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteOSInstallationRequestAsync(ByVal sessionId As String, ByVal osimTargetMACAddress As String, ByVal irStatus As WSOSIMIRSTATUS)
            Me.DeleteOSInstallationRequestAsync(sessionId, osimTargetMACAddress, irStatus, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteOSInstallationRequestAsync(ByVal sessionId As String, ByVal osimTargetMACAddress As String, ByVal irStatus As WSOSIMIRSTATUS, ByVal userState As Object)
            If (Me.DeleteOSInstallationRequestOperationCompleted Is Nothing) Then
                Me.DeleteOSInstallationRequestOperationCompleted = AddressOf Me.OnDeleteOSInstallationRequestOperationCompleted
            End If
            Me.InvokeAsync("DeleteOSInstallationRequest", New Object() {sessionId, osimTargetMACAddress, irStatus}, Me.DeleteOSInstallationRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteOSInstallationRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteOSInstallationRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteOSInstallationRequestCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteOSInstallationRequestByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetLabel As String, ByVal irStatus As WSOSIMIRSTATUS)
            Me.Invoke("DeleteOSInstallationRequestByName", New Object() {sessionId, osimTargetLabel, irStatus})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteOSInstallationRequestByNameAsync(ByVal sessionId As String, ByVal osimTargetLabel As String, ByVal irStatus As WSOSIMIRSTATUS)
            Me.DeleteOSInstallationRequestByNameAsync(sessionId, osimTargetLabel, irStatus, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteOSInstallationRequestByNameAsync(ByVal sessionId As String, ByVal osimTargetLabel As String, ByVal irStatus As WSOSIMIRSTATUS, ByVal userState As Object)
            If (Me.DeleteOSInstallationRequestByNameOperationCompleted Is Nothing) Then
                Me.DeleteOSInstallationRequestByNameOperationCompleted = AddressOf Me.OnDeleteOSInstallationRequestByNameOperationCompleted
            End If
            Me.InvokeAsync("DeleteOSInstallationRequestByName", New Object() {sessionId, osimTargetLabel, irStatus}, Me.DeleteOSInstallationRequestByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteOSInstallationRequestByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteOSInstallationRequestByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteOSInstallationRequestByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeRegisterOSIMComputer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetMACAddress As String)
            Me.Invoke("DeRegisterOSIMComputer", New Object() {sessionId, osimTargetMACAddress})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeRegisterOSIMComputerAsync(ByVal sessionId As String, ByVal osimTargetMACAddress As String)
            Me.DeRegisterOSIMComputerAsync(sessionId, osimTargetMACAddress, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeRegisterOSIMComputerAsync(ByVal sessionId As String, ByVal osimTargetMACAddress As String, ByVal userState As Object)
            If (Me.DeRegisterOSIMComputerOperationCompleted Is Nothing) Then
                Me.DeRegisterOSIMComputerOperationCompleted = AddressOf Me.OnDeRegisterOSIMComputerOperationCompleted
            End If
            Me.InvokeAsync("DeRegisterOSIMComputer", New Object() {sessionId, osimTargetMACAddress}, Me.DeRegisterOSIMComputerOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeRegisterOSIMComputerOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeRegisterOSIMComputerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeRegisterOSIMComputerCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeRegisterOSIMComputerByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetLabel As String)
            Me.Invoke("DeRegisterOSIMComputerByName", New Object() {sessionId, osimTargetLabel})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeRegisterOSIMComputerByNameAsync(ByVal sessionId As String, ByVal osimTargetLabel As String)
            Me.DeRegisterOSIMComputerByNameAsync(sessionId, osimTargetLabel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeRegisterOSIMComputerByNameAsync(ByVal sessionId As String, ByVal osimTargetLabel As String, ByVal userState As Object)
            If (Me.DeRegisterOSIMComputerByNameOperationCompleted Is Nothing) Then
                Me.DeRegisterOSIMComputerByNameOperationCompleted = AddressOf Me.OnDeRegisterOSIMComputerByNameOperationCompleted
            End If
            Me.InvokeAsync("DeRegisterOSIMComputerByName", New Object() {sessionId, osimTargetLabel}, Me.DeRegisterOSIMComputerByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeRegisterOSIMComputerByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeRegisterOSIMComputerByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeRegisterOSIMComputerByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetOSIMComputerMACAddressByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetLabel As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal MACAddress As String)
            Me.Invoke("SetOSIMComputerMACAddressByName", New Object() {sessionId, osimTargetLabel, MACAddress})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetOSIMComputerMACAddressByNameAsync(ByVal sessionId As String, ByVal osimTargetLabel As String, ByVal MACAddress As String)
            Me.SetOSIMComputerMACAddressByNameAsync(sessionId, osimTargetLabel, MACAddress, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetOSIMComputerMACAddressByNameAsync(ByVal sessionId As String, ByVal osimTargetLabel As String, ByVal MACAddress As String, ByVal userState As Object)
            If (Me.SetOSIMComputerMACAddressByNameOperationCompleted Is Nothing) Then
                Me.SetOSIMComputerMACAddressByNameOperationCompleted = AddressOf Me.OnSetOSIMComputerMACAddressByNameOperationCompleted
            End If
            Me.InvokeAsync("SetOSIMComputerMACAddressByName", New Object() {sessionId, osimTargetLabel, MACAddress}, Me.SetOSIMComputerMACAddressByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetOSIMComputerMACAddressByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetOSIMComputerMACAddressByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetOSIMComputerMACAddressByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOSInstallationParameters(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetMACAddress As String) As <System.Xml.Serialization.XmlArrayAttribute("osimTargtParameters", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("osimIRArray", IsNullable:=false)> ArrayOfOSIMIRParametersWithDesc()
            Dim results() As Object = Me.Invoke("GetOSInstallationParameters", New Object() {sessionId, osimTargetMACAddress})
            Return CType(results(0),ArrayOfOSIMIRParametersWithDesc())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOSInstallationParametersAsync(ByVal sessionId As String, ByVal osimTargetMACAddress As String)
            Me.GetOSInstallationParametersAsync(sessionId, osimTargetMACAddress, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOSInstallationParametersAsync(ByVal sessionId As String, ByVal osimTargetMACAddress As String, ByVal userState As Object)
            If (Me.GetOSInstallationParametersOperationCompleted Is Nothing) Then
                Me.GetOSInstallationParametersOperationCompleted = AddressOf Me.OnGetOSInstallationParametersOperationCompleted
            End If
            Me.InvokeAsync("GetOSInstallationParameters", New Object() {sessionId, osimTargetMACAddress}, Me.GetOSInstallationParametersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOSInstallationParametersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOSInstallationParametersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOSInstallationParametersCompleted(Me, New GetOSInstallationParametersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOSInstallationParametersByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetLabel As String) As <System.Xml.Serialization.XmlArrayAttribute("osimTargtParameters", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("osimIRArray", IsNullable:=false)> ArrayOfOSIMIRParametersWithDesc()
            Dim results() As Object = Me.Invoke("GetOSInstallationParametersByName", New Object() {sessionId, osimTargetLabel})
            Return CType(results(0),ArrayOfOSIMIRParametersWithDesc())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOSInstallationParametersByNameAsync(ByVal sessionId As String, ByVal osimTargetLabel As String)
            Me.GetOSInstallationParametersByNameAsync(sessionId, osimTargetLabel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOSInstallationParametersByNameAsync(ByVal sessionId As String, ByVal osimTargetLabel As String, ByVal userState As Object)
            If (Me.GetOSInstallationParametersByNameOperationCompleted Is Nothing) Then
                Me.GetOSInstallationParametersByNameOperationCompleted = AddressOf Me.OnGetOSInstallationParametersByNameOperationCompleted
            End If
            Me.InvokeAsync("GetOSInstallationParametersByName", New Object() {sessionId, osimTargetLabel}, Me.GetOSInstallationParametersByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOSInstallationParametersByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOSInstallationParametersByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOSInstallationParametersByNameCompleted(Me, New GetOSInstallationParametersByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetBootImagesListResponse", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBootImageList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal isBootServerSupplied As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal bootservername As String) As <System.Xml.Serialization.XmlArrayAttribute("osimImageProps", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("osimPropertiesArray", IsNullable:=false), System.Xml.Serialization.XmlArrayItemAttribute("osimProperties", IsNullable:=false, NestingLevel:=1)> OSIMProperties()()
            Dim results() As Object = Me.Invoke("GetBootImageList", New Object() {sessionId, isBootServerSupplied, bootservername})
            Return CType(results(0),OSIMProperties()())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBootImageListAsync(ByVal sessionId As String, ByVal isBootServerSupplied As Boolean, ByVal bootservername As String)
            Me.GetBootImageListAsync(sessionId, isBootServerSupplied, bootservername, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBootImageListAsync(ByVal sessionId As String, ByVal isBootServerSupplied As Boolean, ByVal bootservername As String, ByVal userState As Object)
            If (Me.GetBootImageListOperationCompleted Is Nothing) Then
                Me.GetBootImageListOperationCompleted = AddressOf Me.OnGetBootImageListOperationCompleted
            End If
            Me.InvokeAsync("GetBootImageList", New Object() {sessionId, isBootServerSupplied, bootservername}, Me.GetBootImageListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBootImageListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBootImageListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBootImageListCompleted(Me, New GetBootImageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub AssignOSIMTargetsToBootServer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal bootServer As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal osimTargetMACAddress() As String)
            Me.Invoke("AssignOSIMTargetsToBootServer", New Object() {sessionId, bootServer, osimTargetMACAddress})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AssignOSIMTargetsToBootServerAsync(ByVal sessionId As String, ByVal bootServer As String, ByVal osimTargetMACAddress() As String)
            Me.AssignOSIMTargetsToBootServerAsync(sessionId, bootServer, osimTargetMACAddress, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AssignOSIMTargetsToBootServerAsync(ByVal sessionId As String, ByVal bootServer As String, ByVal osimTargetMACAddress() As String, ByVal userState As Object)
            If (Me.AssignOSIMTargetsToBootServerOperationCompleted Is Nothing) Then
                Me.AssignOSIMTargetsToBootServerOperationCompleted = AddressOf Me.OnAssignOSIMTargetsToBootServerOperationCompleted
            End If
            Me.InvokeAsync("AssignOSIMTargetsToBootServer", New Object() {sessionId, bootServer, osimTargetMACAddress}, Me.AssignOSIMTargetsToBootServerOperationCompleted, userState)
        End Sub
        
        Private Sub OnAssignOSIMTargetsToBootServerOperationCompleted(ByVal arg As Object)
            If (Not (Me.AssignOSIMTargetsToBootServerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AssignOSIMTargetsToBootServerCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub AssignOSIMTargetsToBootServerByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal bootServer As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal osimTargetLabel() As String)
            Me.Invoke("AssignOSIMTargetsToBootServerByName", New Object() {sessionId, bootServer, osimTargetLabel})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AssignOSIMTargetsToBootServerByNameAsync(ByVal sessionId As String, ByVal bootServer As String, ByVal osimTargetLabel() As String)
            Me.AssignOSIMTargetsToBootServerByNameAsync(sessionId, bootServer, osimTargetLabel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AssignOSIMTargetsToBootServerByNameAsync(ByVal sessionId As String, ByVal bootServer As String, ByVal osimTargetLabel() As String, ByVal userState As Object)
            If (Me.AssignOSIMTargetsToBootServerByNameOperationCompleted Is Nothing) Then
                Me.AssignOSIMTargetsToBootServerByNameOperationCompleted = AddressOf Me.OnAssignOSIMTargetsToBootServerByNameOperationCompleted
            End If
            Me.InvokeAsync("AssignOSIMTargetsToBootServerByName", New Object() {sessionId, bootServer, osimTargetLabel}, Me.AssignOSIMTargetsToBootServerByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnAssignOSIMTargetsToBootServerByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.AssignOSIMTargetsToBootServerByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AssignOSIMTargetsToBootServerByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenScalabilityServerList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal ssPropertiesRequired As ScalabilityServerPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfServers As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfServersSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenScalabilityServerList", New Object() {sessionId, ssPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfServers = CType(results(2),System.Nullable(Of Long))
            totalNoOfServersSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenScalabilityServerListAsync(ByVal sessionId As String, ByVal ssPropertiesRequired As ScalabilityServerPropertiesRequired)
            Me.OpenScalabilityServerListAsync(sessionId, ssPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenScalabilityServerListAsync(ByVal sessionId As String, ByVal ssPropertiesRequired As ScalabilityServerPropertiesRequired, ByVal userState As Object)
            If (Me.OpenScalabilityServerListOperationCompleted Is Nothing) Then
                Me.OpenScalabilityServerListOperationCompleted = AddressOf Me.OnOpenScalabilityServerListOperationCompleted
            End If
            Me.InvokeAsync("OpenScalabilityServerList", New Object() {sessionId, ssPropertiesRequired}, Me.OpenScalabilityServerListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenScalabilityServerListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenScalabilityServerListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenScalabilityServerListCompleted(Me, New OpenScalabilityServerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetScalabilityServers(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfServers As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetServerReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("props", IsNullable:=false)> ScalabilityServerProperties()
            Dim results() As Object = Me.Invoke("GetScalabilityServers", New Object() {sessionId, listHandle, noOfServers})
            Return CType(results(0),ScalabilityServerProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetScalabilityServersAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfServers As Long)
            Me.GetScalabilityServersAsync(sessionId, listHandle, noOfServers, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetScalabilityServersAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfServers As Long, ByVal userState As Object)
            If (Me.GetScalabilityServersOperationCompleted Is Nothing) Then
                Me.GetScalabilityServersOperationCompleted = AddressOf Me.OnGetScalabilityServersOperationCompleted
            End If
            Me.InvokeAsync("GetScalabilityServers", New Object() {sessionId, listHandle, noOfServers}, Me.GetScalabilityServersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetScalabilityServersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetScalabilityServersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetScalabilityServersCompleted(Me, New GetScalabilityServersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseScalabilityServerList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseScalabilityServerList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseScalabilityServerListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseScalabilityServerListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseScalabilityServerListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseScalabilityServerListOperationCompleted Is Nothing) Then
                Me.CloseScalabilityServerListOperationCompleted = AddressOf Me.OnCloseScalabilityServerListOperationCompleted
            End If
            Me.InvokeAsync("CloseScalabilityServerList", New Object() {sessionId, listHandle}, Me.CloseScalabilityServerListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseScalabilityServerListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseScalabilityServerListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseScalabilityServerListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SearchComputerProperty(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal propertyValue As String, ByVal propType As PROPERTYTYPE)
            Me.Invoke("SearchComputerProperty", New Object() {sessionId, propertyValue, propType})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SearchComputerPropertyAsync(ByVal sessionId As String, ByVal propertyValue As String, ByVal propType As PROPERTYTYPE)
            Me.SearchComputerPropertyAsync(sessionId, propertyValue, propType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SearchComputerPropertyAsync(ByVal sessionId As String, ByVal propertyValue As String, ByVal propType As PROPERTYTYPE, ByVal userState As Object)
            If (Me.SearchComputerPropertyOperationCompleted Is Nothing) Then
                Me.SearchComputerPropertyOperationCompleted = AddressOf Me.OnSearchComputerPropertyOperationCompleted
            End If
            Me.InvokeAsync("SearchComputerProperty", New Object() {sessionId, propertyValue, propType}, Me.SearchComputerPropertyOperationCompleted, userState)
        End Sub
        
        Private Sub OnSearchComputerPropertyOperationCompleted(ByVal arg As Object)
            If (Not (Me.SearchComputerPropertyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SearchComputerPropertyCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOSImageParameters(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osImage As String) As <System.Xml.Serialization.XmlArrayAttribute("osImageParams", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("osimProperties", IsNullable:=false)> OSIMPropertiesWithDesc()
            Dim results() As Object = Me.Invoke("GetOSImageParameters", New Object() {sessionId, osImage})
            Return CType(results(0),OSIMPropertiesWithDesc())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOSImageParametersAsync(ByVal sessionId As String, ByVal osImage As String)
            Me.GetOSImageParametersAsync(sessionId, osImage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOSImageParametersAsync(ByVal sessionId As String, ByVal osImage As String, ByVal userState As Object)
            If (Me.GetOSImageParametersOperationCompleted Is Nothing) Then
                Me.GetOSImageParametersOperationCompleted = AddressOf Me.OnGetOSImageParametersOperationCompleted
            End If
            Me.InvokeAsync("GetOSImageParameters", New Object() {sessionId, osImage}, Me.GetOSImageParametersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOSImageParametersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOSImageParametersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOSImageParametersCompleted(Me, New GetOSImageParametersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBootServerList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String) As <System.Xml.Serialization.XmlArrayAttribute("bootServerProps", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("osimPropertiesArray", IsNullable:=false), System.Xml.Serialization.XmlArrayItemAttribute("osimProperties", IsNullable:=false, NestingLevel:=1)> OSIMProperties()()
            Dim results() As Object = Me.Invoke("GetBootServerList", New Object() {sessionId})
            Return CType(results(0),OSIMProperties()())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBootServerListAsync(ByVal sessionId As String)
            Me.GetBootServerListAsync(sessionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBootServerListAsync(ByVal sessionId As String, ByVal userState As Object)
            If (Me.GetBootServerListOperationCompleted Is Nothing) Then
                Me.GetBootServerListOperationCompleted = AddressOf Me.OnGetBootServerListOperationCompleted
            End If
            Me.InvokeAsync("GetBootServerList", New Object() {sessionId}, Me.GetBootServerListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBootServerListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBootServerListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBootServerListCompleted(Me, New GetBootServerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeRegisterBootImage(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal bootImage As String)
            Me.Invoke("DeRegisterBootImage", New Object() {sessionId, bootImage})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeRegisterBootImageAsync(ByVal sessionId As String, ByVal bootImage As String)
            Me.DeRegisterBootImageAsync(sessionId, bootImage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeRegisterBootImageAsync(ByVal sessionId As String, ByVal bootImage As String, ByVal userState As Object)
            If (Me.DeRegisterBootImageOperationCompleted Is Nothing) Then
                Me.DeRegisterBootImageOperationCompleted = AddressOf Me.OnDeRegisterBootImageOperationCompleted
            End If
            Me.InvokeAsync("DeRegisterBootImage", New Object() {sessionId, bootImage}, Me.DeRegisterBootImageOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeRegisterBootImageOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeRegisterBootImageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeRegisterBootImageCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeRegisterOSImage(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osImage As String)
            Me.Invoke("DeRegisterOSImage", New Object() {sessionId, osImage})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeRegisterOSImageAsync(ByVal sessionId As String, ByVal osImage As String)
            Me.DeRegisterOSImageAsync(sessionId, osImage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeRegisterOSImageAsync(ByVal sessionId As String, ByVal osImage As String, ByVal userState As Object)
            If (Me.DeRegisterOSImageOperationCompleted Is Nothing) Then
                Me.DeRegisterOSImageOperationCompleted = AddressOf Me.OnDeRegisterOSImageOperationCompleted
            End If
            Me.InvokeAsync("DeRegisterOSImage", New Object() {sessionId, osImage}, Me.DeRegisterOSImageOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeRegisterOSImageOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeRegisterOSImageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeRegisterOSImageCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub AssignOSImageToOSIMTargets(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osImage As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal osimTargetNames() As String)
            Me.Invoke("AssignOSImageToOSIMTargets", New Object() {sessionId, osImage, osimTargetNames})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AssignOSImageToOSIMTargetsAsync(ByVal sessionId As String, ByVal osImage As String, ByVal osimTargetNames() As String)
            Me.AssignOSImageToOSIMTargetsAsync(sessionId, osImage, osimTargetNames, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AssignOSImageToOSIMTargetsAsync(ByVal sessionId As String, ByVal osImage As String, ByVal osimTargetNames() As String, ByVal userState As Object)
            If (Me.AssignOSImageToOSIMTargetsOperationCompleted Is Nothing) Then
                Me.AssignOSImageToOSIMTargetsOperationCompleted = AddressOf Me.OnAssignOSImageToOSIMTargetsOperationCompleted
            End If
            Me.InvokeAsync("AssignOSImageToOSIMTargets", New Object() {sessionId, osImage, osimTargetNames}, Me.AssignOSImageToOSIMTargetsOperationCompleted, userState)
        End Sub
        
        Private Sub OnAssignOSImageToOSIMTargetsOperationCompleted(ByVal arg As Object)
            If (Not (Me.AssignOSImageToOSIMTargetsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AssignOSImageToOSIMTargetsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBootImageDeployedBootServers(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal bootImage As String) As <System.Xml.Serialization.XmlArrayAttribute("bootServerProps", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("osimPropertiesArray", IsNullable:=false), System.Xml.Serialization.XmlArrayItemAttribute("osimProperties", IsNullable:=false, NestingLevel:=1)> OSIMProperties()()
            Dim results() As Object = Me.Invoke("GetBootImageDeployedBootServers", New Object() {sessionId, bootImage})
            Return CType(results(0),OSIMProperties()())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBootImageDeployedBootServersAsync(ByVal sessionId As String, ByVal bootImage As String)
            Me.GetBootImageDeployedBootServersAsync(sessionId, bootImage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBootImageDeployedBootServersAsync(ByVal sessionId As String, ByVal bootImage As String, ByVal userState As Object)
            If (Me.GetBootImageDeployedBootServersOperationCompleted Is Nothing) Then
                Me.GetBootImageDeployedBootServersOperationCompleted = AddressOf Me.OnGetBootImageDeployedBootServersOperationCompleted
            End If
            Me.InvokeAsync("GetBootImageDeployedBootServers", New Object() {sessionId, bootImage}, Me.GetBootImageDeployedBootServersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBootImageDeployedBootServersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBootImageDeployedBootServersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBootImageDeployedBootServersCompleted(Me, New GetBootImageDeployedBootServersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOSImageDeployedBootServers(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osImage As String) As <System.Xml.Serialization.XmlArrayAttribute("bootServerProps", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("osimPropertiesArray", IsNullable:=false), System.Xml.Serialization.XmlArrayItemAttribute("osimProperties", IsNullable:=false, NestingLevel:=1)> OSIMProperties()()
            Dim results() As Object = Me.Invoke("GetOSImageDeployedBootServers", New Object() {sessionId, osImage})
            Return CType(results(0),OSIMProperties()())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOSImageDeployedBootServersAsync(ByVal sessionId As String, ByVal osImage As String)
            Me.GetOSImageDeployedBootServersAsync(sessionId, osImage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOSImageDeployedBootServersAsync(ByVal sessionId As String, ByVal osImage As String, ByVal userState As Object)
            If (Me.GetOSImageDeployedBootServersOperationCompleted Is Nothing) Then
                Me.GetOSImageDeployedBootServersOperationCompleted = AddressOf Me.OnGetOSImageDeployedBootServersOperationCompleted
            End If
            Me.InvokeAsync("GetOSImageDeployedBootServers", New Object() {sessionId, osImage}, Me.GetOSImageDeployedBootServersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOSImageDeployedBootServersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOSImageDeployedBootServersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOSImageDeployedBootServersCompleted(Me, New GetOSImageDeployedBootServersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenOSImageList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal isBootServerSupplied As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal bootServerName As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("osImageFilterArray", IsNullable:=false)> ByVal filter() As OSImageFilter, ByVal matchAll As Boolean, ByVal sortProperty As OSIMAGEPROPERTY, ByVal ascending As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfImages As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfImagesSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenOSImageList", New Object() {sessionId, isBootServerSupplied, bootServerName, filter, matchAll, sortProperty, ascending})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfImages = CType(results(2),System.Nullable(Of Long))
            totalNoOfImagesSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenOSImageListAsync(ByVal sessionId As String, ByVal isBootServerSupplied As Boolean, ByVal bootServerName As String, ByVal filter() As OSImageFilter, ByVal matchAll As Boolean, ByVal sortProperty As OSIMAGEPROPERTY, ByVal ascending As Boolean)
            Me.OpenOSImageListAsync(sessionId, isBootServerSupplied, bootServerName, filter, matchAll, sortProperty, ascending, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenOSImageListAsync(ByVal sessionId As String, ByVal isBootServerSupplied As Boolean, ByVal bootServerName As String, ByVal filter() As OSImageFilter, ByVal matchAll As Boolean, ByVal sortProperty As OSIMAGEPROPERTY, ByVal ascending As Boolean, ByVal userState As Object)
            If (Me.OpenOSImageListOperationCompleted Is Nothing) Then
                Me.OpenOSImageListOperationCompleted = AddressOf Me.OnOpenOSImageListOperationCompleted
            End If
            Me.InvokeAsync("OpenOSImageList", New Object() {sessionId, isBootServerSupplied, bootServerName, filter, matchAll, sortProperty, ascending}, Me.OpenOSImageListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenOSImageListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenOSImageListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenOSImageListCompleted(Me, New OpenOSImageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOSImages(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfImages As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfImages", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("props", IsNullable:=false)> OSImageProperties()
            Dim results() As Object = Me.Invoke("GetOSImages", New Object() {sessionId, listHandle, noOfImages})
            Return CType(results(0),OSImageProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOSImagesAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfImages As Long)
            Me.GetOSImagesAsync(sessionId, listHandle, noOfImages, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOSImagesAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfImages As Long, ByVal userState As Object)
            If (Me.GetOSImagesOperationCompleted Is Nothing) Then
                Me.GetOSImagesOperationCompleted = AddressOf Me.OnGetOSImagesOperationCompleted
            End If
            Me.InvokeAsync("GetOSImages", New Object() {sessionId, listHandle, noOfImages}, Me.GetOSImagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOSImagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOSImagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOSImagesCompleted(Me, New GetOSImagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseOSImageList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseOSImageList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseOSImageListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseOSImageListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseOSImageListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseOSImageListOperationCompleted Is Nothing) Then
                Me.CloseOSImageListOperationCompleted = AddressOf Me.OnCloseOSImageListOperationCompleted
            End If
            Me.InvokeAsync("CloseOSImageList", New Object() {sessionId, listHandle}, Me.CloseOSImageListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseOSImageListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseOSImageListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseOSImageListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenOSIMTargetList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal isBootServerSupplied As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal bootServerName As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("osimTargetFilterArray", IsNullable:=false)> ByVal filter() As OSIMTargetFilter, ByVal matchAll As Boolean, ByVal sortProperty As OSIMTARGETPROPERTY, ByVal ascending As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfOSIMTargets As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfOSIMTargetsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenOSIMTargetList", New Object() {sessionId, isBootServerSupplied, bootServerName, filter, matchAll, sortProperty, ascending})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfOSIMTargets = CType(results(2),System.Nullable(Of Long))
            totalNoOfOSIMTargetsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenOSIMTargetListAsync(ByVal sessionId As String, ByVal isBootServerSupplied As Boolean, ByVal bootServerName As String, ByVal filter() As OSIMTargetFilter, ByVal matchAll As Boolean, ByVal sortProperty As OSIMTARGETPROPERTY, ByVal ascending As Boolean)
            Me.OpenOSIMTargetListAsync(sessionId, isBootServerSupplied, bootServerName, filter, matchAll, sortProperty, ascending, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenOSIMTargetListAsync(ByVal sessionId As String, ByVal isBootServerSupplied As Boolean, ByVal bootServerName As String, ByVal filter() As OSIMTargetFilter, ByVal matchAll As Boolean, ByVal sortProperty As OSIMTARGETPROPERTY, ByVal ascending As Boolean, ByVal userState As Object)
            If (Me.OpenOSIMTargetListOperationCompleted Is Nothing) Then
                Me.OpenOSIMTargetListOperationCompleted = AddressOf Me.OnOpenOSIMTargetListOperationCompleted
            End If
            Me.InvokeAsync("OpenOSIMTargetList", New Object() {sessionId, isBootServerSupplied, bootServerName, filter, matchAll, sortProperty, ascending}, Me.OpenOSIMTargetListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenOSIMTargetListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenOSIMTargetListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenOSIMTargetListCompleted(Me, New OpenOSIMTargetListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOSIMTargets(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfOSIMTargets As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfOSIMTargets", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("props", IsNullable:=false)> OSIMTargetProperties()
            Dim results() As Object = Me.Invoke("GetOSIMTargets", New Object() {sessionId, listHandle, noOfOSIMTargets})
            Return CType(results(0),OSIMTargetProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOSIMTargetsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfOSIMTargets As Long)
            Me.GetOSIMTargetsAsync(sessionId, listHandle, noOfOSIMTargets, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOSIMTargetsAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfOSIMTargets As Long, ByVal userState As Object)
            If (Me.GetOSIMTargetsOperationCompleted Is Nothing) Then
                Me.GetOSIMTargetsOperationCompleted = AddressOf Me.OnGetOSIMTargetsOperationCompleted
            End If
            Me.InvokeAsync("GetOSIMTargets", New Object() {sessionId, listHandle, noOfOSIMTargets}, Me.GetOSIMTargetsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOSIMTargetsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOSIMTargetsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOSIMTargetsCompleted(Me, New GetOSIMTargetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseOSIMTargetList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long)
            Me.Invoke("CloseOSIMTargetList", New Object() {sessionId, listHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseOSIMTargetListAsync(ByVal sessionId As String, ByVal listHandle As Long)
            Me.CloseOSIMTargetListAsync(sessionId, listHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseOSIMTargetListAsync(ByVal sessionId As String, ByVal listHandle As Long, ByVal userState As Object)
            If (Me.CloseOSIMTargetListOperationCompleted Is Nothing) Then
                Me.CloseOSIMTargetListOperationCompleted = AddressOf Me.OnCloseOSIMTargetListOperationCompleted
            End If
            Me.InvokeAsync("CloseOSIMTargetList", New Object() {sessionId, listHandle}, Me.CloseOSIMTargetListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseOSIMTargetListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseOSIMTargetListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseOSIMTargetListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenUnitGroupComputerMembersList2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("computerPropertyFilterArray", IsNullable:=false)> ByVal computerPropertyFilters() As ComputerPropertyFilter2, ByVal matchAll As Boolean, ByVal sortProperty As ComputerProperty2, ByVal ascending As Boolean, ByVal computerPropertiesRequired As ComputerPropertiesRequired2, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfComputers As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfComputersSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenUnitGroupComputerMembersList2", New Object() {sessionId, unitGroupId, computerPropertyFilters, matchAll, sortProperty, ascending, computerPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfComputers = CType(results(2),System.Nullable(Of Long))
            totalNoOfComputersSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitGroupComputerMembersList2Async(ByVal sessionId As String, ByVal unitGroupId As String, ByVal computerPropertyFilters() As ComputerPropertyFilter2, ByVal matchAll As Boolean, ByVal sortProperty As ComputerProperty2, ByVal ascending As Boolean, ByVal computerPropertiesRequired As ComputerPropertiesRequired2)
            Me.OpenUnitGroupComputerMembersList2Async(sessionId, unitGroupId, computerPropertyFilters, matchAll, sortProperty, ascending, computerPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenUnitGroupComputerMembersList2Async(ByVal sessionId As String, ByVal unitGroupId As String, ByVal computerPropertyFilters() As ComputerPropertyFilter2, ByVal matchAll As Boolean, ByVal sortProperty As ComputerProperty2, ByVal ascending As Boolean, ByVal computerPropertiesRequired As ComputerPropertiesRequired2, ByVal userState As Object)
            If (Me.OpenUnitGroupComputerMembersList2OperationCompleted Is Nothing) Then
                Me.OpenUnitGroupComputerMembersList2OperationCompleted = AddressOf Me.OnOpenUnitGroupComputerMembersList2OperationCompleted
            End If
            Me.InvokeAsync("OpenUnitGroupComputerMembersList2", New Object() {sessionId, unitGroupId, computerPropertyFilters, matchAll, sortProperty, ascending, computerPropertiesRequired}, Me.OpenUnitGroupComputerMembersList2OperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenUnitGroupComputerMembersList2OperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenUnitGroupComputerMembersList2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenUnitGroupComputerMembersList2Completed(Me, New OpenUnitGroupComputerMembersList2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitGroupComputerMembers2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfComputers As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetUnitGroupComputerMembersReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("computerPropertiesArray", IsNullable:=false)> ComputerProperties2()
            Dim results() As Object = Me.Invoke("GetUnitGroupComputerMembers2", New Object() {sessionId, listHandle, noOfComputers})
            Return CType(results(0),ComputerProperties2())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitGroupComputerMembers2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfComputers As Long)
            Me.GetUnitGroupComputerMembers2Async(sessionId, listHandle, noOfComputers, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitGroupComputerMembers2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfComputers As Long, ByVal userState As Object)
            If (Me.GetUnitGroupComputerMembers2OperationCompleted Is Nothing) Then
                Me.GetUnitGroupComputerMembers2OperationCompleted = AddressOf Me.OnGetUnitGroupComputerMembers2OperationCompleted
            End If
            Me.InvokeAsync("GetUnitGroupComputerMembers2", New Object() {sessionId, listHandle, noOfComputers}, Me.GetUnitGroupComputerMembers2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitGroupComputerMembers2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitGroupComputerMembers2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitGroupComputerMembers2Completed(Me, New GetUnitGroupComputerMembers2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOSIMTarget(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetMACAddress As String) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfOSIMTargetProperties", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("osimProperties", IsNullable:=false)> OSIMProperties()
            Dim results() As Object = Me.Invoke("GetOSIMTarget", New Object() {sessionId, osimTargetMACAddress})
            Return CType(results(0),OSIMProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOSIMTargetAsync(ByVal sessionId As String, ByVal osimTargetMACAddress As String)
            Me.GetOSIMTargetAsync(sessionId, osimTargetMACAddress, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOSIMTargetAsync(ByVal sessionId As String, ByVal osimTargetMACAddress As String, ByVal userState As Object)
            If (Me.GetOSIMTargetOperationCompleted Is Nothing) Then
                Me.GetOSIMTargetOperationCompleted = AddressOf Me.OnGetOSIMTargetOperationCompleted
            End If
            Me.InvokeAsync("GetOSIMTarget", New Object() {sessionId, osimTargetMACAddress}, Me.GetOSIMTargetOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOSIMTargetOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOSIMTargetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOSIMTargetCompleted(Me, New GetOSIMTargetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOSIMTargetByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetLabel As String) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfOSIMTargetProperties", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("osimProperties", IsNullable:=false)> OSIMProperties()
            Dim results() As Object = Me.Invoke("GetOSIMTargetByName", New Object() {sessionId, osimTargetLabel})
            Return CType(results(0),OSIMProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOSIMTargetByNameAsync(ByVal sessionId As String, ByVal osimTargetLabel As String)
            Me.GetOSIMTargetByNameAsync(sessionId, osimTargetLabel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOSIMTargetByNameAsync(ByVal sessionId As String, ByVal osimTargetLabel As String, ByVal userState As Object)
            If (Me.GetOSIMTargetByNameOperationCompleted Is Nothing) Then
                Me.GetOSIMTargetByNameOperationCompleted = AddressOf Me.OnGetOSIMTargetByNameOperationCompleted
            End If
            Me.InvokeAsync("GetOSIMTargetByName", New Object() {sessionId, osimTargetLabel}, Me.GetOSIMTargetByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOSIMTargetByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOSIMTargetByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOSIMTargetByNameCompleted(Me, New GetOSIMTargetByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetImageFlagDescription(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal imageFlag As String) As <System.Xml.Serialization.XmlElementAttribute("imageFlagDescription", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("GetImageFlagDescription", New Object() {sessionId, imageFlag})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetImageFlagDescriptionAsync(ByVal sessionId As String, ByVal imageFlag As String)
            Me.GetImageFlagDescriptionAsync(sessionId, imageFlag, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetImageFlagDescriptionAsync(ByVal sessionId As String, ByVal imageFlag As String, ByVal userState As Object)
            If (Me.GetImageFlagDescriptionOperationCompleted Is Nothing) Then
                Me.GetImageFlagDescriptionOperationCompleted = AddressOf Me.OnGetImageFlagDescriptionOperationCompleted
            End If
            Me.InvokeAsync("GetImageFlagDescription", New Object() {sessionId, imageFlag}, Me.GetImageFlagDescriptionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetImageFlagDescriptionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetImageFlagDescriptionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetImageFlagDescriptionCompleted(Me, New GetImageFlagDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateAssetScriptJob(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal assetScriptJobProperties As AssetScriptJobProperties, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef assetJobId As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef assetJobIdSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef domainId As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef domainIdSpecified As Boolean) As <System.Xml.Serialization.XmlElementAttribute("assetJobUid", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateAssetScriptJob", New Object() {sessionId, assetScriptJobProperties})
            assetJobId = CType(results(1),System.Nullable(Of Long))
            assetJobIdSpecified = CType(results(2),Boolean)
            domainId = CType(results(3),System.Nullable(Of Long))
            domainIdSpecified = CType(results(4),Boolean)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateAssetScriptJobAsync(ByVal sessionId As String, ByVal assetScriptJobProperties As AssetScriptJobProperties)
            Me.CreateAssetScriptJobAsync(sessionId, assetScriptJobProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateAssetScriptJobAsync(ByVal sessionId As String, ByVal assetScriptJobProperties As AssetScriptJobProperties, ByVal userState As Object)
            If (Me.CreateAssetScriptJobOperationCompleted Is Nothing) Then
                Me.CreateAssetScriptJobOperationCompleted = AddressOf Me.OnCreateAssetScriptJobOperationCompleted
            End If
            Me.InvokeAsync("CreateAssetScriptJob", New Object() {sessionId, assetScriptJobProperties}, Me.CreateAssetScriptJobOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateAssetScriptJobOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateAssetScriptJobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateAssetScriptJobCompleted(Me, New CreateAssetScriptJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub GetAssetScriptJob(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal assetJobUid As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal assetScriptJobPropertiesRequired As AssetScriptJobPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef assetJobId As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef assetJobIdSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef domainId As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef domainIdSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef assetJobProperties As AssetScriptJobProperties)
            Dim results() As Object = Me.Invoke("GetAssetScriptJob", New Object() {sessionId, assetJobUid, assetScriptJobPropertiesRequired})
            assetJobId = CType(results(0),System.Nullable(Of Long))
            assetJobIdSpecified = CType(results(1),Boolean)
            domainId = CType(results(2),System.Nullable(Of Long))
            domainIdSpecified = CType(results(3),Boolean)
            assetJobProperties = CType(results(4),AssetScriptJobProperties)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAssetScriptJobAsync(ByVal sessionId As String, ByVal assetJobUid As String, ByVal assetScriptJobPropertiesRequired As AssetScriptJobPropertiesRequired)
            Me.GetAssetScriptJobAsync(sessionId, assetJobUid, assetScriptJobPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAssetScriptJobAsync(ByVal sessionId As String, ByVal assetJobUid As String, ByVal assetScriptJobPropertiesRequired As AssetScriptJobPropertiesRequired, ByVal userState As Object)
            If (Me.GetAssetScriptJobOperationCompleted Is Nothing) Then
                Me.GetAssetScriptJobOperationCompleted = AddressOf Me.OnGetAssetScriptJobOperationCompleted
            End If
            Me.InvokeAsync("GetAssetScriptJob", New Object() {sessionId, assetJobUid, assetScriptJobPropertiesRequired}, Me.GetAssetScriptJobOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAssetScriptJobOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAssetScriptJobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAssetScriptJobCompleted(Me, New GetAssetScriptJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetAssetScriptJob(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal assetJobUid As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal assetScriptJobProperties As AssetScriptJobProperties)
            Me.Invoke("SetAssetScriptJob", New Object() {sessionId, assetJobUid, assetScriptJobProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetAssetScriptJobAsync(ByVal sessionId As String, ByVal assetJobUid As String, ByVal assetScriptJobProperties As AssetScriptJobProperties)
            Me.SetAssetScriptJobAsync(sessionId, assetJobUid, assetScriptJobProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetAssetScriptJobAsync(ByVal sessionId As String, ByVal assetJobUid As String, ByVal assetScriptJobProperties As AssetScriptJobProperties, ByVal userState As Object)
            If (Me.SetAssetScriptJobOperationCompleted Is Nothing) Then
                Me.SetAssetScriptJobOperationCompleted = AddressOf Me.OnSetAssetScriptJobOperationCompleted
            End If
            Me.InvokeAsync("SetAssetScriptJob", New Object() {sessionId, assetJobUid, assetScriptJobProperties}, Me.SetAssetScriptJobOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetAssetScriptJobOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetAssetScriptJobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetAssetScriptJobCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteAssetJobs(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal assetJobUids() As String)
            Me.Invoke("DeleteAssetJobs", New Object() {sessionId, assetJobUids})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteAssetJobsAsync(ByVal sessionId As String, ByVal assetJobUids() As String)
            Me.DeleteAssetJobsAsync(sessionId, assetJobUids, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteAssetJobsAsync(ByVal sessionId As String, ByVal assetJobUids() As String, ByVal userState As Object)
            If (Me.DeleteAssetJobsOperationCompleted Is Nothing) Then
                Me.DeleteAssetJobsOperationCompleted = AddressOf Me.OnDeleteAssetJobsOperationCompleted
            End If
            Me.InvokeAsync("DeleteAssetJobs", New Object() {sessionId, assetJobUids}, Me.DeleteAssetJobsOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteAssetJobsOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteAssetJobsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteAssetJobsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub OpenAssetScriptJobList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal assetScriptJobPropertiesRequired As AssetScriptJobPropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef OpenListHandle As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef OpenListHandleSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef totalNoOfAssetJobs As System.Nullable(Of Long), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef totalNoOfAssetJobsSpecified As Boolean)
            Dim results() As Object = Me.Invoke("OpenAssetScriptJobList", New Object() {sessionId, assetScriptJobPropertiesRequired})
            OpenListHandle = CType(results(0),System.Nullable(Of Long))
            OpenListHandleSpecified = CType(results(1),Boolean)
            totalNoOfAssetJobs = CType(results(2),System.Nullable(Of Long))
            totalNoOfAssetJobsSpecified = CType(results(3),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenAssetScriptJobListAsync(ByVal sessionId As String, ByVal assetScriptJobPropertiesRequired As AssetScriptJobPropertiesRequired)
            Me.OpenAssetScriptJobListAsync(sessionId, assetScriptJobPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenAssetScriptJobListAsync(ByVal sessionId As String, ByVal assetScriptJobPropertiesRequired As AssetScriptJobPropertiesRequired, ByVal userState As Object)
            If (Me.OpenAssetScriptJobListOperationCompleted Is Nothing) Then
                Me.OpenAssetScriptJobListOperationCompleted = AddressOf Me.OnOpenAssetScriptJobListOperationCompleted
            End If
            Me.InvokeAsync("OpenAssetScriptJobList", New Object() {sessionId, assetScriptJobPropertiesRequired}, Me.OpenAssetScriptJobListOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenAssetScriptJobListOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenAssetScriptJobListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenAssetScriptJobListCompleted(Me, New OpenAssetScriptJobListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAssetScriptJobs(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal openListHandle As Long, ByVal noOfJobs As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfAssetScriptJobsProperties", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("getAssetScriptJobsPropertiesArray", IsNullable:=false)> GetAssetScriptJobsProperties()
            Dim results() As Object = Me.Invoke("GetAssetScriptJobs", New Object() {sessionId, openListHandle, noOfJobs})
            Return CType(results(0),GetAssetScriptJobsProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAssetScriptJobsAsync(ByVal sessionId As String, ByVal openListHandle As Long, ByVal noOfJobs As Long)
            Me.GetAssetScriptJobsAsync(sessionId, openListHandle, noOfJobs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAssetScriptJobsAsync(ByVal sessionId As String, ByVal openListHandle As Long, ByVal noOfJobs As Long, ByVal userState As Object)
            If (Me.GetAssetScriptJobsOperationCompleted Is Nothing) Then
                Me.GetAssetScriptJobsOperationCompleted = AddressOf Me.OnGetAssetScriptJobsOperationCompleted
            End If
            Me.InvokeAsync("GetAssetScriptJobs", New Object() {sessionId, openListHandle, noOfJobs}, Me.GetAssetScriptJobsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAssetScriptJobsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAssetScriptJobsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAssetScriptJobsCompleted(Me, New GetAssetScriptJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CloseAssetScriptJobList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal openListHandle As Long)
            Me.Invoke("CloseAssetScriptJobList", New Object() {sessionId, openListHandle})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseAssetScriptJobListAsync(ByVal sessionId As String, ByVal openListHandle As Long)
            Me.CloseAssetScriptJobListAsync(sessionId, openListHandle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseAssetScriptJobListAsync(ByVal sessionId As String, ByVal openListHandle As Long, ByVal userState As Object)
            If (Me.CloseAssetScriptJobListOperationCompleted Is Nothing) Then
                Me.CloseAssetScriptJobListOperationCompleted = AddressOf Me.OnCloseAssetScriptJobListOperationCompleted
            End If
            Me.InvokeAsync("CloseAssetScriptJobList", New Object() {sessionId, openListHandle}, Me.CloseAssetScriptJobListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseAssetScriptJobListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseAssetScriptJobListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseAssetScriptJobListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkAssetJobsToUnit(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal unitObjectType As UnitObjectType, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal arrayOfAssetJobIds() As String)
            Me.Invoke("LinkAssetJobsToUnit", New Object() {sessionId, unitObjectType, unitId, arrayOfAssetJobIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkAssetJobsToUnitAsync(ByVal sessionId As String, ByVal unitObjectType As UnitObjectType, ByVal unitId As String, ByVal arrayOfAssetJobIds() As String)
            Me.LinkAssetJobsToUnitAsync(sessionId, unitObjectType, unitId, arrayOfAssetJobIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkAssetJobsToUnitAsync(ByVal sessionId As String, ByVal unitObjectType As UnitObjectType, ByVal unitId As String, ByVal arrayOfAssetJobIds() As String, ByVal userState As Object)
            If (Me.LinkAssetJobsToUnitOperationCompleted Is Nothing) Then
                Me.LinkAssetJobsToUnitOperationCompleted = AddressOf Me.OnLinkAssetJobsToUnitOperationCompleted
            End If
            Me.InvokeAsync("LinkAssetJobsToUnit", New Object() {sessionId, unitObjectType, unitId, arrayOfAssetJobIds}, Me.LinkAssetJobsToUnitOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkAssetJobsToUnitOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkAssetJobsToUnitCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkAssetJobsToUnitCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkAssetJobsToUnitGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal arrayOfAssetJobIds() As String)
            Me.Invoke("LinkAssetJobsToUnitGroup", New Object() {sessionId, unitGroupId, arrayOfAssetJobIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkAssetJobsToUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal arrayOfAssetJobIds() As String)
            Me.LinkAssetJobsToUnitGroupAsync(sessionId, unitGroupId, arrayOfAssetJobIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkAssetJobsToUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal arrayOfAssetJobIds() As String, ByVal userState As Object)
            If (Me.LinkAssetJobsToUnitGroupOperationCompleted Is Nothing) Then
                Me.LinkAssetJobsToUnitGroupOperationCompleted = AddressOf Me.OnLinkAssetJobsToUnitGroupOperationCompleted
            End If
            Me.InvokeAsync("LinkAssetJobsToUnitGroup", New Object() {sessionId, unitGroupId, arrayOfAssetJobIds}, Me.LinkAssetJobsToUnitGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkAssetJobsToUnitGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkAssetJobsToUnitGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkAssetJobsToUnitGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnLinkAssetJobsFromUnit(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal unitObjectType As UnitObjectType, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal arrayOfAssetJobIds() As String)
            Me.Invoke("UnLinkAssetJobsFromUnit", New Object() {sessionId, unitObjectType, unitId, arrayOfAssetJobIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnLinkAssetJobsFromUnitAsync(ByVal sessionId As String, ByVal unitObjectType As UnitObjectType, ByVal unitId As String, ByVal arrayOfAssetJobIds() As String)
            Me.UnLinkAssetJobsFromUnitAsync(sessionId, unitObjectType, unitId, arrayOfAssetJobIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnLinkAssetJobsFromUnitAsync(ByVal sessionId As String, ByVal unitObjectType As UnitObjectType, ByVal unitId As String, ByVal arrayOfAssetJobIds() As String, ByVal userState As Object)
            If (Me.UnLinkAssetJobsFromUnitOperationCompleted Is Nothing) Then
                Me.UnLinkAssetJobsFromUnitOperationCompleted = AddressOf Me.OnUnLinkAssetJobsFromUnitOperationCompleted
            End If
            Me.InvokeAsync("UnLinkAssetJobsFromUnit", New Object() {sessionId, unitObjectType, unitId, arrayOfAssetJobIds}, Me.UnLinkAssetJobsFromUnitOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnLinkAssetJobsFromUnitOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnLinkAssetJobsFromUnitCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnLinkAssetJobsFromUnitCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnLinkAssetJobsFromUnitGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal arrayOfAssetJobIds() As String)
            Me.Invoke("UnLinkAssetJobsFromUnitGroup", New Object() {sessionId, unitGroupId, arrayOfAssetJobIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnLinkAssetJobsFromUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal arrayOfAssetJobIds() As String)
            Me.UnLinkAssetJobsFromUnitGroupAsync(sessionId, unitGroupId, arrayOfAssetJobIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnLinkAssetJobsFromUnitGroupAsync(ByVal sessionId As String, ByVal unitGroupId As String, ByVal arrayOfAssetJobIds() As String, ByVal userState As Object)
            If (Me.UnLinkAssetJobsFromUnitGroupOperationCompleted Is Nothing) Then
                Me.UnLinkAssetJobsFromUnitGroupOperationCompleted = AddressOf Me.OnUnLinkAssetJobsFromUnitGroupOperationCompleted
            End If
            Me.InvokeAsync("UnLinkAssetJobsFromUnitGroup", New Object() {sessionId, unitGroupId, arrayOfAssetJobIds}, Me.UnLinkAssetJobsFromUnitGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnLinkAssetJobsFromUnitGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnLinkAssetJobsFromUnitGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnLinkAssetJobsFromUnitGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ActivateJobCheck(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("triggerInfoArray", IsNullable:=false)> ByVal triggInfoList() As TriggerInfo, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("cmdParamsArray", IsNullable:=false)> ByVal cmdParams() As AMExtraCmdParam)
            Me.Invoke("ActivateJobCheck", New Object() {sessionId, triggInfoList, cmdParams})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActivateJobCheckAsync(ByVal sessionId As String, ByVal triggInfoList() As TriggerInfo, ByVal cmdParams() As AMExtraCmdParam)
            Me.ActivateJobCheckAsync(sessionId, triggInfoList, cmdParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActivateJobCheckAsync(ByVal sessionId As String, ByVal triggInfoList() As TriggerInfo, ByVal cmdParams() As AMExtraCmdParam, ByVal userState As Object)
            If (Me.ActivateJobCheckOperationCompleted Is Nothing) Then
                Me.ActivateJobCheckOperationCompleted = AddressOf Me.OnActivateJobCheckOperationCompleted
            End If
            Me.InvokeAsync("ActivateJobCheck", New Object() {sessionId, triggInfoList, cmdParams}, Me.ActivateJobCheckOperationCompleted, userState)
        End Sub
        
        Private Sub OnActivateJobCheckOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActivateJobCheckCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActivateJobCheckCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOSImages2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal index As Long, ByVal noOfImages As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfImages", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("props", IsNullable:=false)> OSImageProperties()
            Dim results() As Object = Me.Invoke("GetOSImages2", New Object() {sessionId, listHandle, index, noOfImages})
            Return CType(results(0),OSImageProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOSImages2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal index As Long, ByVal noOfImages As Long)
            Me.GetOSImages2Async(sessionId, listHandle, index, noOfImages, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOSImages2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal index As Long, ByVal noOfImages As Long, ByVal userState As Object)
            If (Me.GetOSImages2OperationCompleted Is Nothing) Then
                Me.GetOSImages2OperationCompleted = AddressOf Me.OnGetOSImages2OperationCompleted
            End If
            Me.InvokeAsync("GetOSImages2", New Object() {sessionId, listHandle, index, noOfImages}, Me.GetOSImages2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOSImages2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOSImages2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOSImages2Completed(Me, New GetOSImages2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitGroupComputerMembers3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal index As Long, ByVal noOfComputers As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetUnitGroupComputerMembersReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("computerPropertiesArray", IsNullable:=false)> ComputerProperties2()
            Dim results() As Object = Me.Invoke("GetUnitGroupComputerMembers3", New Object() {sessionId, listHandle, index, noOfComputers})
            Return CType(results(0),ComputerProperties2())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitGroupComputerMembers3Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal index As Long, ByVal noOfComputers As Long)
            Me.GetUnitGroupComputerMembers3Async(sessionId, listHandle, index, noOfComputers, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitGroupComputerMembers3Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal index As Long, ByVal noOfComputers As Long, ByVal userState As Object)
            If (Me.GetUnitGroupComputerMembers3OperationCompleted Is Nothing) Then
                Me.GetUnitGroupComputerMembers3OperationCompleted = AddressOf Me.OnGetUnitGroupComputerMembers3OperationCompleted
            End If
            Me.InvokeAsync("GetUnitGroupComputerMembers3", New Object() {sessionId, listHandle, index, noOfComputers}, Me.GetUnitGroupComputerMembers3OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitGroupComputerMembers3OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitGroupComputerMembers3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitGroupComputerMembers3Completed(Me, New GetUnitGroupComputerMembers3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOSIMTargets2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal index As Long, ByVal noOfOSIMTargets As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfOSIMTargets", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("props", IsNullable:=false)> OSIMTargetProperties()
            Dim results() As Object = Me.Invoke("GetOSIMTargets2", New Object() {sessionId, listHandle, index, noOfOSIMTargets})
            Return CType(results(0),OSIMTargetProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOSIMTargets2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal index As Long, ByVal noOfOSIMTargets As Long)
            Me.GetOSIMTargets2Async(sessionId, listHandle, index, noOfOSIMTargets, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOSIMTargets2Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal index As Long, ByVal noOfOSIMTargets As Long, ByVal userState As Object)
            If (Me.GetOSIMTargets2OperationCompleted Is Nothing) Then
                Me.GetOSIMTargets2OperationCompleted = AddressOf Me.OnGetOSIMTargets2OperationCompleted
            End If
            Me.InvokeAsync("GetOSIMTargets2", New Object() {sessionId, listHandle, index, noOfOSIMTargets}, Me.GetOSIMTargets2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOSIMTargets2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOSIMTargets2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOSIMTargets2Completed(Me, New GetOSIMTargets2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IsServiceDeskIntegrationEnabled(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String) As <System.Xml.Serialization.XmlElementAttribute("isIntegrationEnabled")> Boolean
            Dim results() As Object = Me.Invoke("IsServiceDeskIntegrationEnabled", New Object() {sessionId})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IsServiceDeskIntegrationEnabledAsync(ByVal sessionId As String)
            Me.IsServiceDeskIntegrationEnabledAsync(sessionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IsServiceDeskIntegrationEnabledAsync(ByVal sessionId As String, ByVal userState As Object)
            If (Me.IsServiceDeskIntegrationEnabledOperationCompleted Is Nothing) Then
                Me.IsServiceDeskIntegrationEnabledOperationCompleted = AddressOf Me.OnIsServiceDeskIntegrationEnabledOperationCompleted
            End If
            Me.InvokeAsync("IsServiceDeskIntegrationEnabled", New Object() {sessionId}, Me.IsServiceDeskIntegrationEnabledOperationCompleted, userState)
        End Sub
        
        Private Sub OnIsServiceDeskIntegrationEnabledOperationCompleted(ByVal arg As Object)
            If (Not (Me.IsServiceDeskIntegrationEnabledCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IsServiceDeskIntegrationEnabledCompleted(Me, New IsServiceDeskIntegrationEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetServiceDeskRequestURLForContainer(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobContainerId As String) As <System.Xml.Serialization.XmlElementAttribute("requestURL", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("GetServiceDeskRequestURLForContainer", New Object() {sessionId, softwareJobContainerId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetServiceDeskRequestURLForContainerAsync(ByVal sessionId As String, ByVal softwareJobContainerId As String)
            Me.GetServiceDeskRequestURLForContainerAsync(sessionId, softwareJobContainerId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetServiceDeskRequestURLForContainerAsync(ByVal sessionId As String, ByVal softwareJobContainerId As String, ByVal userState As Object)
            If (Me.GetServiceDeskRequestURLForContainerOperationCompleted Is Nothing) Then
                Me.GetServiceDeskRequestURLForContainerOperationCompleted = AddressOf Me.OnGetServiceDeskRequestURLForContainerOperationCompleted
            End If
            Me.InvokeAsync("GetServiceDeskRequestURLForContainer", New Object() {sessionId, softwareJobContainerId}, Me.GetServiceDeskRequestURLForContainerOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetServiceDeskRequestURLForContainerOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetServiceDeskRequestURLForContainerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetServiceDeskRequestURLForContainerCompleted(Me, New GetServiceDeskRequestURLForContainerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateSoftwareJobContainerResponse4", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSoftwareJobContainer4(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal jobContainer As CreateSoftwareJobContainerProperties4) As <System.Xml.Serialization.XmlElementAttribute("softwareJobContainerId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSoftwareJobContainer4", New Object() {sessionId, jobContainer})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwareJobContainer4Async(ByVal sessionId As String, ByVal jobContainer As CreateSoftwareJobContainerProperties4)
            Me.CreateSoftwareJobContainer4Async(sessionId, jobContainer, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwareJobContainer4Async(ByVal sessionId As String, ByVal jobContainer As CreateSoftwareJobContainerProperties4, ByVal userState As Object)
            If (Me.CreateSoftwareJobContainer4OperationCompleted Is Nothing) Then
                Me.CreateSoftwareJobContainer4OperationCompleted = AddressOf Me.OnCreateSoftwareJobContainer4OperationCompleted
            End If
            Me.InvokeAsync("CreateSoftwareJobContainer4", New Object() {sessionId, jobContainer}, Me.CreateSoftwareJobContainer4OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSoftwareJobContainer4OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSoftwareJobContainer4CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSoftwareJobContainer4Completed(Me, New CreateSoftwareJobContainer4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetServiceDeskTemplates(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal index As Long, ByVal noOfTemplates As Long, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("props", IsNullable:=false)> ByRef templateArray() As TemplateProperties) As <System.Xml.Serialization.XmlElementAttribute("totalNoOfTemplates")> Long
            Dim results() As Object = Me.Invoke("GetServiceDeskTemplates", New Object() {sessionId, index, noOfTemplates})
            templateArray = CType(results(1),TemplateProperties())
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetServiceDeskTemplatesAsync(ByVal sessionId As String, ByVal index As Long, ByVal noOfTemplates As Long)
            Me.GetServiceDeskTemplatesAsync(sessionId, index, noOfTemplates, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetServiceDeskTemplatesAsync(ByVal sessionId As String, ByVal index As Long, ByVal noOfTemplates As Long, ByVal userState As Object)
            If (Me.GetServiceDeskTemplatesOperationCompleted Is Nothing) Then
                Me.GetServiceDeskTemplatesOperationCompleted = AddressOf Me.OnGetServiceDeskTemplatesOperationCompleted
            End If
            Me.InvokeAsync("GetServiceDeskTemplates", New Object() {sessionId, index, noOfTemplates}, Me.GetServiceDeskTemplatesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetServiceDeskTemplatesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetServiceDeskTemplatesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetServiceDeskTemplatesCompleted(Me, New GetServiceDeskTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitGroupByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupName As String, ByVal objectPreference As ObjectPreference, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupPropertiesRequired As UnitGroupPropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("unitGroupProperties", IsNullable:=true)> UnitGroupProperties
            Dim results() As Object = Me.Invoke("GetUnitGroupByName", New Object() {sessionId, unitGroupName, objectPreference, unitGroupPropertiesRequired})
            Return CType(results(0),UnitGroupProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitGroupByNameAsync(ByVal sessionId As String, ByVal unitGroupName As String, ByVal objectPreference As ObjectPreference, ByVal unitGroupPropertiesRequired As UnitGroupPropertiesRequired)
            Me.GetUnitGroupByNameAsync(sessionId, unitGroupName, objectPreference, unitGroupPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitGroupByNameAsync(ByVal sessionId As String, ByVal unitGroupName As String, ByVal objectPreference As ObjectPreference, ByVal unitGroupPropertiesRequired As UnitGroupPropertiesRequired, ByVal userState As Object)
            If (Me.GetUnitGroupByNameOperationCompleted Is Nothing) Then
                Me.GetUnitGroupByNameOperationCompleted = AddressOf Me.OnGetUnitGroupByNameOperationCompleted
            End If
            Me.InvokeAsync("GetUnitGroupByName", New Object() {sessionId, unitGroupName, objectPreference, unitGroupPropertiesRequired}, Me.GetUnitGroupByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitGroupByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitGroupByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitGroupByNameCompleted(Me, New GetUnitGroupByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetComputerOSName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal osClassID As Long) As <System.Xml.Serialization.XmlElementAttribute("osName", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("GetComputerOSName", New Object() {sessionId, osClassID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetComputerOSNameAsync(ByVal sessionId As String, ByVal osClassID As Long)
            Me.GetComputerOSNameAsync(sessionId, osClassID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetComputerOSNameAsync(ByVal sessionId As String, ByVal osClassID As Long, ByVal userState As Object)
            If (Me.GetComputerOSNameOperationCompleted Is Nothing) Then
                Me.GetComputerOSNameOperationCompleted = AddressOf Me.OnGetComputerOSNameOperationCompleted
            End If
            Me.InvokeAsync("GetComputerOSName", New Object() {sessionId, osClassID}, Me.GetComputerOSNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetComputerOSNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetComputerOSNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetComputerOSNameCompleted(Me, New GetComputerOSNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetOSInstallationParameter2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal osimTargetMACAddress() As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal installParameterName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal installParameterValue As String)
            Me.Invoke("SetOSInstallationParameter2", New Object() {sessionId, osimTargetMACAddress, installParameterName, installParameterValue})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetOSInstallationParameter2Async(ByVal sessionId As String, ByVal osimTargetMACAddress() As String, ByVal installParameterName As String, ByVal installParameterValue As String)
            Me.SetOSInstallationParameter2Async(sessionId, osimTargetMACAddress, installParameterName, installParameterValue, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetOSInstallationParameter2Async(ByVal sessionId As String, ByVal osimTargetMACAddress() As String, ByVal installParameterName As String, ByVal installParameterValue As String, ByVal userState As Object)
            If (Me.SetOSInstallationParameter2OperationCompleted Is Nothing) Then
                Me.SetOSInstallationParameter2OperationCompleted = AddressOf Me.OnSetOSInstallationParameter2OperationCompleted
            End If
            Me.InvokeAsync("SetOSInstallationParameter2", New Object() {sessionId, osimTargetMACAddress, installParameterName, installParameterValue}, Me.SetOSInstallationParameter2OperationCompleted, userState)
        End Sub
        
        Private Sub OnSetOSInstallationParameter2OperationCompleted(ByVal arg As Object)
            If (Not (Me.SetOSInstallationParameter2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetOSInstallationParameter2Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetOSInstallationParameterByName2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal osimTargetComputerLabel() As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal installParameterName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal installParameterValue As String)
            Me.Invoke("SetOSInstallationParameterByName2", New Object() {sessionId, osimTargetComputerLabel, installParameterName, installParameterValue})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetOSInstallationParameterByName2Async(ByVal sessionId As String, ByVal osimTargetComputerLabel() As String, ByVal installParameterName As String, ByVal installParameterValue As String)
            Me.SetOSInstallationParameterByName2Async(sessionId, osimTargetComputerLabel, installParameterName, installParameterValue, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetOSInstallationParameterByName2Async(ByVal sessionId As String, ByVal osimTargetComputerLabel() As String, ByVal installParameterName As String, ByVal installParameterValue As String, ByVal userState As Object)
            If (Me.SetOSInstallationParameterByName2OperationCompleted Is Nothing) Then
                Me.SetOSInstallationParameterByName2OperationCompleted = AddressOf Me.OnSetOSInstallationParameterByName2OperationCompleted
            End If
            Me.InvokeAsync("SetOSInstallationParameterByName2", New Object() {sessionId, osimTargetComputerLabel, installParameterName, installParameterValue}, Me.SetOSInstallationParameterByName2OperationCompleted, userState)
        End Sub
        
        Private Sub OnSetOSInstallationParameterByName2OperationCompleted(ByVal arg As Object)
            If (Not (Me.SetOSInstallationParameterByName2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetOSInstallationParameterByName2Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetOSIMParamterDefaultsResponse", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOSIMParameterDefaults(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal osimTargetMACAddress() As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal parameterName As String) As <System.Xml.Serialization.XmlArrayAttribute("defaults", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> String()
            Dim results() As Object = Me.Invoke("GetOSIMParameterDefaults", New Object() {sessionId, osimTargetMACAddress, parameterName})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOSIMParameterDefaultsAsync(ByVal sessionId As String, ByVal osimTargetMACAddress() As String, ByVal parameterName As String)
            Me.GetOSIMParameterDefaultsAsync(sessionId, osimTargetMACAddress, parameterName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOSIMParameterDefaultsAsync(ByVal sessionId As String, ByVal osimTargetMACAddress() As String, ByVal parameterName As String, ByVal userState As Object)
            If (Me.GetOSIMParameterDefaultsOperationCompleted Is Nothing) Then
                Me.GetOSIMParameterDefaultsOperationCompleted = AddressOf Me.OnGetOSIMParameterDefaultsOperationCompleted
            End If
            Me.InvokeAsync("GetOSIMParameterDefaults", New Object() {sessionId, osimTargetMACAddress, parameterName}, Me.GetOSIMParameterDefaultsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOSIMParameterDefaultsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOSIMParameterDefaultsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOSIMParameterDefaultsCompleted(Me, New GetOSIMParameterDefaultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOSIMParameterDefaultsByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal osimTargetComputerLabel() As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal parameterName As String) As <System.Xml.Serialization.XmlArrayAttribute("defaults", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> String()
            Dim results() As Object = Me.Invoke("GetOSIMParameterDefaultsByName", New Object() {sessionId, osimTargetComputerLabel, parameterName})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOSIMParameterDefaultsByNameAsync(ByVal sessionId As String, ByVal osimTargetComputerLabel() As String, ByVal parameterName As String)
            Me.GetOSIMParameterDefaultsByNameAsync(sessionId, osimTargetComputerLabel, parameterName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOSIMParameterDefaultsByNameAsync(ByVal sessionId As String, ByVal osimTargetComputerLabel() As String, ByVal parameterName As String, ByVal userState As Object)
            If (Me.GetOSIMParameterDefaultsByNameOperationCompleted Is Nothing) Then
                Me.GetOSIMParameterDefaultsByNameOperationCompleted = AddressOf Me.OnGetOSIMParameterDefaultsByNameOperationCompleted
            End If
            Me.InvokeAsync("GetOSIMParameterDefaultsByName", New Object() {sessionId, osimTargetComputerLabel, parameterName}, Me.GetOSIMParameterDefaultsByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOSIMParameterDefaultsByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOSIMParameterDefaultsByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOSIMParameterDefaultsByNameCompleted(Me, New GetOSIMParameterDefaultsByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetHardWareModelList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal filterArray As ArrayOfHWModelFilter, ByVal sortAsecending As Boolean, ByVal index As Long, ByVal numRequired As Long, ByRef totalNumHWModels As Long) As <System.Xml.Serialization.XmlArrayAttribute("hwModelList", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> String()
            Dim results() As Object = Me.Invoke("GetHardWareModelList", New Object() {sessionId, filterArray, sortAsecending, index, numRequired})
            totalNumHWModels = CType(results(1),Long)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetHardWareModelListAsync(ByVal sessionId As String, ByVal filterArray As ArrayOfHWModelFilter, ByVal sortAsecending As Boolean, ByVal index As Long, ByVal numRequired As Long)
            Me.GetHardWareModelListAsync(sessionId, filterArray, sortAsecending, index, numRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetHardWareModelListAsync(ByVal sessionId As String, ByVal filterArray As ArrayOfHWModelFilter, ByVal sortAsecending As Boolean, ByVal index As Long, ByVal numRequired As Long, ByVal userState As Object)
            If (Me.GetHardWareModelListOperationCompleted Is Nothing) Then
                Me.GetHardWareModelListOperationCompleted = AddressOf Me.OnGetHardWareModelListOperationCompleted
            End If
            Me.InvokeAsync("GetHardWareModelList", New Object() {sessionId, filterArray, sortAsecending, index, numRequired}, Me.GetHardWareModelListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetHardWareModelListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetHardWareModelListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetHardWareModelListCompleted(Me, New GetHardWareModelListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitGroupsXML(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal parentGroupName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal excludeGroupName As String, ByVal excludeSystemGroups As Boolean) As <System.Xml.Serialization.XmlElementAttribute("groupsXML", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("GetUnitGroupsXML", New Object() {sessionId, parentGroupName, excludeGroupName, excludeSystemGroups})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitGroupsXMLAsync(ByVal sessionId As String, ByVal parentGroupName As String, ByVal excludeGroupName As String, ByVal excludeSystemGroups As Boolean)
            Me.GetUnitGroupsXMLAsync(sessionId, parentGroupName, excludeGroupName, excludeSystemGroups, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitGroupsXMLAsync(ByVal sessionId As String, ByVal parentGroupName As String, ByVal excludeGroupName As String, ByVal excludeSystemGroups As Boolean, ByVal userState As Object)
            If (Me.GetUnitGroupsXMLOperationCompleted Is Nothing) Then
                Me.GetUnitGroupsXMLOperationCompleted = AddressOf Me.OnGetUnitGroupsXMLOperationCompleted
            End If
            Me.InvokeAsync("GetUnitGroupsXML", New Object() {sessionId, parentGroupName, excludeGroupName, excludeSystemGroups}, Me.GetUnitGroupsXMLOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitGroupsXMLOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitGroupsXMLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitGroupsXMLCompleted(Me, New GetUnitGroupsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetComputerHWModel(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal computerUUIDs() As String) As <System.Xml.Serialization.XmlArrayAttribute("hwModels", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> String()
            Dim results() As Object = Me.Invoke("GetComputerHWModel", New Object() {sessionId, computerUUIDs})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetComputerHWModelAsync(ByVal sessionId As String, ByVal computerUUIDs() As String)
            Me.GetComputerHWModelAsync(sessionId, computerUUIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetComputerHWModelAsync(ByVal sessionId As String, ByVal computerUUIDs() As String, ByVal userState As Object)
            If (Me.GetComputerHWModelOperationCompleted Is Nothing) Then
                Me.GetComputerHWModelOperationCompleted = AddressOf Me.OnGetComputerHWModelOperationCompleted
            End If
            Me.InvokeAsync("GetComputerHWModel", New Object() {sessionId, computerUUIDs}, Me.GetComputerHWModelOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetComputerHWModelOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetComputerHWModelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetComputerHWModelCompleted(Me, New GetComputerHWModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetComputerHWModelByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal computerHostNames() As String) As <System.Xml.Serialization.XmlArrayAttribute("hwModels", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> String()
            Dim results() As Object = Me.Invoke("GetComputerHWModelByName", New Object() {sessionId, computerHostNames})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetComputerHWModelByNameAsync(ByVal sessionId As String, ByVal computerHostNames() As String)
            Me.GetComputerHWModelByNameAsync(sessionId, computerHostNames, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetComputerHWModelByNameAsync(ByVal sessionId As String, ByVal computerHostNames() As String, ByVal userState As Object)
            If (Me.GetComputerHWModelByNameOperationCompleted Is Nothing) Then
                Me.GetComputerHWModelByNameOperationCompleted = AddressOf Me.OnGetComputerHWModelByNameOperationCompleted
            End If
            Me.InvokeAsync("GetComputerHWModelByName", New Object() {sessionId, computerHostNames}, Me.GetComputerHWModelByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetComputerHWModelByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetComputerHWModelByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetComputerHWModelByNameCompleted(Me, New GetComputerHWModelByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetQueryFolderId(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal folderName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal parentFolderName As String) As <System.Xml.Serialization.XmlElementAttribute("folderId")> Long
            Dim results() As Object = Me.Invoke("GetQueryFolderId", New Object() {sessionId, folderName, parentFolderName})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetQueryFolderIdAsync(ByVal sessionId As String, ByVal folderName As String, ByVal parentFolderName As String)
            Me.GetQueryFolderIdAsync(sessionId, folderName, parentFolderName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetQueryFolderIdAsync(ByVal sessionId As String, ByVal folderName As String, ByVal parentFolderName As String, ByVal userState As Object)
            If (Me.GetQueryFolderIdOperationCompleted Is Nothing) Then
                Me.GetQueryFolderIdOperationCompleted = AddressOf Me.OnGetQueryFolderIdOperationCompleted
            End If
            Me.InvokeAsync("GetQueryFolderId", New Object() {sessionId, folderName, parentFolderName}, Me.GetQueryFolderIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetQueryFolderIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetQueryFolderIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetQueryFolderIdCompleted(Me, New GetQueryFolderIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetQueryFolders(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal folderId As Long, ByVal index As Long, ByVal numRequired As Long, ByRef totalNumFolders As Long) As <System.Xml.Serialization.XmlArrayAttribute("queryFolderArray", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("properties", IsNullable:=false)> QueryFolderProperties()
            Dim results() As Object = Me.Invoke("GetQueryFolders", New Object() {sessionId, folderId, index, numRequired})
            totalNumFolders = CType(results(1),Long)
            Return CType(results(0),QueryFolderProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetQueryFoldersAsync(ByVal sessionId As String, ByVal folderId As Long, ByVal index As Long, ByVal numRequired As Long)
            Me.GetQueryFoldersAsync(sessionId, folderId, index, numRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetQueryFoldersAsync(ByVal sessionId As String, ByVal folderId As Long, ByVal index As Long, ByVal numRequired As Long, ByVal userState As Object)
            If (Me.GetQueryFoldersOperationCompleted Is Nothing) Then
                Me.GetQueryFoldersOperationCompleted = AddressOf Me.OnGetQueryFoldersOperationCompleted
            End If
            Me.InvokeAsync("GetQueryFolders", New Object() {sessionId, folderId, index, numRequired}, Me.GetQueryFoldersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetQueryFoldersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetQueryFoldersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetQueryFoldersCompleted(Me, New GetQueryFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetQueries2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal folderId As Long, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal filterArray As ArrayOfQueryFilter, ByVal sortProperty As QueryProperty, ByVal sortAscending As Boolean, ByVal index As Long, ByVal numQueriesRequired As Long, ByRef totalNumQueries As Long) As <System.Xml.Serialization.XmlArrayAttribute("queryArray", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("queryProps", IsNullable:=false)> QueryProperties2()
            Dim results() As Object = Me.Invoke("GetQueries2", New Object() {sessionId, folderId, filterArray, sortProperty, sortAscending, index, numQueriesRequired})
            totalNumQueries = CType(results(1),Long)
            Return CType(results(0),QueryProperties2())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetQueries2Async(ByVal sessionId As String, ByVal folderId As Long, ByVal filterArray As ArrayOfQueryFilter, ByVal sortProperty As QueryProperty, ByVal sortAscending As Boolean, ByVal index As Long, ByVal numQueriesRequired As Long)
            Me.GetQueries2Async(sessionId, folderId, filterArray, sortProperty, sortAscending, index, numQueriesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetQueries2Async(ByVal sessionId As String, ByVal folderId As Long, ByVal filterArray As ArrayOfQueryFilter, ByVal sortProperty As QueryProperty, ByVal sortAscending As Boolean, ByVal index As Long, ByVal numQueriesRequired As Long, ByVal userState As Object)
            If (Me.GetQueries2OperationCompleted Is Nothing) Then
                Me.GetQueries2OperationCompleted = AddressOf Me.OnGetQueries2OperationCompleted
            End If
            Me.InvokeAsync("GetQueries2", New Object() {sessionId, folderId, filterArray, sortProperty, sortAscending, index, numQueriesRequired}, Me.GetQueries2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetQueries2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetQueries2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetQueries2Completed(Me, New GetQueries2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBootImageList2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal isBootServerSupplied As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal bootservername As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal filterArray As ArrayOfBootImageFilter, ByVal sortProperty As BootImageProperty, ByVal sortAscending As Boolean, ByVal index As Long, ByVal numImagesRequired As Long, ByVal refreshList As Boolean, ByRef totalNumImages As Long) As <System.Xml.Serialization.XmlArrayAttribute("biPropsArray", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("biProps", IsNullable:=false)> BootImageProperties()
            Dim results() As Object = Me.Invoke("GetBootImageList2", New Object() {sessionId, isBootServerSupplied, bootservername, filterArray, sortProperty, sortAscending, index, numImagesRequired, refreshList})
            totalNumImages = CType(results(1),Long)
            Return CType(results(0),BootImageProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBootImageList2Async(ByVal sessionId As String, ByVal isBootServerSupplied As Boolean, ByVal bootservername As String, ByVal filterArray As ArrayOfBootImageFilter, ByVal sortProperty As BootImageProperty, ByVal sortAscending As Boolean, ByVal index As Long, ByVal numImagesRequired As Long, ByVal refreshList As Boolean)
            Me.GetBootImageList2Async(sessionId, isBootServerSupplied, bootservername, filterArray, sortProperty, sortAscending, index, numImagesRequired, refreshList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBootImageList2Async(ByVal sessionId As String, ByVal isBootServerSupplied As Boolean, ByVal bootservername As String, ByVal filterArray As ArrayOfBootImageFilter, ByVal sortProperty As BootImageProperty, ByVal sortAscending As Boolean, ByVal index As Long, ByVal numImagesRequired As Long, ByVal refreshList As Boolean, ByVal userState As Object)
            If (Me.GetBootImageList2OperationCompleted Is Nothing) Then
                Me.GetBootImageList2OperationCompleted = AddressOf Me.OnGetBootImageList2OperationCompleted
            End If
            Me.InvokeAsync("GetBootImageList2", New Object() {sessionId, isBootServerSupplied, bootservername, filterArray, sortProperty, sortAscending, index, numImagesRequired, refreshList}, Me.GetBootImageList2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBootImageList2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBootImageList2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBootImageList2Completed(Me, New GetBootImageList2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBootServerList2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal filterArray As ArrayOfBootServerFilter, ByVal sortProperty As BootServerProperty, ByVal sortAscending As Boolean, ByVal index As Long, ByVal numServersRequired As Long, ByVal refreshList As Boolean, ByRef totalNumServers As Long) As <System.Xml.Serialization.XmlArrayAttribute("bsPropsArray", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("bsProps", IsNullable:=false)> BootServerProperties()
            Dim results() As Object = Me.Invoke("GetBootServerList2", New Object() {sessionId, filterArray, sortProperty, sortAscending, index, numServersRequired, refreshList})
            totalNumServers = CType(results(1),Long)
            Return CType(results(0),BootServerProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBootServerList2Async(ByVal sessionId As String, ByVal filterArray As ArrayOfBootServerFilter, ByVal sortProperty As BootServerProperty, ByVal sortAscending As Boolean, ByVal index As Long, ByVal numServersRequired As Long, ByVal refreshList As Boolean)
            Me.GetBootServerList2Async(sessionId, filterArray, sortProperty, sortAscending, index, numServersRequired, refreshList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBootServerList2Async(ByVal sessionId As String, ByVal filterArray As ArrayOfBootServerFilter, ByVal sortProperty As BootServerProperty, ByVal sortAscending As Boolean, ByVal index As Long, ByVal numServersRequired As Long, ByVal refreshList As Boolean, ByVal userState As Object)
            If (Me.GetBootServerList2OperationCompleted Is Nothing) Then
                Me.GetBootServerList2OperationCompleted = AddressOf Me.OnGetBootServerList2OperationCompleted
            End If
            Me.InvokeAsync("GetBootServerList2", New Object() {sessionId, filterArray, sortProperty, sortAscending, index, numServersRequired, refreshList}, Me.GetBootServerList2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBootServerList2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBootServerList2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBootServerList2Completed(Me, New GetBootServerList2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackagePropertiesRequired As SoftwarePackagePropertiesRequired, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal filterArray As ArrayOfSoftwarePackageFilter, ByVal sortProperty As SoftwarePackageProperty, ByVal sortAscending As Boolean, ByVal index As Long, ByVal numPackagesRequired As Long, ByVal refreshList As Boolean, ByRef totalNumPackages As Long) As <System.Xml.Serialization.XmlArrayAttribute("swPkgArray", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackagePropertiesArray", IsNullable:=false)> SoftwarePackageProperties2()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageList", New Object() {sessionId, softwarePackageGroupId, softwarePackagePropertiesRequired, filterArray, sortProperty, sortAscending, index, numPackagesRequired, refreshList})
            totalNumPackages = CType(results(1),Long)
            Return CType(results(0),SoftwarePackageProperties2())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageListAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackagePropertiesRequired As SoftwarePackagePropertiesRequired, ByVal filterArray As ArrayOfSoftwarePackageFilter, ByVal sortProperty As SoftwarePackageProperty, ByVal sortAscending As Boolean, ByVal index As Long, ByVal numPackagesRequired As Long, ByVal refreshList As Boolean)
            Me.GetSoftwarePackageListAsync(sessionId, softwarePackageGroupId, softwarePackagePropertiesRequired, filterArray, sortProperty, sortAscending, index, numPackagesRequired, refreshList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageListAsync(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackagePropertiesRequired As SoftwarePackagePropertiesRequired, ByVal filterArray As ArrayOfSoftwarePackageFilter, ByVal sortProperty As SoftwarePackageProperty, ByVal sortAscending As Boolean, ByVal index As Long, ByVal numPackagesRequired As Long, ByVal refreshList As Boolean, ByVal userState As Object)
            If (Me.GetSoftwarePackageListOperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageListOperationCompleted = AddressOf Me.OnGetSoftwarePackageListOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageList", New Object() {sessionId, softwarePackageGroupId, softwarePackagePropertiesRequired, filterArray, sortProperty, sortAscending, index, numPackagesRequired, refreshList}, Me.GetSoftwarePackageListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageListCompleted(Me, New GetSoftwarePackageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetInstalledComponentsResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInstalledComponents3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("component", IsNullable:=false)> ByVal component() As DsmComponents) As <System.Xml.Serialization.XmlArrayAttribute("getStatus", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("getValues", IsNullable:=false)> ComponentStatus()
            Dim results() As Object = Me.Invoke("GetInstalledComponents3", New Object() {sessionId, component})
            Return CType(results(0),ComponentStatus())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetInstalledComponents3Async(ByVal sessionId As String, ByVal component() As DsmComponents)
            Me.GetInstalledComponents3Async(sessionId, component, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetInstalledComponents3Async(ByVal sessionId As String, ByVal component() As DsmComponents, ByVal userState As Object)
            If (Me.GetInstalledComponents3OperationCompleted Is Nothing) Then
                Me.GetInstalledComponents3OperationCompleted = AddressOf Me.OnGetInstalledComponents3OperationCompleted
            End If
            Me.InvokeAsync("GetInstalledComponents3", New Object() {sessionId, component}, Me.GetInstalledComponents3OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetInstalledComponents3OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetInstalledComponents3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetInstalledComponents3Completed(Me, New GetInstalledComponents3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetManagerConfigurationParameterInt(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("params", IsNullable:=false)> ByVal params() As ConfigurationParams) As <System.Xml.Serialization.XmlArrayAttribute("configValues", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("value", IsNullable:=false)> ConfigurationParameterValue()
            Dim results() As Object = Me.Invoke("GetManagerConfigurationParameterInt", New Object() {sessionId, params})
            Return CType(results(0),ConfigurationParameterValue())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetManagerConfigurationParameterIntAsync(ByVal sessionId As String, ByVal params() As ConfigurationParams)
            Me.GetManagerConfigurationParameterIntAsync(sessionId, params, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetManagerConfigurationParameterIntAsync(ByVal sessionId As String, ByVal params() As ConfigurationParams, ByVal userState As Object)
            If (Me.GetManagerConfigurationParameterIntOperationCompleted Is Nothing) Then
                Me.GetManagerConfigurationParameterIntOperationCompleted = AddressOf Me.OnGetManagerConfigurationParameterIntOperationCompleted
            End If
            Me.InvokeAsync("GetManagerConfigurationParameterInt", New Object() {sessionId, params}, Me.GetManagerConfigurationParameterIntOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetManagerConfigurationParameterIntOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetManagerConfigurationParameterIntCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetManagerConfigurationParameterIntCompleted(Me, New GetManagerConfigurationParameterIntCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetManagerProperties(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String) As <System.Xml.Serialization.XmlElementAttribute("props", IsNullable:=true)> ManagerProperties
            Dim results() As Object = Me.Invoke("GetManagerProperties", New Object() {sessionId})
            Return CType(results(0),ManagerProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetManagerPropertiesAsync(ByVal sessionId As String)
            Me.GetManagerPropertiesAsync(sessionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetManagerPropertiesAsync(ByVal sessionId As String, ByVal userState As Object)
            If (Me.GetManagerPropertiesOperationCompleted Is Nothing) Then
                Me.GetManagerPropertiesOperationCompleted = AddressOf Me.OnGetManagerPropertiesOperationCompleted
            End If
            Me.InvokeAsync("GetManagerProperties", New Object() {sessionId}, Me.GetManagerPropertiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetManagerPropertiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetManagerPropertiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetManagerPropertiesCompleted(Me, New GetManagerPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetComputerSDProperties(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal computerUUID As String) As <System.Xml.Serialization.XmlElementAttribute("props", IsNullable:=true)> SDProperties
            Dim results() As Object = Me.Invoke("GetComputerSDProperties", New Object() {sessionId, computerUUID})
            Return CType(results(0),SDProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetComputerSDPropertiesAsync(ByVal sessionId As String, ByVal computerUUID As String)
            Me.GetComputerSDPropertiesAsync(sessionId, computerUUID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetComputerSDPropertiesAsync(ByVal sessionId As String, ByVal computerUUID As String, ByVal userState As Object)
            If (Me.GetComputerSDPropertiesOperationCompleted Is Nothing) Then
                Me.GetComputerSDPropertiesOperationCompleted = AddressOf Me.OnGetComputerSDPropertiesOperationCompleted
            End If
            Me.InvokeAsync("GetComputerSDProperties", New Object() {sessionId, computerUUID}, Me.GetComputerSDPropertiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetComputerSDPropertiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetComputerSDPropertiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetComputerSDPropertiesCompleted(Me, New GetComputerSDPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetComputerSDPropertiesByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal computerName As String) As <System.Xml.Serialization.XmlElementAttribute("props", IsNullable:=true)> SDProperties
            Dim results() As Object = Me.Invoke("GetComputerSDPropertiesByName", New Object() {sessionId, computerName})
            Return CType(results(0),SDProperties)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetComputerSDPropertiesByNameAsync(ByVal sessionId As String, ByVal computerName As String)
            Me.GetComputerSDPropertiesByNameAsync(sessionId, computerName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetComputerSDPropertiesByNameAsync(ByVal sessionId As String, ByVal computerName As String, ByVal userState As Object)
            If (Me.GetComputerSDPropertiesByNameOperationCompleted Is Nothing) Then
                Me.GetComputerSDPropertiesByNameOperationCompleted = AddressOf Me.OnGetComputerSDPropertiesByNameOperationCompleted
            End If
            Me.InvokeAsync("GetComputerSDPropertiesByName", New Object() {sessionId, computerName}, Me.GetComputerSDPropertiesByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetComputerSDPropertiesByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetComputerSDPropertiesByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetComputerSDPropertiesByNameCompleted(Me, New GetComputerSDPropertiesByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOSTypesXML(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("elements", IsNullable:=false)> ByVal classIds() As Integer) As <System.Xml.Serialization.XmlElementAttribute("osTypesXML", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("GetOSTypesXML", New Object() {sessionId, classIds})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOSTypesXMLAsync(ByVal sessionId As String, ByVal classIds() As Integer)
            Me.GetOSTypesXMLAsync(sessionId, classIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOSTypesXMLAsync(ByVal sessionId As String, ByVal classIds() As Integer, ByVal userState As Object)
            If (Me.GetOSTypesXMLOperationCompleted Is Nothing) Then
                Me.GetOSTypesXMLOperationCompleted = AddressOf Me.OnGetOSTypesXMLOperationCompleted
            End If
            Me.InvokeAsync("GetOSTypesXML", New Object() {sessionId, classIds}, Me.GetOSTypesXMLOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOSTypesXMLOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOSTypesXMLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOSTypesXMLCompleted(Me, New GetOSTypesXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetComputerByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal computerHostName As String, ByVal noOfComputers As Long, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal computerPropertiesRequired As ComputerPropertiesRequired, ByRef totalNoOfComputersFound As Long) As <System.Xml.Serialization.XmlArrayAttribute("computerArray", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("computerPropertiesArray", IsNullable:=false)> ComputerProperties()
            Dim results() As Object = Me.Invoke("GetComputerByName", New Object() {sessionId, computerHostName, noOfComputers, computerPropertiesRequired})
            totalNoOfComputersFound = CType(results(1),Long)
            Return CType(results(0),ComputerProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetComputerByNameAsync(ByVal sessionId As String, ByVal computerHostName As String, ByVal noOfComputers As Long, ByVal computerPropertiesRequired As ComputerPropertiesRequired)
            Me.GetComputerByNameAsync(sessionId, computerHostName, noOfComputers, computerPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetComputerByNameAsync(ByVal sessionId As String, ByVal computerHostName As String, ByVal noOfComputers As Long, ByVal computerPropertiesRequired As ComputerPropertiesRequired, ByVal userState As Object)
            If (Me.GetComputerByNameOperationCompleted Is Nothing) Then
                Me.GetComputerByNameOperationCompleted = AddressOf Me.OnGetComputerByNameOperationCompleted
            End If
            Me.InvokeAsync("GetComputerByName", New Object() {sessionId, computerHostName, noOfComputers, computerPropertiesRequired}, Me.GetComputerByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetComputerByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetComputerByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetComputerByNameCompleted(Me, New GetComputerByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOSIMTargetList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal isBootServerSupplied As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal bootServerName As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("osimTargetFilterArray", IsNullable:=false)> ByVal filterArray() As OSIMTargetFilter2, ByVal matchAll As Boolean, ByVal sortProperty As OSIMTARGETPROPERTY2, ByVal sortAscending As Boolean, ByVal index As Long, ByVal noOfTargetsRequired As Long, ByVal refreshList As Boolean, ByRef totalNumberOfTargets As Long) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfOSIMTargets", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("props", IsNullable:=false)> OSIMTargetProperties2()
            Dim results() As Object = Me.Invoke("GetOSIMTargetList", New Object() {sessionId, isBootServerSupplied, bootServerName, filterArray, matchAll, sortProperty, sortAscending, index, noOfTargetsRequired, refreshList})
            totalNumberOfTargets = CType(results(1),Long)
            Return CType(results(0),OSIMTargetProperties2())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOSIMTargetListAsync(ByVal sessionId As String, ByVal isBootServerSupplied As Boolean, ByVal bootServerName As String, ByVal filterArray() As OSIMTargetFilter2, ByVal matchAll As Boolean, ByVal sortProperty As OSIMTARGETPROPERTY2, ByVal sortAscending As Boolean, ByVal index As Long, ByVal noOfTargetsRequired As Long, ByVal refreshList As Boolean)
            Me.GetOSIMTargetListAsync(sessionId, isBootServerSupplied, bootServerName, filterArray, matchAll, sortProperty, sortAscending, index, noOfTargetsRequired, refreshList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOSIMTargetListAsync(ByVal sessionId As String, ByVal isBootServerSupplied As Boolean, ByVal bootServerName As String, ByVal filterArray() As OSIMTargetFilter2, ByVal matchAll As Boolean, ByVal sortProperty As OSIMTARGETPROPERTY2, ByVal sortAscending As Boolean, ByVal index As Long, ByVal noOfTargetsRequired As Long, ByVal refreshList As Boolean, ByVal userState As Object)
            If (Me.GetOSIMTargetListOperationCompleted Is Nothing) Then
                Me.GetOSIMTargetListOperationCompleted = AddressOf Me.OnGetOSIMTargetListOperationCompleted
            End If
            Me.InvokeAsync("GetOSIMTargetList", New Object() {sessionId, isBootServerSupplied, bootServerName, filterArray, matchAll, sortProperty, sortAscending, index, noOfTargetsRequired, refreshList}, Me.GetOSIMTargetListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOSIMTargetListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOSIMTargetListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOSIMTargetListCompleted(Me, New GetOSIMTargetListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetOSInstallationParameters(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetMACAddress As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("params", IsNullable:=false)> ByVal arrParams() As OSIMParameters)
            Me.Invoke("SetOSInstallationParameters", New Object() {sessionId, osimTargetMACAddress, arrParams})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetOSInstallationParametersAsync(ByVal sessionId As String, ByVal osimTargetMACAddress As String, ByVal arrParams() As OSIMParameters)
            Me.SetOSInstallationParametersAsync(sessionId, osimTargetMACAddress, arrParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetOSInstallationParametersAsync(ByVal sessionId As String, ByVal osimTargetMACAddress As String, ByVal arrParams() As OSIMParameters, ByVal userState As Object)
            If (Me.SetOSInstallationParametersOperationCompleted Is Nothing) Then
                Me.SetOSInstallationParametersOperationCompleted = AddressOf Me.OnSetOSInstallationParametersOperationCompleted
            End If
            Me.InvokeAsync("SetOSInstallationParameters", New Object() {sessionId, osimTargetMACAddress, arrParams}, Me.SetOSInstallationParametersOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetOSInstallationParametersOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetOSInstallationParametersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetOSInstallationParametersCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetOSInstallationParametersByName(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal osimTargetComputerLabel As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("params", IsNullable:=false)> ByVal arrParams() As OSIMParameters)
            Me.Invoke("SetOSInstallationParametersByName", New Object() {sessionId, osimTargetComputerLabel, arrParams})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetOSInstallationParametersByNameAsync(ByVal sessionId As String, ByVal osimTargetComputerLabel As String, ByVal arrParams() As OSIMParameters)
            Me.SetOSInstallationParametersByNameAsync(sessionId, osimTargetComputerLabel, arrParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetOSInstallationParametersByNameAsync(ByVal sessionId As String, ByVal osimTargetComputerLabel As String, ByVal arrParams() As OSIMParameters, ByVal userState As Object)
            If (Me.SetOSInstallationParametersByNameOperationCompleted Is Nothing) Then
                Me.SetOSInstallationParametersByNameOperationCompleted = AddressOf Me.OnSetOSInstallationParametersByNameOperationCompleted
            End If
            Me.InvokeAsync("SetOSInstallationParametersByName", New Object() {sessionId, osimTargetComputerLabel, arrParams}, Me.SetOSInstallationParametersByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetOSInstallationParametersByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetOSInstallationParametersByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetOSInstallationParametersByNameCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreatePackage3Response", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSoftwarePackage3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal pkgProps As CreateSoftwarePackageProperties3, ByVal sealAfterCreate As Boolean) As <System.Xml.Serialization.XmlElementAttribute("packageId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSoftwarePackage3", New Object() {sessionId, pkgProps, sealAfterCreate})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePackage3Async(ByVal sessionId As String, ByVal pkgProps As CreateSoftwarePackageProperties3, ByVal sealAfterCreate As Boolean)
            Me.CreateSoftwarePackage3Async(sessionId, pkgProps, sealAfterCreate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePackage3Async(ByVal sessionId As String, ByVal pkgProps As CreateSoftwarePackageProperties3, ByVal sealAfterCreate As Boolean, ByVal userState As Object)
            If (Me.CreateSoftwarePackage3OperationCompleted Is Nothing) Then
                Me.CreateSoftwarePackage3OperationCompleted = AddressOf Me.OnCreateSoftwarePackage3OperationCompleted
            End If
            Me.InvokeAsync("CreateSoftwarePackage3", New Object() {sessionId, pkgProps, sealAfterCreate}, Me.CreateSoftwarePackage3OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSoftwarePackage3OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSoftwarePackage3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSoftwarePackage3Completed(Me, New CreateSoftwarePackage3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSoftwarePackage3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProperties As SetSoftwarePackageProperties3, ByVal sealAfterEdit As Boolean)
            Me.Invoke("SetSoftwarePackage3", New Object() {sessionId, softwarePackageProperties, sealAfterEdit})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePackage3Async(ByVal sessionId As String, ByVal softwarePackageProperties As SetSoftwarePackageProperties3, ByVal sealAfterEdit As Boolean)
            Me.SetSoftwarePackage3Async(sessionId, softwarePackageProperties, sealAfterEdit, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePackage3Async(ByVal sessionId As String, ByVal softwarePackageProperties As SetSoftwarePackageProperties3, ByVal sealAfterEdit As Boolean, ByVal userState As Object)
            If (Me.SetSoftwarePackage3OperationCompleted Is Nothing) Then
                Me.SetSoftwarePackage3OperationCompleted = AddressOf Me.OnSetSoftwarePackage3OperationCompleted
            End If
            Me.InvokeAsync("SetSoftwarePackage3", New Object() {sessionId, softwarePackageProperties, sealAfterEdit}, Me.SetSoftwarePackage3OperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSoftwarePackage3OperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSoftwarePackage3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSoftwarePackage3Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackage3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal packageId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackagePropertiesRequired As SoftwarePackagePropertiesRequired3) As <System.Xml.Serialization.XmlElementAttribute("pkgProps", IsNullable:=true)> SoftwarePackageProperties3
            Dim results() As Object = Me.Invoke("GetSoftwarePackage3", New Object() {sessionId, packageId, softwarePackagePropertiesRequired})
            Return CType(results(0),SoftwarePackageProperties3)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackage3Async(ByVal sessionId As String, ByVal packageId As String, ByVal softwarePackagePropertiesRequired As SoftwarePackagePropertiesRequired3)
            Me.GetSoftwarePackage3Async(sessionId, packageId, softwarePackagePropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackage3Async(ByVal sessionId As String, ByVal packageId As String, ByVal softwarePackagePropertiesRequired As SoftwarePackagePropertiesRequired3, ByVal userState As Object)
            If (Me.GetSoftwarePackage3OperationCompleted Is Nothing) Then
                Me.GetSoftwarePackage3OperationCompleted = AddressOf Me.OnGetSoftwarePackage3OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackage3", New Object() {sessionId, packageId, softwarePackagePropertiesRequired}, Me.GetSoftwarePackage3OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackage3OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackage3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackage3Completed(Me, New GetSoftwarePackage3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwarePackage3ListResponse", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageList3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackagePropertiesRequired As SoftwarePackagePropertiesRequired3, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal filterArray As ArrayOfSoftwarePackageFilter3, ByVal sortProperty As SoftwarePackageProperty, ByVal sortAscending As Boolean, ByVal index As Long, ByVal numPackagesRequired As Long, ByVal refreshList As Boolean, ByRef totalNumPackages As Long) As <System.Xml.Serialization.XmlArrayAttribute("swPkgArray", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageProperties", IsNullable:=false)> SoftwarePackageProperties3()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageList3", New Object() {sessionId, softwarePackageGroupId, softwarePackagePropertiesRequired, filterArray, sortProperty, sortAscending, index, numPackagesRequired, refreshList})
            totalNumPackages = CType(results(1),Long)
            Return CType(results(0),SoftwarePackageProperties3())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageList3Async(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackagePropertiesRequired As SoftwarePackagePropertiesRequired3, ByVal filterArray As ArrayOfSoftwarePackageFilter3, ByVal sortProperty As SoftwarePackageProperty, ByVal sortAscending As Boolean, ByVal index As Long, ByVal numPackagesRequired As Long, ByVal refreshList As Boolean)
            Me.GetSoftwarePackageList3Async(sessionId, softwarePackageGroupId, softwarePackagePropertiesRequired, filterArray, sortProperty, sortAscending, index, numPackagesRequired, refreshList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageList3Async(ByVal sessionId As String, ByVal softwarePackageGroupId As String, ByVal softwarePackagePropertiesRequired As SoftwarePackagePropertiesRequired3, ByVal filterArray As ArrayOfSoftwarePackageFilter3, ByVal sortProperty As SoftwarePackageProperty, ByVal sortAscending As Boolean, ByVal index As Long, ByVal numPackagesRequired As Long, ByVal refreshList As Boolean, ByVal userState As Object)
            If (Me.GetSoftwarePackageList3OperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageList3OperationCompleted = AddressOf Me.OnGetSoftwarePackageList3OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageList3", New Object() {sessionId, softwarePackageGroupId, softwarePackagePropertiesRequired, filterArray, sortProperty, sortAscending, index, numPackagesRequired, refreshList}, Me.GetSoftwarePackageList3OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageList3OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageList3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageList3Completed(Me, New GetSoftwarePackageList3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSoftwarePackageProcedure3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureProperties As CreateSoftwarePackageProcedureProperties3) As <System.Xml.Serialization.XmlElementAttribute("softwarePackageProcedureUUID", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSoftwarePackageProcedure3", New Object() {sessionId, softwarePackageProcedureProperties})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePackageProcedure3Async(ByVal sessionId As String, ByVal softwarePackageProcedureProperties As CreateSoftwarePackageProcedureProperties3)
            Me.CreateSoftwarePackageProcedure3Async(sessionId, softwarePackageProcedureProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePackageProcedure3Async(ByVal sessionId As String, ByVal softwarePackageProcedureProperties As CreateSoftwarePackageProcedureProperties3, ByVal userState As Object)
            If (Me.CreateSoftwarePackageProcedure3OperationCompleted Is Nothing) Then
                Me.CreateSoftwarePackageProcedure3OperationCompleted = AddressOf Me.OnCreateSoftwarePackageProcedure3OperationCompleted
            End If
            Me.InvokeAsync("CreateSoftwarePackageProcedure3", New Object() {sessionId, softwarePackageProcedureProperties}, Me.CreateSoftwarePackageProcedure3OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSoftwarePackageProcedure3OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSoftwarePackageProcedure3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSoftwarePackageProcedure3Completed(Me, New CreateSoftwarePackageProcedure3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateAddedSoftwarePackageProcedure3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureProperties As CreateSoftwarePackageProcedureProperties3, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sourcePath As String) As <System.Xml.Serialization.XmlElementAttribute("softwarePackageProcedureUUID", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateAddedSoftwarePackageProcedure3", New Object() {sessionId, softwarePackageProcedureProperties, sourcePath})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateAddedSoftwarePackageProcedure3Async(ByVal sessionId As String, ByVal softwarePackageProcedureProperties As CreateSoftwarePackageProcedureProperties3, ByVal sourcePath As String)
            Me.CreateAddedSoftwarePackageProcedure3Async(sessionId, softwarePackageProcedureProperties, sourcePath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateAddedSoftwarePackageProcedure3Async(ByVal sessionId As String, ByVal softwarePackageProcedureProperties As CreateSoftwarePackageProcedureProperties3, ByVal sourcePath As String, ByVal userState As Object)
            If (Me.CreateAddedSoftwarePackageProcedure3OperationCompleted Is Nothing) Then
                Me.CreateAddedSoftwarePackageProcedure3OperationCompleted = AddressOf Me.OnCreateAddedSoftwarePackageProcedure3OperationCompleted
            End If
            Me.InvokeAsync("CreateAddedSoftwarePackageProcedure3", New Object() {sessionId, softwarePackageProcedureProperties, sourcePath}, Me.CreateAddedSoftwarePackageProcedure3OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateAddedSoftwarePackageProcedure3OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateAddedSoftwarePackageProcedure3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateAddedSoftwarePackageProcedure3Completed(Me, New CreateAddedSoftwarePackageProcedure3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="SetSoftwarePackageProcedureResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSoftwarePackageProcedure3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setSoftwarePackageProcedureProperties As SetSoftwarePackageProcedureProperties3)
            Me.Invoke("SetSoftwarePackageProcedure3", New Object() {sessionId, setSoftwarePackageProcedureProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePackageProcedure3Async(ByVal sessionId As String, ByVal setSoftwarePackageProcedureProperties As SetSoftwarePackageProcedureProperties3)
            Me.SetSoftwarePackageProcedure3Async(sessionId, setSoftwarePackageProcedureProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePackageProcedure3Async(ByVal sessionId As String, ByVal setSoftwarePackageProcedureProperties As SetSoftwarePackageProcedureProperties3, ByVal userState As Object)
            If (Me.SetSoftwarePackageProcedure3OperationCompleted Is Nothing) Then
                Me.SetSoftwarePackageProcedure3OperationCompleted = AddressOf Me.OnSetSoftwarePackageProcedure3OperationCompleted
            End If
            Me.InvokeAsync("SetSoftwarePackageProcedure3", New Object() {sessionId, setSoftwarePackageProcedureProperties}, Me.SetSoftwarePackageProcedure3OperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSoftwarePackageProcedure3OperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSoftwarePackageProcedure3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSoftwarePackageProcedure3Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwarePackageProceduresResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageProcedures3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedures As Long) As <System.Xml.Serialization.XmlArrayAttribute("getSoftwarePackageProcedures", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageProcedurePropertiesArray", IsNullable:=false)> SoftwarePackageProcedureProperties3()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageProcedures3", New Object() {sessionId, listHandle, noOfSoftwarePackageProcedures})
            Return CType(results(0),SoftwarePackageProcedureProperties3())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedures3Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedures As Long)
            Me.GetSoftwarePackageProcedures3Async(sessionId, listHandle, noOfSoftwarePackageProcedures, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedures3Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedures As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageProcedures3OperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageProcedures3OperationCompleted = AddressOf Me.OnGetSoftwarePackageProcedures3OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageProcedures3", New Object() {sessionId, listHandle, noOfSoftwarePackageProcedures}, Me.GetSoftwarePackageProcedures3OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageProcedures3OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageProcedures3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageProcedures3Completed(Me, New GetSoftwarePackageProcedures3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwarePackageProcedureResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageProcedure3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired) As <System.Xml.Serialization.XmlElementAttribute("GetSoftwarePackageProcedureReturn", IsNullable:=true)> SoftwarePackageProcedureProperties3
            Dim results() As Object = Me.Invoke("GetSoftwarePackageProcedure3", New Object() {sessionId, softwarePackageProcedureId, softwarePackageProcedurePropertiesRequired})
            Return CType(results(0),SoftwarePackageProcedureProperties3)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedure3Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired)
            Me.GetSoftwarePackageProcedure3Async(sessionId, softwarePackageProcedureId, softwarePackageProcedurePropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedure3Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired, ByVal userState As Object)
            If (Me.GetSoftwarePackageProcedure3OperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageProcedure3OperationCompleted = AddressOf Me.OnGetSoftwarePackageProcedure3OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageProcedure3", New Object() {sessionId, softwarePackageProcedureId, softwarePackageProcedurePropertiesRequired}, Me.GetSoftwarePackageProcedure3OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageProcedure3OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageProcedure3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageProcedure3Completed(Me, New GetSoftwarePackageProcedure3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwarePackageProcedureGroupSoftwarePackageProceduresResponse3", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageProcedureGroupSoftwarePackageProcedures3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedures As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwarePackageProcedureGroupSoftwarePackageProceduresReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageProcedurePropertiesArray", IsNullable:=false)> SoftwarePackageProcedureProperties3()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageProcedureGroupSoftwarePackageProcedures3", New Object() {sessionId, listHandle, noOfSoftwarePackageProcedures})
            Return CType(results(0),SoftwarePackageProcedureProperties3())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureGroupSoftwarePackageProcedures3Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedures As Long)
            Me.GetSoftwarePackageProcedureGroupSoftwarePackageProcedures3Async(sessionId, listHandle, noOfSoftwarePackageProcedures, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureGroupSoftwarePackageProcedures3Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedures As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageProcedureGroupSoftwarePackageProcedures3OperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageProcedureGroupSoftwarePackageProcedures3OperationCompleted = AddressOf Me.OnGetSoftwarePackageProcedureGroupSoftwarePackageProcedures3OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageProcedureGroupSoftwarePackageProcedures3", New Object() {sessionId, listHandle, noOfSoftwarePackageProcedures}, Me.GetSoftwarePackageProcedureGroupSoftwarePackageProcedures3OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageProcedureGroupSoftwarePackageProcedures3OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageProcedureGroupSoftwarePackageProcedures3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageProcedureGroupSoftwarePackageProcedures3Completed(Me, New GetSoftwarePackageProcedureGroupSoftwarePackageProcedures3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="SetQueryResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetQuery2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal queryId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setQueryProperties As SetQueryProperties3)
            Me.Invoke("SetQuery2", New Object() {sessionId, queryId, setQueryProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetQuery2Async(ByVal sessionId As String, ByVal queryId As String, ByVal setQueryProperties As SetQueryProperties3)
            Me.SetQuery2Async(sessionId, queryId, setQueryProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetQuery2Async(ByVal sessionId As String, ByVal queryId As String, ByVal setQueryProperties As SetQueryProperties3, ByVal userState As Object)
            If (Me.SetQuery2OperationCompleted Is Nothing) Then
                Me.SetQuery2OperationCompleted = AddressOf Me.OnSetQuery2OperationCompleted
            End If
            Me.InvokeAsync("SetQuery2", New Object() {sessionId, queryId, setQueryProperties}, Me.SetQuery2OperationCompleted, userState)
        End Sub
        
        Private Sub OnSetQuery2OperationCompleted(ByVal arg As Object)
            If (Not (Me.SetQuery2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetQuery2Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetQueryResponse2", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetQuery2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal queryId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal queryPropertiesRequired As QueryPropertiesRequired3) As <System.Xml.Serialization.XmlElementAttribute("GetQueryReturn", IsNullable:=true)> QueryProperties3
            Dim results() As Object = Me.Invoke("GetQuery2", New Object() {sessionId, queryId, queryPropertiesRequired})
            Return CType(results(0),QueryProperties3)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetQuery2Async(ByVal sessionId As String, ByVal queryId As String, ByVal queryPropertiesRequired As QueryPropertiesRequired3)
            Me.GetQuery2Async(sessionId, queryId, queryPropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetQuery2Async(ByVal sessionId As String, ByVal queryId As String, ByVal queryPropertiesRequired As QueryPropertiesRequired3, ByVal userState As Object)
            If (Me.GetQuery2OperationCompleted Is Nothing) Then
                Me.GetQuery2OperationCompleted = AddressOf Me.OnGetQuery2OperationCompleted
            End If
            Me.InvokeAsync("GetQuery2", New Object() {sessionId, queryId, queryPropertiesRequired}, Me.GetQuery2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetQuery2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetQuery2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetQuery2Completed(Me, New GetQuery2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageProcedureList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageId As String, ByVal softwarePackageProcedureTypes As SoftwarePackageProcedureTypeMask, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired2, ByVal index As Long, ByVal numProcsRequired As Long, ByRef totalNumProcs As Integer) As <System.Xml.Serialization.XmlArrayAttribute("getSoftwarePackageProcedures", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageProcedurePropertiesArray", IsNullable:=false)> SoftwarePackageProcedureProperties4()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageProcedureList", New Object() {sessionId, softwarePackageId, softwarePackageProcedureTypes, softwarePackageProcedurePropertiesRequired, index, numProcsRequired})
            totalNumProcs = CType(results(1),Integer)
            Return CType(results(0),SoftwarePackageProcedureProperties4())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureListAsync(ByVal sessionId As String, ByVal softwarePackageId As String, ByVal softwarePackageProcedureTypes As SoftwarePackageProcedureTypeMask, ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired2, ByVal index As Long, ByVal numProcsRequired As Long)
            Me.GetSoftwarePackageProcedureListAsync(sessionId, softwarePackageId, softwarePackageProcedureTypes, softwarePackageProcedurePropertiesRequired, index, numProcsRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureListAsync(ByVal sessionId As String, ByVal softwarePackageId As String, ByVal softwarePackageProcedureTypes As SoftwarePackageProcedureTypeMask, ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired2, ByVal index As Long, ByVal numProcsRequired As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageProcedureListOperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageProcedureListOperationCompleted = AddressOf Me.OnGetSoftwarePackageProcedureListOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageProcedureList", New Object() {sessionId, softwarePackageId, softwarePackageProcedureTypes, softwarePackageProcedurePropertiesRequired, index, numProcsRequired}, Me.GetSoftwarePackageProcedureListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageProcedureListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageProcedureListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageProcedureListCompleted(Me, New GetSoftwarePackageProcedureListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwarePackageProcedureResponse4", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageProcedure4(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired2) As <System.Xml.Serialization.XmlElementAttribute("GetSoftwarePackageProcedureReturn", IsNullable:=true)> SoftwarePackageProcedureProperties4
            Dim results() As Object = Me.Invoke("GetSoftwarePackageProcedure4", New Object() {sessionId, softwarePackageProcedureId, softwarePackageProcedurePropertiesRequired})
            Return CType(results(0),SoftwarePackageProcedureProperties4)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedure4Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired2)
            Me.GetSoftwarePackageProcedure4Async(sessionId, softwarePackageProcedureId, softwarePackageProcedurePropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedure4Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired2, ByVal userState As Object)
            If (Me.GetSoftwarePackageProcedure4OperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageProcedure4OperationCompleted = AddressOf Me.OnGetSoftwarePackageProcedure4OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageProcedure4", New Object() {sessionId, softwarePackageProcedureId, softwarePackageProcedurePropertiesRequired}, Me.GetSoftwarePackageProcedure4OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageProcedure4OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageProcedure4CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageProcedure4Completed(Me, New GetSoftwarePackageProcedure4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitSoftwareJobList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal propsRequired As UnitSoftwareJobPropertiesRequired, ByVal index As Long, ByVal numJobsRequired As Long, ByRef totalNumJobs As Integer) As <System.Xml.Serialization.XmlArrayAttribute("unitSoftwareJobs", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("unitSoftwareJobProperties", IsNullable:=false)> UnitSoftwareJobProperties3()
            Dim results() As Object = Me.Invoke("GetUnitSoftwareJobList", New Object() {sessionId, unitId, propsRequired, index, numJobsRequired})
            totalNumJobs = CType(results(1),Integer)
            Return CType(results(0),UnitSoftwareJobProperties3())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitSoftwareJobListAsync(ByVal sessionId As String, ByVal unitId As String, ByVal propsRequired As UnitSoftwareJobPropertiesRequired, ByVal index As Long, ByVal numJobsRequired As Long)
            Me.GetUnitSoftwareJobListAsync(sessionId, unitId, propsRequired, index, numJobsRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitSoftwareJobListAsync(ByVal sessionId As String, ByVal unitId As String, ByVal propsRequired As UnitSoftwareJobPropertiesRequired, ByVal index As Long, ByVal numJobsRequired As Long, ByVal userState As Object)
            If (Me.GetUnitSoftwareJobListOperationCompleted Is Nothing) Then
                Me.GetUnitSoftwareJobListOperationCompleted = AddressOf Me.OnGetUnitSoftwareJobListOperationCompleted
            End If
            Me.InvokeAsync("GetUnitSoftwareJobList", New Object() {sessionId, unitId, propsRequired, index, numJobsRequired}, Me.GetUnitSoftwareJobListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitSoftwareJobListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitSoftwareJobListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitSoftwareJobListCompleted(Me, New GetUnitSoftwareJobListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageInstallationList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitSoftwareJobPropertiesRequired As UnitSoftwareJobPropertiesRequired, ByVal index As Long, ByVal numInstallationsRequired As Long, ByRef totalNumInstallations As Integer) As <System.Xml.Serialization.XmlArrayAttribute("softwarePackageInstallationsReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("unitSoftwareJobProperties", IsNullable:=false)> UnitSoftwareJobProperties3()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageInstallationList", New Object() {sessionId, softwarePackageId, unitGroupId, unitSoftwareJobPropertiesRequired, index, numInstallationsRequired})
            totalNumInstallations = CType(results(1),Integer)
            Return CType(results(0),UnitSoftwareJobProperties3())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageInstallationListAsync(ByVal sessionId As String, ByVal softwarePackageId As String, ByVal unitGroupId As String, ByVal unitSoftwareJobPropertiesRequired As UnitSoftwareJobPropertiesRequired, ByVal index As Long, ByVal numInstallationsRequired As Long)
            Me.GetSoftwarePackageInstallationListAsync(sessionId, softwarePackageId, unitGroupId, unitSoftwareJobPropertiesRequired, index, numInstallationsRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageInstallationListAsync(ByVal sessionId As String, ByVal softwarePackageId As String, ByVal unitGroupId As String, ByVal unitSoftwareJobPropertiesRequired As UnitSoftwareJobPropertiesRequired, ByVal index As Long, ByVal numInstallationsRequired As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageInstallationListOperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageInstallationListOperationCompleted = AddressOf Me.OnGetSoftwarePackageInstallationListOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageInstallationList", New Object() {sessionId, softwarePackageId, unitGroupId, unitSoftwareJobPropertiesRequired, index, numInstallationsRequired}, Me.GetSoftwarePackageInstallationListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageInstallationListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageInstallationListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageInstallationListCompleted(Me, New GetSoftwarePackageInstallationListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageProcedureGroupProcedureList(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal propsRequried As SoftwarePackageProcedurePropertiesRequired2, ByVal index As Long, ByVal numProcsRequired As Long, ByRef totalNumProcs As Integer) As <System.Xml.Serialization.XmlArrayAttribute("procedureProperties", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageProcedurePropertiesArray", IsNullable:=false)> SoftwarePackageProcedureProperties4()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageProcedureGroupProcedureList", New Object() {sessionId, softwarePackageProcedureGroupId, propsRequried, index, numProcsRequired})
            totalNumProcs = CType(results(1),Integer)
            Return CType(results(0),SoftwarePackageProcedureProperties4())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureGroupProcedureListAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroupId As String, ByVal propsRequried As SoftwarePackageProcedurePropertiesRequired2, ByVal index As Long, ByVal numProcsRequired As Long)
            Me.GetSoftwarePackageProcedureGroupProcedureListAsync(sessionId, softwarePackageProcedureGroupId, propsRequried, index, numProcsRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureGroupProcedureListAsync(ByVal sessionId As String, ByVal softwarePackageProcedureGroupId As String, ByVal propsRequried As SoftwarePackageProcedurePropertiesRequired2, ByVal index As Long, ByVal numProcsRequired As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageProcedureGroupProcedureListOperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageProcedureGroupProcedureListOperationCompleted = AddressOf Me.OnGetSoftwarePackageProcedureGroupProcedureListOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageProcedureGroupProcedureList", New Object() {sessionId, softwarePackageProcedureGroupId, propsRequried, index, numProcsRequired}, Me.GetSoftwarePackageProcedureGroupProcedureListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageProcedureGroupProcedureListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageProcedureGroupProcedureListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageProcedureGroupProcedureListCompleted(Me, New GetSoftwarePackageProcedureGroupProcedureListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAuthenticatedURI(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String) As <System.Xml.Serialization.XmlElementAttribute("authURI", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("GetAuthenticatedURI", New Object() {sessionId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAuthenticatedURIAsync(ByVal sessionId As String)
            Me.GetAuthenticatedURIAsync(sessionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAuthenticatedURIAsync(ByVal sessionId As String, ByVal userState As Object)
            If (Me.GetAuthenticatedURIOperationCompleted Is Nothing) Then
                Me.GetAuthenticatedURIOperationCompleted = AddressOf Me.OnGetAuthenticatedURIOperationCompleted
            End If
            Me.InvokeAsync("GetAuthenticatedURI", New Object() {sessionId}, Me.GetAuthenticatedURIOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAuthenticatedURIOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAuthenticatedURICompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAuthenticatedURICompleted(Me, New GetAuthenticatedURICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Login3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal userName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal manager As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal locale As String) As <System.Xml.Serialization.XmlElementAttribute("sessionId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("Login3", New Object() {userName, password, manager, locale})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Login3Async(ByVal userName As String, ByVal password As String, ByVal manager As String, ByVal locale As String)
            Me.Login3Async(userName, password, manager, locale, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Login3Async(ByVal userName As String, ByVal password As String, ByVal manager As String, ByVal locale As String, ByVal userState As Object)
            If (Me.Login3OperationCompleted Is Nothing) Then
                Me.Login3OperationCompleted = AddressOf Me.OnLogin3OperationCompleted
            End If
            Me.InvokeAsync("Login3", New Object() {userName, password, manager, locale}, Me.Login3OperationCompleted, userState)
        End Sub
        
        Private Sub OnLogin3OperationCompleted(ByVal arg As Object)
            If (Not (Me.Login3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Login3Completed(Me, New Login3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Login4(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal userName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal manager As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal locale As String) As <System.Xml.Serialization.XmlElementAttribute("sessionId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("Login4", New Object() {userName, password, manager, locale})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Login4Async(ByVal userName As String, ByVal password As String, ByVal manager As String, ByVal locale As String)
            Me.Login4Async(userName, password, manager, locale, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Login4Async(ByVal userName As String, ByVal password As String, ByVal manager As String, ByVal locale As String, ByVal userState As Object)
            If (Me.Login4OperationCompleted Is Nothing) Then
                Me.Login4OperationCompleted = AddressOf Me.OnLogin4OperationCompleted
            End If
            Me.InvokeAsync("Login4", New Object() {userName, password, manager, locale}, Me.Login4OperationCompleted, userState)
        End Sub
        
        Private Sub OnLogin4OperationCompleted(ByVal arg As Object)
            If (Not (Me.Login4CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Login4Completed(Me, New Login4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WSChallenge2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal manager As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal locale As String, ByVal compRequiresAuthentication As CompRequiresAuthentication, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal negotiateData As AuthenticationData, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef authenticationData As String) As <System.Xml.Serialization.XmlElementAttribute("size")> Long
            Dim results() As Object = Me.Invoke("WSChallenge2", New Object() {sessionId, manager, locale, compRequiresAuthentication, negotiateData})
            sessionId = CType(results(1),String)
            authenticationData = CType(results(2),String)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WSChallenge2Async(ByVal sessionId As String, ByVal manager As String, ByVal locale As String, ByVal compRequiresAuthentication As CompRequiresAuthentication, ByVal negotiateData As AuthenticationData)
            Me.WSChallenge2Async(sessionId, manager, locale, compRequiresAuthentication, negotiateData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WSChallenge2Async(ByVal sessionId As String, ByVal manager As String, ByVal locale As String, ByVal compRequiresAuthentication As CompRequiresAuthentication, ByVal negotiateData As AuthenticationData, ByVal userState As Object)
            If (Me.WSChallenge2OperationCompleted Is Nothing) Then
                Me.WSChallenge2OperationCompleted = AddressOf Me.OnWSChallenge2OperationCompleted
            End If
            Me.InvokeAsync("WSChallenge2", New Object() {sessionId, manager, locale, compRequiresAuthentication, negotiateData}, Me.WSChallenge2OperationCompleted, userState)
        End Sub
        
        Private Sub OnWSChallenge2OperationCompleted(ByVal arg As Object)
            If (Not (Me.WSChallenge2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WSChallenge2Completed(Me, New WSChallenge2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateComputer2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal computerProperties As CreateComputerProperties2) As <System.Xml.Serialization.XmlElementAttribute("computerId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateComputer2", New Object() {sessionId, computerProperties})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateComputer2Async(ByVal sessionId As String, ByVal computerProperties As CreateComputerProperties2)
            Me.CreateComputer2Async(sessionId, computerProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateComputer2Async(ByVal sessionId As String, ByVal computerProperties As CreateComputerProperties2, ByVal userState As Object)
            If (Me.CreateComputer2OperationCompleted Is Nothing) Then
                Me.CreateComputer2OperationCompleted = AddressOf Me.OnCreateComputer2OperationCompleted
            End If
            Me.InvokeAsync("CreateComputer2", New Object() {sessionId, computerProperties}, Me.CreateComputer2OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateComputer2OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateComputer2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateComputer2Completed(Me, New CreateComputer2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLocale(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String) As <System.Xml.Serialization.XmlElementAttribute("locale", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("GetLocale", New Object() {sessionId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLocaleAsync(ByVal sessionId As String)
            Me.GetLocaleAsync(sessionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLocaleAsync(ByVal sessionId As String, ByVal userState As Object)
            If (Me.GetLocaleOperationCompleted Is Nothing) Then
                Me.GetLocaleOperationCompleted = AddressOf Me.OnGetLocaleOperationCompleted
            End If
            Me.InvokeAsync("GetLocale", New Object() {sessionId}, Me.GetLocaleOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLocaleOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLocaleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLocaleCompleted(Me, New GetLocaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitGroup2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal groupUuid As String) As <System.Xml.Serialization.XmlElementAttribute("groupProperties", IsNullable:=true)> UnitGroupProperties2
            Dim results() As Object = Me.Invoke("GetUnitGroup2", New Object() {sessionId, groupUuid})
            Return CType(results(0),UnitGroupProperties2)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitGroup2Async(ByVal sessionId As String, ByVal groupUuid As String)
            Me.GetUnitGroup2Async(sessionId, groupUuid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitGroup2Async(ByVal sessionId As String, ByVal groupUuid As String, ByVal userState As Object)
            If (Me.GetUnitGroup2OperationCompleted Is Nothing) Then
                Me.GetUnitGroup2OperationCompleted = AddressOf Me.OnGetUnitGroup2OperationCompleted
            End If
            Me.InvokeAsync("GetUnitGroup2", New Object() {sessionId, groupUuid}, Me.GetUnitGroup2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitGroup2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitGroup2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitGroup2Completed(Me, New GetUnitGroup2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateUnitGroup3(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal parentUnitGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal groupProperties As CreateUnitGroupProperties3, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable:=false)> ByVal linkItems() As Item) As <System.Xml.Serialization.XmlElementAttribute("groupUuid", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateUnitGroup3", New Object() {sessionId, parentUnitGroupId, groupProperties, linkItems})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateUnitGroup3Async(ByVal sessionId As String, ByVal parentUnitGroupId As String, ByVal groupProperties As CreateUnitGroupProperties3, ByVal linkItems() As Item)
            Me.CreateUnitGroup3Async(sessionId, parentUnitGroupId, groupProperties, linkItems, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateUnitGroup3Async(ByVal sessionId As String, ByVal parentUnitGroupId As String, ByVal groupProperties As CreateUnitGroupProperties3, ByVal linkItems() As Item, ByVal userState As Object)
            If (Me.CreateUnitGroup3OperationCompleted Is Nothing) Then
                Me.CreateUnitGroup3OperationCompleted = AddressOf Me.OnCreateUnitGroup3OperationCompleted
            End If
            Me.InvokeAsync("CreateUnitGroup3", New Object() {sessionId, parentUnitGroupId, groupProperties, linkItems}, Me.CreateUnitGroup3OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateUnitGroup3OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateUnitGroup3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateUnitGroup3Completed(Me, New CreateUnitGroup3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkItemsToUnitGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal groupUuid As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable:=false)> ByVal linkItems() As Item)
            Me.Invoke("LinkItemsToUnitGroup", New Object() {sessionId, groupUuid, linkItems})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkItemsToUnitGroupAsync(ByVal sessionId As String, ByVal groupUuid As String, ByVal linkItems() As Item)
            Me.LinkItemsToUnitGroupAsync(sessionId, groupUuid, linkItems, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkItemsToUnitGroupAsync(ByVal sessionId As String, ByVal groupUuid As String, ByVal linkItems() As Item, ByVal userState As Object)
            If (Me.LinkItemsToUnitGroupOperationCompleted Is Nothing) Then
                Me.LinkItemsToUnitGroupOperationCompleted = AddressOf Me.OnLinkItemsToUnitGroupOperationCompleted
            End If
            Me.InvokeAsync("LinkItemsToUnitGroup", New Object() {sessionId, groupUuid, linkItems}, Me.LinkItemsToUnitGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkItemsToUnitGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkItemsToUnitGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkItemsToUnitGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnLinkItemsFromUnitGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal groupUuid As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable:=false)> ByVal unLinkItems() As Item)
            Me.Invoke("UnLinkItemsFromUnitGroup", New Object() {sessionId, groupUuid, unLinkItems})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnLinkItemsFromUnitGroupAsync(ByVal sessionId As String, ByVal groupUuid As String, ByVal unLinkItems() As Item)
            Me.UnLinkItemsFromUnitGroupAsync(sessionId, groupUuid, unLinkItems, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnLinkItemsFromUnitGroupAsync(ByVal sessionId As String, ByVal groupUuid As String, ByVal unLinkItems() As Item, ByVal userState As Object)
            If (Me.UnLinkItemsFromUnitGroupOperationCompleted Is Nothing) Then
                Me.UnLinkItemsFromUnitGroupOperationCompleted = AddressOf Me.OnUnLinkItemsFromUnitGroupOperationCompleted
            End If
            Me.InvokeAsync("UnLinkItemsFromUnitGroup", New Object() {sessionId, groupUuid, unLinkItems}, Me.UnLinkItemsFromUnitGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnLinkItemsFromUnitGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnLinkItemsFromUnitGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnLinkItemsFromUnitGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub MoveItemsToUnitGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal oldGroupUuid As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal newGroupUuid As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable:=false)> ByVal moveItems() As Item)
            Me.Invoke("MoveItemsToUnitGroup", New Object() {sessionId, oldGroupUuid, newGroupUuid, moveItems})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MoveItemsToUnitGroupAsync(ByVal sessionId As String, ByVal oldGroupUuid As String, ByVal newGroupUuid As String, ByVal moveItems() As Item)
            Me.MoveItemsToUnitGroupAsync(sessionId, oldGroupUuid, newGroupUuid, moveItems, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MoveItemsToUnitGroupAsync(ByVal sessionId As String, ByVal oldGroupUuid As String, ByVal newGroupUuid As String, ByVal moveItems() As Item, ByVal userState As Object)
            If (Me.MoveItemsToUnitGroupOperationCompleted Is Nothing) Then
                Me.MoveItemsToUnitGroupOperationCompleted = AddressOf Me.OnMoveItemsToUnitGroupOperationCompleted
            End If
            Me.InvokeAsync("MoveItemsToUnitGroup", New Object() {sessionId, oldGroupUuid, newGroupUuid, moveItems}, Me.MoveItemsToUnitGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnMoveItemsToUnitGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.MoveItemsToUnitGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MoveItemsToUnitGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteItems(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute("deleteItems", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable:=false)> ByVal deleteItems1() As Item, ByVal forceDelete As Boolean)
            Me.Invoke("DeleteItems", New Object() {sessionId, deleteItems1, forceDelete})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteItemsAsync(ByVal sessionId As String, ByVal deleteItems1() As Item, ByVal forceDelete As Boolean)
            Me.DeleteItemsAsync(sessionId, deleteItems1, forceDelete, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteItemsAsync(ByVal sessionId As String, ByVal deleteItems1() As Item, ByVal forceDelete As Boolean, ByVal userState As Object)
            If (Me.DeleteItemsOperationCompleted Is Nothing) Then
                Me.DeleteItemsOperationCompleted = AddressOf Me.OnDeleteItemsOperationCompleted
            End If
            Me.InvokeAsync("DeleteItems", New Object() {sessionId, deleteItems1, forceDelete}, Me.DeleteItemsOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteItemsOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteItemsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteItemsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteAlerts(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute("deleteAlerts", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal deleteAlerts1() As String)
            Me.Invoke("DeleteAlerts", New Object() {sessionId, deleteAlerts1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteAlertsAsync(ByVal sessionId As String, ByVal deleteAlerts1() As String)
            Me.DeleteAlertsAsync(sessionId, deleteAlerts1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteAlertsAsync(ByVal sessionId As String, ByVal deleteAlerts1() As String, ByVal userState As Object)
            If (Me.DeleteAlertsOperationCompleted Is Nothing) Then
                Me.DeleteAlertsOperationCompleted = AddressOf Me.OnDeleteAlertsOperationCompleted
            End If
            Me.InvokeAsync("DeleteAlerts", New Object() {sessionId, deleteAlerts1}, Me.DeleteAlertsOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteAlertsOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteAlertsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteAlertsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateAlerts(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal alertIds() As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal alertProperties As UpdateAlertsProperties)
            Me.Invoke("UpdateAlerts", New Object() {sessionId, alertIds, alertProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateAlertsAsync(ByVal sessionId As String, ByVal alertIds() As String, ByVal alertProperties As UpdateAlertsProperties)
            Me.UpdateAlertsAsync(sessionId, alertIds, alertProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateAlertsAsync(ByVal sessionId As String, ByVal alertIds() As String, ByVal alertProperties As UpdateAlertsProperties, ByVal userState As Object)
            If (Me.UpdateAlertsOperationCompleted Is Nothing) Then
                Me.UpdateAlertsOperationCompleted = AddressOf Me.OnUpdateAlertsOperationCompleted
            End If
            Me.InvokeAsync("UpdateAlerts", New Object() {sessionId, alertIds, alertProperties}, Me.UpdateAlertsOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateAlertsOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateAlertsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateAlertsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteAllAlerts(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal alertState As System.Nullable(Of ALERTSTATE), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal alertStateSpecified As Boolean)
            Me.Invoke("DeleteAllAlerts", New Object() {sessionId, alertState, alertStateSpecified})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteAllAlertsAsync(ByVal sessionId As String, ByVal alertState As System.Nullable(Of ALERTSTATE), ByVal alertStateSpecified As Boolean)
            Me.DeleteAllAlertsAsync(sessionId, alertState, alertStateSpecified, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteAllAlertsAsync(ByVal sessionId As String, ByVal alertState As System.Nullable(Of ALERTSTATE), ByVal alertStateSpecified As Boolean, ByVal userState As Object)
            If (Me.DeleteAllAlertsOperationCompleted Is Nothing) Then
                Me.DeleteAllAlertsOperationCompleted = AddressOf Me.OnDeleteAllAlertsOperationCompleted
            End If
            Me.InvokeAsync("DeleteAllAlerts", New Object() {sessionId, alertState, alertStateSpecified}, Me.DeleteAllAlertsOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteAllAlertsOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteAllAlertsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteAllAlertsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwareJobOutputFile(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitSoftwareJobId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef isCopiedFile As System.Nullable(Of Boolean), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef isCopiedFileSpecified As Boolean) As <System.Xml.Serialization.XmlElementAttribute("filePath", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("GetSoftwareJobOutputFile", New Object() {sessionId, unitSoftwareJobId})
            isCopiedFile = CType(results(1),System.Nullable(Of Boolean))
            isCopiedFileSpecified = CType(results(2),Boolean)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobOutputFileAsync(ByVal sessionId As String, ByVal unitSoftwareJobId As String)
            Me.GetSoftwareJobOutputFileAsync(sessionId, unitSoftwareJobId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobOutputFileAsync(ByVal sessionId As String, ByVal unitSoftwareJobId As String, ByVal userState As Object)
            If (Me.GetSoftwareJobOutputFileOperationCompleted Is Nothing) Then
                Me.GetSoftwareJobOutputFileOperationCompleted = AddressOf Me.OnGetSoftwareJobOutputFileOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwareJobOutputFile", New Object() {sessionId, unitSoftwareJobId}, Me.GetSoftwareJobOutputFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwareJobOutputFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwareJobOutputFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwareJobOutputFileCompleted(Me, New GetSoftwareJobOutputFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwareJobOutputFile2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwareJobId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal unitId As String, ByVal unitType As Integer, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef isCopiedFile As System.Nullable(Of Boolean), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef isCopiedFileSpecified As Boolean) As <System.Xml.Serialization.XmlElementAttribute("filePath", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("GetSoftwareJobOutputFile2", New Object() {sessionId, softwareJobId, unitId, unitType})
            isCopiedFile = CType(results(1),System.Nullable(Of Boolean))
            isCopiedFileSpecified = CType(results(2),Boolean)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobOutputFile2Async(ByVal sessionId As String, ByVal softwareJobId As String, ByVal unitId As String, ByVal unitType As Integer)
            Me.GetSoftwareJobOutputFile2Async(sessionId, softwareJobId, unitId, unitType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareJobOutputFile2Async(ByVal sessionId As String, ByVal softwareJobId As String, ByVal unitId As String, ByVal unitType As Integer, ByVal userState As Object)
            If (Me.GetSoftwareJobOutputFile2OperationCompleted Is Nothing) Then
                Me.GetSoftwareJobOutputFile2OperationCompleted = AddressOf Me.OnGetSoftwareJobOutputFile2OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwareJobOutputFile2", New Object() {sessionId, softwareJobId, unitId, unitType}, Me.GetSoftwareJobOutputFile2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwareJobOutputFile2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwareJobOutputFile2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwareJobOutputFile2Completed(Me, New GetSoftwareJobOutputFile2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetManagerDateTime2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String) As <System.Xml.Serialization.XmlElementAttribute("timeInfo", IsNullable:=true)> DateTimeInfo
            Dim results() As Object = Me.Invoke("GetManagerDateTime2", New Object() {sessionId})
            Return CType(results(0),DateTimeInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetManagerDateTime2Async(ByVal sessionId As String)
            Me.GetManagerDateTime2Async(sessionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetManagerDateTime2Async(ByVal sessionId As String, ByVal userState As Object)
            If (Me.GetManagerDateTime2OperationCompleted Is Nothing) Then
                Me.GetManagerDateTime2OperationCompleted = AddressOf Me.OnGetManagerDateTime2OperationCompleted
            End If
            Me.InvokeAsync("GetManagerDateTime2", New Object() {sessionId}, Me.GetManagerDateTime2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetManagerDateTime2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetManagerDateTime2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetManagerDateTime2Completed(Me, New GetManagerDateTime2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetManagerConfigurationParameterValue(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal configParam As ManagerConfigurationParams) As <System.Xml.Serialization.XmlElementAttribute("paramValue", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("GetManagerConfigurationParameterValue", New Object() {sessionId, configParam})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetManagerConfigurationParameterValueAsync(ByVal sessionId As String, ByVal configParam As ManagerConfigurationParams)
            Me.GetManagerConfigurationParameterValueAsync(sessionId, configParam, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetManagerConfigurationParameterValueAsync(ByVal sessionId As String, ByVal configParam As ManagerConfigurationParams, ByVal userState As Object)
            If (Me.GetManagerConfigurationParameterValueOperationCompleted Is Nothing) Then
                Me.GetManagerConfigurationParameterValueOperationCompleted = AddressOf Me.OnGetManagerConfigurationParameterValueOperationCompleted
            End If
            Me.InvokeAsync("GetManagerConfigurationParameterValue", New Object() {sessionId, configParam}, Me.GetManagerConfigurationParameterValueOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetManagerConfigurationParameterValueOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetManagerConfigurationParameterValueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetManagerConfigurationParameterValueCompleted(Me, New GetManagerConfigurationParameterValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LinkItemsToSoftwareGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal groupUuid As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable:=false)> ByVal softwareObjectIds() As Item)
            Me.Invoke("LinkItemsToSoftwareGroup", New Object() {sessionId, groupUuid, softwareObjectIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkItemsToSoftwareGroupAsync(ByVal sessionId As String, ByVal groupUuid As String, ByVal softwareObjectIds() As Item)
            Me.LinkItemsToSoftwareGroupAsync(sessionId, groupUuid, softwareObjectIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LinkItemsToSoftwareGroupAsync(ByVal sessionId As String, ByVal groupUuid As String, ByVal softwareObjectIds() As Item, ByVal userState As Object)
            If (Me.LinkItemsToSoftwareGroupOperationCompleted Is Nothing) Then
                Me.LinkItemsToSoftwareGroupOperationCompleted = AddressOf Me.OnLinkItemsToSoftwareGroupOperationCompleted
            End If
            Me.InvokeAsync("LinkItemsToSoftwareGroup", New Object() {sessionId, groupUuid, softwareObjectIds}, Me.LinkItemsToSoftwareGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnLinkItemsToSoftwareGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.LinkItemsToSoftwareGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LinkItemsToSoftwareGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnLinkItemsFromSoftwareGroup(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal groupUuid As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable:=false)> ByVal softwareObjectIds() As Item)
            Me.Invoke("UnLinkItemsFromSoftwareGroup", New Object() {sessionId, groupUuid, softwareObjectIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnLinkItemsFromSoftwareGroupAsync(ByVal sessionId As String, ByVal groupUuid As String, ByVal softwareObjectIds() As Item)
            Me.UnLinkItemsFromSoftwareGroupAsync(sessionId, groupUuid, softwareObjectIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnLinkItemsFromSoftwareGroupAsync(ByVal sessionId As String, ByVal groupUuid As String, ByVal softwareObjectIds() As Item, ByVal userState As Object)
            If (Me.UnLinkItemsFromSoftwareGroupOperationCompleted Is Nothing) Then
                Me.UnLinkItemsFromSoftwareGroupOperationCompleted = AddressOf Me.OnUnLinkItemsFromSoftwareGroupOperationCompleted
            End If
            Me.InvokeAsync("UnLinkItemsFromSoftwareGroup", New Object() {sessionId, groupUuid, softwareObjectIds}, Me.UnLinkItemsFromSoftwareGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnLinkItemsFromSoftwareGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnLinkItemsFromSoftwareGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnLinkItemsFromSoftwareGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSoftwarePackageProcedure4(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal procedureProperties As CreateSoftwarePackageProcedureProperties4) As <System.Xml.Serialization.XmlElementAttribute("procedureId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSoftwarePackageProcedure4", New Object() {sessionId, softwarePackageId, procedureProperties})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePackageProcedure4Async(ByVal sessionId As String, ByVal softwarePackageId As String, ByVal procedureProperties As CreateSoftwarePackageProcedureProperties4)
            Me.CreateSoftwarePackageProcedure4Async(sessionId, softwarePackageId, procedureProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePackageProcedure4Async(ByVal sessionId As String, ByVal softwarePackageId As String, ByVal procedureProperties As CreateSoftwarePackageProcedureProperties4, ByVal userState As Object)
            If (Me.CreateSoftwarePackageProcedure4OperationCompleted Is Nothing) Then
                Me.CreateSoftwarePackageProcedure4OperationCompleted = AddressOf Me.OnCreateSoftwarePackageProcedure4OperationCompleted
            End If
            Me.InvokeAsync("CreateSoftwarePackageProcedure4", New Object() {sessionId, softwarePackageId, procedureProperties}, Me.CreateSoftwarePackageProcedure4OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSoftwarePackageProcedure4OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSoftwarePackageProcedure4CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSoftwarePackageProcedure4Completed(Me, New CreateSoftwarePackageProcedure4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageProcedureList2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageId As String, ByVal softwarePackageProcedureTypes As SoftwarePackageProcedureTypeMask, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired2, ByVal index As Long, ByVal numProcsRequired As Long, ByRef totalNumProcs As Integer) As <System.Xml.Serialization.XmlArrayAttribute("getSoftwarePackageProcedures", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageProcedurePropertiesArray", IsNullable:=false)> SoftwarePackageProcedureProperties5()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageProcedureList2", New Object() {sessionId, softwarePackageId, softwarePackageProcedureTypes, softwarePackageProcedurePropertiesRequired, index, numProcsRequired})
            totalNumProcs = CType(results(1),Integer)
            Return CType(results(0),SoftwarePackageProcedureProperties5())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureList2Async(ByVal sessionId As String, ByVal softwarePackageId As String, ByVal softwarePackageProcedureTypes As SoftwarePackageProcedureTypeMask, ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired2, ByVal index As Long, ByVal numProcsRequired As Long)
            Me.GetSoftwarePackageProcedureList2Async(sessionId, softwarePackageId, softwarePackageProcedureTypes, softwarePackageProcedurePropertiesRequired, index, numProcsRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureList2Async(ByVal sessionId As String, ByVal softwarePackageId As String, ByVal softwarePackageProcedureTypes As SoftwarePackageProcedureTypeMask, ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired2, ByVal index As Long, ByVal numProcsRequired As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageProcedureList2OperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageProcedureList2OperationCompleted = AddressOf Me.OnGetSoftwarePackageProcedureList2OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageProcedureList2", New Object() {sessionId, softwarePackageId, softwarePackageProcedureTypes, softwarePackageProcedurePropertiesRequired, index, numProcsRequired}, Me.GetSoftwarePackageProcedureList2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageProcedureList2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageProcedureList2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageProcedureList2Completed(Me, New GetSoftwarePackageProcedureList2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwarePackageProcedureResponse5", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageProcedure5(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired2) As <System.Xml.Serialization.XmlElementAttribute("GetSoftwarePackageProcedureReturn", IsNullable:=true)> SoftwarePackageProcedureProperties5
            Dim results() As Object = Me.Invoke("GetSoftwarePackageProcedure5", New Object() {sessionId, softwarePackageProcedureId, softwarePackageProcedurePropertiesRequired})
            Return CType(results(0),SoftwarePackageProcedureProperties5)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedure5Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired2)
            Me.GetSoftwarePackageProcedure5Async(sessionId, softwarePackageProcedureId, softwarePackageProcedurePropertiesRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedure5Async(ByVal sessionId As String, ByVal softwarePackageProcedureId As String, ByVal softwarePackageProcedurePropertiesRequired As SoftwarePackageProcedurePropertiesRequired2, ByVal userState As Object)
            If (Me.GetSoftwarePackageProcedure5OperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageProcedure5OperationCompleted = AddressOf Me.OnGetSoftwarePackageProcedure5OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageProcedure5", New Object() {sessionId, softwarePackageProcedureId, softwarePackageProcedurePropertiesRequired}, Me.GetSoftwarePackageProcedure5OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageProcedure5OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageProcedure5CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageProcedure5Completed(Me, New GetSoftwarePackageProcedure5CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageProcedureGroupProcedureList2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureGroupId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal propsRequried As SoftwarePackageProcedurePropertiesRequired2, ByVal index As Long, ByVal numProcsRequired As Long, ByRef totalNumProcs As Integer) As <System.Xml.Serialization.XmlArrayAttribute("procedureProperties", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageProcedurePropertiesArray", IsNullable:=false)> SoftwarePackageProcedureProperties5()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageProcedureGroupProcedureList2", New Object() {sessionId, softwarePackageProcedureGroupId, propsRequried, index, numProcsRequired})
            totalNumProcs = CType(results(1),Integer)
            Return CType(results(0),SoftwarePackageProcedureProperties5())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureGroupProcedureList2Async(ByVal sessionId As String, ByVal softwarePackageProcedureGroupId As String, ByVal propsRequried As SoftwarePackageProcedurePropertiesRequired2, ByVal index As Long, ByVal numProcsRequired As Long)
            Me.GetSoftwarePackageProcedureGroupProcedureList2Async(sessionId, softwarePackageProcedureGroupId, propsRequried, index, numProcsRequired, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureGroupProcedureList2Async(ByVal sessionId As String, ByVal softwarePackageProcedureGroupId As String, ByVal propsRequried As SoftwarePackageProcedurePropertiesRequired2, ByVal index As Long, ByVal numProcsRequired As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageProcedureGroupProcedureList2OperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageProcedureGroupProcedureList2OperationCompleted = AddressOf Me.OnGetSoftwarePackageProcedureGroupProcedureList2OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageProcedureGroupProcedureList2", New Object() {sessionId, softwarePackageProcedureGroupId, propsRequried, index, numProcsRequired}, Me.GetSoftwarePackageProcedureGroupProcedureList2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageProcedureGroupProcedureList2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageProcedureGroupProcedureList2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageProcedureGroupProcedureList2Completed(Me, New GetSoftwarePackageProcedureGroupProcedureList2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="GetSoftwarePackageProcedureGroupSoftwarePackageProceduresResponse4", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwarePackageProcedureGroupSoftwarePackageProcedures4(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedures As Long) As <System.Xml.Serialization.XmlArrayAttribute("GetSoftwarePackageProcedureGroupSoftwarePackageProceduresReturn", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("softwarePackageProcedurePropertiesArray", IsNullable:=false)> SoftwarePackageProcedureProperties5()
            Dim results() As Object = Me.Invoke("GetSoftwarePackageProcedureGroupSoftwarePackageProcedures4", New Object() {sessionId, listHandle, noOfSoftwarePackageProcedures})
            Return CType(results(0),SoftwarePackageProcedureProperties5())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureGroupSoftwarePackageProcedures4Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedures As Long)
            Me.GetSoftwarePackageProcedureGroupSoftwarePackageProcedures4Async(sessionId, listHandle, noOfSoftwarePackageProcedures, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwarePackageProcedureGroupSoftwarePackageProcedures4Async(ByVal sessionId As String, ByVal listHandle As Long, ByVal noOfSoftwarePackageProcedures As Long, ByVal userState As Object)
            If (Me.GetSoftwarePackageProcedureGroupSoftwarePackageProcedures4OperationCompleted Is Nothing) Then
                Me.GetSoftwarePackageProcedureGroupSoftwarePackageProcedures4OperationCompleted = AddressOf Me.OnGetSoftwarePackageProcedureGroupSoftwarePackageProcedures4OperationCompleted
            End If
            Me.InvokeAsync("GetSoftwarePackageProcedureGroupSoftwarePackageProcedures4", New Object() {sessionId, listHandle, noOfSoftwarePackageProcedures}, Me.GetSoftwarePackageProcedureGroupSoftwarePackageProcedures4OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwarePackageProcedureGroupSoftwarePackageProcedures4OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwarePackageProcedureGroupSoftwarePackageProcedures4CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwarePackageProcedureGroupSoftwarePackageProcedures4Completed(Me, New GetSoftwarePackageProcedureGroupSoftwarePackageProcedures4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSoftwarePackageProcedure5(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal procedureProperties As CreateSoftwarePackageProcedureProperties5) As <System.Xml.Serialization.XmlElementAttribute("procedureId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSoftwarePackageProcedure5", New Object() {sessionId, softwarePackageId, procedureProperties})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePackageProcedure5Async(ByVal sessionId As String, ByVal softwarePackageId As String, ByVal procedureProperties As CreateSoftwarePackageProcedureProperties5)
            Me.CreateSoftwarePackageProcedure5Async(sessionId, softwarePackageId, procedureProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePackageProcedure5Async(ByVal sessionId As String, ByVal softwarePackageId As String, ByVal procedureProperties As CreateSoftwarePackageProcedureProperties5, ByVal userState As Object)
            If (Me.CreateSoftwarePackageProcedure5OperationCompleted Is Nothing) Then
                Me.CreateSoftwarePackageProcedure5OperationCompleted = AddressOf Me.OnCreateSoftwarePackageProcedure5OperationCompleted
            End If
            Me.InvokeAsync("CreateSoftwarePackageProcedure5", New Object() {sessionId, softwarePackageId, procedureProperties}, Me.CreateSoftwarePackageProcedure5OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSoftwarePackageProcedure5OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSoftwarePackageProcedure5CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSoftwarePackageProcedure5Completed(Me, New CreateSoftwarePackageProcedure5CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateAddedSoftwarePackageProcedure4(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageProcedureProperties As CreateSoftwarePackageProcedureProperties5, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sourcePath As String) As <System.Xml.Serialization.XmlElementAttribute("softwarePackageProcedureUUID", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateAddedSoftwarePackageProcedure4", New Object() {sessionId, softwarePackageId, softwarePackageProcedureProperties, sourcePath})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateAddedSoftwarePackageProcedure4Async(ByVal sessionId As String, ByVal softwarePackageId As String, ByVal softwarePackageProcedureProperties As CreateSoftwarePackageProcedureProperties5, ByVal sourcePath As String)
            Me.CreateAddedSoftwarePackageProcedure4Async(sessionId, softwarePackageId, softwarePackageProcedureProperties, sourcePath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateAddedSoftwarePackageProcedure4Async(ByVal sessionId As String, ByVal softwarePackageId As String, ByVal softwarePackageProcedureProperties As CreateSoftwarePackageProcedureProperties5, ByVal sourcePath As String, ByVal userState As Object)
            If (Me.CreateAddedSoftwarePackageProcedure4OperationCompleted Is Nothing) Then
                Me.CreateAddedSoftwarePackageProcedure4OperationCompleted = AddressOf Me.OnCreateAddedSoftwarePackageProcedure4OperationCompleted
            End If
            Me.InvokeAsync("CreateAddedSoftwarePackageProcedure4", New Object() {sessionId, softwarePackageId, softwarePackageProcedureProperties, sourcePath}, Me.CreateAddedSoftwarePackageProcedure4OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateAddedSoftwarePackageProcedure4OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateAddedSoftwarePackageProcedure4CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateAddedSoftwarePackageProcedure4Completed(Me, New CreateAddedSoftwarePackageProcedure4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseElementName:="CreateAddedProcedureWithNewFilesResponse", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateAddedProcedureWithNewFiles2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal basedOnProcedureId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal procedureProperties As CreateAddedProcedureWithNewFilesProperties2, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sourcePath As String, ByVal sourceOnManager As Boolean) As <System.Xml.Serialization.XmlElementAttribute("procedureId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateAddedProcedureWithNewFiles2", New Object() {sessionId, softwarePackageId, basedOnProcedureId, procedureProperties, sourcePath, sourceOnManager})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateAddedProcedureWithNewFiles2Async(ByVal sessionId As String, ByVal softwarePackageId As String, ByVal basedOnProcedureId As String, ByVal procedureProperties As CreateAddedProcedureWithNewFilesProperties2, ByVal sourcePath As String, ByVal sourceOnManager As Boolean)
            Me.CreateAddedProcedureWithNewFiles2Async(sessionId, softwarePackageId, basedOnProcedureId, procedureProperties, sourcePath, sourceOnManager, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateAddedProcedureWithNewFiles2Async(ByVal sessionId As String, ByVal softwarePackageId As String, ByVal basedOnProcedureId As String, ByVal procedureProperties As CreateAddedProcedureWithNewFilesProperties2, ByVal sourcePath As String, ByVal sourceOnManager As Boolean, ByVal userState As Object)
            If (Me.CreateAddedProcedureWithNewFiles2OperationCompleted Is Nothing) Then
                Me.CreateAddedProcedureWithNewFiles2OperationCompleted = AddressOf Me.OnCreateAddedProcedureWithNewFiles2OperationCompleted
            End If
            Me.InvokeAsync("CreateAddedProcedureWithNewFiles2", New Object() {sessionId, softwarePackageId, basedOnProcedureId, procedureProperties, sourcePath, sourceOnManager}, Me.CreateAddedProcedureWithNewFiles2OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateAddedProcedureWithNewFiles2OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateAddedProcedureWithNewFiles2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateAddedProcedureWithNewFiles2Completed(Me, New CreateAddedProcedureWithNewFiles2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSoftwarePackageProcedure4(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal procedureUuid As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setProcedureProperties As SetSoftwarePackageProcedureProperties4)
            Me.Invoke("SetSoftwarePackageProcedure4", New Object() {sessionId, procedureUuid, setProcedureProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePackageProcedure4Async(ByVal sessionId As String, ByVal procedureUuid As String, ByVal setProcedureProperties As SetSoftwarePackageProcedureProperties4)
            Me.SetSoftwarePackageProcedure4Async(sessionId, procedureUuid, setProcedureProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePackageProcedure4Async(ByVal sessionId As String, ByVal procedureUuid As String, ByVal setProcedureProperties As SetSoftwarePackageProcedureProperties4, ByVal userState As Object)
            If (Me.SetSoftwarePackageProcedure4OperationCompleted Is Nothing) Then
                Me.SetSoftwarePackageProcedure4OperationCompleted = AddressOf Me.OnSetSoftwarePackageProcedure4OperationCompleted
            End If
            Me.InvokeAsync("SetSoftwarePackageProcedure4", New Object() {sessionId, procedureUuid, setProcedureProperties}, Me.SetSoftwarePackageProcedure4OperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSoftwarePackageProcedure4OperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSoftwarePackageProcedure4CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSoftwarePackageProcedure4Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSoftwarePackageProcedure5(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal procedureUuid As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal setProcedureProperties As SetSoftwarePackageProcedureProperties5)
            Me.Invoke("SetSoftwarePackageProcedure5", New Object() {sessionId, procedureUuid, setProcedureProperties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePackageProcedure5Async(ByVal sessionId As String, ByVal procedureUuid As String, ByVal setProcedureProperties As SetSoftwarePackageProcedureProperties5)
            Me.SetSoftwarePackageProcedure5Async(sessionId, procedureUuid, setProcedureProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSoftwarePackageProcedure5Async(ByVal sessionId As String, ByVal procedureUuid As String, ByVal setProcedureProperties As SetSoftwarePackageProcedureProperties5, ByVal userState As Object)
            If (Me.SetSoftwarePackageProcedure5OperationCompleted Is Nothing) Then
                Me.SetSoftwarePackageProcedure5OperationCompleted = AddressOf Me.OnSetSoftwarePackageProcedure5OperationCompleted
            End If
            Me.InvokeAsync("SetSoftwarePackageProcedure5", New Object() {sessionId, procedureUuid, setProcedureProperties}, Me.SetSoftwarePackageProcedure5OperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSoftwarePackageProcedure5OperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSoftwarePackageProcedure5CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSoftwarePackageProcedure5Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CreateSoftwarePackageProcedureDependency2(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal procedureUuid As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal dependentProcedures() As String)
            Me.Invoke("CreateSoftwarePackageProcedureDependency2", New Object() {sessionId, procedureUuid, dependentProcedures})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePackageProcedureDependency2Async(ByVal sessionId As String, ByVal procedureUuid As String, ByVal dependentProcedures() As String)
            Me.CreateSoftwarePackageProcedureDependency2Async(sessionId, procedureUuid, dependentProcedures, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwarePackageProcedureDependency2Async(ByVal sessionId As String, ByVal procedureUuid As String, ByVal dependentProcedures() As String, ByVal userState As Object)
            If (Me.CreateSoftwarePackageProcedureDependency2OperationCompleted Is Nothing) Then
                Me.CreateSoftwarePackageProcedureDependency2OperationCompleted = AddressOf Me.OnCreateSoftwarePackageProcedureDependency2OperationCompleted
            End If
            Me.InvokeAsync("CreateSoftwarePackageProcedureDependency2", New Object() {sessionId, procedureUuid, dependentProcedures}, Me.CreateSoftwarePackageProcedureDependency2OperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSoftwarePackageProcedureDependency2OperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSoftwarePackageProcedureDependency2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSoftwarePackageProcedureDependency2Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RepositionSoftwarePackageProcedureDependencies(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal procedureDependencies() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("elements", IsNullable:=false)> ByVal repositionOrder() As Integer)
            Me.Invoke("RepositionSoftwarePackageProcedureDependencies", New Object() {sessionId, procedureDependencies, repositionOrder})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepositionSoftwarePackageProcedureDependenciesAsync(ByVal sessionId As String, ByVal procedureDependencies() As String, ByVal repositionOrder() As Integer)
            Me.RepositionSoftwarePackageProcedureDependenciesAsync(sessionId, procedureDependencies, repositionOrder, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepositionSoftwarePackageProcedureDependenciesAsync(ByVal sessionId As String, ByVal procedureDependencies() As String, ByVal repositionOrder() As Integer, ByVal userState As Object)
            If (Me.RepositionSoftwarePackageProcedureDependenciesOperationCompleted Is Nothing) Then
                Me.RepositionSoftwarePackageProcedureDependenciesOperationCompleted = AddressOf Me.OnRepositionSoftwarePackageProcedureDependenciesOperationCompleted
            End If
            Me.InvokeAsync("RepositionSoftwarePackageProcedureDependencies", New Object() {sessionId, procedureDependencies, repositionOrder}, Me.RepositionSoftwarePackageProcedureDependenciesOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepositionSoftwarePackageProcedureDependenciesOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepositionSoftwarePackageProcedureDependenciesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepositionSoftwarePackageProcedureDependenciesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RepositionSoftwareItems(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal parentUuid As String, ByVal parentType As RepositionItemsParentType, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal items() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("elements", IsNullable:=false)> ByVal repositionOrder() As Integer)
            Me.Invoke("RepositionSoftwareItems", New Object() {sessionId, parentUuid, parentType, items, repositionOrder})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepositionSoftwareItemsAsync(ByVal sessionId As String, ByVal parentUuid As String, ByVal parentType As RepositionItemsParentType, ByVal items() As String, ByVal repositionOrder() As Integer)
            Me.RepositionSoftwareItemsAsync(sessionId, parentUuid, parentType, items, repositionOrder, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepositionSoftwareItemsAsync(ByVal sessionId As String, ByVal parentUuid As String, ByVal parentType As RepositionItemsParentType, ByVal items() As String, ByVal repositionOrder() As Integer, ByVal userState As Object)
            If (Me.RepositionSoftwareItemsOperationCompleted Is Nothing) Then
                Me.RepositionSoftwareItemsOperationCompleted = AddressOf Me.OnRepositionSoftwareItemsOperationCompleted
            End If
            Me.InvokeAsync("RepositionSoftwareItems", New Object() {sessionId, parentUuid, parentType, items, repositionOrder}, Me.RepositionSoftwareItemsOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepositionSoftwareItemsOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepositionSoftwareItemsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepositionSoftwareItemsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSoftwareJob(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal jobContainerProperties As JobContainerProperties, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("properties", IsNullable:=false)> ByVal jobPropertiesArray() As JobProperties, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal unitGroups() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByVal computerIds() As String, ByVal sealAndEvaluateJobContainer As Boolean, ByVal activateJobContainer As Boolean, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("stringElements")> ByRef jobIds() As String) As <System.Xml.Serialization.XmlElementAttribute("jobContainerId", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateSoftwareJob", New Object() {sessionId, jobContainerProperties, jobPropertiesArray, unitGroups, computerIds, sealAndEvaluateJobContainer, activateJobContainer})
            jobIds = CType(results(1),String())
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwareJobAsync(ByVal sessionId As String, ByVal jobContainerProperties As JobContainerProperties, ByVal jobPropertiesArray() As JobProperties, ByVal unitGroups() As String, ByVal computerIds() As String, ByVal sealAndEvaluateJobContainer As Boolean, ByVal activateJobContainer As Boolean)
            Me.CreateSoftwareJobAsync(sessionId, jobContainerProperties, jobPropertiesArray, unitGroups, computerIds, sealAndEvaluateJobContainer, activateJobContainer, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSoftwareJobAsync(ByVal sessionId As String, ByVal jobContainerProperties As JobContainerProperties, ByVal jobPropertiesArray() As JobProperties, ByVal unitGroups() As String, ByVal computerIds() As String, ByVal sealAndEvaluateJobContainer As Boolean, ByVal activateJobContainer As Boolean, ByVal userState As Object)
            If (Me.CreateSoftwareJobOperationCompleted Is Nothing) Then
                Me.CreateSoftwareJobOperationCompleted = AddressOf Me.OnCreateSoftwareJobOperationCompleted
            End If
            Me.InvokeAsync("CreateSoftwareJob", New Object() {sessionId, jobContainerProperties, jobPropertiesArray, unitGroups, computerIds, sealAndEvaluateJobContainer, activateJobContainer}, Me.CreateSoftwareJobOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSoftwareJobOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSoftwareJobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSoftwareJobCompleted(Me, New CreateSoftwareJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReadVolumeFile(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageVolumeId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal volumeSubPath As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal volumeFileName As String) As <System.Xml.Serialization.XmlElementAttribute("fileContents", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("ReadVolumeFile", New Object() {sessionId, softwarePackageVolumeId, volumeSubPath, volumeFileName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReadVolumeFileAsync(ByVal sessionId As String, ByVal softwarePackageVolumeId As String, ByVal volumeSubPath As String, ByVal volumeFileName As String)
            Me.ReadVolumeFileAsync(sessionId, softwarePackageVolumeId, volumeSubPath, volumeFileName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReadVolumeFileAsync(ByVal sessionId As String, ByVal softwarePackageVolumeId As String, ByVal volumeSubPath As String, ByVal volumeFileName As String, ByVal userState As Object)
            If (Me.ReadVolumeFileOperationCompleted Is Nothing) Then
                Me.ReadVolumeFileOperationCompleted = AddressOf Me.OnReadVolumeFileOperationCompleted
            End If
            Me.InvokeAsync("ReadVolumeFile", New Object() {sessionId, softwarePackageVolumeId, volumeSubPath, volumeFileName}, Me.ReadVolumeFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnReadVolumeFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReadVolumeFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReadVolumeFileCompleted(Me, New ReadVolumeFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WriteVolumeFile(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal softwarePackageVolumeId As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal volumeFileName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal volumeSubPath As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal contents As String)
            Me.Invoke("WriteVolumeFile", New Object() {sessionId, softwarePackageVolumeId, volumeFileName, volumeSubPath, contents})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WriteVolumeFileAsync(ByVal sessionId As String, ByVal softwarePackageVolumeId As String, ByVal volumeFileName As String, ByVal volumeSubPath As String, ByVal contents As String)
            Me.WriteVolumeFileAsync(sessionId, softwarePackageVolumeId, volumeFileName, volumeSubPath, contents, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WriteVolumeFileAsync(ByVal sessionId As String, ByVal softwarePackageVolumeId As String, ByVal volumeFileName As String, ByVal volumeSubPath As String, ByVal contents As String, ByVal userState As Object)
            If (Me.WriteVolumeFileOperationCompleted Is Nothing) Then
                Me.WriteVolumeFileOperationCompleted = AddressOf Me.OnWriteVolumeFileOperationCompleted
            End If
            Me.InvokeAsync("WriteVolumeFile", New Object() {sessionId, softwarePackageVolumeId, volumeFileName, volumeSubPath, contents}, Me.WriteVolumeFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnWriteVolumeFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.WriteVolumeFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WriteVolumeFileCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEditableVolumeFileExtensions(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String) As <System.Xml.Serialization.XmlElementAttribute("extensions", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("GetEditableVolumeFileExtensions", New Object() {sessionId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEditableVolumeFileExtensionsAsync(ByVal sessionId As String)
            Me.GetEditableVolumeFileExtensionsAsync(sessionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEditableVolumeFileExtensionsAsync(ByVal sessionId As String, ByVal userState As Object)
            If (Me.GetEditableVolumeFileExtensionsOperationCompleted Is Nothing) Then
                Me.GetEditableVolumeFileExtensionsOperationCompleted = AddressOf Me.OnGetEditableVolumeFileExtensionsOperationCompleted
            End If
            Me.InvokeAsync("GetEditableVolumeFileExtensions", New Object() {sessionId}, Me.GetEditableVolumeFileExtensionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEditableVolumeFileExtensionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEditableVolumeFileExtensionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEditableVolumeFileExtensionsCompleted(Me, New GetEditableVolumeFileExtensionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function JobContainerRestrictPriority(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String) As <System.Xml.Serialization.XmlElementAttribute("priorityRestriction")> Integer
            Dim results() As Object = Me.Invoke("JobContainerRestrictPriority", New Object() {sessionId})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub JobContainerRestrictPriorityAsync(ByVal sessionId As String)
            Me.JobContainerRestrictPriorityAsync(sessionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub JobContainerRestrictPriorityAsync(ByVal sessionId As String, ByVal userState As Object)
            If (Me.JobContainerRestrictPriorityOperationCompleted Is Nothing) Then
                Me.JobContainerRestrictPriorityOperationCompleted = AddressOf Me.OnJobContainerRestrictPriorityOperationCompleted
            End If
            Me.InvokeAsync("JobContainerRestrictPriority", New Object() {sessionId}, Me.JobContainerRestrictPriorityOperationCompleted, userState)
        End Sub
        
        Private Sub OnJobContainerRestrictPriorityOperationCompleted(ByVal arg As Object)
            If (Not (Me.JobContainerRestrictPriorityCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent JobContainerRestrictPriorityCompleted(Me, New JobContainerRestrictPriorityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="urn://www.ca.com/Unicenter/DSM/r11", ResponseNamespace:="urn://www.ca.com/Unicenter/DSM/r11", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSDFileCopyOperationStatus(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal sessionId As String) As <System.Xml.Serialization.XmlElementAttribute("isRunning")> Boolean
            Dim results() As Object = Me.Invoke("GetSDFileCopyOperationStatus", New Object() {sessionId})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSDFileCopyOperationStatusAsync(ByVal sessionId As String)
            Me.GetSDFileCopyOperationStatusAsync(sessionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSDFileCopyOperationStatusAsync(ByVal sessionId As String, ByVal userState As Object)
            If (Me.GetSDFileCopyOperationStatusOperationCompleted Is Nothing) Then
                Me.GetSDFileCopyOperationStatusOperationCompleted = AddressOf Me.OnGetSDFileCopyOperationStatusOperationCompleted
            End If
            Me.InvokeAsync("GetSDFileCopyOperationStatus", New Object() {sessionId}, Me.GetSDFileCopyOperationStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSDFileCopyOperationStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSDFileCopyOperationStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSDFileCopyOperationStatusCompleted(Me, New GetSDFileCopyOperationStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateUnitGroupProperties
        
        Private groupLabelField As String
        
        Private groupLabelSuppliedField As Boolean
        
        Private groupDescriptionField As String
        
        Private groupDescriptionSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupLabel() As String
            Get
                Return Me.groupLabelField
            End Get
            Set
                Me.groupLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupLabelSupplied() As Boolean
            Get
                Return Me.groupLabelSuppliedField
            End Get
            Set
                Me.groupLabelSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupDescription() As String
            Get
                Return Me.groupDescriptionField
            End Get
            Set
                Me.groupDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupDescriptionSupplied() As Boolean
            Get
                Return Me.groupDescriptionSuppliedField
            End Get
            Set
                Me.groupDescriptionSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwareJobOperationMask3
        
        Private reInstallField As Boolean
        
        Private runOfflineFromSSField As Boolean
        
        Private promptUserField As Boolean
        
        Private noPromptCancelField As Boolean
        
        Private execPromptTimeoutField As Boolean
        
        Private runAtShutdownField As Boolean
        
        Private enableUserInteractionField As Boolean
        
        Private shieldField As Boolean
        
        Private calendarControlField As Boolean
        
        Private resolveQueryGroupsField As Boolean
        
        Private autoDeliverItemField As Boolean
        
        Private renewFailedOnlyField As Boolean
        
        Private reRunField As Boolean
        
        '''<remarks/>
        Public Property reInstall() As Boolean
            Get
                Return Me.reInstallField
            End Get
            Set
                Me.reInstallField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property runOfflineFromSS() As Boolean
            Get
                Return Me.runOfflineFromSSField
            End Get
            Set
                Me.runOfflineFromSSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptUser() As Boolean
            Get
                Return Me.promptUserField
            End Get
            Set
                Me.promptUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noPromptCancel() As Boolean
            Get
                Return Me.noPromptCancelField
            End Get
            Set
                Me.noPromptCancelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property execPromptTimeout() As Boolean
            Get
                Return Me.execPromptTimeoutField
            End Get
            Set
                Me.execPromptTimeoutField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property runAtShutdown() As Boolean
            Get
                Return Me.runAtShutdownField
            End Get
            Set
                Me.runAtShutdownField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property enableUserInteraction() As Boolean
            Get
                Return Me.enableUserInteractionField
            End Get
            Set
                Me.enableUserInteractionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property shield() As Boolean
            Get
                Return Me.shieldField
            End Get
            Set
                Me.shieldField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property calendarControl() As Boolean
            Get
                Return Me.calendarControlField
            End Get
            Set
                Me.calendarControlField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property resolveQueryGroups() As Boolean
            Get
                Return Me.resolveQueryGroupsField
            End Get
            Set
                Me.resolveQueryGroupsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property autoDeliverItem() As Boolean
            Get
                Return Me.autoDeliverItemField
            End Get
            Set
                Me.autoDeliverItemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property renewFailedOnly() As Boolean
            Get
                Return Me.renewFailedOnlyField
            End Get
            Set
                Me.renewFailedOnlyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property reRun() As Boolean
            Get
                Return Me.reRunField
            End Get
            Set
                Me.reRunField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class JobProperties
        
        Private jobNameField As String
        
        Private procedureIdField As String
        
        Private taskField As SoftwarePackageProcedureTask
        
        Private installProcedureIdField As String
        
        Private deliveryDateField As DateTime
        
        Private executionDateField As DateTime
        
        Private userMessageField As String
        
        Private opMaskField As SoftwareJobOperationMask3
        
        Private bootBeforeMaskField As SoftwareJobBootMask3
        
        Private bootAfterMaskField As SoftwareJobBootMask3
        
        Private deliveryCalendarField As String
        
        Private timeoutHoursField As System.Nullable(Of Long)
        
        Private timeoutHoursFieldSpecified As Boolean
        
        Private promptTimeoutHoursField As System.Nullable(Of Long)
        
        Private promptTimeoutHoursFieldSpecified As Boolean
        
        Private startWhenField As System.Nullable(Of SoftwareJobStartupTime)
        
        Private startWhenFieldSpecified As Boolean
        
        Private userParametersField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property jobName() As String
            Get
                Return Me.jobNameField
            End Get
            Set
                Me.jobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property procedureId() As String
            Get
                Return Me.procedureIdField
            End Get
            Set
                Me.procedureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property task() As SoftwarePackageProcedureTask
            Get
                Return Me.taskField
            End Get
            Set
                Me.taskField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property installProcedureId() As String
            Get
                Return Me.installProcedureIdField
            End Get
            Set
                Me.installProcedureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property deliveryDate() As DateTime
            Get
                Return Me.deliveryDateField
            End Get
            Set
                Me.deliveryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property executionDate() As DateTime
            Get
                Return Me.executionDateField
            End Get
            Set
                Me.executionDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userMessage() As String
            Get
                Return Me.userMessageField
            End Get
            Set
                Me.userMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property opMask() As SoftwareJobOperationMask3
            Get
                Return Me.opMaskField
            End Get
            Set
                Me.opMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property bootBeforeMask() As SoftwareJobBootMask3
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property bootAfterMask() As SoftwareJobBootMask3
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property deliveryCalendar() As String
            Get
                Return Me.deliveryCalendarField
            End Get
            Set
                Me.deliveryCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property timeoutHours() As System.Nullable(Of Long)
            Get
                Return Me.timeoutHoursField
            End Get
            Set
                Me.timeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property timeoutHoursSpecified() As Boolean
            Get
                Return Me.timeoutHoursFieldSpecified
            End Get
            Set
                Me.timeoutHoursFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property promptTimeoutHours() As System.Nullable(Of Long)
            Get
                Return Me.promptTimeoutHoursField
            End Get
            Set
                Me.promptTimeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property promptTimeoutHoursSpecified() As Boolean
            Get
                Return Me.promptTimeoutHoursFieldSpecified
            End Get
            Set
                Me.promptTimeoutHoursFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property startWhen() As System.Nullable(Of SoftwareJobStartupTime)
            Get
                Return Me.startWhenField
            End Get
            Set
                Me.startWhenField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property startWhenSpecified() As Boolean
            Get
                Return Me.startWhenFieldSpecified
            End Get
            Set
                Me.startWhenFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userParameters() As String
            Get
                Return Me.userParametersField
            End Get
            Set
                Me.userParametersField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SoftwarePackageProcedureTask
        
        '''<remarks/>
        INSTALL
        
        '''<remarks/>
        UNINSTALL
        
        '''<remarks/>
        CONFIGURE
        
        '''<remarks/>
        ACTIVATE
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DateTime
        
        Private yearField As Integer
        
        Private monthField As Integer
        
        Private dayOfMonthField As Integer
        
        Private hourField As Integer
        
        Private minuteField As Integer
        
        '''<remarks/>
        Public Property year() As Integer
            Get
                Return Me.yearField
            End Get
            Set
                Me.yearField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property month() As Integer
            Get
                Return Me.monthField
            End Get
            Set
                Me.monthField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dayOfMonth() As Integer
            Get
                Return Me.dayOfMonthField
            End Get
            Set
                Me.dayOfMonthField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property hour() As Integer
            Get
                Return Me.hourField
            End Get
            Set
                Me.hourField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property minute() As Integer
            Get
                Return Me.minuteField
            End Get
            Set
                Me.minuteField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwareJobBootMask3
        
        Private noRebootField As Boolean
        
        Private rebootField As Boolean
        
        Private logoffField As Boolean
        
        Private rebootAfterLastField As Boolean
        
        Private logoffAfterLastField As Boolean
        
        Private shutdownAfterLastField As Boolean
        
        '''<remarks/>
        Public Property noReboot() As Boolean
            Get
                Return Me.noRebootField
            End Get
            Set
                Me.noRebootField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property reboot() As Boolean
            Get
                Return Me.rebootField
            End Get
            Set
                Me.rebootField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property logoff() As Boolean
            Get
                Return Me.logoffField
            End Get
            Set
                Me.logoffField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rebootAfterLast() As Boolean
            Get
                Return Me.rebootAfterLastField
            End Get
            Set
                Me.rebootAfterLastField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property logoffAfterLast() As Boolean
            Get
                Return Me.logoffAfterLastField
            End Get
            Set
                Me.logoffAfterLastField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property shutdownAfterLast() As Boolean
            Get
                Return Me.shutdownAfterLastField
            End Get
            Set
                Me.shutdownAfterLastField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SoftwareJobStartupTime
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("BOOT-LOCAL-TIME")>  _
        BOOTLOCALTIME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("EXACT-LOCAL-TIME")>  _
        EXACTLOCALTIME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("BOOT-GLOBAL-TIME")>  _
        BOOTGLOBALTIME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("EXACT-GLOBAL-TIME")>  _
        EXACTGLOBALTIME
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class JobContainerProperties
        
        Private nameField As String
        
        Private priorityField As System.Nullable(Of Integer)
        
        Private priorityFieldSpecified As Boolean
        
        Private userMessageField As String
        
        Private jobLinkageField As System.Nullable(Of SoftwareJobLinkageType)
        
        Private jobLinkageFieldSpecified As Boolean
        
        Private rollBackField As System.Nullable(Of Boolean)
        
        Private rollBackFieldSpecified As Boolean
        
        Private cascadeField As System.Nullable(Of Boolean)
        
        Private cascadeFieldSpecified As Boolean
        
        Private openTicketOnFailureField As System.Nullable(Of Boolean)
        
        Private openTicketOnFailureFieldSpecified As Boolean
        
        Private templateIdField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property priority() As System.Nullable(Of Integer)
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property prioritySpecified() As Boolean
            Get
                Return Me.priorityFieldSpecified
            End Get
            Set
                Me.priorityFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userMessage() As String
            Get
                Return Me.userMessageField
            End Get
            Set
                Me.userMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property jobLinkage() As System.Nullable(Of SoftwareJobLinkageType)
            Get
                Return Me.jobLinkageField
            End Get
            Set
                Me.jobLinkageField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property jobLinkageSpecified() As Boolean
            Get
                Return Me.jobLinkageFieldSpecified
            End Get
            Set
                Me.jobLinkageFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property rollBack() As System.Nullable(Of Boolean)
            Get
                Return Me.rollBackField
            End Get
            Set
                Me.rollBackField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property rollBackSpecified() As Boolean
            Get
                Return Me.rollBackFieldSpecified
            End Get
            Set
                Me.rollBackFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property cascade() As System.Nullable(Of Boolean)
            Get
                Return Me.cascadeField
            End Get
            Set
                Me.cascadeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property cascadeSpecified() As Boolean
            Get
                Return Me.cascadeFieldSpecified
            End Get
            Set
                Me.cascadeFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property openTicketOnFailure() As System.Nullable(Of Boolean)
            Get
                Return Me.openTicketOnFailureField
            End Get
            Set
                Me.openTicketOnFailureField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property openTicketOnFailureSpecified() As Boolean
            Get
                Return Me.openTicketOnFailureFieldSpecified
            End Get
            Set
                Me.openTicketOnFailureFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property templateId() As String
            Get
                Return Me.templateIdField
            End Get
            Set
                Me.templateIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SoftwareJobLinkageType
        
        '''<remarks/>
        NOLINKAGE
        
        '''<remarks/>
        TRANSACTION
        
        '''<remarks/>
        SYNCHRONIZED
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSoftwarePackageProcedureProperties5
        
        Private softwarePackageProcedureNameField As String
        
        Private softwarePackageProcedureNameSuppliedField As Boolean
        
        Private softwarePackageProcedureTaskField As SoftwarePackageProcedureTask
        
        Private softwarePackageProcedureTaskSuppliedField As Boolean
        
        Private softwarePackageProcedureTypeField As Integer
        
        Private softwarePackageProcedureTypeSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private userSelectableField As Boolean
        
        Private userSelectableSuppliedField As Boolean
        
        Private operatingSystemTypeField As Long
        
        Private operatingSystemTypeSuppliedField As Boolean
        
        Private procToRunField As String
        
        Private procToRunSuppliedField As Boolean
        
        Private subPathField As String
        
        Private subPathSuppliedField As Boolean
        
        Private softwarePackageVolumeIdField As String
        
        Private softwarePackageVolumeIdSuppliedField As Boolean
        
        Private parametersField As String
        
        Private parametersSuppliedField As Boolean
        
        Private operationMaskField As SoftwarePackageProcedureOperationMask5
        
        Private operationMaskSuppliedField As Boolean
        
        Private bootBeforeMaskField As SoftwarePackageProcedureBootMask2
        
        Private bootBeforeMaskSuppliedField As Boolean
        
        Private bootAfterMaskField As SoftwarePackageProcedureBootMask2
        
        Private bootAfterMaskSuppliedField As Boolean
        
        Private dependancyQueryIdField As String
        
        Private dependancyQueryIdSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureName() As String
            Get
                Return Me.softwarePackageProcedureNameField
            End Get
            Set
                Me.softwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureNameSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureNameSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTask() As SoftwarePackageProcedureTask
            Get
                Return Me.softwarePackageProcedureTaskField
            End Get
            Set
                Me.softwarePackageProcedureTaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTaskSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureTaskSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureTaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureType() As Integer
            Get
                Return Me.softwarePackageProcedureTypeField
            End Get
            Set
                Me.softwarePackageProcedureTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTypeSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureTypeSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectable() As Boolean
            Get
                Return Me.userSelectableField
            End Get
            Set
                Me.userSelectableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectableSupplied() As Boolean
            Get
                Return Me.userSelectableSuppliedField
            End Get
            Set
                Me.userSelectableSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemType() As Long
            Get
                Return Me.operatingSystemTypeField
            End Get
            Set
                Me.operatingSystemTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemTypeSupplied() As Boolean
            Get
                Return Me.operatingSystemTypeSuppliedField
            End Get
            Set
                Me.operatingSystemTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property procToRun() As String
            Get
                Return Me.procToRunField
            End Get
            Set
                Me.procToRunField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property procToRunSupplied() As Boolean
            Get
                Return Me.procToRunSuppliedField
            End Get
            Set
                Me.procToRunSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property subPath() As String
            Get
                Return Me.subPathField
            End Get
            Set
                Me.subPathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property subPathSupplied() As Boolean
            Get
                Return Me.subPathSuppliedField
            End Get
            Set
                Me.subPathSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVolumeId() As String
            Get
                Return Me.softwarePackageVolumeIdField
            End Get
            Set
                Me.softwarePackageVolumeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageVolumeIdSupplied() As Boolean
            Get
                Return Me.softwarePackageVolumeIdSuppliedField
            End Get
            Set
                Me.softwarePackageVolumeIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property parameters() As String
            Get
                Return Me.parametersField
            End Get
            Set
                Me.parametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property parametersSupplied() As Boolean
            Get
                Return Me.parametersSuppliedField
            End Get
            Set
                Me.parametersSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask() As SoftwarePackageProcedureOperationMask5
            Get
                Return Me.operationMaskField
            End Get
            Set
                Me.operationMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskSupplied() As Boolean
            Get
                Return Me.operationMaskSuppliedField
            End Get
            Set
                Me.operationMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwarePackageProcedureBootMask2
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskSupplied() As Boolean
            Get
                Return Me.bootBeforeMaskSuppliedField
            End Get
            Set
                Me.bootBeforeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwarePackageProcedureBootMask2
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskSupplied() As Boolean
            Get
                Return Me.bootAfterMaskSuppliedField
            End Get
            Set
                Me.bootAfterMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dependancyQueryId() As String
            Get
                Return Me.dependancyQueryIdField
            End Get
            Set
                Me.dependancyQueryIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dependancyQueryIdSupplied() As Boolean
            Get
                Return Me.dependancyQueryIdSuppliedField
            End Get
            Set
                Me.dependancyQueryIdSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProcedureOperationMask5
        
        Private offlineField As Boolean
        
        Private promptField As Boolean
        
        Private calendarControlField As Boolean
        
        Private shieldField As Boolean
        
        Private lockField As Boolean
        
        Private noPromptCancelField As Boolean
        
        Private backgroundField As Boolean
        
        Private rerunField As Boolean
        
        Private permActAreaField As Boolean
        
        Private execPromptTimeoutField As Boolean
        
        Private resolveQueryGroupsField As Boolean
        
        Private autoDeliverItemField As Boolean
        
        Private defaultItemProcField As Boolean
        
        Private renewFailedOnlyField As Boolean
        
        Private useDefaultJobMessageField As Boolean
        
        Private excludeFromRACField As Boolean
        
        Private runAtShutDownField As Boolean
        
        Private enableUserInteractionField As Boolean
        
        Private rollupInstallField As Boolean
        
        Private rollupConfigureField As Boolean
        
        '''<remarks/>
        Public Property offline() As Boolean
            Get
                Return Me.offlineField
            End Get
            Set
                Me.offlineField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prompt() As Boolean
            Get
                Return Me.promptField
            End Get
            Set
                Me.promptField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property calendarControl() As Boolean
            Get
                Return Me.calendarControlField
            End Get
            Set
                Me.calendarControlField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property shield() As Boolean
            Get
                Return Me.shieldField
            End Get
            Set
                Me.shieldField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lock() As Boolean
            Get
                Return Me.lockField
            End Get
            Set
                Me.lockField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noPromptCancel() As Boolean
            Get
                Return Me.noPromptCancelField
            End Get
            Set
                Me.noPromptCancelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property background() As Boolean
            Get
                Return Me.backgroundField
            End Get
            Set
                Me.backgroundField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rerun() As Boolean
            Get
                Return Me.rerunField
            End Get
            Set
                Me.rerunField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property permActArea() As Boolean
            Get
                Return Me.permActAreaField
            End Get
            Set
                Me.permActAreaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property execPromptTimeout() As Boolean
            Get
                Return Me.execPromptTimeoutField
            End Get
            Set
                Me.execPromptTimeoutField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property resolveQueryGroups() As Boolean
            Get
                Return Me.resolveQueryGroupsField
            End Get
            Set
                Me.resolveQueryGroupsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property autoDeliverItem() As Boolean
            Get
                Return Me.autoDeliverItemField
            End Get
            Set
                Me.autoDeliverItemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property defaultItemProc() As Boolean
            Get
                Return Me.defaultItemProcField
            End Get
            Set
                Me.defaultItemProcField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property renewFailedOnly() As Boolean
            Get
                Return Me.renewFailedOnlyField
            End Get
            Set
                Me.renewFailedOnlyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property useDefaultJobMessage() As Boolean
            Get
                Return Me.useDefaultJobMessageField
            End Get
            Set
                Me.useDefaultJobMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property excludeFromRAC() As Boolean
            Get
                Return Me.excludeFromRACField
            End Get
            Set
                Me.excludeFromRACField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property runAtShutDown() As Boolean
            Get
                Return Me.runAtShutDownField
            End Get
            Set
                Me.runAtShutDownField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property enableUserInteraction() As Boolean
            Get
                Return Me.enableUserInteractionField
            End Get
            Set
                Me.enableUserInteractionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rollupInstall() As Boolean
            Get
                Return Me.rollupInstallField
            End Get
            Set
                Me.rollupInstallField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rollupConfigure() As Boolean
            Get
                Return Me.rollupConfigureField
            End Get
            Set
                Me.rollupConfigureField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProcedureBootMask2
        
        Private noRebootField As Boolean
        
        Private rebootField As Boolean
        
        Private logoffField As Boolean
        
        Private rebootAfterLastField As Boolean
        
        Private logoffAfterLastField As Boolean
        
        Private shutdownAfterLastField As Boolean
        
        '''<remarks/>
        Public Property noReboot() As Boolean
            Get
                Return Me.noRebootField
            End Get
            Set
                Me.noRebootField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property reboot() As Boolean
            Get
                Return Me.rebootField
            End Get
            Set
                Me.rebootField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property logoff() As Boolean
            Get
                Return Me.logoffField
            End Get
            Set
                Me.logoffField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rebootAfterLast() As Boolean
            Get
                Return Me.rebootAfterLastField
            End Get
            Set
                Me.rebootAfterLastField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property logoffAfterLast() As Boolean
            Get
                Return Me.logoffAfterLastField
            End Get
            Set
                Me.logoffAfterLastField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property shutdownAfterLast() As Boolean
            Get
                Return Me.shutdownAfterLastField
            End Get
            Set
                Me.shutdownAfterLastField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSoftwarePackageProcedureProperties4
        
        Private softwarePackageProcedureNameField As String
        
        Private softwarePackageProcedureNameSuppliedField As Boolean
        
        Private softwarePackageProcedureTaskField As SoftwarePackageProcedureTask
        
        Private softwarePackageProcedureTaskSuppliedField As Boolean
        
        Private softwarePackageProcedureTypeField As Integer
        
        Private softwarePackageProcedureTypeSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private userSelectableField As Boolean
        
        Private userSelectableSuppliedField As Boolean
        
        Private operatingSystemTypeField As Long
        
        Private operatingSystemTypeSuppliedField As Boolean
        
        Private procToRunField As String
        
        Private procToRunSuppliedField As Boolean
        
        Private subPathField As String
        
        Private subPathSuppliedField As Boolean
        
        Private softwarePackageVolumeIdField As String
        
        Private softwarePackageVolumeIdSuppliedField As Boolean
        
        Private parametersField As String
        
        Private parametersSuppliedField As Boolean
        
        Private operationMaskField As SoftwarePackageProcedureOperationMask4
        
        Private operationMaskSuppliedField As Boolean
        
        Private bootBeforeMaskField As SoftwarePackageProcedureBootMask2
        
        Private bootBeforeMaskSuppliedField As Boolean
        
        Private bootAfterMaskField As SoftwarePackageProcedureBootMask2
        
        Private bootAfterMaskSuppliedField As Boolean
        
        Private dependancyQueryIdField As String
        
        Private dependancyQueryIdSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureName() As String
            Get
                Return Me.softwarePackageProcedureNameField
            End Get
            Set
                Me.softwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureNameSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureNameSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTask() As SoftwarePackageProcedureTask
            Get
                Return Me.softwarePackageProcedureTaskField
            End Get
            Set
                Me.softwarePackageProcedureTaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTaskSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureTaskSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureTaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureType() As Integer
            Get
                Return Me.softwarePackageProcedureTypeField
            End Get
            Set
                Me.softwarePackageProcedureTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTypeSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureTypeSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectable() As Boolean
            Get
                Return Me.userSelectableField
            End Get
            Set
                Me.userSelectableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectableSupplied() As Boolean
            Get
                Return Me.userSelectableSuppliedField
            End Get
            Set
                Me.userSelectableSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemType() As Long
            Get
                Return Me.operatingSystemTypeField
            End Get
            Set
                Me.operatingSystemTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemTypeSupplied() As Boolean
            Get
                Return Me.operatingSystemTypeSuppliedField
            End Get
            Set
                Me.operatingSystemTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property procToRun() As String
            Get
                Return Me.procToRunField
            End Get
            Set
                Me.procToRunField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property procToRunSupplied() As Boolean
            Get
                Return Me.procToRunSuppliedField
            End Get
            Set
                Me.procToRunSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property subPath() As String
            Get
                Return Me.subPathField
            End Get
            Set
                Me.subPathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property subPathSupplied() As Boolean
            Get
                Return Me.subPathSuppliedField
            End Get
            Set
                Me.subPathSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVolumeId() As String
            Get
                Return Me.softwarePackageVolumeIdField
            End Get
            Set
                Me.softwarePackageVolumeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageVolumeIdSupplied() As Boolean
            Get
                Return Me.softwarePackageVolumeIdSuppliedField
            End Get
            Set
                Me.softwarePackageVolumeIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property parameters() As String
            Get
                Return Me.parametersField
            End Get
            Set
                Me.parametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property parametersSupplied() As Boolean
            Get
                Return Me.parametersSuppliedField
            End Get
            Set
                Me.parametersSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask() As SoftwarePackageProcedureOperationMask4
            Get
                Return Me.operationMaskField
            End Get
            Set
                Me.operationMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskSupplied() As Boolean
            Get
                Return Me.operationMaskSuppliedField
            End Get
            Set
                Me.operationMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwarePackageProcedureBootMask2
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskSupplied() As Boolean
            Get
                Return Me.bootBeforeMaskSuppliedField
            End Get
            Set
                Me.bootBeforeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwarePackageProcedureBootMask2
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskSupplied() As Boolean
            Get
                Return Me.bootAfterMaskSuppliedField
            End Get
            Set
                Me.bootAfterMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dependancyQueryId() As String
            Get
                Return Me.dependancyQueryIdField
            End Get
            Set
                Me.dependancyQueryIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dependancyQueryIdSupplied() As Boolean
            Get
                Return Me.dependancyQueryIdSuppliedField
            End Get
            Set
                Me.dependancyQueryIdSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProcedureOperationMask4
        
        Private offlineField As Boolean
        
        Private promptField As Boolean
        
        Private calendarControlField As Boolean
        
        Private shieldField As Boolean
        
        Private lockField As Boolean
        
        Private noPromptCancelField As Boolean
        
        Private backgroundField As Boolean
        
        Private rerunField As Boolean
        
        Private permActAreaField As Boolean
        
        Private execPromptTimeoutField As Boolean
        
        Private resolveQueryGroupsField As Boolean
        
        Private autoDeliverItemField As Boolean
        
        Private defaultItemProcField As Boolean
        
        Private renewFailedOnlyField As Boolean
        
        Private useDefaultJobMessageField As Boolean
        
        Private excludeFromRACField As Boolean
        
        Private runAtShutDownField As Boolean
        
        Private enableUserInteractionField As Boolean
        
        '''<remarks/>
        Public Property offline() As Boolean
            Get
                Return Me.offlineField
            End Get
            Set
                Me.offlineField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prompt() As Boolean
            Get
                Return Me.promptField
            End Get
            Set
                Me.promptField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property calendarControl() As Boolean
            Get
                Return Me.calendarControlField
            End Get
            Set
                Me.calendarControlField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property shield() As Boolean
            Get
                Return Me.shieldField
            End Get
            Set
                Me.shieldField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lock() As Boolean
            Get
                Return Me.lockField
            End Get
            Set
                Me.lockField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noPromptCancel() As Boolean
            Get
                Return Me.noPromptCancelField
            End Get
            Set
                Me.noPromptCancelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property background() As Boolean
            Get
                Return Me.backgroundField
            End Get
            Set
                Me.backgroundField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rerun() As Boolean
            Get
                Return Me.rerunField
            End Get
            Set
                Me.rerunField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property permActArea() As Boolean
            Get
                Return Me.permActAreaField
            End Get
            Set
                Me.permActAreaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property execPromptTimeout() As Boolean
            Get
                Return Me.execPromptTimeoutField
            End Get
            Set
                Me.execPromptTimeoutField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property resolveQueryGroups() As Boolean
            Get
                Return Me.resolveQueryGroupsField
            End Get
            Set
                Me.resolveQueryGroupsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property autoDeliverItem() As Boolean
            Get
                Return Me.autoDeliverItemField
            End Get
            Set
                Me.autoDeliverItemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property defaultItemProc() As Boolean
            Get
                Return Me.defaultItemProcField
            End Get
            Set
                Me.defaultItemProcField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property renewFailedOnly() As Boolean
            Get
                Return Me.renewFailedOnlyField
            End Get
            Set
                Me.renewFailedOnlyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property useDefaultJobMessage() As Boolean
            Get
                Return Me.useDefaultJobMessageField
            End Get
            Set
                Me.useDefaultJobMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property excludeFromRAC() As Boolean
            Get
                Return Me.excludeFromRACField
            End Get
            Set
                Me.excludeFromRACField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property runAtShutDown() As Boolean
            Get
                Return Me.runAtShutDownField
            End Get
            Set
                Me.runAtShutDownField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property enableUserInteraction() As Boolean
            Get
                Return Me.enableUserInteractionField
            End Get
            Set
                Me.enableUserInteractionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateAddedProcedureWithNewFilesProperties2
        
        Private softwarePackageProcedureNameField As String
        
        Private softwarePackageProcedureTaskField As SoftwarePackageProcedureTask
        
        Private softwarePackageProcedureTypeField As Integer
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private userSelectableField As Boolean
        
        Private userSelectableSuppliedField As Boolean
        
        Private operatingSystemTypeField As Long
        
        Private procToRunField As String
        
        Private parametersField As String
        
        Private parametersSuppliedField As Boolean
        
        Private operationMaskField As SoftwarePackageProcedureOperationMask5
        
        Private operationMaskSuppliedField As Boolean
        
        Private bootBeforeMaskField As SoftwarePackageProcedureBootMask2
        
        Private bootBeforeMaskSuppliedField As Boolean
        
        Private bootAfterMaskField As SoftwarePackageProcedureBootMask2
        
        Private bootAfterMaskSuppliedField As Boolean
        
        Private dependancyQueryIdField As String
        
        Private dependancyQueryIdSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureName() As String
            Get
                Return Me.softwarePackageProcedureNameField
            End Get
            Set
                Me.softwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTask() As SoftwarePackageProcedureTask
            Get
                Return Me.softwarePackageProcedureTaskField
            End Get
            Set
                Me.softwarePackageProcedureTaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureType() As Integer
            Get
                Return Me.softwarePackageProcedureTypeField
            End Get
            Set
                Me.softwarePackageProcedureTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectable() As Boolean
            Get
                Return Me.userSelectableField
            End Get
            Set
                Me.userSelectableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectableSupplied() As Boolean
            Get
                Return Me.userSelectableSuppliedField
            End Get
            Set
                Me.userSelectableSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemType() As Long
            Get
                Return Me.operatingSystemTypeField
            End Get
            Set
                Me.operatingSystemTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property procToRun() As String
            Get
                Return Me.procToRunField
            End Get
            Set
                Me.procToRunField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property parameters() As String
            Get
                Return Me.parametersField
            End Get
            Set
                Me.parametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property parametersSupplied() As Boolean
            Get
                Return Me.parametersSuppliedField
            End Get
            Set
                Me.parametersSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask() As SoftwarePackageProcedureOperationMask5
            Get
                Return Me.operationMaskField
            End Get
            Set
                Me.operationMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskSupplied() As Boolean
            Get
                Return Me.operationMaskSuppliedField
            End Get
            Set
                Me.operationMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwarePackageProcedureBootMask2
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskSupplied() As Boolean
            Get
                Return Me.bootBeforeMaskSuppliedField
            End Get
            Set
                Me.bootBeforeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwarePackageProcedureBootMask2
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskSupplied() As Boolean
            Get
                Return Me.bootAfterMaskSuppliedField
            End Get
            Set
                Me.bootAfterMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dependancyQueryId() As String
            Get
                Return Me.dependancyQueryIdField
            End Get
            Set
                Me.dependancyQueryIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dependancyQueryIdSupplied() As Boolean
            Get
                Return Me.dependancyQueryIdSuppliedField
            End Get
            Set
                Me.dependancyQueryIdSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSoftwarePackageProcedureProperties5
        
        Private softwarePackageProcedureNameField As String
        
        Private softwarePackageProcedureTaskField As SoftwarePackageProcedureTask
        
        Private softwarePackageProcedureTypeField As Integer
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private userSelectableField As Boolean
        
        Private userSelectableSuppliedField As Boolean
        
        Private operatingSystemTypeField As Long
        
        Private procToRunField As String
        
        Private subPathField As String
        
        Private subPathSuppliedField As Boolean
        
        Private softwarePackageVolumeIdField As String
        
        Private softwarePackageVolumeIdSuppliedField As Boolean
        
        Private parametersField As String
        
        Private parametersSuppliedField As Boolean
        
        Private operationMaskField As SoftwarePackageProcedureOperationMask5
        
        Private operationMaskSuppliedField As Boolean
        
        Private bootBeforeMaskField As SoftwarePackageProcedureBootMask2
        
        Private bootBeforeMaskSuppliedField As Boolean
        
        Private bootAfterMaskField As SoftwarePackageProcedureBootMask2
        
        Private bootAfterMaskSuppliedField As Boolean
        
        Private managementTypeMaskField As SoftwarePackageProcedureManagementTypeMask
        
        Private managementTypeMaskSuppliedField As Boolean
        
        Private dependancyQueryIdField As String
        
        Private dependancyQueryIdSuppliedField As Boolean
        
        Private externalProcedureField As Boolean
        
        Private externalProcedureSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureName() As String
            Get
                Return Me.softwarePackageProcedureNameField
            End Get
            Set
                Me.softwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTask() As SoftwarePackageProcedureTask
            Get
                Return Me.softwarePackageProcedureTaskField
            End Get
            Set
                Me.softwarePackageProcedureTaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureType() As Integer
            Get
                Return Me.softwarePackageProcedureTypeField
            End Get
            Set
                Me.softwarePackageProcedureTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectable() As Boolean
            Get
                Return Me.userSelectableField
            End Get
            Set
                Me.userSelectableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectableSupplied() As Boolean
            Get
                Return Me.userSelectableSuppliedField
            End Get
            Set
                Me.userSelectableSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemType() As Long
            Get
                Return Me.operatingSystemTypeField
            End Get
            Set
                Me.operatingSystemTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property procToRun() As String
            Get
                Return Me.procToRunField
            End Get
            Set
                Me.procToRunField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property subPath() As String
            Get
                Return Me.subPathField
            End Get
            Set
                Me.subPathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property subPathSupplied() As Boolean
            Get
                Return Me.subPathSuppliedField
            End Get
            Set
                Me.subPathSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVolumeId() As String
            Get
                Return Me.softwarePackageVolumeIdField
            End Get
            Set
                Me.softwarePackageVolumeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageVolumeIdSupplied() As Boolean
            Get
                Return Me.softwarePackageVolumeIdSuppliedField
            End Get
            Set
                Me.softwarePackageVolumeIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property parameters() As String
            Get
                Return Me.parametersField
            End Get
            Set
                Me.parametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property parametersSupplied() As Boolean
            Get
                Return Me.parametersSuppliedField
            End Get
            Set
                Me.parametersSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask() As SoftwarePackageProcedureOperationMask5
            Get
                Return Me.operationMaskField
            End Get
            Set
                Me.operationMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskSupplied() As Boolean
            Get
                Return Me.operationMaskSuppliedField
            End Get
            Set
                Me.operationMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwarePackageProcedureBootMask2
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskSupplied() As Boolean
            Get
                Return Me.bootBeforeMaskSuppliedField
            End Get
            Set
                Me.bootBeforeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwarePackageProcedureBootMask2
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskSupplied() As Boolean
            Get
                Return Me.bootAfterMaskSuppliedField
            End Get
            Set
                Me.bootAfterMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property managementTypeMask() As SoftwarePackageProcedureManagementTypeMask
            Get
                Return Me.managementTypeMaskField
            End Get
            Set
                Me.managementTypeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property managementTypeMaskSupplied() As Boolean
            Get
                Return Me.managementTypeMaskSuppliedField
            End Get
            Set
                Me.managementTypeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dependancyQueryId() As String
            Get
                Return Me.dependancyQueryIdField
            End Get
            Set
                Me.dependancyQueryIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dependancyQueryIdSupplied() As Boolean
            Get
                Return Me.dependancyQueryIdSuppliedField
            End Get
            Set
                Me.dependancyQueryIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property externalProcedure() As Boolean
            Get
                Return Me.externalProcedureField
            End Get
            Set
                Me.externalProcedureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property externalProcedureSupplied() As Boolean
            Get
                Return Me.externalProcedureSuppliedField
            End Get
            Set
                Me.externalProcedureSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProcedureManagementTypeMask
        
        Private sdField As Boolean
        
        Private smField As Boolean
        
        '''<remarks/>
        Public Property sd() As Boolean
            Get
                Return Me.sdField
            End Get
            Set
                Me.sdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sm() As Boolean
            Get
                Return Me.smField
            End Get
            Set
                Me.smField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProcedureProperties5
        
        Private softwarePackageProcedureIdField As String
        
        Private softwarePackageProcedureNameField As String
        
        Private softwarePackageProcedureTaskField As SoftwarePackageProcedureTask
        
        Private procedureTypeField As Integer
        
        Private commentField As String
        
        Private userSelectableField As Boolean
        
        Private externalProcedureField As Boolean
        
        Private filedByField As SoftwarePackageProcedureFiledBy
        
        Private operatingSystemTypeField As Long
        
        Private subPathField As String
        
        Private procToRunField As String
        
        Private parametersField As String
        
        Private procedureRelationField As SoftwarePackageProcedureRelation
        
        Private activatedByField As SoftwarePackageProcedureFiledBy
        
        Private activatedDateTimeField As DateTime
        
        Private softwarePackageIdField As String
        
        Private softwarePackageNameField As String
        
        Private softwarePackageVersionField As String
        
        Private softwarePackageStateField As Integer
        
        Private softwarePackageVolumeIdField As String
        
        Private softwarePackageVolumeNameField As String
        
        Private operationMaskField As SoftwarePackageProcedureOperationMask5
        
        Private bootBeforeMaskField As SoftwarePackageProcedureBootMask2
        
        Private bootAfterMaskField As SoftwarePackageProcedureBootMask2
        
        Private dependancyQueryIdField As String
        
        Private managementTypeMaskField As SoftwarePackageProcedureManagementTypeMask
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureId() As String
            Get
                Return Me.softwarePackageProcedureIdField
            End Get
            Set
                Me.softwarePackageProcedureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureName() As String
            Get
                Return Me.softwarePackageProcedureNameField
            End Get
            Set
                Me.softwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTask() As SoftwarePackageProcedureTask
            Get
                Return Me.softwarePackageProcedureTaskField
            End Get
            Set
                Me.softwarePackageProcedureTaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property procedureType() As Integer
            Get
                Return Me.procedureTypeField
            End Get
            Set
                Me.procedureTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectable() As Boolean
            Get
                Return Me.userSelectableField
            End Get
            Set
                Me.userSelectableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property externalProcedure() As Boolean
            Get
                Return Me.externalProcedureField
            End Get
            Set
                Me.externalProcedureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property filedBy() As SoftwarePackageProcedureFiledBy
            Get
                Return Me.filedByField
            End Get
            Set
                Me.filedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemType() As Long
            Get
                Return Me.operatingSystemTypeField
            End Get
            Set
                Me.operatingSystemTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property subPath() As String
            Get
                Return Me.subPathField
            End Get
            Set
                Me.subPathField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property procToRun() As String
            Get
                Return Me.procToRunField
            End Get
            Set
                Me.procToRunField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property parameters() As String
            Get
                Return Me.parametersField
            End Get
            Set
                Me.parametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property procedureRelation() As SoftwarePackageProcedureRelation
            Get
                Return Me.procedureRelationField
            End Get
            Set
                Me.procedureRelationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activatedBy() As SoftwarePackageProcedureFiledBy
            Get
                Return Me.activatedByField
            End Get
            Set
                Me.activatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activatedDateTime() As DateTime
            Get
                Return Me.activatedDateTimeField
            End Get
            Set
                Me.activatedDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageId() As String
            Get
                Return Me.softwarePackageIdField
            End Get
            Set
                Me.softwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageName() As String
            Get
                Return Me.softwarePackageNameField
            End Get
            Set
                Me.softwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVersion() As String
            Get
                Return Me.softwarePackageVersionField
            End Get
            Set
                Me.softwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageState() As Integer
            Get
                Return Me.softwarePackageStateField
            End Get
            Set
                Me.softwarePackageStateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVolumeId() As String
            Get
                Return Me.softwarePackageVolumeIdField
            End Get
            Set
                Me.softwarePackageVolumeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVolumeName() As String
            Get
                Return Me.softwarePackageVolumeNameField
            End Get
            Set
                Me.softwarePackageVolumeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask() As SoftwarePackageProcedureOperationMask5
            Get
                Return Me.operationMaskField
            End Get
            Set
                Me.operationMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwarePackageProcedureBootMask2
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwarePackageProcedureBootMask2
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dependancyQueryId() As String
            Get
                Return Me.dependancyQueryIdField
            End Get
            Set
                Me.dependancyQueryIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property managementTypeMask() As SoftwarePackageProcedureManagementTypeMask
            Get
                Return Me.managementTypeMaskField
            End Get
            Set
                Me.managementTypeMaskField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SoftwarePackageProcedureFiledBy
        
        '''<remarks/>
        LOCAL
        
        '''<remarks/>
        CENTRAL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("TD-LOCAL")>  _
        TDLOCAL
        
        '''<remarks/>
        TDSWD
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("TDSWD-CENTRAL")>  _
        TDSWDCENTRAL
        
        '''<remarks/>
        TD
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SoftwarePackageProcedureRelation
        
        '''<remarks/>
        ADDED
        
        '''<remarks/>
        EMBEDDED
        
        '''<remarks/>
        DETECTED
        
        '''<remarks/>
        CONVERTED
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSoftwarePackageProcedureProperties4
        
        Private softwarePackageProcedureNameField As String
        
        Private softwarePackageProcedureTaskField As SoftwarePackageProcedureTask
        
        Private softwarePackageProcedureTypeField As Integer
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private userSelectableField As Boolean
        
        Private userSelectableSuppliedField As Boolean
        
        Private operatingSystemTypeField As Long
        
        Private procToRunField As String
        
        Private subPathField As String
        
        Private subPathSuppliedField As Boolean
        
        Private softwarePackageVolumeIdField As String
        
        Private softwarePackageVolumeIdSuppliedField As Boolean
        
        Private parametersField As String
        
        Private parametersSuppliedField As Boolean
        
        Private operationMaskField As SoftwarePackageProcedureOperationMask4
        
        Private operationMaskSuppliedField As Boolean
        
        Private bootBeforeMaskField As SoftwarePackageProcedureBootMask2
        
        Private bootBeforeMaskSuppliedField As Boolean
        
        Private bootAfterMaskField As SoftwarePackageProcedureBootMask2
        
        Private bootAfterMaskSuppliedField As Boolean
        
        Private dependancyQueryIdField As String
        
        Private dependancyQueryIdSuppliedField As Boolean
        
        Private externalProcedureField As Boolean
        
        Private externalProcedureSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureName() As String
            Get
                Return Me.softwarePackageProcedureNameField
            End Get
            Set
                Me.softwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTask() As SoftwarePackageProcedureTask
            Get
                Return Me.softwarePackageProcedureTaskField
            End Get
            Set
                Me.softwarePackageProcedureTaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureType() As Integer
            Get
                Return Me.softwarePackageProcedureTypeField
            End Get
            Set
                Me.softwarePackageProcedureTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectable() As Boolean
            Get
                Return Me.userSelectableField
            End Get
            Set
                Me.userSelectableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectableSupplied() As Boolean
            Get
                Return Me.userSelectableSuppliedField
            End Get
            Set
                Me.userSelectableSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemType() As Long
            Get
                Return Me.operatingSystemTypeField
            End Get
            Set
                Me.operatingSystemTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property procToRun() As String
            Get
                Return Me.procToRunField
            End Get
            Set
                Me.procToRunField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property subPath() As String
            Get
                Return Me.subPathField
            End Get
            Set
                Me.subPathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property subPathSupplied() As Boolean
            Get
                Return Me.subPathSuppliedField
            End Get
            Set
                Me.subPathSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVolumeId() As String
            Get
                Return Me.softwarePackageVolumeIdField
            End Get
            Set
                Me.softwarePackageVolumeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageVolumeIdSupplied() As Boolean
            Get
                Return Me.softwarePackageVolumeIdSuppliedField
            End Get
            Set
                Me.softwarePackageVolumeIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property parameters() As String
            Get
                Return Me.parametersField
            End Get
            Set
                Me.parametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property parametersSupplied() As Boolean
            Get
                Return Me.parametersSuppliedField
            End Get
            Set
                Me.parametersSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask() As SoftwarePackageProcedureOperationMask4
            Get
                Return Me.operationMaskField
            End Get
            Set
                Me.operationMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskSupplied() As Boolean
            Get
                Return Me.operationMaskSuppliedField
            End Get
            Set
                Me.operationMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwarePackageProcedureBootMask2
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskSupplied() As Boolean
            Get
                Return Me.bootBeforeMaskSuppliedField
            End Get
            Set
                Me.bootBeforeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwarePackageProcedureBootMask2
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskSupplied() As Boolean
            Get
                Return Me.bootAfterMaskSuppliedField
            End Get
            Set
                Me.bootAfterMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dependancyQueryId() As String
            Get
                Return Me.dependancyQueryIdField
            End Get
            Set
                Me.dependancyQueryIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dependancyQueryIdSupplied() As Boolean
            Get
                Return Me.dependancyQueryIdSuppliedField
            End Get
            Set
                Me.dependancyQueryIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property externalProcedure() As Boolean
            Get
                Return Me.externalProcedureField
            End Get
            Set
                Me.externalProcedureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property externalProcedureSupplied() As Boolean
            Get
                Return Me.externalProcedureSuppliedField
            End Get
            Set
                Me.externalProcedureSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DateTimeInfo
        
        Private timeInSecondsField As Long
        
        Private dstEnabledField As Boolean
        
        Private offSetField As Long
        
        Private timeZoneField As String
        
        '''<remarks/>
        Public Property timeInSeconds() As Long
            Get
                Return Me.timeInSecondsField
            End Get
            Set
                Me.timeInSecondsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dstEnabled() As Boolean
            Get
                Return Me.dstEnabledField
            End Get
            Set
                Me.dstEnabledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property offSet() As Long
            Get
                Return Me.offSetField
            End Get
            Set
                Me.offSetField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property timeZone() As String
            Get
                Return Me.timeZoneField
            End Get
            Set
                Me.timeZoneField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UpdateAlertsProperties
        
        Private updateStateField As Boolean
        
        Private ignorePreviousStateField As Boolean
        
        Private alertStateField As ALERTSTATE
        
        Private updateUserMessageField As Boolean
        
        Private userMessageField As String
        
        '''<remarks/>
        Public Property updateState() As Boolean
            Get
                Return Me.updateStateField
            End Get
            Set
                Me.updateStateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ignorePreviousState() As Boolean
            Get
                Return Me.ignorePreviousStateField
            End Get
            Set
                Me.ignorePreviousStateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property alertState() As ALERTSTATE
            Get
                Return Me.alertStateField
            End Get
            Set
                Me.alertStateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property updateUserMessage() As Boolean
            Get
                Return Me.updateUserMessageField
            End Get
            Set
                Me.updateUserMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userMessage() As String
            Get
                Return Me.userMessageField
            End Get
            Set
                Me.userMessageField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum ALERTSTATE
        
        '''<remarks/>
        [New]
        
        '''<remarks/>
        FollowUp
        
        '''<remarks/>
        Cleared
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateUnitGroupProperties3
        
        Private groupLabelField As String
        
        Private groupDescriptionField As String
        
        Private groupDescriptionSuppliedField As Boolean
        
        Private membersInheritPermissionsField As Boolean
        
        Private membersInheritPermissionsSuppliedField As Boolean
        
        Private queryUUIDField As String
        
        Private queryUUIDSuppliedField As Boolean
        
        Private engineNameField As String
        
        Private engineNameSuppliedField As Boolean
        
        Private evaluationPeriodField As Long
        
        Private evaluationPeriodSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupLabel() As String
            Get
                Return Me.groupLabelField
            End Get
            Set
                Me.groupLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupDescription() As String
            Get
                Return Me.groupDescriptionField
            End Get
            Set
                Me.groupDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupDescriptionSupplied() As Boolean
            Get
                Return Me.groupDescriptionSuppliedField
            End Get
            Set
                Me.groupDescriptionSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property membersInheritPermissions() As Boolean
            Get
                Return Me.membersInheritPermissionsField
            End Get
            Set
                Me.membersInheritPermissionsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property membersInheritPermissionsSupplied() As Boolean
            Get
                Return Me.membersInheritPermissionsSuppliedField
            End Get
            Set
                Me.membersInheritPermissionsSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryUUID() As String
            Get
                Return Me.queryUUIDField
            End Get
            Set
                Me.queryUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryUUIDSupplied() As Boolean
            Get
                Return Me.queryUUIDSuppliedField
            End Get
            Set
                Me.queryUUIDSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property engineName() As String
            Get
                Return Me.engineNameField
            End Get
            Set
                Me.engineNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property engineNameSupplied() As Boolean
            Get
                Return Me.engineNameSuppliedField
            End Get
            Set
                Me.engineNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriod() As Long
            Get
                Return Me.evaluationPeriodField
            End Get
            Set
                Me.evaluationPeriodField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriodSupplied() As Boolean
            Get
                Return Me.evaluationPeriodSuppliedField
            End Get
            Set
                Me.evaluationPeriodSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UnitGroupProperties2
        
        Private groupLabelField As String
        
        Private groupUuidField As String
        
        Private descriptionField As String
        
        Private domainUuidField As String
        
        Private groupTypeField As Integer
        
        Private creationUserField As String
        
        Private creationdateField As DateTime2
        
        Private lastUpdatedUserField As String
        
        Private lastUpdatedDateField As DateTime2
        
        Private membersInheritPermissionsField As Boolean
        
        Private queryUUIDField As String
        
        Private queryLabelField As String
        
        Private engineLabelField As String
        
        Private evaluationUUIDField As String
        
        Private engineDescriptionField As String
        
        Private evaluationFrequencyField As Long
        
        Private lastEvaluationDateTimeField As DateTime2
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupLabel() As String
            Get
                Return Me.groupLabelField
            End Get
            Set
                Me.groupLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupUuid() As String
            Get
                Return Me.groupUuidField
            End Get
            Set
                Me.groupUuidField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property domainUuid() As String
            Get
                Return Me.domainUuidField
            End Get
            Set
                Me.domainUuidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupType() As Integer
            Get
                Return Me.groupTypeField
            End Get
            Set
                Me.groupTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property creationUser() As String
            Get
                Return Me.creationUserField
            End Get
            Set
                Me.creationUserField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property creationdate() As DateTime2
            Get
                Return Me.creationdateField
            End Get
            Set
                Me.creationdateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property lastUpdatedUser() As String
            Get
                Return Me.lastUpdatedUserField
            End Get
            Set
                Me.lastUpdatedUserField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property lastUpdatedDate() As DateTime2
            Get
                Return Me.lastUpdatedDateField
            End Get
            Set
                Me.lastUpdatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property membersInheritPermissions() As Boolean
            Get
                Return Me.membersInheritPermissionsField
            End Get
            Set
                Me.membersInheritPermissionsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryUUID() As String
            Get
                Return Me.queryUUIDField
            End Get
            Set
                Me.queryUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryLabel() As String
            Get
                Return Me.queryLabelField
            End Get
            Set
                Me.queryLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property engineLabel() As String
            Get
                Return Me.engineLabelField
            End Get
            Set
                Me.engineLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property evaluationUUID() As String
            Get
                Return Me.evaluationUUIDField
            End Get
            Set
                Me.evaluationUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property engineDescription() As String
            Get
                Return Me.engineDescriptionField
            End Get
            Set
                Me.engineDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationFrequency() As Long
            Get
                Return Me.evaluationFrequencyField
            End Get
            Set
                Me.evaluationFrequencyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property lastEvaluationDateTime() As DateTime2
            Get
                Return Me.lastEvaluationDateTimeField
            End Get
            Set
                Me.lastEvaluationDateTimeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DateTime2
        
        Private yearField As Integer
        
        Private monthField As Integer
        
        Private dayOfMonthField As Integer
        
        Private hourField As Integer
        
        Private minuteField As Integer
        
        Private secondsField As Integer
        
        '''<remarks/>
        Public Property year() As Integer
            Get
                Return Me.yearField
            End Get
            Set
                Me.yearField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property month() As Integer
            Get
                Return Me.monthField
            End Get
            Set
                Me.monthField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dayOfMonth() As Integer
            Get
                Return Me.dayOfMonthField
            End Get
            Set
                Me.dayOfMonthField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property hour() As Integer
            Get
                Return Me.hourField
            End Get
            Set
                Me.hourField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property minute() As Integer
            Get
                Return Me.minuteField
            End Get
            Set
                Me.minuteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property seconds() As Integer
            Get
                Return Me.secondsField
            End Get
            Set
                Me.secondsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateComputerProperties2
        
        Private computerHostNameField As String
        
        Private computerLabelField As String
        
        Private computerLabelSuppliedField As Boolean
        
        Private computerPrimaryNetworkAddressField As String
        
        Private classIDField As Long
        
        Private computerPrimaryMACAddressField As String
        
        Private computerPrimaryMACAddressSuppliedField As Boolean
        
        Private serialNumberField As String
        
        Private serialNumberSuppliedField As Boolean
        
        Private assetTagField As String
        
        Private assetTagSuppliedField As Boolean
        
        Private computerTypeField As ComputerType
        
        Private computerTypeSuppliedField As Boolean
        
        Private scalabilityServerNameField As String
        
        Private scalabilityServerNameSuppliedField As Boolean
        
        Private createAgentComponentsField As CreateAgentComponents
        
        Private descriptionField As String
        
        Private descriptionSuppliedField As Boolean
        
        Private sdAgentPropertiesField As SDAgentProperties
        
        Private sdAgentPropertiesSuppliedField As Boolean
        
        Private userField As String
        
        Private userSuppliedField As Boolean
        
        Private phoneField As String
        
        Private phoneSuppliedField As Boolean
        
        Private locationField As String
        
        Private locationSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerHostName() As String
            Get
                Return Me.computerHostNameField
            End Get
            Set
                Me.computerHostNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerLabel() As String
            Get
                Return Me.computerLabelField
            End Get
            Set
                Me.computerLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerLabelSupplied() As Boolean
            Get
                Return Me.computerLabelSuppliedField
            End Get
            Set
                Me.computerLabelSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerPrimaryNetworkAddress() As String
            Get
                Return Me.computerPrimaryNetworkAddressField
            End Get
            Set
                Me.computerPrimaryNetworkAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property classID() As Long
            Get
                Return Me.classIDField
            End Get
            Set
                Me.classIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerPrimaryMACAddress() As String
            Get
                Return Me.computerPrimaryMACAddressField
            End Get
            Set
                Me.computerPrimaryMACAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerPrimaryMACAddressSupplied() As Boolean
            Get
                Return Me.computerPrimaryMACAddressSuppliedField
            End Get
            Set
                Me.computerPrimaryMACAddressSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property serialNumber() As String
            Get
                Return Me.serialNumberField
            End Get
            Set
                Me.serialNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property serialNumberSupplied() As Boolean
            Get
                Return Me.serialNumberSuppliedField
            End Get
            Set
                Me.serialNumberSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property assetTag() As String
            Get
                Return Me.assetTagField
            End Get
            Set
                Me.assetTagField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property assetTagSupplied() As Boolean
            Get
                Return Me.assetTagSuppliedField
            End Get
            Set
                Me.assetTagSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerType() As ComputerType
            Get
                Return Me.computerTypeField
            End Get
            Set
                Me.computerTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerTypeSupplied() As Boolean
            Get
                Return Me.computerTypeSuppliedField
            End Get
            Set
                Me.computerTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property scalabilityServerName() As String
            Get
                Return Me.scalabilityServerNameField
            End Get
            Set
                Me.scalabilityServerNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property scalabilityServerNameSupplied() As Boolean
            Get
                Return Me.scalabilityServerNameSuppliedField
            End Get
            Set
                Me.scalabilityServerNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property createAgentComponents() As CreateAgentComponents
            Get
                Return Me.createAgentComponentsField
            End Get
            Set
                Me.createAgentComponentsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property descriptionSupplied() As Boolean
            Get
                Return Me.descriptionSuppliedField
            End Get
            Set
                Me.descriptionSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sdAgentProperties() As SDAgentProperties
            Get
                Return Me.sdAgentPropertiesField
            End Get
            Set
                Me.sdAgentPropertiesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sdAgentPropertiesSupplied() As Boolean
            Get
                Return Me.sdAgentPropertiesSuppliedField
            End Get
            Set
                Me.sdAgentPropertiesSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property user() As String
            Get
                Return Me.userField
            End Get
            Set
                Me.userField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSupplied() As Boolean
            Get
                Return Me.userSuppliedField
            End Get
            Set
                Me.userSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property phone() As String
            Get
                Return Me.phoneField
            End Get
            Set
                Me.phoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property phoneSupplied() As Boolean
            Get
                Return Me.phoneSuppliedField
            End Get
            Set
                Me.phoneSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property location() As String
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property locationSupplied() As Boolean
            Get
                Return Me.locationSuppliedField
            End Get
            Set
                Me.locationSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum ComputerType
        
        '''<remarks/>
        MACHINE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SCALABILITY-SERVER")>  _
        SCALABILITYSERVER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DOCKING-DEVICE")>  _
        DOCKINGDEVICE
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateAgentComponents
        
        Private amAgentField As Boolean
        
        Private amSWUsageAgentField As Boolean
        
        Private amPerformanceAgentField As Boolean
        
        Private sdAgentField As Boolean
        
        Private dtsAgentField As Boolean
        
        Private rcAgentField As Boolean
        
        '''<remarks/>
        Public Property amAgent() As Boolean
            Get
                Return Me.amAgentField
            End Get
            Set
                Me.amAgentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property amSWUsageAgent() As Boolean
            Get
                Return Me.amSWUsageAgentField
            End Get
            Set
                Me.amSWUsageAgentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property amPerformanceAgent() As Boolean
            Get
                Return Me.amPerformanceAgentField
            End Get
            Set
                Me.amPerformanceAgentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sdAgent() As Boolean
            Get
                Return Me.sdAgentField
            End Get
            Set
                Me.sdAgentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dtsAgent() As Boolean
            Get
                Return Me.dtsAgentField
            End Get
            Set
                Me.dtsAgentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rcAgent() As Boolean
            Get
                Return Me.rcAgentField
            End Get
            Set
                Me.rcAgentField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SDAgentProperties
        
        Private jobCalendarField As String
        
        Private jobCalendarSuppliedField As Boolean
        
        Private softwareManagedSystemField As Boolean
        
        Private softwareManagedSystemSuppliedField As Boolean
        
        Private racPolicyField As RACPolicy
        
        Private racPolicySuppliedField As Boolean
        
        Private downloadMethodField As DownloadMethod
        
        Private downloadMethodSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property jobCalendar() As String
            Get
                Return Me.jobCalendarField
            End Get
            Set
                Me.jobCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property jobCalendarSupplied() As Boolean
            Get
                Return Me.jobCalendarSuppliedField
            End Get
            Set
                Me.jobCalendarSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareManagedSystem() As Boolean
            Get
                Return Me.softwareManagedSystemField
            End Get
            Set
                Me.softwareManagedSystemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareManagedSystemSupplied() As Boolean
            Get
                Return Me.softwareManagedSystemSuppliedField
            End Get
            Set
                Me.softwareManagedSystemSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property racPolicy() As RACPolicy
            Get
                Return Me.racPolicyField
            End Get
            Set
                Me.racPolicyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property racPolicySupplied() As Boolean
            Get
                Return Me.racPolicySuppliedField
            End Get
            Set
                Me.racPolicySuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property downloadMethod() As DownloadMethod
            Get
                Return Me.downloadMethodField
            End Get
            Set
                Me.downloadMethodField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property downloadMethodSupplied() As Boolean
            Get
                Return Me.downloadMethodSuppliedField
            End Get
            Set
                Me.downloadMethodSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum RACPolicy
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("RAC-COMMON")>  _
        RACCOMMON
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("RAC-AUTOMATIC")>  _
        RACAUTOMATIC
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("RAC-DEFERRED")>  _
        RACDEFERRED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("RAC-DISABLED")>  _
        RACDISABLED
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum DownloadMethod
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("INTERNAL-NOS")>  _
        INTERNALNOS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("INTERNAL-NOSLESS")>  _
        INTERNALNOSLESS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DTS-NOSLESS")>  _
        DTSNOSLESS
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UnitSoftwareJobProperties3
        
        Private unitSoftwareJobIdField As String
        
        Private unitIdField As String
        
        Private unitNameField As String
        
        Private unitTypeField As UnitType
        
        Private unitNetAddressField As String
        
        Private softwareJobIdField As String
        
        Private softwareJobNameField As String
        
        Private softwareJobStateField As SoftwareJobState
        
        Private softwareJobOrderNumberField As Long
        
        Private softwarePackageIdField As String
        
        Private softwarePackageNameField As String
        
        Private softwarePackageVersionField As String
        
        Private softwarePackageStateField As SoftwarePackageClass
        
        Private softwarePackageProcedureIdField As String
        
        Private softwarePackageProcedureNameField As String
        
        Private activationDateTimeField As DateTime
        
        Private creationDateTimeField As DateTime
        
        Private completionDateTimeField As DateTime
        
        Private softwareJobTypeField As SoftwareJobType
        
        Private orderedByField As String
        
        Private unitSoftwareJobStateField As UnitSoftwareJobState
        
        Private unitSoftwareJobRenewStateField As UnitSoftwareJobState
        
        Private unitSoftwareJobPermissionMaskField As SoftwareJobPermissionMask
        
        Private errorMessageField As String
        
        Private errorCodeField As Long
        
        Private userDefinedNameField As String
        
        Private commentField As String
        
        Private unitInstallationSoftwareJobIdField As String
        
        Private unitInstallationSoftwarePackageProcedureIdField As String
        
        Private unitInstallationSoftwarePackageProcedureNameField As String
        
        Private softwareJobTaskMaskField As UnitSoftwareJobTaskMask
        
        Private percentSentField As Long
        
        Private packageTypeField As Integer
        
        Private userParamsField As String
        
        Private unitHostUUIDField As String
        
        Private packageFormatField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitSoftwareJobId() As String
            Get
                Return Me.unitSoftwareJobIdField
            End Get
            Set
                Me.unitSoftwareJobIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitId() As String
            Get
                Return Me.unitIdField
            End Get
            Set
                Me.unitIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitName() As String
            Get
                Return Me.unitNameField
            End Get
            Set
                Me.unitNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitType() As UnitType
            Get
                Return Me.unitTypeField
            End Get
            Set
                Me.unitTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitNetAddress() As String
            Get
                Return Me.unitNetAddressField
            End Get
            Set
                Me.unitNetAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareJobId() As String
            Get
                Return Me.softwareJobIdField
            End Get
            Set
                Me.softwareJobIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareJobName() As String
            Get
                Return Me.softwareJobNameField
            End Get
            Set
                Me.softwareJobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobState() As SoftwareJobState
            Get
                Return Me.softwareJobStateField
            End Get
            Set
                Me.softwareJobStateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobOrderNumber() As Long
            Get
                Return Me.softwareJobOrderNumberField
            End Get
            Set
                Me.softwareJobOrderNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageId() As String
            Get
                Return Me.softwarePackageIdField
            End Get
            Set
                Me.softwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageName() As String
            Get
                Return Me.softwarePackageNameField
            End Get
            Set
                Me.softwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVersion() As String
            Get
                Return Me.softwarePackageVersionField
            End Get
            Set
                Me.softwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageState() As SoftwarePackageClass
            Get
                Return Me.softwarePackageStateField
            End Get
            Set
                Me.softwarePackageStateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureId() As String
            Get
                Return Me.softwarePackageProcedureIdField
            End Get
            Set
                Me.softwarePackageProcedureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureName() As String
            Get
                Return Me.softwarePackageProcedureNameField
            End Get
            Set
                Me.softwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activationDateTime() As DateTime
            Get
                Return Me.activationDateTimeField
            End Get
            Set
                Me.activationDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDateTime() As DateTime
            Get
                Return Me.creationDateTimeField
            End Get
            Set
                Me.creationDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property completionDateTime() As DateTime
            Get
                Return Me.completionDateTimeField
            End Get
            Set
                Me.completionDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobType() As SoftwareJobType
            Get
                Return Me.softwareJobTypeField
            End Get
            Set
                Me.softwareJobTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property orderedBy() As String
            Get
                Return Me.orderedByField
            End Get
            Set
                Me.orderedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitSoftwareJobState() As UnitSoftwareJobState
            Get
                Return Me.unitSoftwareJobStateField
            End Get
            Set
                Me.unitSoftwareJobStateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitSoftwareJobRenewState() As UnitSoftwareJobState
            Get
                Return Me.unitSoftwareJobRenewStateField
            End Get
            Set
                Me.unitSoftwareJobRenewStateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitSoftwareJobPermissionMask() As SoftwareJobPermissionMask
            Get
                Return Me.unitSoftwareJobPermissionMaskField
            End Get
            Set
                Me.unitSoftwareJobPermissionMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property errorMessage() As String
            Get
                Return Me.errorMessageField
            End Get
            Set
                Me.errorMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property errorCode() As Long
            Get
                Return Me.errorCodeField
            End Get
            Set
                Me.errorCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userDefinedName() As String
            Get
                Return Me.userDefinedNameField
            End Get
            Set
                Me.userDefinedNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitInstallationSoftwareJobId() As String
            Get
                Return Me.unitInstallationSoftwareJobIdField
            End Get
            Set
                Me.unitInstallationSoftwareJobIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitInstallationSoftwarePackageProcedureId() As String
            Get
                Return Me.unitInstallationSoftwarePackageProcedureIdField
            End Get
            Set
                Me.unitInstallationSoftwarePackageProcedureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitInstallationSoftwarePackageProcedureName() As String
            Get
                Return Me.unitInstallationSoftwarePackageProcedureNameField
            End Get
            Set
                Me.unitInstallationSoftwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobTaskMask() As UnitSoftwareJobTaskMask
            Get
                Return Me.softwareJobTaskMaskField
            End Get
            Set
                Me.softwareJobTaskMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property percentSent() As Long
            Get
                Return Me.percentSentField
            End Get
            Set
                Me.percentSentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property packageType() As Integer
            Get
                Return Me.packageTypeField
            End Get
            Set
                Me.packageTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userParams() As String
            Get
                Return Me.userParamsField
            End Get
            Set
                Me.userParamsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitHostUUID() As String
            Get
                Return Me.unitHostUUIDField
            End Get
            Set
                Me.unitHostUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property packageFormat() As Integer
            Get
                Return Me.packageFormatField
            End Get
            Set
                Me.packageFormatField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum UnitType
        
        '''<remarks/>
        COMPUTER
        
        '''<remarks/>
        USERACCOUNT
        
        '''<remarks/>
        USERPROFILE
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SoftwareJobState
        
        '''<remarks/>
        WAITING
        
        '''<remarks/>
        INPROGRESS
        
        '''<remarks/>
        OK
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DSM-ERROR")>  _
        DSMERROR
        
        '''<remarks/>
        BUILDING
        
        '''<remarks/>
        REMOVING
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("NOT-AVAILABLE")>  _
        NOTAVAILABLE
        
        '''<remarks/>
        CREATED
        
        '''<remarks/>
        OBSOLETE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("HALT-INPROGRESS")>  _
        HALTINPROGRESS
        
        '''<remarks/>
        HALTED
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SoftwarePackageClass
        
        '''<remarks/>
        SOFTWARE
        
        '''<remarks/>
        OPEN
        
        '''<remarks/>
        DETECTED
        
        '''<remarks/>
        ARCHIVED
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SoftwareJobType
        
        '''<remarks/>
        MANDATORY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DSM-OPTIONAL")>  _
        DSMOPTIONAL
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum UnitSoftwareJobState
        
        '''<remarks/>
        UNDEFINED
        
        '''<remarks/>
        WAITING
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DELIVERY-ORDERED")>  _
        DELIVERYORDERED
        
        '''<remarks/>
        DELIVERING
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DELIVERY-OK")>  _
        DELIVERYOK
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DELIVERY-ERROR")>  _
        DELIVERYERROR
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ALREADY-DELIVERED")>  _
        ALREADYDELIVERED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("EXECUTION-ORDERED")>  _
        EXECUTIONORDERED
        
        '''<remarks/>
        EXECUTING
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("EXECUTION-OK")>  _
        EXECUTIONOK
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("EXECUTION-ERROR")>  _
        EXECUTIONERROR
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNDELIVERY-ORDERED")>  _
        UNDELIVERYORDERED
        
        '''<remarks/>
        UNDELIVERING
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNDELIVERY-OK")>  _
        UNDELIVERYOK
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNDELIVERY-ERROR")>  _
        UNDELIVERYERROR
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ALREADY-INSTALLED")>  _
        ALREADYINSTALLED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MANIPULATION-NOT-ALLOWED")>  _
        MANIPULATIONNOTALLOWED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DELIVERY-SUSPEND-ORDERED")>  _
        DELIVERYSUSPENDORDERED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DELIVERY-SUSPEND-INPROGRESS")>  _
        DELIVERYSUSPENDINPROGRESS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DELIVERY-SUSPENDED")>  _
        DELIVERYSUSPENDED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DELIVERY-RESUME-ORDERED")>  _
        DELIVERYRESUMEORDERED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DELIVERY-RESUME-INPROGRESS")>  _
        DELIVERYRESUMEINPROGRESS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNDELIVERY-SUSPEND-ORDERED")>  _
        UNDELIVERYSUSPENDORDERED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNDELIVERY-SUSPEND-INPROGRESS")>  _
        UNDELIVERYSUSPENDINPROGRESS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNDELIVERY-SUSPENDED")>  _
        UNDELIVERYSUSPENDED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNDELIVERY-RESUME-ORDERED")>  _
        UNDELIVERYRESUMEORDERED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNDELIVERY-RESUME-INPROGRESS")>  _
        UNDELIVERYRESUMEINPROGRESS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("EXECUTION-ORDER-STAGED")>  _
        EXECUTIONORDERSTAGED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("NOT-APPLICABLE")>  _
        NOTAPPLICABLE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ALREADY-INSTALLED-NONSD")>  _
        ALREADYINSTALLEDNONSD
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwareJobPermissionMask
        
        Private renewAllowedField As Boolean
        
        Private cancelAllowedField As Boolean
        
        Private recoveryAllowedField As Boolean
        
        Private rescheduleAllowedField As Boolean
        
        Private suspendAllowedField As Boolean
        
        Private resumeAllowedField As Boolean
        
        Private userParametersAllowedField As Boolean
        
        '''<remarks/>
        Public Property renewAllowed() As Boolean
            Get
                Return Me.renewAllowedField
            End Get
            Set
                Me.renewAllowedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cancelAllowed() As Boolean
            Get
                Return Me.cancelAllowedField
            End Get
            Set
                Me.cancelAllowedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property recoveryAllowed() As Boolean
            Get
                Return Me.recoveryAllowedField
            End Get
            Set
                Me.recoveryAllowedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rescheduleAllowed() As Boolean
            Get
                Return Me.rescheduleAllowedField
            End Get
            Set
                Me.rescheduleAllowedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property suspendAllowed() As Boolean
            Get
                Return Me.suspendAllowedField
            End Get
            Set
                Me.suspendAllowedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property resumeAllowed() As Boolean
            Get
                Return Me.resumeAllowedField
            End Get
            Set
                Me.resumeAllowedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userParametersAllowed() As Boolean
            Get
                Return Me.userParametersAllowedField
            End Get
            Set
                Me.userParametersAllowedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UnitSoftwareJobTaskMask
        
        Private installField As Boolean
        
        Private uninstallField As Boolean
        
        Private configureField As Boolean
        
        Private activateField As Boolean
        
        Private deliverField As Boolean
        
        Private undeliverField As Boolean
        
        '''<remarks/>
        Public Property install() As Boolean
            Get
                Return Me.installField
            End Get
            Set
                Me.installField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property uninstall() As Boolean
            Get
                Return Me.uninstallField
            End Get
            Set
                Me.uninstallField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property configure() As Boolean
            Get
                Return Me.configureField
            End Get
            Set
                Me.configureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activate() As Boolean
            Get
                Return Me.activateField
            End Get
            Set
                Me.activateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliver() As Boolean
            Get
                Return Me.deliverField
            End Get
            Set
                Me.deliverField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property undeliver() As Boolean
            Get
                Return Me.undeliverField
            End Get
            Set
                Me.undeliverField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProcedureProperties4
        
        Private softwarePackageProcedureIdField As String
        
        Private softwarePackageProcedureNameField As String
        
        Private softwarePackageProcedureTaskField As SoftwarePackageProcedureTask
        
        Private procedureTypeField As Integer
        
        Private commentField As String
        
        Private userSelectableField As Boolean
        
        Private externalProcedureField As Boolean
        
        Private filedByField As SoftwarePackageProcedureFiledBy
        
        Private operatingSystemTypeField As Long
        
        Private subPathField As String
        
        Private procToRunField As String
        
        Private parametersField As String
        
        Private procedureRelationField As SoftwarePackageProcedureRelation
        
        Private activatedByField As SoftwarePackageProcedureFiledBy
        
        Private activatedDateTimeField As DateTime
        
        Private softwarePackageIdField As String
        
        Private softwarePackageNameField As String
        
        Private softwarePackageVersionField As String
        
        Private softwarePackageStateField As Integer
        
        Private softwarePackageVolumeIdField As String
        
        Private softwarePackageVolumeNameField As String
        
        Private operationMaskField As SoftwarePackageProcedureOperationMask3
        
        Private bootBeforeMaskField As SoftwarePackageProcedureBootMask2
        
        Private bootAfterMaskField As SoftwarePackageProcedureBootMask2
        
        Private dependancyQueryIdField As String
        
        Private managementTypeMaskField As SoftwarePackageProcedureManagementTypeMask
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureId() As String
            Get
                Return Me.softwarePackageProcedureIdField
            End Get
            Set
                Me.softwarePackageProcedureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureName() As String
            Get
                Return Me.softwarePackageProcedureNameField
            End Get
            Set
                Me.softwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTask() As SoftwarePackageProcedureTask
            Get
                Return Me.softwarePackageProcedureTaskField
            End Get
            Set
                Me.softwarePackageProcedureTaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property procedureType() As Integer
            Get
                Return Me.procedureTypeField
            End Get
            Set
                Me.procedureTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectable() As Boolean
            Get
                Return Me.userSelectableField
            End Get
            Set
                Me.userSelectableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property externalProcedure() As Boolean
            Get
                Return Me.externalProcedureField
            End Get
            Set
                Me.externalProcedureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property filedBy() As SoftwarePackageProcedureFiledBy
            Get
                Return Me.filedByField
            End Get
            Set
                Me.filedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemType() As Long
            Get
                Return Me.operatingSystemTypeField
            End Get
            Set
                Me.operatingSystemTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property subPath() As String
            Get
                Return Me.subPathField
            End Get
            Set
                Me.subPathField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property procToRun() As String
            Get
                Return Me.procToRunField
            End Get
            Set
                Me.procToRunField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property parameters() As String
            Get
                Return Me.parametersField
            End Get
            Set
                Me.parametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property procedureRelation() As SoftwarePackageProcedureRelation
            Get
                Return Me.procedureRelationField
            End Get
            Set
                Me.procedureRelationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activatedBy() As SoftwarePackageProcedureFiledBy
            Get
                Return Me.activatedByField
            End Get
            Set
                Me.activatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activatedDateTime() As DateTime
            Get
                Return Me.activatedDateTimeField
            End Get
            Set
                Me.activatedDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageId() As String
            Get
                Return Me.softwarePackageIdField
            End Get
            Set
                Me.softwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageName() As String
            Get
                Return Me.softwarePackageNameField
            End Get
            Set
                Me.softwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVersion() As String
            Get
                Return Me.softwarePackageVersionField
            End Get
            Set
                Me.softwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageState() As Integer
            Get
                Return Me.softwarePackageStateField
            End Get
            Set
                Me.softwarePackageStateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVolumeId() As String
            Get
                Return Me.softwarePackageVolumeIdField
            End Get
            Set
                Me.softwarePackageVolumeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVolumeName() As String
            Get
                Return Me.softwarePackageVolumeNameField
            End Get
            Set
                Me.softwarePackageVolumeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask() As SoftwarePackageProcedureOperationMask3
            Get
                Return Me.operationMaskField
            End Get
            Set
                Me.operationMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwarePackageProcedureBootMask2
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwarePackageProcedureBootMask2
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dependancyQueryId() As String
            Get
                Return Me.dependancyQueryIdField
            End Get
            Set
                Me.dependancyQueryIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property managementTypeMask() As SoftwarePackageProcedureManagementTypeMask
            Get
                Return Me.managementTypeMaskField
            End Get
            Set
                Me.managementTypeMaskField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProcedureOperationMask3
        
        Private offlineField As Boolean
        
        Private promptField As Boolean
        
        Private calendarControlField As Boolean
        
        Private shieldField As Boolean
        
        Private lockField As Boolean
        
        Private noPromptCancelField As Boolean
        
        Private backgroundField As Boolean
        
        Private rerunField As Boolean
        
        Private permActAreaField As Boolean
        
        Private execPromptTimeoutField As Boolean
        
        Private resolveQueryGroupsField As Boolean
        
        Private autoDeliverItemField As Boolean
        
        Private defaultItemProcField As Boolean
        
        Private renewFailedOnlyField As Boolean
        
        Private useDefaultJobMessageField As Boolean
        
        Private excludeFromRACField As Boolean
        
        Private runAtShutDownField As Boolean
        
        '''<remarks/>
        Public Property offline() As Boolean
            Get
                Return Me.offlineField
            End Get
            Set
                Me.offlineField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prompt() As Boolean
            Get
                Return Me.promptField
            End Get
            Set
                Me.promptField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property calendarControl() As Boolean
            Get
                Return Me.calendarControlField
            End Get
            Set
                Me.calendarControlField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property shield() As Boolean
            Get
                Return Me.shieldField
            End Get
            Set
                Me.shieldField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lock() As Boolean
            Get
                Return Me.lockField
            End Get
            Set
                Me.lockField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noPromptCancel() As Boolean
            Get
                Return Me.noPromptCancelField
            End Get
            Set
                Me.noPromptCancelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property background() As Boolean
            Get
                Return Me.backgroundField
            End Get
            Set
                Me.backgroundField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rerun() As Boolean
            Get
                Return Me.rerunField
            End Get
            Set
                Me.rerunField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property permActArea() As Boolean
            Get
                Return Me.permActAreaField
            End Get
            Set
                Me.permActAreaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property execPromptTimeout() As Boolean
            Get
                Return Me.execPromptTimeoutField
            End Get
            Set
                Me.execPromptTimeoutField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property resolveQueryGroups() As Boolean
            Get
                Return Me.resolveQueryGroupsField
            End Get
            Set
                Me.resolveQueryGroupsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property autoDeliverItem() As Boolean
            Get
                Return Me.autoDeliverItemField
            End Get
            Set
                Me.autoDeliverItemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property defaultItemProc() As Boolean
            Get
                Return Me.defaultItemProcField
            End Get
            Set
                Me.defaultItemProcField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property renewFailedOnly() As Boolean
            Get
                Return Me.renewFailedOnlyField
            End Get
            Set
                Me.renewFailedOnlyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property useDefaultJobMessage() As Boolean
            Get
                Return Me.useDefaultJobMessageField
            End Get
            Set
                Me.useDefaultJobMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property excludeFromRAC() As Boolean
            Get
                Return Me.excludeFromRACField
            End Get
            Set
                Me.excludeFromRACField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property runAtShutDown() As Boolean
            Get
                Return Me.runAtShutDownField
            End Get
            Set
                Me.runAtShutDownField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProcedurePropertiesRequired2
        
        Private softwarePackageProcedureIdRequiredField As Boolean
        
        Private softwarePackageProcedureNameRequiredField As Boolean
        
        Private softwarePackageProcedureTaskRequiredField As Boolean
        
        Private softwarePackageProcedureTypeRequiredField As Boolean
        
        Private commentRequiredField As Boolean
        
        Private userSelectableRequiredField As Boolean
        
        Private externalProcedureRequiredField As Boolean
        
        Private filedByRequiredField As Boolean
        
        Private operatingSystemTypeRequiredField As Boolean
        
        Private subPathRequiredField As Boolean
        
        Private procToRunRequiredField As Boolean
        
        Private parametersRequiredField As Boolean
        
        Private procedureRelationRequiredField As Boolean
        
        Private activatedByRequiredField As Boolean
        
        Private activatedDateTimeRequiredField As Boolean
        
        Private softwarePackageIdRequiredField As Boolean
        
        Private softwarePackageNameRequiredField As Boolean
        
        Private softwarePackageVersionRequiredField As Boolean
        
        Private softwarePackageStateRequiredField As Boolean
        
        Private softwarePackageVolumeIdRequiredField As Boolean
        
        Private softwarePackageVolumeNameRequiredField As Boolean
        
        Private operationMaskRequiredField As Boolean
        
        Private bootBeforeMaskRequiredField As Boolean
        
        Private bootAfterMaskRequiredField As Boolean
        
        Private dependancyQueryIdRequiredField As Boolean
        
        Private managementTypeMaskRequiredField As Boolean
        
        '''<remarks/>
        Public Property softwarePackageProcedureIdRequired() As Boolean
            Get
                Return Me.softwarePackageProcedureIdRequiredField
            End Get
            Set
                Me.softwarePackageProcedureIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureNameRequired() As Boolean
            Get
                Return Me.softwarePackageProcedureNameRequiredField
            End Get
            Set
                Me.softwarePackageProcedureNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTaskRequired() As Boolean
            Get
                Return Me.softwarePackageProcedureTaskRequiredField
            End Get
            Set
                Me.softwarePackageProcedureTaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTypeRequired() As Boolean
            Get
                Return Me.softwarePackageProcedureTypeRequiredField
            End Get
            Set
                Me.softwarePackageProcedureTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentRequired() As Boolean
            Get
                Return Me.commentRequiredField
            End Get
            Set
                Me.commentRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectableRequired() As Boolean
            Get
                Return Me.userSelectableRequiredField
            End Get
            Set
                Me.userSelectableRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property externalProcedureRequired() As Boolean
            Get
                Return Me.externalProcedureRequiredField
            End Get
            Set
                Me.externalProcedureRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property filedByRequired() As Boolean
            Get
                Return Me.filedByRequiredField
            End Get
            Set
                Me.filedByRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemTypeRequired() As Boolean
            Get
                Return Me.operatingSystemTypeRequiredField
            End Get
            Set
                Me.operatingSystemTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property subPathRequired() As Boolean
            Get
                Return Me.subPathRequiredField
            End Get
            Set
                Me.subPathRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property procToRunRequired() As Boolean
            Get
                Return Me.procToRunRequiredField
            End Get
            Set
                Me.procToRunRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property parametersRequired() As Boolean
            Get
                Return Me.parametersRequiredField
            End Get
            Set
                Me.parametersRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property procedureRelationRequired() As Boolean
            Get
                Return Me.procedureRelationRequiredField
            End Get
            Set
                Me.procedureRelationRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activatedByRequired() As Boolean
            Get
                Return Me.activatedByRequiredField
            End Get
            Set
                Me.activatedByRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activatedDateTimeRequired() As Boolean
            Get
                Return Me.activatedDateTimeRequiredField
            End Get
            Set
                Me.activatedDateTimeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageIdRequired() As Boolean
            Get
                Return Me.softwarePackageIdRequiredField
            End Get
            Set
                Me.softwarePackageIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageNameRequired() As Boolean
            Get
                Return Me.softwarePackageNameRequiredField
            End Get
            Set
                Me.softwarePackageNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageVersionRequired() As Boolean
            Get
                Return Me.softwarePackageVersionRequiredField
            End Get
            Set
                Me.softwarePackageVersionRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageStateRequired() As Boolean
            Get
                Return Me.softwarePackageStateRequiredField
            End Get
            Set
                Me.softwarePackageStateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageVolumeIdRequired() As Boolean
            Get
                Return Me.softwarePackageVolumeIdRequiredField
            End Get
            Set
                Me.softwarePackageVolumeIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageVolumeNameRequired() As Boolean
            Get
                Return Me.softwarePackageVolumeNameRequiredField
            End Get
            Set
                Me.softwarePackageVolumeNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskRequired() As Boolean
            Get
                Return Me.operationMaskRequiredField
            End Get
            Set
                Me.operationMaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskRequired() As Boolean
            Get
                Return Me.bootBeforeMaskRequiredField
            End Get
            Set
                Me.bootBeforeMaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskRequired() As Boolean
            Get
                Return Me.bootAfterMaskRequiredField
            End Get
            Set
                Me.bootAfterMaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dependancyQueryIdRequired() As Boolean
            Get
                Return Me.dependancyQueryIdRequiredField
            End Get
            Set
                Me.dependancyQueryIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property managementTypeMaskRequired() As Boolean
            Get
                Return Me.managementTypeMaskRequiredField
            End Get
            Set
                Me.managementTypeMaskRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class QueryProperties3
        
        Private queryIdField As String
        
        Private queryNameField As String
        
        Private queryTableField As String
        
        Private queryTypeField As QueryType
        
        Private queryTableLabelFieldField As String
        
        Private queryTableLabelPrimaryKeyField As String
        
        Private queryTableLabelSecondaryKeyField As String
        
        Private queryFragmentsField() As QueryFragment2
        
        Private sqlStatementField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryId() As String
            Get
                Return Me.queryIdField
            End Get
            Set
                Me.queryIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryName() As String
            Get
                Return Me.queryNameField
            End Get
            Set
                Me.queryNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryTable() As String
            Get
                Return Me.queryTableField
            End Get
            Set
                Me.queryTableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryType() As QueryType
            Get
                Return Me.queryTypeField
            End Get
            Set
                Me.queryTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryTableLabelField() As String
            Get
                Return Me.queryTableLabelFieldField
            End Get
            Set
                Me.queryTableLabelFieldField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryTableLabelPrimaryKey() As String
            Get
                Return Me.queryTableLabelPrimaryKeyField
            End Get
            Set
                Me.queryTableLabelPrimaryKeyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryTableLabelSecondaryKey() As String
            Get
                Return Me.queryTableLabelSecondaryKeyField
            End Get
            Set
                Me.queryTableLabelSecondaryKeyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("queryFragmentsArray2", IsNullable:=false)>  _
        Public Property queryFragments() As QueryFragment2()
            Get
                Return Me.queryFragmentsField
            End Get
            Set
                Me.queryFragmentsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sqlStatement() As String
            Get
                Return Me.sqlStatementField
            End Get
            Set
                Me.sqlStatementField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum QueryType
        
        '''<remarks/>
        AGENT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DISCOVERED-HARDWARE")>  _
        DISCOVEREDHARDWARE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DISCOVERED-USER")>  _
        DISCOVEREDUSER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DISCOVERED-COMPUTERUSER")>  _
        DISCOVEREDCOMPUTERUSER
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class QueryFragment2
        
        Private queryFragmentTypeField As QueryFragmentType2
        
        Private pseudoStatementField As String
        
        Private statementField As String
        
        Private linkQueryNameField As String
        
        Private attributeFilterField As String
        
        Private attributeFilterSuppliedField As Boolean
        
        Private searchRecursiveField As Boolean
        
        Private searchRecursiveSuppliedField As Boolean
        
        '''<remarks/>
        Public Property queryFragmentType() As QueryFragmentType2
            Get
                Return Me.queryFragmentTypeField
            End Get
            Set
                Me.queryFragmentTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property pseudoStatement() As String
            Get
                Return Me.pseudoStatementField
            End Get
            Set
                Me.pseudoStatementField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property statement() As String
            Get
                Return Me.statementField
            End Get
            Set
                Me.statementField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property linkQueryName() As String
            Get
                Return Me.linkQueryNameField
            End Get
            Set
                Me.linkQueryNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property attributeFilter() As String
            Get
                Return Me.attributeFilterField
            End Get
            Set
                Me.attributeFilterField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property attributeFilterSupplied() As Boolean
            Get
                Return Me.attributeFilterSuppliedField
            End Get
            Set
                Me.attributeFilterSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property searchRecursive() As Boolean
            Get
                Return Me.searchRecursiveField
            End Get
            Set
                Me.searchRecursiveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property searchRecursiveSupplied() As Boolean
            Get
                Return Me.searchRecursiveSuppliedField
            End Get
            Set
                Me.searchRecursiveSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum QueryFragmentType2
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SQL-QUERY")>  _
        SQLQUERY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("LINK-QUERY")>  _
        LINKQUERY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DIRECTORY-OU-USERS")>  _
        DIRECTORYOUUSERS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DIRECTORY-GROUP-USERS")>  _
        DIRECTORYGROUPUSERS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DIRECTORY-OU-COMPUTERS")>  _
        DIRECTORYOUCOMPUTERS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DIRECTORY-GROUP-COMPUTERS")>  _
        DIRECTORYGROUPCOMPUTERS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DIRECTORY-DIRECT-REPORTS")>  _
        DIRECTORYDIRECTREPORTS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DIRECTORY-LOCALGROUP-USERS")>  _
        DIRECTORYLOCALGROUPUSERS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DIRECTORY-LOCALGROUP-COMPUTERS")>  _
        DIRECTORYLOCALGROUPCOMPUTERS
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class QueryPropertiesRequired3
        
        Private queryIdRequiredField As Boolean
        
        Private queryNameRequiredField As Boolean
        
        Private queryTableRequiredField As Boolean
        
        Private queryTypeRequiredField As Boolean
        
        Private queryTableLabelFieldRequiredField As Boolean
        
        Private queryTableLabelPrimaryKeyRequiredField As Boolean
        
        Private queryTableLabelSecondaryKeyRequiredField As Boolean
        
        Private queryFragmentsRequiredField As Boolean
        
        Private sqlStatementRequiredField As Boolean
        
        '''<remarks/>
        Public Property queryIdRequired() As Boolean
            Get
                Return Me.queryIdRequiredField
            End Get
            Set
                Me.queryIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryNameRequired() As Boolean
            Get
                Return Me.queryNameRequiredField
            End Get
            Set
                Me.queryNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTableRequired() As Boolean
            Get
                Return Me.queryTableRequiredField
            End Get
            Set
                Me.queryTableRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTypeRequired() As Boolean
            Get
                Return Me.queryTypeRequiredField
            End Get
            Set
                Me.queryTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTableLabelFieldRequired() As Boolean
            Get
                Return Me.queryTableLabelFieldRequiredField
            End Get
            Set
                Me.queryTableLabelFieldRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTableLabelPrimaryKeyRequired() As Boolean
            Get
                Return Me.queryTableLabelPrimaryKeyRequiredField
            End Get
            Set
                Me.queryTableLabelPrimaryKeyRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTableLabelSecondaryKeyRequired() As Boolean
            Get
                Return Me.queryTableLabelSecondaryKeyRequiredField
            End Get
            Set
                Me.queryTableLabelSecondaryKeyRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryFragmentsRequired() As Boolean
            Get
                Return Me.queryFragmentsRequiredField
            End Get
            Set
                Me.queryFragmentsRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sqlStatementRequired() As Boolean
            Get
                Return Me.sqlStatementRequiredField
            End Get
            Set
                Me.sqlStatementRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetQueryProperties3
        
        Private queryNameField As String
        
        Private queryNameSuppliedField As Boolean
        
        Private queryTableField As String
        
        Private queryTableSuppliedField As Boolean
        
        Private queryTableLabelFieldField As String
        
        Private queryTableLabelFieldSuppliedField As Boolean
        
        Private queryTableLabelPrimaryKeyField As String
        
        Private queryTableLabelPrimaryKeySuppliedField As Boolean
        
        Private queryTableLabelSecondaryKeyField As String
        
        Private queryTableLabelSecondaryKeySuppliedField As Boolean
        
        Private queryFragmentsField() As QueryFragment2
        
        Private queryFragmentsSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryName() As String
            Get
                Return Me.queryNameField
            End Get
            Set
                Me.queryNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryNameSupplied() As Boolean
            Get
                Return Me.queryNameSuppliedField
            End Get
            Set
                Me.queryNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryTable() As String
            Get
                Return Me.queryTableField
            End Get
            Set
                Me.queryTableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTableSupplied() As Boolean
            Get
                Return Me.queryTableSuppliedField
            End Get
            Set
                Me.queryTableSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryTableLabelField() As String
            Get
                Return Me.queryTableLabelFieldField
            End Get
            Set
                Me.queryTableLabelFieldField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTableLabelFieldSupplied() As Boolean
            Get
                Return Me.queryTableLabelFieldSuppliedField
            End Get
            Set
                Me.queryTableLabelFieldSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryTableLabelPrimaryKey() As String
            Get
                Return Me.queryTableLabelPrimaryKeyField
            End Get
            Set
                Me.queryTableLabelPrimaryKeyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTableLabelPrimaryKeySupplied() As Boolean
            Get
                Return Me.queryTableLabelPrimaryKeySuppliedField
            End Get
            Set
                Me.queryTableLabelPrimaryKeySuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryTableLabelSecondaryKey() As String
            Get
                Return Me.queryTableLabelSecondaryKeyField
            End Get
            Set
                Me.queryTableLabelSecondaryKeyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTableLabelSecondaryKeySupplied() As Boolean
            Get
                Return Me.queryTableLabelSecondaryKeySuppliedField
            End Get
            Set
                Me.queryTableLabelSecondaryKeySuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("queryFragmentsArray2", IsNullable:=false)>  _
        Public Property queryFragments() As QueryFragment2()
            Get
                Return Me.queryFragmentsField
            End Get
            Set
                Me.queryFragmentsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryFragmentsSupplied() As Boolean
            Get
                Return Me.queryFragmentsSuppliedField
            End Get
            Set
                Me.queryFragmentsSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProcedureProperties3
        
        Private softwarePackageProcedureIdField As String
        
        Private softwarePackageProcedureNameField As String
        
        Private softwarePackageProcedureTaskField As SoftwarePackageProcedureTask
        
        Private softwarePackageProcedureTypeField As SoftwarePackageProcedureType
        
        Private commentField As String
        
        Private userSelectableField As Boolean
        
        Private externalProcedureField As Boolean
        
        Private filedByField As SoftwarePackageProcedureFiledBy
        
        Private operatingSystemTypeField As Long
        
        Private subPathField As String
        
        Private procToRunField As String
        
        Private parametersField As String
        
        Private procedureRelationField As SoftwarePackageProcedureRelation
        
        Private activatedByField As SoftwarePackageProcedureFiledBy
        
        Private activatedDateTimeField As DateTime
        
        Private softwarePackageIdField As String
        
        Private softwarePackageNameField As String
        
        Private softwarePackageVersionField As String
        
        Private softwarePackageTypeField As SoftwarePackageType
        
        Private softwarePackageVolumeIdField As String
        
        Private softwarePackageVolumeNameField As String
        
        Private operationMaskField As SoftwarePackageProcedureOperationMask3
        
        Private bootBeforeMaskField As SoftwarePackageProcedureBootMask2
        
        Private bootAfterMaskField As SoftwarePackageProcedureBootMask2
        
        Private dependancyQueryIdField As String
        
        Private managementTypeMaskField As SoftwarePackageProcedureManagementTypeMask
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureId() As String
            Get
                Return Me.softwarePackageProcedureIdField
            End Get
            Set
                Me.softwarePackageProcedureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureName() As String
            Get
                Return Me.softwarePackageProcedureNameField
            End Get
            Set
                Me.softwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTask() As SoftwarePackageProcedureTask
            Get
                Return Me.softwarePackageProcedureTaskField
            End Get
            Set
                Me.softwarePackageProcedureTaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureType() As SoftwarePackageProcedureType
            Get
                Return Me.softwarePackageProcedureTypeField
            End Get
            Set
                Me.softwarePackageProcedureTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectable() As Boolean
            Get
                Return Me.userSelectableField
            End Get
            Set
                Me.userSelectableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property externalProcedure() As Boolean
            Get
                Return Me.externalProcedureField
            End Get
            Set
                Me.externalProcedureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property filedBy() As SoftwarePackageProcedureFiledBy
            Get
                Return Me.filedByField
            End Get
            Set
                Me.filedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemType() As Long
            Get
                Return Me.operatingSystemTypeField
            End Get
            Set
                Me.operatingSystemTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property subPath() As String
            Get
                Return Me.subPathField
            End Get
            Set
                Me.subPathField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property procToRun() As String
            Get
                Return Me.procToRunField
            End Get
            Set
                Me.procToRunField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property parameters() As String
            Get
                Return Me.parametersField
            End Get
            Set
                Me.parametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property procedureRelation() As SoftwarePackageProcedureRelation
            Get
                Return Me.procedureRelationField
            End Get
            Set
                Me.procedureRelationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activatedBy() As SoftwarePackageProcedureFiledBy
            Get
                Return Me.activatedByField
            End Get
            Set
                Me.activatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activatedDateTime() As DateTime
            Get
                Return Me.activatedDateTimeField
            End Get
            Set
                Me.activatedDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageId() As String
            Get
                Return Me.softwarePackageIdField
            End Get
            Set
                Me.softwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageName() As String
            Get
                Return Me.softwarePackageNameField
            End Get
            Set
                Me.softwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVersion() As String
            Get
                Return Me.softwarePackageVersionField
            End Get
            Set
                Me.softwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageType() As SoftwarePackageType
            Get
                Return Me.softwarePackageTypeField
            End Get
            Set
                Me.softwarePackageTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVolumeId() As String
            Get
                Return Me.softwarePackageVolumeIdField
            End Get
            Set
                Me.softwarePackageVolumeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVolumeName() As String
            Get
                Return Me.softwarePackageVolumeNameField
            End Get
            Set
                Me.softwarePackageVolumeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask() As SoftwarePackageProcedureOperationMask3
            Get
                Return Me.operationMaskField
            End Get
            Set
                Me.operationMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwarePackageProcedureBootMask2
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwarePackageProcedureBootMask2
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dependancyQueryId() As String
            Get
                Return Me.dependancyQueryIdField
            End Get
            Set
                Me.dependancyQueryIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property managementTypeMask() As SoftwarePackageProcedureManagementTypeMask
            Get
                Return Me.managementTypeMaskField
            End Get
            Set
                Me.managementTypeMaskField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SoftwarePackageProcedureType
        
        '''<remarks/>
        SIP
        
        '''<remarks/>
        CMDFILE
        
        '''<remarks/>
        EXEFILE
        
        '''<remarks/>
        SWDET
        
        '''<remarks/>
        MSI
        
        '''<remarks/>
        SXP
        
        '''<remarks/>
        PKG
        
        '''<remarks/>
        PIF
        
        '''<remarks/>
        IPS
        
        '''<remarks/>
        PALM
        
        '''<remarks/>
        WINCE
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SoftwarePackageType
        
        '''<remarks/>
        SOFTWARE
        
        '''<remarks/>
        OPEN
        
        '''<remarks/>
        DETECTED
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSoftwarePackageProcedureProperties3
        
        Private softwarePackageProcedureIdField As String
        
        Private softwarePackageProcedureIdSuppliedField As Boolean
        
        Private commonSoftwarePackageProcedurePropertiesField As CommonSoftwarePackageProcedureProperties3
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureId() As String
            Get
                Return Me.softwarePackageProcedureIdField
            End Get
            Set
                Me.softwarePackageProcedureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureIdSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureIdSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property commonSoftwarePackageProcedureProperties() As CommonSoftwarePackageProcedureProperties3
            Get
                Return Me.commonSoftwarePackageProcedurePropertiesField
            End Get
            Set
                Me.commonSoftwarePackageProcedurePropertiesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CommonSoftwarePackageProcedureProperties3
        
        Private softwarePackageProcedureNameField As String
        
        Private softwarePackageProcedureNameSuppliedField As Boolean
        
        Private softwarePackageProcedureTaskField As SoftwarePackageProcedureTask
        
        Private softwarePackageProcedureTaskSuppliedField As Boolean
        
        Private softwarePackageProcedureTypeField As SoftwarePackageProcedureType
        
        Private softwarePackageProcedureTypeSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private userSelectableField As Boolean
        
        Private userSelectableSuppliedField As Boolean
        
        Private externalProcedureField As Boolean
        
        Private externalProcedureSuppliedField As Boolean
        
        Private operatingSystemTypeField As Long
        
        Private operatingSystemTypeSuppliedField As Boolean
        
        Private subPathField As String
        
        Private subPathSuppliedField As Boolean
        
        Private procToRunField As String
        
        Private procToRunSuppliedField As Boolean
        
        Private parametersField As String
        
        Private parametersSuppliedField As Boolean
        
        Private softwarePackageVolumeIdField As String
        
        Private softwarePackageVolumeIdSuppliedField As Boolean
        
        Private operationMaskField As SoftwarePackageProcedureOperationMask3
        
        Private operationMaskSuppliedField As Boolean
        
        Private bootBeforeMaskField As SoftwarePackageProcedureBootMask2
        
        Private bootBeforeMaskSuppliedField As Boolean
        
        Private bootAfterMaskField As SoftwarePackageProcedureBootMask2
        
        Private bootAfterMaskSuppliedField As Boolean
        
        Private dependancyQueryIdField As String
        
        Private dependancyQueryIdSuppliedField As Boolean
        
        Private managementTypeMaskField As SoftwarePackageProcedureManagementTypeMask
        
        Private managementTypeMaskSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureName() As String
            Get
                Return Me.softwarePackageProcedureNameField
            End Get
            Set
                Me.softwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureNameSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureNameSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTask() As SoftwarePackageProcedureTask
            Get
                Return Me.softwarePackageProcedureTaskField
            End Get
            Set
                Me.softwarePackageProcedureTaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTaskSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureTaskSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureTaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureType() As SoftwarePackageProcedureType
            Get
                Return Me.softwarePackageProcedureTypeField
            End Get
            Set
                Me.softwarePackageProcedureTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTypeSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureTypeSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectable() As Boolean
            Get
                Return Me.userSelectableField
            End Get
            Set
                Me.userSelectableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectableSupplied() As Boolean
            Get
                Return Me.userSelectableSuppliedField
            End Get
            Set
                Me.userSelectableSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property externalProcedure() As Boolean
            Get
                Return Me.externalProcedureField
            End Get
            Set
                Me.externalProcedureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property externalProcedureSupplied() As Boolean
            Get
                Return Me.externalProcedureSuppliedField
            End Get
            Set
                Me.externalProcedureSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemType() As Long
            Get
                Return Me.operatingSystemTypeField
            End Get
            Set
                Me.operatingSystemTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemTypeSupplied() As Boolean
            Get
                Return Me.operatingSystemTypeSuppliedField
            End Get
            Set
                Me.operatingSystemTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property subPath() As String
            Get
                Return Me.subPathField
            End Get
            Set
                Me.subPathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property subPathSupplied() As Boolean
            Get
                Return Me.subPathSuppliedField
            End Get
            Set
                Me.subPathSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property procToRun() As String
            Get
                Return Me.procToRunField
            End Get
            Set
                Me.procToRunField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property procToRunSupplied() As Boolean
            Get
                Return Me.procToRunSuppliedField
            End Get
            Set
                Me.procToRunSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property parameters() As String
            Get
                Return Me.parametersField
            End Get
            Set
                Me.parametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property parametersSupplied() As Boolean
            Get
                Return Me.parametersSuppliedField
            End Get
            Set
                Me.parametersSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVolumeId() As String
            Get
                Return Me.softwarePackageVolumeIdField
            End Get
            Set
                Me.softwarePackageVolumeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageVolumeIdSupplied() As Boolean
            Get
                Return Me.softwarePackageVolumeIdSuppliedField
            End Get
            Set
                Me.softwarePackageVolumeIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask() As SoftwarePackageProcedureOperationMask3
            Get
                Return Me.operationMaskField
            End Get
            Set
                Me.operationMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskSupplied() As Boolean
            Get
                Return Me.operationMaskSuppliedField
            End Get
            Set
                Me.operationMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwarePackageProcedureBootMask2
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskSupplied() As Boolean
            Get
                Return Me.bootBeforeMaskSuppliedField
            End Get
            Set
                Me.bootBeforeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwarePackageProcedureBootMask2
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskSupplied() As Boolean
            Get
                Return Me.bootAfterMaskSuppliedField
            End Get
            Set
                Me.bootAfterMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dependancyQueryId() As String
            Get
                Return Me.dependancyQueryIdField
            End Get
            Set
                Me.dependancyQueryIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dependancyQueryIdSupplied() As Boolean
            Get
                Return Me.dependancyQueryIdSuppliedField
            End Get
            Set
                Me.dependancyQueryIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property managementTypeMask() As SoftwarePackageProcedureManagementTypeMask
            Get
                Return Me.managementTypeMaskField
            End Get
            Set
                Me.managementTypeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property managementTypeMaskSupplied() As Boolean
            Get
                Return Me.managementTypeMaskSuppliedField
            End Get
            Set
                Me.managementTypeMaskSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSoftwarePackageProcedureProperties3
        
        Private softwarePackageIdField As String
        
        Private softwarePackageIdSuppliedField As Boolean
        
        Private commonSoftwarePackageProcedurePropertiesField As CommonSoftwarePackageProcedureProperties3
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageId() As String
            Get
                Return Me.softwarePackageIdField
            End Get
            Set
                Me.softwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageIdSupplied() As Boolean
            Get
                Return Me.softwarePackageIdSuppliedField
            End Get
            Set
                Me.softwarePackageIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property commonSoftwarePackageProcedureProperties() As CommonSoftwarePackageProcedureProperties3
            Get
                Return Me.commonSoftwarePackageProcedurePropertiesField
            End Get
            Set
                Me.commonSoftwarePackageProcedurePropertiesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageFilter3
        
        Private swPkgPropertyField As SoftwarePackageProperty
        
        Private conditionField As FILTERCONDITION
        
        Private searchStringField As String
        
        Private dateTimeField As DateTime
        
        Private searchValueField As Long
        
        '''<remarks/>
        Public Property swPkgProperty() As SoftwarePackageProperty
            Get
                Return Me.swPkgPropertyField
            End Get
            Set
                Me.swPkgPropertyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property condition() As FILTERCONDITION
            Get
                Return Me.conditionField
            End Get
            Set
                Me.conditionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property searchString() As String
            Get
                Return Me.searchStringField
            End Get
            Set
                Me.searchStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dateTime() As DateTime
            Get
                Return Me.dateTimeField
            End Get
            Set
                Me.dateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property searchValue() As Long
            Get
                Return Me.searchValueField
            End Get
            Set
                Me.searchValueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SoftwarePackageProperty
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SDPKG-NAME")>  _
        SDPKGNAME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SDPKG-VERSION")>  _
        SDPKGVERSION
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SDPKG-TYPE")>  _
        SDPKGTYPE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SDPKG-BASEDONPKG-NAME")>  _
        SDPKGBASEDONPKGNAME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SDPKG-BASEDONPKG-VERSION")>  _
        SDPKGBASEDONPKGVERSION
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SDPKG-REGISTERED-DATETIME")>  _
        SDPKGREGISTEREDDATETIME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SDPKG-FORMAT")>  _
        SDPKGFORMAT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SDPKG-SIZE")>  _
        SDPKGSIZE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SDPKG-CHANGED-DATETIME")>  _
        SDPKGCHANGEDDATETIME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SDPKG-SUPPLIER")>  _
        SDPKGSUPPLIER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SDPKG-FILEDBY")>  _
        SDPKGFILEDBY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SDPKG-CHECKSUM")>  _
        SDPKGCHECKSUM
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SDPKG-USERSELECTABLE")>  _
        SDPKGUSERSELECTABLE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SDPKG-COMMENT")>  _
        SDPKGCOMMENT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SDPKG-ARCHIVED-DATETIME")>  _
        SDPKGARCHIVEDDATETIME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SDPKG-ARCHIVEDBY")>  _
        SDPKGARCHIVEDBY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SDPKG-ARCHIVED-AT")>  _
        SDPKGARCHIVEDAT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SDPKG-ARCHIVED-PATH")>  _
        SDPKGARCHIVEDPATH
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SDPKG-ARCHIVED-COMMENT")>  _
        SDPKGARCHIVEDCOMMENT
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum FILTERCONDITION
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("FILTER-WILDCARD-EQ")>  _
        FILTERWILDCARDEQ
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("FILTER-WILDCARD-NE")>  _
        FILTERWILDCARDNE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("FILTER-REGEX")>  _
        FILTERREGEX
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("FILTER-EQ")>  _
        FILTEREQ
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("FILTER-NE")>  _
        FILTERNE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("FILTER-GT")>  _
        FILTERGT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("FILTER-GE")>  _
        FILTERGE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("FILTER-LT")>  _
        FILTERLT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("FILTER-LE")>  _
        FILTERLE
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ArrayOfSoftwarePackageFilter3
        
        Private filterField() As SoftwarePackageFilter3
        
        Private matchAllField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("filter")>  _
        Public Property filter() As SoftwarePackageFilter3()
            Get
                Return Me.filterField
            End Get
            Set
                Me.filterField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property matchAll() As Boolean
            Get
                Return Me.matchAllField
            End Get
            Set
                Me.matchAllField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProperties3
        
        Private softwarePackageIdField As String
        
        Private softwarePackageNameField As String
        
        Private softwarePackageVersionField As String
        
        Private basedOnSoftwarePackageIdField As String
        
        Private basedOnSoftwarePackageNameField As String
        
        Private basedOnSoftwarePackageVersionField As String
        
        Private supplierField As String
        
        Private commentField As String
        
        Private sourcePathField As String
        
        Private packageStateField As Integer
        
        Private userSelectableField As Boolean
        
        Private sourceMediumField As Integer
        
        Private packageFiledByField As Integer
        
        Private registrationDateTimeField As DateTime
        
        Private changeDateTimeField As DateTime
        
        Private packageTypeField As Integer
        
        Private packetSizeField As Long
        
        Private buildOnSizeField As Long
        
        Private archivePathField As String
        
        Private archiveCommentField As String
        
        Private archivedByField As String
        
        Private archiveAtField As Integer
        
        Private archDateTimeField As DateTime
        
        Private checksumField As Boolean
        
        Private packageFormatField As Integer
        
        Private packageMetadataXMLField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageId() As String
            Get
                Return Me.softwarePackageIdField
            End Get
            Set
                Me.softwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageName() As String
            Get
                Return Me.softwarePackageNameField
            End Get
            Set
                Me.softwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVersion() As String
            Get
                Return Me.softwarePackageVersionField
            End Get
            Set
                Me.softwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property basedOnSoftwarePackageId() As String
            Get
                Return Me.basedOnSoftwarePackageIdField
            End Get
            Set
                Me.basedOnSoftwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property basedOnSoftwarePackageName() As String
            Get
                Return Me.basedOnSoftwarePackageNameField
            End Get
            Set
                Me.basedOnSoftwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property basedOnSoftwarePackageVersion() As String
            Get
                Return Me.basedOnSoftwarePackageVersionField
            End Get
            Set
                Me.basedOnSoftwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property supplier() As String
            Get
                Return Me.supplierField
            End Get
            Set
                Me.supplierField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sourcePath() As String
            Get
                Return Me.sourcePathField
            End Get
            Set
                Me.sourcePathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property packageState() As Integer
            Get
                Return Me.packageStateField
            End Get
            Set
                Me.packageStateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectable() As Boolean
            Get
                Return Me.userSelectableField
            End Get
            Set
                Me.userSelectableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sourceMedium() As Integer
            Get
                Return Me.sourceMediumField
            End Get
            Set
                Me.sourceMediumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property packageFiledBy() As Integer
            Get
                Return Me.packageFiledByField
            End Get
            Set
                Me.packageFiledByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property registrationDateTime() As DateTime
            Get
                Return Me.registrationDateTimeField
            End Get
            Set
                Me.registrationDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property changeDateTime() As DateTime
            Get
                Return Me.changeDateTimeField
            End Get
            Set
                Me.changeDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property packageType() As Integer
            Get
                Return Me.packageTypeField
            End Get
            Set
                Me.packageTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property packetSize() As Long
            Get
                Return Me.packetSizeField
            End Get
            Set
                Me.packetSizeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property buildOnSize() As Long
            Get
                Return Me.buildOnSizeField
            End Get
            Set
                Me.buildOnSizeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property archivePath() As String
            Get
                Return Me.archivePathField
            End Get
            Set
                Me.archivePathField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property archiveComment() As String
            Get
                Return Me.archiveCommentField
            End Get
            Set
                Me.archiveCommentField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property archivedBy() As String
            Get
                Return Me.archivedByField
            End Get
            Set
                Me.archivedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property archiveAt() As Integer
            Get
                Return Me.archiveAtField
            End Get
            Set
                Me.archiveAtField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property archDateTime() As DateTime
            Get
                Return Me.archDateTimeField
            End Get
            Set
                Me.archDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property checksum() As Boolean
            Get
                Return Me.checksumField
            End Get
            Set
                Me.checksumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property packageFormat() As Integer
            Get
                Return Me.packageFormatField
            End Get
            Set
                Me.packageFormatField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property packageMetadataXML() As String
            Get
                Return Me.packageMetadataXMLField
            End Get
            Set
                Me.packageMetadataXMLField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackagePropertiesRequired3
        
        Private softwarePackageIdRequiredField As Boolean
        
        Private softwarePackageNameRequiredField As Boolean
        
        Private softwarePackageVersionRequiredField As Boolean
        
        Private basedOnSoftwarePackageIdRequiredField As Boolean
        
        Private basedOnSoftwarePackageNameRequiredField As Boolean
        
        Private basedOnSoftwarePackageVersionRequiredField As Boolean
        
        Private supplierRequiredField As Boolean
        
        Private commentRequiredField As Boolean
        
        Private sourcePathRequiredField As Boolean
        
        Private packageStateRequiredField As Boolean
        
        Private userSelectableRequiredField As Boolean
        
        Private softwarePackageDataSourceRequiredField As Boolean
        
        Private softwarePackageFiledByRequiredField As Boolean
        
        Private registrationDateTimeRequiredField As Boolean
        
        Private changeDateTimeRequiredField As Boolean
        
        Private packageTypeRequiredField As Boolean
        
        Private packetSizeRequiredField As Boolean
        
        Private buildOnSizeRequiredField As Boolean
        
        Private archivePathRequiredField As Boolean
        
        Private archiveCommentRequiredField As Boolean
        
        Private archivedByRequiredField As Boolean
        
        Private archiveAtRequiredField As Boolean
        
        Private archDateTimeRequiredField As Boolean
        
        Private flagsRequiredField As Boolean
        
        Private metadataRequiredField As Boolean
        
        '''<remarks/>
        Public Property softwarePackageIdRequired() As Boolean
            Get
                Return Me.softwarePackageIdRequiredField
            End Get
            Set
                Me.softwarePackageIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageNameRequired() As Boolean
            Get
                Return Me.softwarePackageNameRequiredField
            End Get
            Set
                Me.softwarePackageNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageVersionRequired() As Boolean
            Get
                Return Me.softwarePackageVersionRequiredField
            End Get
            Set
                Me.softwarePackageVersionRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property basedOnSoftwarePackageIdRequired() As Boolean
            Get
                Return Me.basedOnSoftwarePackageIdRequiredField
            End Get
            Set
                Me.basedOnSoftwarePackageIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property basedOnSoftwarePackageNameRequired() As Boolean
            Get
                Return Me.basedOnSoftwarePackageNameRequiredField
            End Get
            Set
                Me.basedOnSoftwarePackageNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property basedOnSoftwarePackageVersionRequired() As Boolean
            Get
                Return Me.basedOnSoftwarePackageVersionRequiredField
            End Get
            Set
                Me.basedOnSoftwarePackageVersionRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property supplierRequired() As Boolean
            Get
                Return Me.supplierRequiredField
            End Get
            Set
                Me.supplierRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentRequired() As Boolean
            Get
                Return Me.commentRequiredField
            End Get
            Set
                Me.commentRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sourcePathRequired() As Boolean
            Get
                Return Me.sourcePathRequiredField
            End Get
            Set
                Me.sourcePathRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property packageStateRequired() As Boolean
            Get
                Return Me.packageStateRequiredField
            End Get
            Set
                Me.packageStateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectableRequired() As Boolean
            Get
                Return Me.userSelectableRequiredField
            End Get
            Set
                Me.userSelectableRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageDataSourceRequired() As Boolean
            Get
                Return Me.softwarePackageDataSourceRequiredField
            End Get
            Set
                Me.softwarePackageDataSourceRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageFiledByRequired() As Boolean
            Get
                Return Me.softwarePackageFiledByRequiredField
            End Get
            Set
                Me.softwarePackageFiledByRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property registrationDateTimeRequired() As Boolean
            Get
                Return Me.registrationDateTimeRequiredField
            End Get
            Set
                Me.registrationDateTimeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property changeDateTimeRequired() As Boolean
            Get
                Return Me.changeDateTimeRequiredField
            End Get
            Set
                Me.changeDateTimeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property packageTypeRequired() As Boolean
            Get
                Return Me.packageTypeRequiredField
            End Get
            Set
                Me.packageTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property packetSizeRequired() As Boolean
            Get
                Return Me.packetSizeRequiredField
            End Get
            Set
                Me.packetSizeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property buildOnSizeRequired() As Boolean
            Get
                Return Me.buildOnSizeRequiredField
            End Get
            Set
                Me.buildOnSizeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property archivePathRequired() As Boolean
            Get
                Return Me.archivePathRequiredField
            End Get
            Set
                Me.archivePathRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property archiveCommentRequired() As Boolean
            Get
                Return Me.archiveCommentRequiredField
            End Get
            Set
                Me.archiveCommentRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property archivedByRequired() As Boolean
            Get
                Return Me.archivedByRequiredField
            End Get
            Set
                Me.archivedByRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property archiveAtRequired() As Boolean
            Get
                Return Me.archiveAtRequiredField
            End Get
            Set
                Me.archiveAtRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property archDateTimeRequired() As Boolean
            Get
                Return Me.archDateTimeRequiredField
            End Get
            Set
                Me.archDateTimeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property flagsRequired() As Boolean
            Get
                Return Me.flagsRequiredField
            End Get
            Set
                Me.flagsRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property metadataRequired() As Boolean
            Get
                Return Me.metadataRequiredField
            End Get
            Set
                Me.metadataRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSoftwarePackageProperties3
        
        Private softwarePackageIdField As String
        
        Private softwarePackageNameField As String
        
        Private softwarePackageNameSuppliedField As Boolean
        
        Private softwarePackageVersionField As String
        
        Private softwarePackageVersionSuppliedField As Boolean
        
        Private supplierField As String
        
        Private supplierSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private archiveCommentField As String
        
        Private archiveCommentSuppliedField As Boolean
        
        Private enableCheckSumField As Boolean
        
        Private enableCheckSumSuppliedField As Boolean
        
        Private packageTypeField As Integer
        
        Private packageTypeSuppliedField As Boolean
        
        Private packageMetadataXMLField As String
        
        Private metadataSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageId() As String
            Get
                Return Me.softwarePackageIdField
            End Get
            Set
                Me.softwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageName() As String
            Get
                Return Me.softwarePackageNameField
            End Get
            Set
                Me.softwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageNameSupplied() As Boolean
            Get
                Return Me.softwarePackageNameSuppliedField
            End Get
            Set
                Me.softwarePackageNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVersion() As String
            Get
                Return Me.softwarePackageVersionField
            End Get
            Set
                Me.softwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageVersionSupplied() As Boolean
            Get
                Return Me.softwarePackageVersionSuppliedField
            End Get
            Set
                Me.softwarePackageVersionSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property supplier() As String
            Get
                Return Me.supplierField
            End Get
            Set
                Me.supplierField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property supplierSupplied() As Boolean
            Get
                Return Me.supplierSuppliedField
            End Get
            Set
                Me.supplierSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property archiveComment() As String
            Get
                Return Me.archiveCommentField
            End Get
            Set
                Me.archiveCommentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property archiveCommentSupplied() As Boolean
            Get
                Return Me.archiveCommentSuppliedField
            End Get
            Set
                Me.archiveCommentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property enableCheckSum() As Boolean
            Get
                Return Me.enableCheckSumField
            End Get
            Set
                Me.enableCheckSumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property enableCheckSumSupplied() As Boolean
            Get
                Return Me.enableCheckSumSuppliedField
            End Get
            Set
                Me.enableCheckSumSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property packageType() As Integer
            Get
                Return Me.packageTypeField
            End Get
            Set
                Me.packageTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property packageTypeSupplied() As Boolean
            Get
                Return Me.packageTypeSuppliedField
            End Get
            Set
                Me.packageTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property packageMetadataXML() As String
            Get
                Return Me.packageMetadataXMLField
            End Get
            Set
                Me.packageMetadataXMLField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property metadataSupplied() As Boolean
            Get
                Return Me.metadataSuppliedField
            End Get
            Set
                Me.metadataSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSoftwarePackageProperties3
        
        Private softwarePackageNameField As String
        
        Private softwarePackageVersionField As String
        
        Private supplierField As String
        
        Private supplierSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private basedOnSoftwarePackageIdField As String
        
        Private basedOnSoftwarePackageIdSuppliedField As Boolean
        
        Private enableCheckSumField As Boolean
        
        Private enableCheckSumSuppliedField As Boolean
        
        Private packageTypeField As Integer
        
        Private metadataXMLField As String
        
        Private metadataXMLSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageName() As String
            Get
                Return Me.softwarePackageNameField
            End Get
            Set
                Me.softwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVersion() As String
            Get
                Return Me.softwarePackageVersionField
            End Get
            Set
                Me.softwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property supplier() As String
            Get
                Return Me.supplierField
            End Get
            Set
                Me.supplierField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property supplierSupplied() As Boolean
            Get
                Return Me.supplierSuppliedField
            End Get
            Set
                Me.supplierSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property basedOnSoftwarePackageId() As String
            Get
                Return Me.basedOnSoftwarePackageIdField
            End Get
            Set
                Me.basedOnSoftwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property basedOnSoftwarePackageIdSupplied() As Boolean
            Get
                Return Me.basedOnSoftwarePackageIdSuppliedField
            End Get
            Set
                Me.basedOnSoftwarePackageIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property enableCheckSum() As Boolean
            Get
                Return Me.enableCheckSumField
            End Get
            Set
                Me.enableCheckSumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property enableCheckSumSupplied() As Boolean
            Get
                Return Me.enableCheckSumSuppliedField
            End Get
            Set
                Me.enableCheckSumSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property packageType() As Integer
            Get
                Return Me.packageTypeField
            End Get
            Set
                Me.packageTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property metadataXML() As String
            Get
                Return Me.metadataXMLField
            End Get
            Set
                Me.metadataXMLField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property metadataXMLSupplied() As Boolean
            Get
                Return Me.metadataXMLSuppliedField
            End Get
            Set
                Me.metadataXMLSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class OSIMParameters
        
        Private installParameterNameField As String
        
        Private installParameterValueField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property installParameterName() As String
            Get
                Return Me.installParameterNameField
            End Get
            Set
                Me.installParameterNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property installParameterValue() As String
            Get
                Return Me.installParameterValueField
            End Get
            Set
                Me.installParameterValueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class OSIMTargetProperties2
        
        Private targetNameField As String
        
        Private targetMACAddressField As String
        
        Private configTypeField As WSOSIMCONFIGSTATE
        
        Private createdDateTimeField As DateTime2
        
        Private stateChangedDateTimeField As DateTime2
        
        Private osImageField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property targetName() As String
            Get
                Return Me.targetNameField
            End Get
            Set
                Me.targetNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property targetMACAddress() As String
            Get
                Return Me.targetMACAddressField
            End Get
            Set
                Me.targetMACAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property configType() As WSOSIMCONFIGSTATE
            Get
                Return Me.configTypeField
            End Get
            Set
                Me.configTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property createdDateTime() As DateTime2
            Get
                Return Me.createdDateTimeField
            End Get
            Set
                Me.createdDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property stateChangedDateTime() As DateTime2
            Get
                Return Me.stateChangedDateTimeField
            End Get
            Set
                Me.stateChangedDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property osImage() As String
            Get
                Return Me.osImageField
            End Get
            Set
                Me.osImageField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute(TypeName:="WS-OSIM-CONFIG-STATE", [Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum WSOSIMCONFIGSTATE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-OSIM-UNMANAGED")>  _
        WSOSIMUNMANAGED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-OSIM-CURRENT")>  _
        WSOSIMCURRENT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-OSIM-STOPPED")>  _
        WSOSIMSTOPPED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-OSIM-CANCEL-PEND")>  _
        WSOSIMCANCELPEND
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-OSIM-ERROR")>  _
        WSOSIMERROR
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-OSIM-PLANNED")>  _
        WSOSIMPLANNED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-OSIM-ACTIVATED")>  _
        WSOSIMACTIVATED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-OSIM-ANALYZING")>  _
        WSOSIMANALYZING
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-OSIM-PENDING")>  _
        WSOSIMPENDING
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-OSIM-INSTALLING")>  _
        WSOSIMINSTALLING
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class OSIMTargetFilter2
        
        Private osimTargetPropertyField As OSIMTARGETPROPERTY2
        
        Private conditionField As FILTERCONDITION
        
        Private createdDateTimeField As DateTime2
        
        Private stateChangedDateTimeField As DateTime2
        
        Private searchStringField As String
        
        Private configStateField As WSOSIMCONFIGSTATE
        
        Private configStateFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property osimTargetProperty() As OSIMTARGETPROPERTY2
            Get
                Return Me.osimTargetPropertyField
            End Get
            Set
                Me.osimTargetPropertyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property condition() As FILTERCONDITION
            Get
                Return Me.conditionField
            End Get
            Set
                Me.conditionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property createdDateTime() As DateTime2
            Get
                Return Me.createdDateTimeField
            End Get
            Set
                Me.createdDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property stateChangedDateTime() As DateTime2
            Get
                Return Me.stateChangedDateTimeField
            End Get
            Set
                Me.stateChangedDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property searchString() As String
            Get
                Return Me.searchStringField
            End Get
            Set
                Me.searchStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property configState() As WSOSIMCONFIGSTATE
            Get
                Return Me.configStateField
            End Get
            Set
                Me.configStateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property configStateSpecified() As Boolean
            Get
                Return Me.configStateFieldSpecified
            End Get
            Set
                Me.configStateFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum OSIMTARGETPROPERTY2
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("TARGET-NAME")>  _
        TARGETNAME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("TARGET-MACADDRESS")>  _
        TARGETMACADDRESS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("OSIM-CONFIG-STATE")>  _
        OSIMCONFIGSTATE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CREATED-DATETIME")>  _
        CREATEDDATETIME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("STATE-CHANGED-DATETIME")>  _
        STATECHANGEDDATETIME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("OS-IMAGENAME")>  _
        OSIMAGENAME
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SDProperties
        
        Private jobCalendarField As String
        
        Private softwareManagedSystemField As Boolean
        
        Private racPolicyField As RACPolicy
        
        Private downloadMethodField As DownloadMethod
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property jobCalendar() As String
            Get
                Return Me.jobCalendarField
            End Get
            Set
                Me.jobCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareManagedSystem() As Boolean
            Get
                Return Me.softwareManagedSystemField
            End Get
            Set
                Me.softwareManagedSystemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property racPolicy() As RACPolicy
            Get
                Return Me.racPolicyField
            End Get
            Set
                Me.racPolicyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property downloadMethod() As DownloadMethod
            Get
                Return Me.downloadMethodField
            End Get
            Set
                Me.downloadMethodField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ManagerVersion
        
        Private majorVersionField As Integer
        
        Private minorVersionField As Integer
        
        Private buildNumberField As Integer
        
        Private patchNumberField As Integer
        
        '''<remarks/>
        Public Property majorVersion() As Integer
            Get
                Return Me.majorVersionField
            End Get
            Set
                Me.majorVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property minorVersion() As Integer
            Get
                Return Me.minorVersionField
            End Get
            Set
                Me.minorVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property buildNumber() As Integer
            Get
                Return Me.buildNumberField
            End Get
            Set
                Me.buildNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property patchNumber() As Integer
            Get
                Return Me.patchNumberField
            End Get
            Set
                Me.patchNumberField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ManagerProperties
        
        Private managerUUIDField As String
        
        Private isEnterpriseField As Boolean
        
        Private languageField As String
        
        Private versionField As ManagerVersion
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property managerUUID() As String
            Get
                Return Me.managerUUIDField
            End Get
            Set
                Me.managerUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isEnterprise() As Boolean
            Get
                Return Me.isEnterpriseField
            End Get
            Set
                Me.isEnterpriseField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property language() As String
            Get
                Return Me.languageField
            End Get
            Set
                Me.languageField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property version() As ManagerVersion
            Get
                Return Me.versionField
            End Get
            Set
                Me.versionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ConfigurationParameterValue
        
        Private paramsField As ConfigurationParams
        
        Private paramValueField As Integer
        
        '''<remarks/>
        Public Property params() As ConfigurationParams
            Get
                Return Me.paramsField
            End Get
            Set
                Me.paramsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property paramValue() As Integer
            Get
                Return Me.paramValueField
            End Get
            Set
                Me.paramValueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum ConfigurationParams
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SD-MAXJOBTIMEOUT")>  _
        SDMAXJOBTIMEOUT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SD-MINJOBTIMEOUT")>  _
        SDMINJOBTIMEOUT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SD-JOBCLEANUPTIME")>  _
        SDJOBCLEANUPTIME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SD-JOBHISTORYCLEANUPTIME")>  _
        SDJOBHISTORYCLEANUPTIME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SD-ALREADYINST-OK")>  _
        SDALREADYINSTOK
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SD-FAIL-IMPLICIT-SS-DELIVERIES")>  _
        SDFAILIMPLICITSSDELIVERIES
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SD-CHECK-TEMPLATE-POLICIES")>  _
        SDCHECKTEMPLATEPOLICIES
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SD-RAC-AUTOMATION")>  _
        SDRACAUTOMATION
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SD-JOBCLEANUPINTERVAL")>  _
        SDJOBCLEANUPINTERVAL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SD-FORCED-RESTRICTIONS")>  _
        SDFORCEDRESTRICTIONS
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ComponentStatus
        
        Private componentField As DsmComponents
        
        Private statusField As DsmComponentStatus
        
        '''<remarks/>
        Public Property component() As DsmComponents
            Get
                Return Me.componentField
            End Get
            Set
                Me.componentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property status() As DsmComponentStatus
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum DsmComponents
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ASSET-MANAGER")>  _
        ASSETMANAGER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SOFTWARE-DELIVERY")>  _
        SOFTWAREDELIVERY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("REMOTE-CONTROL")>  _
        REMOTECONTROL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ASSET-COLLECTOR")>  _
        ASSETCOLLECTOR
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SERVICE-DESK")>  _
        SERVICEDESK
        
        '''<remarks/>
        OSIM
        
        '''<remarks/>
        DMDEPLOY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("AUTOMATION-SERVICE")>  _
        AUTOMATIONSERVICE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CCS-CALENDAR")>  _
        CCSCALENDAR
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum DsmComponentStatus
        
        '''<remarks/>
        INSTALLED
        
        '''<remarks/>
        NOTINSTALLED
        
        '''<remarks/>
        NOTCOMPATIBLE
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageFilter
        
        Private swPkgPropertyField As SoftwarePackageProperty
        
        Private conditionField As FILTERCONDITION
        
        Private searchStringField As String
        
        Private dateTimeField As DateTime
        
        Private searchValueField As Long
        
        Private pkgTypeField As System.Nullable(Of SoftwarePackagingType)
        
        Private pkgTypeFieldSpecified As Boolean
        
        Private formatField As System.Nullable(Of PackageFormat)
        
        Private formatFieldSpecified As Boolean
        
        Private filedByField As System.Nullable(Of SoftwarePackageFiledBy)
        
        Private filedByFieldSpecified As Boolean
        
        Private archivedAtField As System.Nullable(Of ArchivePath)
        
        Private archivedAtFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property swPkgProperty() As SoftwarePackageProperty
            Get
                Return Me.swPkgPropertyField
            End Get
            Set
                Me.swPkgPropertyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property condition() As FILTERCONDITION
            Get
                Return Me.conditionField
            End Get
            Set
                Me.conditionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property searchString() As String
            Get
                Return Me.searchStringField
            End Get
            Set
                Me.searchStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dateTime() As DateTime
            Get
                Return Me.dateTimeField
            End Get
            Set
                Me.dateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property searchValue() As Long
            Get
                Return Me.searchValueField
            End Get
            Set
                Me.searchValueField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property pkgType() As System.Nullable(Of SoftwarePackagingType)
            Get
                Return Me.pkgTypeField
            End Get
            Set
                Me.pkgTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property pkgTypeSpecified() As Boolean
            Get
                Return Me.pkgTypeFieldSpecified
            End Get
            Set
                Me.pkgTypeFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property format() As System.Nullable(Of PackageFormat)
            Get
                Return Me.formatField
            End Get
            Set
                Me.formatField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property formatSpecified() As Boolean
            Get
                Return Me.formatFieldSpecified
            End Get
            Set
                Me.formatFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property filedBy() As System.Nullable(Of SoftwarePackageFiledBy)
            Get
                Return Me.filedByField
            End Get
            Set
                Me.filedByField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property filedBySpecified() As Boolean
            Get
                Return Me.filedByFieldSpecified
            End Get
            Set
                Me.filedByFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property archivedAt() As System.Nullable(Of ArchivePath)
            Get
                Return Me.archivedAtField
            End Get
            Set
                Me.archivedAtField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property archivedAtSpecified() As Boolean
            Get
                Return Me.archivedAtFieldSpecified
            End Get
            Set
                Me.archivedAtFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SoftwarePackagingType
        
        '''<remarks/>
        GENERIC
        
        '''<remarks/>
        SXP
        
        '''<remarks/>
        PIF
        
        '''<remarks/>
        PKG
        
        '''<remarks/>
        MSI
        
        '''<remarks/>
        PALM
        
        '''<remarks/>
        WINCE
        
        '''<remarks/>
        RPM
        
        '''<remarks/>
        NOKIA
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DEBIAN-WRAPPER")>  _
        DEBIANWRAPPER
        
        '''<remarks/>
        ROLLUP
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum PackageFormat
        
        '''<remarks/>
        REGULAR
        
        '''<remarks/>
        VIRTUAL
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SoftwarePackageFiledBy
        
        '''<remarks/>
        LOCAL
        
        '''<remarks/>
        CENTRAL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("TD-LOCAL")>  _
        TDLOCAL
        
        '''<remarks/>
        TDSWD
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("TDSWD-CENTRAL")>  _
        TDSWDCENTRAL
        
        '''<remarks/>
        TD
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum ArchivePath
        
        '''<remarks/>
        SERVER
        
        '''<remarks/>
        ENTERPRISESERVER
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ArrayOfSoftwarePackageFilter
        
        Private filterField() As SoftwarePackageFilter
        
        Private matchAllField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("filter")>  _
        Public Property filter() As SoftwarePackageFilter()
            Get
                Return Me.filterField
            End Get
            Set
                Me.filterField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property matchAll() As Boolean
            Get
                Return Me.matchAllField
            End Get
            Set
                Me.matchAllField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class BootServerProperties
        
        Private serverNameField As String
        
        Private bsStatusField As String
        
        Private platformField As String
        
        Private nfsSupportField As String
        
        Private accessMethodField As String
        
        Private lastReportField As DateTime2
        
        Private lastReportReqField As DateTime2
        
        Private lastResponseField As DateTime2
        
        Private pxeInterfaceField As String
        
        Private sdPkgLinuxField As String
        
        Private sdPkgWinField As String
        
        Private sdPkgR11Field As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property serverName() As String
            Get
                Return Me.serverNameField
            End Get
            Set
                Me.serverNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property bsStatus() As String
            Get
                Return Me.bsStatusField
            End Get
            Set
                Me.bsStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property platform() As String
            Get
                Return Me.platformField
            End Get
            Set
                Me.platformField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property nfsSupport() As String
            Get
                Return Me.nfsSupportField
            End Get
            Set
                Me.nfsSupportField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property accessMethod() As String
            Get
                Return Me.accessMethodField
            End Get
            Set
                Me.accessMethodField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastReport() As DateTime2
            Get
                Return Me.lastReportField
            End Get
            Set
                Me.lastReportField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastReportReq() As DateTime2
            Get
                Return Me.lastReportReqField
            End Get
            Set
                Me.lastReportReqField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastResponse() As DateTime2
            Get
                Return Me.lastResponseField
            End Get
            Set
                Me.lastResponseField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property pxeInterface() As String
            Get
                Return Me.pxeInterfaceField
            End Get
            Set
                Me.pxeInterfaceField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sdPkgLinux() As String
            Get
                Return Me.sdPkgLinuxField
            End Get
            Set
                Me.sdPkgLinuxField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sdPkgWin() As String
            Get
                Return Me.sdPkgWinField
            End Get
            Set
                Me.sdPkgWinField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sdPkgR11() As String
            Get
                Return Me.sdPkgR11Field
            End Get
            Set
                Me.sdPkgR11Field = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class BootServerFilter
        
        Private bsPropertyField As BootServerProperty
        
        Private conditionField As FILTERCONDITION
        
        Private searchStringField As String
        
        Private dateTimeField As DateTime2
        
        '''<remarks/>
        Public Property bsProperty() As BootServerProperty
            Get
                Return Me.bsPropertyField
            End Get
            Set
                Me.bsPropertyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property condition() As FILTERCONDITION
            Get
                Return Me.conditionField
            End Get
            Set
                Me.conditionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property searchString() As String
            Get
                Return Me.searchStringField
            End Get
            Set
                Me.searchStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dateTime() As DateTime2
            Get
                Return Me.dateTimeField
            End Get
            Set
                Me.dateTimeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum BootServerProperty
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("BS-NAME")>  _
        BSNAME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("BS-STATUS")>  _
        BSSTATUS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("BS-PLATFORM")>  _
        BSPLATFORM
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("BS-NFS-SUPPORT")>  _
        BSNFSSUPPORT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("BS-ACCESS-METHOD")>  _
        BSACCESSMETHOD
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("BS-LASTREPORT")>  _
        BSLASTREPORT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("BS-LASTREPORT-REQ")>  _
        BSLASTREPORTREQ
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("BS-RESPONSE")>  _
        BSRESPONSE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("BS-PXE-INTERFACE")>  _
        BSPXEINTERFACE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("BS-SD-PKG-LINUX")>  _
        BSSDPKGLINUX
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("BS-SD-PKG-WIN")>  _
        BSSDPKGWIN
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("BS-SD-PKG-R11")>  _
        BSSDPKGR11
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ArrayOfBootServerFilter
        
        Private filterField() As BootServerFilter
        
        Private matchAllField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("filter")>  _
        Public Property filter() As BootServerFilter()
            Get
                Return Me.filterField
            End Get
            Set
                Me.filterField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property matchAll() As Boolean
            Get
                Return Me.matchAllField
            End Get
            Set
                Me.matchAllField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class BootImageProperties
        
        Private bootImageNameField As String
        
        Private typeIndicatorField As String
        
        Private platformField As String
        
        Private registeredDateTimeField As DateTime2
        
        Private sdPackageNameField As String
        
        Private sdPackageVersionField As String
        
        Private sdPackageCommentField As String
        
        Private imageFlagsField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property bootImageName() As String
            Get
                Return Me.bootImageNameField
            End Get
            Set
                Me.bootImageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property typeIndicator() As String
            Get
                Return Me.typeIndicatorField
            End Get
            Set
                Me.typeIndicatorField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property platform() As String
            Get
                Return Me.platformField
            End Get
            Set
                Me.platformField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property registeredDateTime() As DateTime2
            Get
                Return Me.registeredDateTimeField
            End Get
            Set
                Me.registeredDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sdPackageName() As String
            Get
                Return Me.sdPackageNameField
            End Get
            Set
                Me.sdPackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sdPackageVersion() As String
            Get
                Return Me.sdPackageVersionField
            End Get
            Set
                Me.sdPackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sdPackageComment() As String
            Get
                Return Me.sdPackageCommentField
            End Get
            Set
                Me.sdPackageCommentField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property imageFlags() As String
            Get
                Return Me.imageFlagsField
            End Get
            Set
                Me.imageFlagsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class BootImageFilter
        
        Private biPropertyField As BootImageProperty
        
        Private conditionField As FILTERCONDITION
        
        Private searchStringField As String
        
        Private dateTimeField As DateTime2
        
        '''<remarks/>
        Public Property biProperty() As BootImageProperty
            Get
                Return Me.biPropertyField
            End Get
            Set
                Me.biPropertyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property condition() As FILTERCONDITION
            Get
                Return Me.conditionField
            End Get
            Set
                Me.conditionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property searchString() As String
            Get
                Return Me.searchStringField
            End Get
            Set
                Me.searchStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dateTime() As DateTime2
            Get
                Return Me.dateTimeField
            End Get
            Set
                Me.dateTimeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum BootImageProperty
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("BI-IMAGE-NAME")>  _
        BIIMAGENAME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("BI-TYPE-INDICATOR")>  _
        BITYPEINDICATOR
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("BI-PLATFORM")>  _
        BIPLATFORM
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("BI-REGISTERED-DATETIME")>  _
        BIREGISTEREDDATETIME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("BI-SD-PACKAGE-NAME")>  _
        BISDPACKAGENAME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("BI-SD-PACKAGE-VERSION")>  _
        BISDPACKAGEVERSION
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("BI-SD-PACKAGE-COMMENT")>  _
        BISDPACKAGECOMMENT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("BI-IMAGE-FLAGS")>  _
        BIIMAGEFLAGS
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ArrayOfBootImageFilter
        
        Private filterField() As BootImageFilter
        
        Private matchAllField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("filter")>  _
        Public Property filter() As BootImageFilter()
            Get
                Return Me.filterField
            End Get
            Set
                Me.filterField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property matchAll() As Boolean
            Get
                Return Me.matchAllField
            End Get
            Set
                Me.matchAllField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class QueryProperties2
        
        Private queryUUIDField As String
        
        Private queryNameField As String
        
        Private queryTypeField As QueryTargetType
        
        Private replicatedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryUUID() As String
            Get
                Return Me.queryUUIDField
            End Get
            Set
                Me.queryUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryName() As String
            Get
                Return Me.queryNameField
            End Get
            Set
                Me.queryNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryType() As QueryTargetType
            Get
                Return Me.queryTypeField
            End Get
            Set
                Me.queryTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property replicated() As Boolean
            Get
                Return Me.replicatedField
            End Get
            Set
                Me.replicatedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum QueryTargetType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("QUERY-TARGET-TYPE-CUSTOM")>  _
        QUERYTARGETTYPECUSTOM
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("QUERY-TARGET-TYPE-COMPUTERS")>  _
        QUERYTARGETTYPECOMPUTERS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("QUERY-TARGET-TYPE-USERACCOUNTS")>  _
        QUERYTARGETTYPEUSERACCOUNTS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("QUERY-TARGET-TYPE-USERPROFILES")>  _
        QUERYTARGETTYPEUSERPROFILES
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("QUERY-TARGET-TYPE-OSIMCOMPUTERS")>  _
        QUERYTARGETTYPEOSIMCOMPUTERS
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class QueryFilter
        
        Private filterConditionField As QueryFilterCondition
        
        Private queryPropertyField As QueryProperty
        
        Private searchStringField As String
        
        Private targetTypeField As QueryTargetType
        
        Private targetTypeFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property filterCondition() As QueryFilterCondition
            Get
                Return Me.filterConditionField
            End Get
            Set
                Me.filterConditionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryProperty() As QueryProperty
            Get
                Return Me.queryPropertyField
            End Get
            Set
                Me.queryPropertyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property searchString() As String
            Get
                Return Me.searchStringField
            End Get
            Set
                Me.searchStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property targetType() As QueryTargetType
            Get
                Return Me.targetTypeField
            End Get
            Set
                Me.targetTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property targetTypeSpecified() As Boolean
            Get
                Return Me.targetTypeFieldSpecified
            End Get
            Set
                Me.targetTypeFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum QueryFilterCondition
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("QUERY-FILTER-WILDCARD-EQ")>  _
        QUERYFILTERWILDCARDEQ
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("QUERY-FILTER-WILDCARD-NE")>  _
        QUERYFILTERWILDCARDNE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("QUERY-FILTER-EQ")>  _
        QUERYFILTEREQ
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("QUERY-FILTER-NE")>  _
        QUERYFILTERNE
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum QueryProperty
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("QUERY-LABEL")>  _
        QUERYLABEL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("QUERY-TARGET-TYPE")>  _
        QUERYTARGETTYPE
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ArrayOfQueryFilter
        
        Private filterField() As QueryFilter
        
        Private matchAllField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("filter")>  _
        Public Property filter() As QueryFilter()
            Get
                Return Me.filterField
            End Get
            Set
                Me.filterField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property matchAll() As Boolean
            Get
                Return Me.matchAllField
            End Get
            Set
                Me.matchAllField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class QueryFolderProperties
        
        Private folderNameField As String
        
        Private folderIdField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property folderName() As String
            Get
                Return Me.folderNameField
            End Get
            Set
                Me.folderNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property folderId() As Long
            Get
                Return Me.folderIdField
            End Get
            Set
                Me.folderIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class HWModelFilter
        
        Private searchStringField As String
        
        Private filterConditionField As HWMODELFILTERCONDITION
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property searchString() As String
            Get
                Return Me.searchStringField
            End Get
            Set
                Me.searchStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property filterCondition() As HWMODELFILTERCONDITION
            Get
                Return Me.filterConditionField
            End Get
            Set
                Me.filterConditionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute(TypeName:="HWMODEL-FILTER-CONDITION", [Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum HWMODELFILTERCONDITION
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("HWMODEL-WILDCARD-EQ")>  _
        HWMODELWILDCARDEQ
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("HWMODEL-WILDCARD-NE")>  _
        HWMODELWILDCARDNE
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ArrayOfHWModelFilter
        
        Private filterField() As HWModelFilter
        
        Private matchAllField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("filter")>  _
        Public Property filter() As HWModelFilter()
            Get
                Return Me.filterField
            End Get
            Set
                Me.filterField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property matchAll() As Boolean
            Get
                Return Me.matchAllField
            End Get
            Set
                Me.matchAllField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class TemplateProperties
        
        Private templateNameField As String
        
        Private templateIdField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property templateName() As String
            Get
                Return Me.templateNameField
            End Get
            Set
                Me.templateNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property templateId() As String
            Get
                Return Me.templateIdField
            End Get
            Set
                Me.templateIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSoftwareJobContainerProperties4
        
        Private nameField As String
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private priorityField As Long
        
        Private prioritySuppliedField As Boolean
        
        Private parentSoftwareJobContainerIdField As String
        
        Private parentSoftwareJobContainerIdSuppliedField As Boolean
        
        Private softwareJobContainerPropertyMaskField As SoftwareJobContainerPropertyMask
        
        Private softwareJobContainerPropertyMaskSuppliedField As Boolean
        
        Private userMessageField As String
        
        Private userMessageSuppliedField As Boolean
        
        Private openTicketOnFailureField As Boolean
        
        Private templateIdField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property priority() As Long
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prioritySupplied() As Boolean
            Get
                Return Me.prioritySuppliedField
            End Get
            Set
                Me.prioritySuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property parentSoftwareJobContainerId() As String
            Get
                Return Me.parentSoftwareJobContainerIdField
            End Get
            Set
                Me.parentSoftwareJobContainerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property parentSoftwareJobContainerIdSupplied() As Boolean
            Get
                Return Me.parentSoftwareJobContainerIdSuppliedField
            End Get
            Set
                Me.parentSoftwareJobContainerIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMask() As SoftwareJobContainerPropertyMask
            Get
                Return Me.softwareJobContainerPropertyMaskField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMaskSupplied() As Boolean
            Get
                Return Me.softwareJobContainerPropertyMaskSuppliedField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userMessage() As String
            Get
                Return Me.userMessageField
            End Get
            Set
                Me.userMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userMessageSupplied() As Boolean
            Get
                Return Me.userMessageSuppliedField
            End Get
            Set
                Me.userMessageSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property openTicketOnFailure() As Boolean
            Get
                Return Me.openTicketOnFailureField
            End Get
            Set
                Me.openTicketOnFailureField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property templateId() As String
            Get
                Return Me.templateIdField
            End Get
            Set
                Me.templateIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwareJobContainerPropertyMask
        
        Private linkageNoneField As Boolean
        
        Private linkageSequenceField As Boolean
        
        Private linkageBatchField As Boolean
        
        Private rollbackField As Boolean
        
        Private cascadeField As Boolean
        
        Private buildOnlyField As Boolean
        
        Private renewedField As Boolean
        
        '''<remarks/>
        Public Property linkageNone() As Boolean
            Get
                Return Me.linkageNoneField
            End Get
            Set
                Me.linkageNoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property linkageSequence() As Boolean
            Get
                Return Me.linkageSequenceField
            End Get
            Set
                Me.linkageSequenceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property linkageBatch() As Boolean
            Get
                Return Me.linkageBatchField
            End Get
            Set
                Me.linkageBatchField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rollback() As Boolean
            Get
                Return Me.rollbackField
            End Get
            Set
                Me.rollbackField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cascade() As Boolean
            Get
                Return Me.cascadeField
            End Get
            Set
                Me.cascadeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property buildOnly() As Boolean
            Get
                Return Me.buildOnlyField
            End Get
            Set
                Me.buildOnlyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property renewed() As Boolean
            Get
                Return Me.renewedField
            End Get
            Set
                Me.renewedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class TriggerInfo
        
        Private nCFComponentCodeField As Integer
        
        Private nUnitTypeField As TriggerUnitType
        
        Private objDbUuidField As String
        
        Private wakeOnLANField As Boolean
        
        '''<remarks/>
        Public Property nCFComponentCode() As Integer
            Get
                Return Me.nCFComponentCodeField
            End Get
            Set
                Me.nCFComponentCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nUnitType() As TriggerUnitType
            Get
                Return Me.nUnitTypeField
            End Get
            Set
                Me.nUnitTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property objDbUuid() As String
            Get
                Return Me.objDbUuidField
            End Get
            Set
                Me.objDbUuidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property wakeOnLAN() As Boolean
            Get
                Return Me.wakeOnLANField
            End Get
            Set
                Me.wakeOnLANField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum TriggerUnitType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-TRIGG-COMPUTER")>  _
        WSTRIGGCOMPUTER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-TRIGG-USERPROFILE")>  _
        WSTRIGGUSERPROFILE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-TRIGG-DOCKINGDEVICE")>  _
        WSTRIGGDOCKINGDEVICE
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class GetAssetScriptJobsProperties
        
        Private assetJobUidField As String
        
        Private domainIdField As Long
        
        Private jobIdField As Long
        
        Private jobNameField As String
        
        Private jobDescriptionField As String
        
        Private jobScriptField As String
        
        Private schedulingOptionsField As SchedulingOptions
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property assetJobUid() As String
            Get
                Return Me.assetJobUidField
            End Get
            Set
                Me.assetJobUidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property domainId() As Long
            Get
                Return Me.domainIdField
            End Get
            Set
                Me.domainIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property jobId() As Long
            Get
                Return Me.jobIdField
            End Get
            Set
                Me.jobIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property jobName() As String
            Get
                Return Me.jobNameField
            End Get
            Set
                Me.jobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property jobDescription() As String
            Get
                Return Me.jobDescriptionField
            End Get
            Set
                Me.jobDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property jobScript() As String
            Get
                Return Me.jobScriptField
            End Get
            Set
                Me.jobScriptField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property schedulingOptions() As SchedulingOptions
            Get
                Return Me.schedulingOptionsField
            End Get
            Set
                Me.schedulingOptionsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SchedulingOptions
        
        Private schedulingField As Scheduling
        
        Private conditionsField As Conditions
        
        Private dependencyField As Dependency
        
        Private preJobField As PreJob
        
        Private postJobField As PostJob
        
        Private miscellaneousField As Miscellaneous
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property scheduling() As Scheduling
            Get
                Return Me.schedulingField
            End Get
            Set
                Me.schedulingField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property conditions() As Conditions
            Get
                Return Me.conditionsField
            End Get
            Set
                Me.conditionsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dependency() As Dependency
            Get
                Return Me.dependencyField
            End Get
            Set
                Me.dependencyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property preJob() As PreJob
            Get
                Return Me.preJobField
            End Get
            Set
                Me.preJobField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property postJob() As PostJob
            Get
                Return Me.postJobField
            End Get
            Set
                Me.postJobField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property miscellaneous() As Miscellaneous
            Get
                Return Me.miscellaneousField
            End Get
            Set
                Me.miscellaneousField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class Scheduling
        
        Private scheduleField As Integer
        
        '''<remarks/>
        Public Property schedule() As Integer
            Get
                Return Me.scheduleField
            End Get
            Set
                Me.scheduleField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class Conditions
        
        Private dateTimeRestrictionsField As DateTimeRestrictions
        
        Private bRunOnlyOnTheseDaysField As Boolean
        
        Private dayOfTheWeekDependencyField() As DayOfTheWeekDependency
        
        Private bIsPeriodDepenField As Boolean
        
        Private periodicDependencyField As PeriodicDependency
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dateTimeRestrictions() As DateTimeRestrictions
            Get
                Return Me.dateTimeRestrictionsField
            End Get
            Set
                Me.dateTimeRestrictionsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bRunOnlyOnTheseDays() As Boolean
            Get
                Return Me.bRunOnlyOnTheseDaysField
            End Get
            Set
                Me.bRunOnlyOnTheseDaysField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("dayOfTheWeekDependencyValueArray", IsNullable:=false)>  _
        Public Property dayOfTheWeekDependency() As DayOfTheWeekDependency()
            Get
                Return Me.dayOfTheWeekDependencyField
            End Get
            Set
                Me.dayOfTheWeekDependencyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bIsPeriodDepen() As Boolean
            Get
                Return Me.bIsPeriodDepenField
            End Get
            Set
                Me.bIsPeriodDepenField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property periodicDependency() As PeriodicDependency
            Get
                Return Me.periodicDependencyField
            End Get
            Set
                Me.periodicDependencyField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DateTimeRestrictions
        
        Private bRunOnlyWhenWithinDateRangeField As Boolean
        
        Private bRunOnlyWhenWithinTimeRangeField As Boolean
        
        Private startDateTimeField As DateTime
        
        Private endDateTimeField As DateTime
        
        '''<remarks/>
        Public Property bRunOnlyWhenWithinDateRange() As Boolean
            Get
                Return Me.bRunOnlyWhenWithinDateRangeField
            End Get
            Set
                Me.bRunOnlyWhenWithinDateRangeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bRunOnlyWhenWithinTimeRange() As Boolean
            Get
                Return Me.bRunOnlyWhenWithinTimeRangeField
            End Get
            Set
                Me.bRunOnlyWhenWithinTimeRangeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property startDateTime() As DateTime
            Get
                Return Me.startDateTimeField
            End Get
            Set
                Me.startDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property endDateTime() As DateTime
            Get
                Return Me.endDateTimeField
            End Get
            Set
                Me.endDateTimeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DayOfTheWeekDependency
        
        Private weekDaysField As WeekDay
        
        '''<remarks/>
        Public Property weekDays() As WeekDay
            Get
                Return Me.weekDaysField
            End Get
            Set
                Me.weekDaysField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum WeekDay
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-SUNDAY")>  _
        WSSUNDAY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-MONDAY")>  _
        WSMONDAY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-TUESDAY")>  _
        WSTUESDAY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-WEDNESDAY")>  _
        WSWEDNESDAY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-THURSDAY")>  _
        WSTHURSDAY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-FRIDAY")>  _
        WSFRIDAY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-SATURDAY")>  _
        WSSATURDAY
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class PeriodicDependency
        
        Private periodTypeField As PeriodType
        
        Private periodField As Integer
        
        '''<remarks/>
        Public Property periodType() As PeriodType
            Get
                Return Me.periodTypeField
            End Get
            Set
                Me.periodTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property period() As Integer
            Get
                Return Me.periodField
            End Get
            Set
                Me.periodField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum PeriodType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-NONE")>  _
        WSNONE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-DAY")>  _
        WSDAY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-WEEK")>  _
        WSWEEK
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-MONTH")>  _
        WSMONTH
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-YEAR")>  _
        WSYEAR
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class Dependency
        
        Private bJobDependencyField As Boolean
        
        Private jobDependencyField As JobDependency
        
        Private bFileDependencyField As Boolean
        
        Private fileDependencyField As FileDependency
        
        Private bJobConLimitField As Boolean
        
        Private allowOnlyNumExecutionsAtATimeField As Integer
        
        '''<remarks/>
        Public Property bJobDependency() As Boolean
            Get
                Return Me.bJobDependencyField
            End Get
            Set
                Me.bJobDependencyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property jobDependency() As JobDependency
            Get
                Return Me.jobDependencyField
            End Get
            Set
                Me.jobDependencyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bFileDependency() As Boolean
            Get
                Return Me.bFileDependencyField
            End Get
            Set
                Me.bFileDependencyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property fileDependency() As FileDependency
            Get
                Return Me.fileDependencyField
            End Get
            Set
                Me.fileDependencyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bJobConLimit() As Boolean
            Get
                Return Me.bJobConLimitField
            End Get
            Set
                Me.bJobConLimitField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property allowOnlyNumExecutionsAtATime() As Integer
            Get
                Return Me.allowOnlyNumExecutionsAtATimeField
            End Get
            Set
                Me.allowOnlyNumExecutionsAtATimeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class JobDependency
        
        Private dependentJobDomainIdField As Long
        
        Private dependentJobIdField As Long
        
        Private dependentJobUidField As String
        
        Private bCurrentJobAttachedToRelatedAssetField As Boolean
        
        '''<remarks/>
        Public Property dependentJobDomainId() As Long
            Get
                Return Me.dependentJobDomainIdField
            End Get
            Set
                Me.dependentJobDomainIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dependentJobId() As Long
            Get
                Return Me.dependentJobIdField
            End Get
            Set
                Me.dependentJobIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dependentJobUid() As String
            Get
                Return Me.dependentJobUidField
            End Get
            Set
                Me.dependentJobUidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bCurrentJobAttachedToRelatedAsset() As Boolean
            Get
                Return Me.bCurrentJobAttachedToRelatedAssetField
            End Get
            Set
                Me.bCurrentJobAttachedToRelatedAssetField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class FileDependency
        
        Private bFileExistsField As Boolean
        
        Private filePathField As String
        
        '''<remarks/>
        Public Property bFileExists() As Boolean
            Get
                Return Me.bFileExistsField
            End Get
            Set
                Me.bFileExistsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property filePath() As String
            Get
                Return Me.filePathField
            End Get
            Set
                Me.filePathField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class PreJob
        
        Private bJobExecPropertiesField As Boolean
        
        Private jobExecPropertiesField As JobExecProperties
        
        Private bNetWorkDriveInfoField As Boolean
        
        Private netWorkDriveField As NetWorkDrive
        
        '''<remarks/>
        Public Property bJobExecProperties() As Boolean
            Get
                Return Me.bJobExecPropertiesField
            End Get
            Set
                Me.bJobExecPropertiesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property jobExecProperties() As JobExecProperties
            Get
                Return Me.jobExecPropertiesField
            End Get
            Set
                Me.jobExecPropertiesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bNetWorkDriveInfo() As Boolean
            Get
                Return Me.bNetWorkDriveInfoField
            End Get
            Set
                Me.bNetWorkDriveInfoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property netWorkDrive() As NetWorkDrive
            Get
                Return Me.netWorkDriveField
            End Get
            Set
                Me.netWorkDriveField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class JobExecProperties
        
        Private promptMessageField As String
        
        Private messageOKField As String
        
        Private messageCancelField As String
        
        Private bDefaultMessageField As Boolean
        
        Private bAutoSelectField As Boolean
        
        Private bAutoSelectValueField As Boolean
        
        Private autoSelectAfterSecondField As Long
        
        Private bForceExecutionAfterNumCancellationsField As Boolean
        
        Private forceExecutionAfterNumCancellationsField As Integer
        
        Private bForceExecutionAfterDateField As Boolean
        
        Private forceExecutionAfterDateField As DateTime
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property promptMessage() As String
            Get
                Return Me.promptMessageField
            End Get
            Set
                Me.promptMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property messageOK() As String
            Get
                Return Me.messageOKField
            End Get
            Set
                Me.messageOKField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property messageCancel() As String
            Get
                Return Me.messageCancelField
            End Get
            Set
                Me.messageCancelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bDefaultMessage() As Boolean
            Get
                Return Me.bDefaultMessageField
            End Get
            Set
                Me.bDefaultMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bAutoSelect() As Boolean
            Get
                Return Me.bAutoSelectField
            End Get
            Set
                Me.bAutoSelectField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bAutoSelectValue() As Boolean
            Get
                Return Me.bAutoSelectValueField
            End Get
            Set
                Me.bAutoSelectValueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property autoSelectAfterSecond() As Long
            Get
                Return Me.autoSelectAfterSecondField
            End Get
            Set
                Me.autoSelectAfterSecondField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bForceExecutionAfterNumCancellations() As Boolean
            Get
                Return Me.bForceExecutionAfterNumCancellationsField
            End Get
            Set
                Me.bForceExecutionAfterNumCancellationsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property forceExecutionAfterNumCancellations() As Integer
            Get
                Return Me.forceExecutionAfterNumCancellationsField
            End Get
            Set
                Me.forceExecutionAfterNumCancellationsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bForceExecutionAfterDate() As Boolean
            Get
                Return Me.bForceExecutionAfterDateField
            End Get
            Set
                Me.bForceExecutionAfterDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property forceExecutionAfterDate() As DateTime
            Get
                Return Me.forceExecutionAfterDateField
            End Get
            Set
                Me.forceExecutionAfterDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class NetWorkDrive
        
        Private driveField As String
        
        Private sharePathField As String
        
        Private bDisconnectWhenDoneField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property drive() As String
            Get
                Return Me.driveField
            End Get
            Set
                Me.driveField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sharePath() As String
            Get
                Return Me.sharePathField
            End Get
            Set
                Me.sharePathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bDisconnectWhenDone() As Boolean
            Get
                Return Me.bDisconnectWhenDoneField
            End Get
            Set
                Me.bDisconnectWhenDoneField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class PostJob
        
        Private bPostJobPropertiesField As Boolean
        
        Private postJobPropertiesField As PostJobProperties
        
        Private bDeleteJobWhenSuccesededField As Boolean
        
        '''<remarks/>
        Public Property bPostJobProperties() As Boolean
            Get
                Return Me.bPostJobPropertiesField
            End Get
            Set
                Me.bPostJobPropertiesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property postJobProperties() As PostJobProperties
            Get
                Return Me.postJobPropertiesField
            End Get
            Set
                Me.postJobPropertiesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bDeleteJobWhenSucceseded() As Boolean
            Get
                Return Me.bDeleteJobWhenSuccesededField
            End Get
            Set
                Me.bDeleteJobWhenSuccesededField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class PostJobProperties
        
        Private bMessageAndTimeOutField As Boolean
        
        Private messageBeforRebootField As String
        
        Private messageTimeoutField As Integer
        
        Private bRestartOSField As Boolean
        
        '''<remarks/>
        Public Property bMessageAndTimeOut() As Boolean
            Get
                Return Me.bMessageAndTimeOutField
            End Get
            Set
                Me.bMessageAndTimeOutField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property messageBeforReboot() As String
            Get
                Return Me.messageBeforRebootField
            End Get
            Set
                Me.messageBeforRebootField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property messageTimeout() As Integer
            Get
                Return Me.messageTimeoutField
            End Get
            Set
                Me.messageTimeoutField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bRestartOS() As Boolean
            Get
                Return Me.bRestartOSField
            End Get
            Set
                Me.bRestartOSField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class Miscellaneous
        
        Private bJobIsAllowedToRunUnattendedField As Boolean
        
        '''<remarks/>
        Public Property bJobIsAllowedToRunUnattended() As Boolean
            Get
                Return Me.bJobIsAllowedToRunUnattendedField
            End Get
            Set
                Me.bJobIsAllowedToRunUnattendedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class AssetScriptJobPropertiesRequired
        
        Private assetJobNameRequiredField As Boolean
        
        Private assetJobDescriptionRequiredField As Boolean
        
        Private assetJobScriptRequiredField As Boolean
        
        Private assetJobSchedulingOptionsRequiredField As Boolean
        
        '''<remarks/>
        Public Property assetJobNameRequired() As Boolean
            Get
                Return Me.assetJobNameRequiredField
            End Get
            Set
                Me.assetJobNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property assetJobDescriptionRequired() As Boolean
            Get
                Return Me.assetJobDescriptionRequiredField
            End Get
            Set
                Me.assetJobDescriptionRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property assetJobScriptRequired() As Boolean
            Get
                Return Me.assetJobScriptRequiredField
            End Get
            Set
                Me.assetJobScriptRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property assetJobSchedulingOptionsRequired() As Boolean
            Get
                Return Me.assetJobSchedulingOptionsRequiredField
            End Get
            Set
                Me.assetJobSchedulingOptionsRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class AssetScriptJobProperties
        
        Private jobNameField As String
        
        Private bJobDescriptionSuppliedField As Boolean
        
        Private jobDescriptionField As String
        
        Private bJobScriptSuppliedField As Boolean
        
        Private jobScriptField As String
        
        Private bSchedulingOptionsSuppliedField As Boolean
        
        Private schedulingOptionsField As SchedulingOptions
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property jobName() As String
            Get
                Return Me.jobNameField
            End Get
            Set
                Me.jobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bJobDescriptionSupplied() As Boolean
            Get
                Return Me.bJobDescriptionSuppliedField
            End Get
            Set
                Me.bJobDescriptionSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property jobDescription() As String
            Get
                Return Me.jobDescriptionField
            End Get
            Set
                Me.jobDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bJobScriptSupplied() As Boolean
            Get
                Return Me.bJobScriptSuppliedField
            End Get
            Set
                Me.bJobScriptSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property jobScript() As String
            Get
                Return Me.jobScriptField
            End Get
            Set
                Me.jobScriptField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bSchedulingOptionsSupplied() As Boolean
            Get
                Return Me.bSchedulingOptionsSuppliedField
            End Get
            Set
                Me.bSchedulingOptionsSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property schedulingOptions() As SchedulingOptions
            Get
                Return Me.schedulingOptionsField
            End Get
            Set
                Me.schedulingOptionsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ComputerProperties2
        
        Private computerUUIDField As String
        
        Private computerLabelField As String
        
        Private computerDomainUUIDField As String
        
        Private computerPrimaryNetworkAddressField As String
        
        Private computerHostUUIDField As String
        
        Private computerAssetSourceUUIDField As String
        
        Private computerHostNameField As String
        
        Private computerSerialNumberField As String
        
        Private computerDiscSerialNumberField As String
        
        Private computerPrimaryMACAddressField As String
        
        Private computerAssetTagField As String
        
        Private computerClassIDField As Long
        
        Private computerUsageListField As UsageListMask
        
        Private computerURIField As String
        
        Private computerSystemIDField As String
        
        Private computerVendorNameField As String
        
        Private computerDomainLabelField As String
        
        Private computerCreationUserField As String
        
        Private computerCreationDateField As DateTime2
        
        Private computerLastUpdatedUserField As String
        
        Private computerLastUpdatedDateField As DateTime2
        
        Private computerVersionNumberField As Long
        
        Private agentNameField As String
        
        Private agentRestrictionsField As AgentRestrictions
        
        Private agentDescriptionField As String
        
        Private userData1Field As String
        
        Private userData2Field As String
        
        Private userData3Field As String
        
        Private userData4Field As String
        
        Private scalabilityServerNameField As String
        
        Private agentCreationDateTimeField As DateTime2
        
        Private lastRunDateTimeField As DateTime2
        
        Private agentIPAddressField As String
        
        Private agentTrustlevelField As Long
        
        Private agentOriginField As String
        
        Private amStatusField As AMAgentStatus
        
        Private sdStatusField As SDAgentStatus
        
        Private rcStatusField As RCAgentStatus
        
        Private protectionStatusField As ProtectionStatus
        
        Private aspStatusField As ASPStatus
        
        Private avStatusField As AVStatus
        
        Private hipsStatusField As HIPSStatus
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerUUID() As String
            Get
                Return Me.computerUUIDField
            End Get
            Set
                Me.computerUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerLabel() As String
            Get
                Return Me.computerLabelField
            End Get
            Set
                Me.computerLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerDomainUUID() As String
            Get
                Return Me.computerDomainUUIDField
            End Get
            Set
                Me.computerDomainUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerPrimaryNetworkAddress() As String
            Get
                Return Me.computerPrimaryNetworkAddressField
            End Get
            Set
                Me.computerPrimaryNetworkAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerHostUUID() As String
            Get
                Return Me.computerHostUUIDField
            End Get
            Set
                Me.computerHostUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerAssetSourceUUID() As String
            Get
                Return Me.computerAssetSourceUUIDField
            End Get
            Set
                Me.computerAssetSourceUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerHostName() As String
            Get
                Return Me.computerHostNameField
            End Get
            Set
                Me.computerHostNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerSerialNumber() As String
            Get
                Return Me.computerSerialNumberField
            End Get
            Set
                Me.computerSerialNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerDiscSerialNumber() As String
            Get
                Return Me.computerDiscSerialNumberField
            End Get
            Set
                Me.computerDiscSerialNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerPrimaryMACAddress() As String
            Get
                Return Me.computerPrimaryMACAddressField
            End Get
            Set
                Me.computerPrimaryMACAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerAssetTag() As String
            Get
                Return Me.computerAssetTagField
            End Get
            Set
                Me.computerAssetTagField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerClassID() As Long
            Get
                Return Me.computerClassIDField
            End Get
            Set
                Me.computerClassIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerUsageList() As UsageListMask
            Get
                Return Me.computerUsageListField
            End Get
            Set
                Me.computerUsageListField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerURI() As String
            Get
                Return Me.computerURIField
            End Get
            Set
                Me.computerURIField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerSystemID() As String
            Get
                Return Me.computerSystemIDField
            End Get
            Set
                Me.computerSystemIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerVendorName() As String
            Get
                Return Me.computerVendorNameField
            End Get
            Set
                Me.computerVendorNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerDomainLabel() As String
            Get
                Return Me.computerDomainLabelField
            End Get
            Set
                Me.computerDomainLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerCreationUser() As String
            Get
                Return Me.computerCreationUserField
            End Get
            Set
                Me.computerCreationUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerCreationDate() As DateTime2
            Get
                Return Me.computerCreationDateField
            End Get
            Set
                Me.computerCreationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerLastUpdatedUser() As String
            Get
                Return Me.computerLastUpdatedUserField
            End Get
            Set
                Me.computerLastUpdatedUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerLastUpdatedDate() As DateTime2
            Get
                Return Me.computerLastUpdatedDateField
            End Get
            Set
                Me.computerLastUpdatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerVersionNumber() As Long
            Get
                Return Me.computerVersionNumberField
            End Get
            Set
                Me.computerVersionNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property agentName() As String
            Get
                Return Me.agentNameField
            End Get
            Set
                Me.agentNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property agentRestrictions() As AgentRestrictions
            Get
                Return Me.agentRestrictionsField
            End Get
            Set
                Me.agentRestrictionsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property agentDescription() As String
            Get
                Return Me.agentDescriptionField
            End Get
            Set
                Me.agentDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userData1() As String
            Get
                Return Me.userData1Field
            End Get
            Set
                Me.userData1Field = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userData2() As String
            Get
                Return Me.userData2Field
            End Get
            Set
                Me.userData2Field = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userData3() As String
            Get
                Return Me.userData3Field
            End Get
            Set
                Me.userData3Field = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userData4() As String
            Get
                Return Me.userData4Field
            End Get
            Set
                Me.userData4Field = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property scalabilityServerName() As String
            Get
                Return Me.scalabilityServerNameField
            End Get
            Set
                Me.scalabilityServerNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property agentCreationDateTime() As DateTime2
            Get
                Return Me.agentCreationDateTimeField
            End Get
            Set
                Me.agentCreationDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property lastRunDateTime() As DateTime2
            Get
                Return Me.lastRunDateTimeField
            End Get
            Set
                Me.lastRunDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property agentIPAddress() As String
            Get
                Return Me.agentIPAddressField
            End Get
            Set
                Me.agentIPAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property agentTrustlevel() As Long
            Get
                Return Me.agentTrustlevelField
            End Get
            Set
                Me.agentTrustlevelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property agentOrigin() As String
            Get
                Return Me.agentOriginField
            End Get
            Set
                Me.agentOriginField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property amStatus() As AMAgentStatus
            Get
                Return Me.amStatusField
            End Get
            Set
                Me.amStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sdStatus() As SDAgentStatus
            Get
                Return Me.sdStatusField
            End Get
            Set
                Me.sdStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rcStatus() As RCAgentStatus
            Get
                Return Me.rcStatusField
            End Get
            Set
                Me.rcStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property protectionStatus() As ProtectionStatus
            Get
                Return Me.protectionStatusField
            End Get
            Set
                Me.protectionStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property aspStatus() As ASPStatus
            Get
                Return Me.aspStatusField
            End Get
            Set
                Me.aspStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property avStatus() As AVStatus
            Get
                Return Me.avStatusField
            End Get
            Set
                Me.avStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property hipsStatus() As HIPSStatus
            Get
                Return Me.hipsStatusField
            End Get
            Set
                Me.hipsStatusField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UsageListMask
        
        Private engineField As Boolean
        
        Private commonServerField As Boolean
        
        Private sessionMessagingField As Boolean
        
        Private commonAPIField As Boolean
        
        Private commonAgentField As Boolean
        
        Private notificationServerField As Boolean
        
        Private dtsAgentField As Boolean
        
        Private dtsTOSField As Boolean
        
        Private dtsNOSField As Boolean
        
        Private dtsSOSField As Boolean
        
        Private sdAgentField As Boolean
        
        Private sdServerField As Boolean
        
        Private sdManagerNATFField As Boolean
        
        Private sdManagerDMField As Boolean
        
        Private sdManagerTMField As Boolean
        
        Private sdManagerIMField As Boolean
        
        Private sdProxyAgentField As Boolean
        
        Private osimBootServerField As Boolean
        
        Private osimPxeClientField As Boolean
        
        Private amAgentField As Boolean
        
        Private amSwUsageAgentField As Boolean
        
        Private amServerField As Boolean
        
        Private amManagerField As Boolean
        
        Private amMeteringServerField As Boolean
        
        Private amPerformanceAgentField As Boolean
        
        Private csmAgentField As Boolean
        
        Private csmServerField As Boolean
        
        Private csmAPIField As Boolean
        
        Private csmACTField As Boolean
        
        Private ccnfAgentField As Boolean
        
        Private rcAgentField As Boolean
        
        Private rcManagerField As Boolean
        
        Private babldClientField As Boolean
        
        Private babldServerField As Boolean
        
        Private babldManagerField As Boolean
        
        '''<remarks/>
        Public Property engine() As Boolean
            Get
                Return Me.engineField
            End Get
            Set
                Me.engineField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commonServer() As Boolean
            Get
                Return Me.commonServerField
            End Get
            Set
                Me.commonServerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sessionMessaging() As Boolean
            Get
                Return Me.sessionMessagingField
            End Get
            Set
                Me.sessionMessagingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commonAPI() As Boolean
            Get
                Return Me.commonAPIField
            End Get
            Set
                Me.commonAPIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commonAgent() As Boolean
            Get
                Return Me.commonAgentField
            End Get
            Set
                Me.commonAgentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property notificationServer() As Boolean
            Get
                Return Me.notificationServerField
            End Get
            Set
                Me.notificationServerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dtsAgent() As Boolean
            Get
                Return Me.dtsAgentField
            End Get
            Set
                Me.dtsAgentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dtsTOS() As Boolean
            Get
                Return Me.dtsTOSField
            End Get
            Set
                Me.dtsTOSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dtsNOS() As Boolean
            Get
                Return Me.dtsNOSField
            End Get
            Set
                Me.dtsNOSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dtsSOS() As Boolean
            Get
                Return Me.dtsSOSField
            End Get
            Set
                Me.dtsSOSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sdAgent() As Boolean
            Get
                Return Me.sdAgentField
            End Get
            Set
                Me.sdAgentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sdServer() As Boolean
            Get
                Return Me.sdServerField
            End Get
            Set
                Me.sdServerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sdManagerNATF() As Boolean
            Get
                Return Me.sdManagerNATFField
            End Get
            Set
                Me.sdManagerNATFField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sdManagerDM() As Boolean
            Get
                Return Me.sdManagerDMField
            End Get
            Set
                Me.sdManagerDMField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sdManagerTM() As Boolean
            Get
                Return Me.sdManagerTMField
            End Get
            Set
                Me.sdManagerTMField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sdManagerIM() As Boolean
            Get
                Return Me.sdManagerIMField
            End Get
            Set
                Me.sdManagerIMField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sdProxyAgent() As Boolean
            Get
                Return Me.sdProxyAgentField
            End Get
            Set
                Me.sdProxyAgentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property osimBootServer() As Boolean
            Get
                Return Me.osimBootServerField
            End Get
            Set
                Me.osimBootServerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property osimPxeClient() As Boolean
            Get
                Return Me.osimPxeClientField
            End Get
            Set
                Me.osimPxeClientField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property amAgent() As Boolean
            Get
                Return Me.amAgentField
            End Get
            Set
                Me.amAgentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property amSwUsageAgent() As Boolean
            Get
                Return Me.amSwUsageAgentField
            End Get
            Set
                Me.amSwUsageAgentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property amServer() As Boolean
            Get
                Return Me.amServerField
            End Get
            Set
                Me.amServerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property amManager() As Boolean
            Get
                Return Me.amManagerField
            End Get
            Set
                Me.amManagerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property amMeteringServer() As Boolean
            Get
                Return Me.amMeteringServerField
            End Get
            Set
                Me.amMeteringServerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property amPerformanceAgent() As Boolean
            Get
                Return Me.amPerformanceAgentField
            End Get
            Set
                Me.amPerformanceAgentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property csmAgent() As Boolean
            Get
                Return Me.csmAgentField
            End Get
            Set
                Me.csmAgentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property csmServer() As Boolean
            Get
                Return Me.csmServerField
            End Get
            Set
                Me.csmServerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property csmAPI() As Boolean
            Get
                Return Me.csmAPIField
            End Get
            Set
                Me.csmAPIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property csmACT() As Boolean
            Get
                Return Me.csmACTField
            End Get
            Set
                Me.csmACTField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ccnfAgent() As Boolean
            Get
                Return Me.ccnfAgentField
            End Get
            Set
                Me.ccnfAgentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rcAgent() As Boolean
            Get
                Return Me.rcAgentField
            End Get
            Set
                Me.rcAgentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rcManager() As Boolean
            Get
                Return Me.rcManagerField
            End Get
            Set
                Me.rcManagerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property babldClient() As Boolean
            Get
                Return Me.babldClientField
            End Get
            Set
                Me.babldClientField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property babldServer() As Boolean
            Get
                Return Me.babldServerField
            End Get
            Set
                Me.babldServerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property babldManager() As Boolean
            Get
                Return Me.babldManagerField
            End Get
            Set
                Me.babldManagerField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum AgentRestrictions
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("JOB-RESTRICTION-NONE")>  _
        JOBRESTRICTIONNONE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("JOB-RESTRICTION-LOCAL")>  _
        JOBRESTRICTIONLOCAL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("JOB-RESTRICTION-CENTRAL")>  _
        JOBRESTRICTIONCENTRAL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("JOB-RESTRICTION-ALL")>  _
        JOBRESTRICTIONALL
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum AMAgentStatus
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-AM-AGENTLESS")>  _
        WSAMAGENTLESS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-AM-ALERT")>  _
        WSAMALERT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-AM-INFORMATION")>  _
        WSAMINFORMATION
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-AM-LEGACY")>  _
        WSAMLEGACY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-AM-NOTINSTALLED")>  _
        WSAMNOTINSTALLED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-AM-OPERATIONAL")>  _
        WSAMOPERATIONAL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-AM-PREREGISTERED")>  _
        WSAMPREREGISTERED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-AM-WARNING")>  _
        WSAMWARNING
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SDAgentStatus
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-SD-LOCKED-BY-MIGRATION")>  _
        WSSDLOCKEDBYMIGRATION
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-SD-LOCKED-BY-MOVE")>  _
        WSSDLOCKEDBYMOVE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-SD-LOCKED-BY-RAC")>  _
        WSSDLOCKEDBYRAC
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-SD-LOCKED-BY-RAC-AND-MOVE")>  _
        WSSDLOCKEDBYRACANDMOVE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-SD-LOCKED-BY-RAC-AND-ROAM")>  _
        WSSDLOCKEDBYRACANDROAM
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-SD-LOCKED-BY-ROAM")>  _
        WSSDLOCKEDBYROAM
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-SD-NOTINSTALLED")>  _
        WSSDNOTINSTALLED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-SD-PREREGISTERED")>  _
        WSSDPREREGISTERED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-SD-OPERATIONAL")>  _
        WSSDOPERATIONAL
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum RCAgentStatus
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-RC-ACTIVE-SESSION")>  _
        WSRCACTIVESESSION
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-RC-ACTIVE-LOCAL-SESSION")>  _
        WSRCACTIVELOCALSESSION
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-RC-LISTENING")>  _
        WSRCLISTENING
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-RC-LISTENING-LOCAL-SESSION")>  _
        WSRCLISTENINGLOCALSESSION
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-RC-LOCKED")>  _
        WSRCLOCKED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-RC-LOCKED-LOCAL-SESSION")>  _
        WSRCLOCKEDLOCALSESSION
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-RC-MIGRATED")>  _
        WSRCMIGRATED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-RC-NOT-INSTALLED")>  _
        WSRCNOTINSTALLED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-RC-NOT-LISTENING")>  _
        WSRCNOTLISTENING
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-RC-NOT-LISTENING-LOCAL-SESSION")>  _
        WSRCNOTLISTENINGLOCALSESSION
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-RC-PREREGISTERED")>  _
        WSRCPREREGISTERED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-RC-STOPPED")>  _
        WSRCSTOPPED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-RC-STOPPED-LOCAL-SESSION")>  _
        WSRCSTOPPEDLOCALSESSION
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-RC-UNKNOWN")>  _
        WSRCUNKNOWN
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum ProtectionStatus
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-PT-NOTINSTALLED")>  _
        WSPTNOTINSTALLED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-PT-NOTPROTECTED")>  _
        WSPTNOTPROTECTED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-PT-PREREGISTERED")>  _
        WSPTPREREGISTERED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-PROTECTED")>  _
        WSPROTECTED
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum ASPStatus
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-ASP-UNKNOWN")>  _
        WSASPUNKNOWN
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-ASP-OPERATIONAL")>  _
        WSASPOPERATIONAL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-ASP-NOTOPERATIONAL")>  _
        WSASPNOTOPERATIONAL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-ASP-NOTINSTALLED")>  _
        WSASPNOTINSTALLED
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum AVStatus
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-AV-UNKNOWN")>  _
        WSAVUNKNOWN
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-AV-OPERATIONAL")>  _
        WSAVOPERATIONAL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-AV-NOTOPERATIONAL")>  _
        WSAVNOTOPERATIONAL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-AV-NOTINSTALLED")>  _
        WSAVNOTINSTALLED
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum HIPSStatus
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-HIPS-UNKNOWN")>  _
        WSHIPSUNKNOWN
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-HIPS-OPERATIONAL")>  _
        WSHIPSOPERATIONAL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-HIPS-NOTOPERATIONAL")>  _
        WSHIPSNOTOPERATIONAL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-HIPS-NOTINSTALLED")>  _
        WSHIPSNOTINSTALLED
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ComputerPropertiesRequired2
        
        Private computerUUIDRequiredField As Boolean
        
        Private computerLabelRequiredField As Boolean
        
        Private computerDomainUUIDRequiredField As Boolean
        
        Private computerPrimaryNetworkAddressRequiredField As Boolean
        
        Private computerHostUUIDRequiredField As Boolean
        
        Private computerAssetSourceUUIDRequiredField As Boolean
        
        Private computerHostNameRequiredField As Boolean
        
        Private computerSerialNumberRequiredField As Boolean
        
        Private computerDiscSerialNumberRequiredField As Boolean
        
        Private computerPrimaryMACAddressRequiredField As Boolean
        
        Private computerAssetTagRequiredField As Boolean
        
        Private computerClassIDRequiredField As Boolean
        
        Private computerUsageListRequiredField As Boolean
        
        Private computerURIRequiredField As Boolean
        
        Private computerSystemIDRequiredField As Boolean
        
        Private computerVendorNameRequiredField As Boolean
        
        Private computerDomainLabelRequiredField As Boolean
        
        Private computerCreationUserRequiredField As Boolean
        
        Private computerCreationDateRequiredField As Boolean
        
        Private computerLastUpdatedUserRequiredField As Boolean
        
        Private computerLastUpdatedDateRequiredField As Boolean
        
        Private computerVersionNumberRequiredField As Boolean
        
        Private agentNameRequiredField As Boolean
        
        Private agentRestrictionsRequiredField As Boolean
        
        Private agentDescriptionRequiredField As Boolean
        
        Private userData1RequiredField As Boolean
        
        Private userData2RequiredField As Boolean
        
        Private userData3RequiredField As Boolean
        
        Private userData4RequiredField As Boolean
        
        Private scalabilityServerNameRequiredField As Boolean
        
        Private agentCreationDateTimeRequiredField As Boolean
        
        Private lastRunDateTimeRequiredField As Boolean
        
        Private agentIPAddressRequiredField As Boolean
        
        Private agentTrustlevelRequiredField As Boolean
        
        Private agentOriginRequiredField As Boolean
        
        Private amStatusRequiredField As Boolean
        
        Private sdStatusRequiredField As Boolean
        
        Private rcStatusRequiredField As Boolean
        
        Private protectionStatusRequiredField As Boolean
        
        Private aspStatusRequiredField As Boolean
        
        Private avStatusRequiredField As Boolean
        
        Private hipsStatusRequiredField As Boolean
        
        '''<remarks/>
        Public Property computerUUIDRequired() As Boolean
            Get
                Return Me.computerUUIDRequiredField
            End Get
            Set
                Me.computerUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerLabelRequired() As Boolean
            Get
                Return Me.computerLabelRequiredField
            End Get
            Set
                Me.computerLabelRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerDomainUUIDRequired() As Boolean
            Get
                Return Me.computerDomainUUIDRequiredField
            End Get
            Set
                Me.computerDomainUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerPrimaryNetworkAddressRequired() As Boolean
            Get
                Return Me.computerPrimaryNetworkAddressRequiredField
            End Get
            Set
                Me.computerPrimaryNetworkAddressRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerHostUUIDRequired() As Boolean
            Get
                Return Me.computerHostUUIDRequiredField
            End Get
            Set
                Me.computerHostUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerAssetSourceUUIDRequired() As Boolean
            Get
                Return Me.computerAssetSourceUUIDRequiredField
            End Get
            Set
                Me.computerAssetSourceUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerHostNameRequired() As Boolean
            Get
                Return Me.computerHostNameRequiredField
            End Get
            Set
                Me.computerHostNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerSerialNumberRequired() As Boolean
            Get
                Return Me.computerSerialNumberRequiredField
            End Get
            Set
                Me.computerSerialNumberRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerDiscSerialNumberRequired() As Boolean
            Get
                Return Me.computerDiscSerialNumberRequiredField
            End Get
            Set
                Me.computerDiscSerialNumberRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerPrimaryMACAddressRequired() As Boolean
            Get
                Return Me.computerPrimaryMACAddressRequiredField
            End Get
            Set
                Me.computerPrimaryMACAddressRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerAssetTagRequired() As Boolean
            Get
                Return Me.computerAssetTagRequiredField
            End Get
            Set
                Me.computerAssetTagRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerClassIDRequired() As Boolean
            Get
                Return Me.computerClassIDRequiredField
            End Get
            Set
                Me.computerClassIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerUsageListRequired() As Boolean
            Get
                Return Me.computerUsageListRequiredField
            End Get
            Set
                Me.computerUsageListRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerURIRequired() As Boolean
            Get
                Return Me.computerURIRequiredField
            End Get
            Set
                Me.computerURIRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerSystemIDRequired() As Boolean
            Get
                Return Me.computerSystemIDRequiredField
            End Get
            Set
                Me.computerSystemIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerVendorNameRequired() As Boolean
            Get
                Return Me.computerVendorNameRequiredField
            End Get
            Set
                Me.computerVendorNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerDomainLabelRequired() As Boolean
            Get
                Return Me.computerDomainLabelRequiredField
            End Get
            Set
                Me.computerDomainLabelRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerCreationUserRequired() As Boolean
            Get
                Return Me.computerCreationUserRequiredField
            End Get
            Set
                Me.computerCreationUserRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerCreationDateRequired() As Boolean
            Get
                Return Me.computerCreationDateRequiredField
            End Get
            Set
                Me.computerCreationDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerLastUpdatedUserRequired() As Boolean
            Get
                Return Me.computerLastUpdatedUserRequiredField
            End Get
            Set
                Me.computerLastUpdatedUserRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerLastUpdatedDateRequired() As Boolean
            Get
                Return Me.computerLastUpdatedDateRequiredField
            End Get
            Set
                Me.computerLastUpdatedDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerVersionNumberRequired() As Boolean
            Get
                Return Me.computerVersionNumberRequiredField
            End Get
            Set
                Me.computerVersionNumberRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property agentNameRequired() As Boolean
            Get
                Return Me.agentNameRequiredField
            End Get
            Set
                Me.agentNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property agentRestrictionsRequired() As Boolean
            Get
                Return Me.agentRestrictionsRequiredField
            End Get
            Set
                Me.agentRestrictionsRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property agentDescriptionRequired() As Boolean
            Get
                Return Me.agentDescriptionRequiredField
            End Get
            Set
                Me.agentDescriptionRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userData1Required() As Boolean
            Get
                Return Me.userData1RequiredField
            End Get
            Set
                Me.userData1RequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userData2Required() As Boolean
            Get
                Return Me.userData2RequiredField
            End Get
            Set
                Me.userData2RequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userData3Required() As Boolean
            Get
                Return Me.userData3RequiredField
            End Get
            Set
                Me.userData3RequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userData4Required() As Boolean
            Get
                Return Me.userData4RequiredField
            End Get
            Set
                Me.userData4RequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property scalabilityServerNameRequired() As Boolean
            Get
                Return Me.scalabilityServerNameRequiredField
            End Get
            Set
                Me.scalabilityServerNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property agentCreationDateTimeRequired() As Boolean
            Get
                Return Me.agentCreationDateTimeRequiredField
            End Get
            Set
                Me.agentCreationDateTimeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastRunDateTimeRequired() As Boolean
            Get
                Return Me.lastRunDateTimeRequiredField
            End Get
            Set
                Me.lastRunDateTimeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property agentIPAddressRequired() As Boolean
            Get
                Return Me.agentIPAddressRequiredField
            End Get
            Set
                Me.agentIPAddressRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property agentTrustlevelRequired() As Boolean
            Get
                Return Me.agentTrustlevelRequiredField
            End Get
            Set
                Me.agentTrustlevelRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property agentOriginRequired() As Boolean
            Get
                Return Me.agentOriginRequiredField
            End Get
            Set
                Me.agentOriginRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property amStatusRequired() As Boolean
            Get
                Return Me.amStatusRequiredField
            End Get
            Set
                Me.amStatusRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sdStatusRequired() As Boolean
            Get
                Return Me.sdStatusRequiredField
            End Get
            Set
                Me.sdStatusRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rcStatusRequired() As Boolean
            Get
                Return Me.rcStatusRequiredField
            End Get
            Set
                Me.rcStatusRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property protectionStatusRequired() As Boolean
            Get
                Return Me.protectionStatusRequiredField
            End Get
            Set
                Me.protectionStatusRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property aspStatusRequired() As Boolean
            Get
                Return Me.aspStatusRequiredField
            End Get
            Set
                Me.aspStatusRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property avStatusRequired() As Boolean
            Get
                Return Me.avStatusRequiredField
            End Get
            Set
                Me.avStatusRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property hipsStatusRequired() As Boolean
            Get
                Return Me.hipsStatusRequiredField
            End Get
            Set
                Me.hipsStatusRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ComputerPropertyFilter2
        
        Private filterConditionField As ComputerFilterCondition
        
        Private computerPropertyField As ComputerProperty2
        
        Private searchStringField As String
        
        Private searchValueField As Long
        
        Private dateTimeField As DateTime2
        
        Private amStatusField As AMAgentStatus
        
        Private amStatusFieldSpecified As Boolean
        
        Private sdStatusField As SDAgentStatus
        
        Private sdStatusFieldSpecified As Boolean
        
        Private rcStatusField As RCAgentStatus
        
        Private rcStatusFieldSpecified As Boolean
        
        Private protectionStatusField As ProtectionStatus
        
        Private protectionStatusFieldSpecified As Boolean
        
        Private aspStatusField As ASPStatus
        
        Private aspStatusFieldSpecified As Boolean
        
        Private avStatusField As AVStatus
        
        Private avStatusFieldSpecified As Boolean
        
        Private hipsStatusField As HIPSStatus
        
        Private hipsStatusFieldSpecified As Boolean
        
        Private restrictionsField As AgentRestrictions
        
        Private restrictionsFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property filterCondition() As ComputerFilterCondition
            Get
                Return Me.filterConditionField
            End Get
            Set
                Me.filterConditionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerProperty() As ComputerProperty2
            Get
                Return Me.computerPropertyField
            End Get
            Set
                Me.computerPropertyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property searchString() As String
            Get
                Return Me.searchStringField
            End Get
            Set
                Me.searchStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property searchValue() As Long
            Get
                Return Me.searchValueField
            End Get
            Set
                Me.searchValueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dateTime() As DateTime2
            Get
                Return Me.dateTimeField
            End Get
            Set
                Me.dateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property amStatus() As AMAgentStatus
            Get
                Return Me.amStatusField
            End Get
            Set
                Me.amStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property amStatusSpecified() As Boolean
            Get
                Return Me.amStatusFieldSpecified
            End Get
            Set
                Me.amStatusFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sdStatus() As SDAgentStatus
            Get
                Return Me.sdStatusField
            End Get
            Set
                Me.sdStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property sdStatusSpecified() As Boolean
            Get
                Return Me.sdStatusFieldSpecified
            End Get
            Set
                Me.sdStatusFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rcStatus() As RCAgentStatus
            Get
                Return Me.rcStatusField
            End Get
            Set
                Me.rcStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property rcStatusSpecified() As Boolean
            Get
                Return Me.rcStatusFieldSpecified
            End Get
            Set
                Me.rcStatusFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property protectionStatus() As ProtectionStatus
            Get
                Return Me.protectionStatusField
            End Get
            Set
                Me.protectionStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property protectionStatusSpecified() As Boolean
            Get
                Return Me.protectionStatusFieldSpecified
            End Get
            Set
                Me.protectionStatusFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property aspStatus() As ASPStatus
            Get
                Return Me.aspStatusField
            End Get
            Set
                Me.aspStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property aspStatusSpecified() As Boolean
            Get
                Return Me.aspStatusFieldSpecified
            End Get
            Set
                Me.aspStatusFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property avStatus() As AVStatus
            Get
                Return Me.avStatusField
            End Get
            Set
                Me.avStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property avStatusSpecified() As Boolean
            Get
                Return Me.avStatusFieldSpecified
            End Get
            Set
                Me.avStatusFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property hipsStatus() As HIPSStatus
            Get
                Return Me.hipsStatusField
            End Get
            Set
                Me.hipsStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property hipsStatusSpecified() As Boolean
            Get
                Return Me.hipsStatusFieldSpecified
            End Get
            Set
                Me.hipsStatusFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property restrictions() As AgentRestrictions
            Get
                Return Me.restrictionsField
            End Get
            Set
                Me.restrictionsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property restrictionsSpecified() As Boolean
            Get
                Return Me.restrictionsFieldSpecified
            End Get
            Set
                Me.restrictionsFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum ComputerFilterCondition
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-FILTER-WILDCARD-EQ")>  _
        COMPUTERFILTERWILDCARDEQ
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-FILTER-WILDCARD-NE")>  _
        COMPUTERFILTERWILDCARDNE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-FILTER-EQ")>  _
        COMPUTERFILTEREQ
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-FILTER-NE")>  _
        COMPUTERFILTERNE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-FILTER-GT")>  _
        COMPUTERFILTERGT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-FILTER-GE")>  _
        COMPUTERFILTERGE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-FILTER-LT")>  _
        COMPUTERFILTERLT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-FILTER-LE")>  _
        COMPUTERFILTERLE
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum ComputerProperty2
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-UUID")>  _
        COMPUTERUUID
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-LABEL")>  _
        COMPUTERLABEL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-PRIMARY-NETWORK-ADDRESS")>  _
        COMPUTERPRIMARYNETWORKADDRESS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-HOST-NAME")>  _
        COMPUTERHOSTNAME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-SERIAL-NUMBER")>  _
        COMPUTERSERIALNUMBER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-DISC-SERIAL-NUMBER")>  _
        COMPUTERDISCSERIALNUMBER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-PRIMARY-MAC-ADDRESS")>  _
        COMPUTERPRIMARYMACADDRESS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-ASSET-TAG")>  _
        COMPUTERASSETTAG
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-CLASSID")>  _
        COMPUTERCLASSID
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-USAGE-LIST")>  _
        COMPUTERUSAGELIST
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-URI")>  _
        COMPUTERURI
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-SYSTEM-ID")>  _
        COMPUTERSYSTEMID
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-VENDOR-NAME")>  _
        COMPUTERVENDORNAME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-DOMAIN-LABEL")>  _
        COMPUTERDOMAINLABEL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-CREATION-USER")>  _
        COMPUTERCREATIONUSER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-CREATION-DATE")>  _
        COMPUTERCREATIONDATE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-LAST-UPDATED-USER")>  _
        COMPUTERLASTUPDATEDUSER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-LAST-UPDATED-DATE")>  _
        COMPUTERLASTUPDATEDDATE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-VERSION-NUMBER")>  _
        COMPUTERVERSIONNUMBER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-AGENT-NAME")>  _
        COMPUTERAGENTNAME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-AGENT-RESTRICTIONS")>  _
        COMPUTERAGENTRESTRICTIONS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-AGENT-DESCRIPTIONS")>  _
        COMPUTERAGENTDESCRIPTIONS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-USER-DATA1")>  _
        COMPUTERUSERDATA1
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-USER-DATA2")>  _
        COMPUTERUSERDATA2
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-USER-DATA3")>  _
        COMPUTERUSERDATA3
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-USER-DATA4")>  _
        COMPUTERUSERDATA4
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-AGENT-SS")>  _
        COMPUTERAGENTSS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-AGENT-CREATION-DATETIME")>  _
        COMPUTERAGENTCREATIONDATETIME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-AGENT-LASTRUN-DATETIME")>  _
        COMPUTERAGENTLASTRUNDATETIME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-AGENT-IPADDRESS")>  _
        COMPUTERAGENTIPADDRESS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-AGENT-TRUSTLEVEL")>  _
        COMPUTERAGENTTRUSTLEVEL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-AGENT-ORIGIN")>  _
        COMPUTERAGENTORIGIN
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-AGENT-AM-STATUS")>  _
        COMPUTERAGENTAMSTATUS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-AGENT-SD-STATUS")>  _
        COMPUTERAGENTSDSTATUS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-AGENT-RC-STATUS")>  _
        COMPUTERAGENTRCSTATUS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-AGENT-PT-STATUS")>  _
        COMPUTERAGENTPTSTATUS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-AGENT-ASP-STATUS")>  _
        COMPUTERAGENTASPSTATUS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-AGENT-AV-STATUS")>  _
        COMPUTERAGENTAVSTATUS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-AGENT-HIPS-STATUS")>  _
        COMPUTERAGENTHIPSSTATUS
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class OSIMTargetProperties
        
        Private targetNameField As String
        
        Private targetMACAddressField As String
        
        Private configTypeField As WSOSIMCONFIGSTATE
        
        Private stateChangedDateTimeField As DateTime2
        
        Private osImageField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property targetName() As String
            Get
                Return Me.targetNameField
            End Get
            Set
                Me.targetNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property targetMACAddress() As String
            Get
                Return Me.targetMACAddressField
            End Get
            Set
                Me.targetMACAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property configType() As WSOSIMCONFIGSTATE
            Get
                Return Me.configTypeField
            End Get
            Set
                Me.configTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property stateChangedDateTime() As DateTime2
            Get
                Return Me.stateChangedDateTimeField
            End Get
            Set
                Me.stateChangedDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property osImage() As String
            Get
                Return Me.osImageField
            End Get
            Set
                Me.osImageField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class OSIMTargetFilter
        
        Private osimTargetPropertyField As OSIMTARGETPROPERTY
        
        Private conditionField As FILTERCONDITION
        
        Private stateChangedDateTimeField As DateTime2
        
        Private searchStringField As String
        
        Private configStateField As WSOSIMCONFIGSTATE
        
        Private configStateFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property osimTargetProperty() As OSIMTARGETPROPERTY
            Get
                Return Me.osimTargetPropertyField
            End Get
            Set
                Me.osimTargetPropertyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property condition() As FILTERCONDITION
            Get
                Return Me.conditionField
            End Get
            Set
                Me.conditionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property stateChangedDateTime() As DateTime2
            Get
                Return Me.stateChangedDateTimeField
            End Get
            Set
                Me.stateChangedDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property searchString() As String
            Get
                Return Me.searchStringField
            End Get
            Set
                Me.searchStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property configState() As WSOSIMCONFIGSTATE
            Get
                Return Me.configStateField
            End Get
            Set
                Me.configStateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property configStateSpecified() As Boolean
            Get
                Return Me.configStateFieldSpecified
            End Get
            Set
                Me.configStateFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum OSIMTARGETPROPERTY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("TARGET-NAME")>  _
        TARGETNAME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("TARGET-MACADDRESS")>  _
        TARGETMACADDRESS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("OSIM-CONFIG-STATE")>  _
        OSIMCONFIGSTATE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("STATE-CHANGED-DATETIME")>  _
        STATECHANGEDDATETIME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("OS-IMAGENAME")>  _
        OSIMAGENAME
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class OSImageProperties
        
        Private imageNameField As String
        
        Private typeIndicatiorField As String
        
        Private operatingSystemField As String
        
        Private registeredAtField As DateTime2
        
        Private sdPackageNameField As String
        
        Private sdPackageVersionField As String
        
        Private sdPackageCommentField As String
        
        Private sdOSCodeField As String
        
        Private sdOSlocaleField As String
        
        Private osImageFlagsField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property imageName() As String
            Get
                Return Me.imageNameField
            End Get
            Set
                Me.imageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property typeIndicatior() As String
            Get
                Return Me.typeIndicatiorField
            End Get
            Set
                Me.typeIndicatiorField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property operatingSystem() As String
            Get
                Return Me.operatingSystemField
            End Get
            Set
                Me.operatingSystemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property registeredAt() As DateTime2
            Get
                Return Me.registeredAtField
            End Get
            Set
                Me.registeredAtField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sdPackageName() As String
            Get
                Return Me.sdPackageNameField
            End Get
            Set
                Me.sdPackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sdPackageVersion() As String
            Get
                Return Me.sdPackageVersionField
            End Get
            Set
                Me.sdPackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sdPackageComment() As String
            Get
                Return Me.sdPackageCommentField
            End Get
            Set
                Me.sdPackageCommentField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sdOSCode() As String
            Get
                Return Me.sdOSCodeField
            End Get
            Set
                Me.sdOSCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sdOSlocale() As String
            Get
                Return Me.sdOSlocaleField
            End Get
            Set
                Me.sdOSlocaleField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property osImageFlags() As String
            Get
                Return Me.osImageFlagsField
            End Get
            Set
                Me.osImageFlagsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class OSImageFilter
        
        Private osImagePropertyField As OSIMAGEPROPERTY
        
        Private searchStringField As String
        
        Private dateTimeField As DateTime2
        
        Private conditionField As FILTERCONDITION
        
        '''<remarks/>
        Public Property osImageProperty() As OSIMAGEPROPERTY
            Get
                Return Me.osImagePropertyField
            End Get
            Set
                Me.osImagePropertyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property searchString() As String
            Get
                Return Me.searchStringField
            End Get
            Set
                Me.searchStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dateTime() As DateTime2
            Get
                Return Me.dateTimeField
            End Get
            Set
                Me.dateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property condition() As FILTERCONDITION
            Get
                Return Me.conditionField
            End Get
            Set
                Me.conditionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum OSIMAGEPROPERTY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("IMAGE-NAME")>  _
        IMAGENAME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("TYPE-INDICATOR")>  _
        TYPEINDICATOR
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("OPERATING-SYSTEM")>  _
        OPERATINGSYSTEM
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("REGISTERED-DATETIME")>  _
        REGISTEREDDATETIME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SD-PACKAGE-NAME")>  _
        SDPACKAGENAME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SD-PACKAGE-VERSION")>  _
        SDPACKAGEVERSION
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SD-PACKAGE-COMMENT")>  _
        SDPACKAGECOMMENT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SD-OS-CODE")>  _
        SDOSCODE
        
        '''<remarks/>
        LOCALE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("IMAGE-FLAGS")>  _
        IMAGEFLAGS
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ScalabilityServerProperties
        
        Private serverLabelField As String
        
        Private serverHostNameField As String
        
        Private serverUUIDField As String
        
        Private domainUUIDField As String
        
        Private serverDescriptionField As String
        
        Private serverVersionField As Long
        
        Private lastEvaluationDateTimeField As DateTime
        
        Private creationUserField As String
        
        Private creationDateTimeField As DateTime
        
        Private lastUpdateUserField As String
        
        Private lastUpdatedDateTimeField As DateTime
        
        Private sharePathField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property serverLabel() As String
            Get
                Return Me.serverLabelField
            End Get
            Set
                Me.serverLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property serverHostName() As String
            Get
                Return Me.serverHostNameField
            End Get
            Set
                Me.serverHostNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property serverUUID() As String
            Get
                Return Me.serverUUIDField
            End Get
            Set
                Me.serverUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property domainUUID() As String
            Get
                Return Me.domainUUIDField
            End Get
            Set
                Me.domainUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property serverDescription() As String
            Get
                Return Me.serverDescriptionField
            End Get
            Set
                Me.serverDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property serverVersion() As Long
            Get
                Return Me.serverVersionField
            End Get
            Set
                Me.serverVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastEvaluationDateTime() As DateTime
            Get
                Return Me.lastEvaluationDateTimeField
            End Get
            Set
                Me.lastEvaluationDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property creationUser() As String
            Get
                Return Me.creationUserField
            End Get
            Set
                Me.creationUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDateTime() As DateTime
            Get
                Return Me.creationDateTimeField
            End Get
            Set
                Me.creationDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property lastUpdateUser() As String
            Get
                Return Me.lastUpdateUserField
            End Get
            Set
                Me.lastUpdateUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastUpdatedDateTime() As DateTime
            Get
                Return Me.lastUpdatedDateTimeField
            End Get
            Set
                Me.lastUpdatedDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sharePath() As String
            Get
                Return Me.sharePathField
            End Get
            Set
                Me.sharePathField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ScalabilityServerPropertiesRequired
        
        Private serverLabelRequiredField As Boolean
        
        Private serverHostNameRequiredField As Boolean
        
        Private serverUUIDRequiredField As Boolean
        
        Private domainUUIDRequiredField As Boolean
        
        Private serverDescriptionRequiredField As Boolean
        
        Private serverVersionRequiredField As Boolean
        
        Private lastEvaluationDateTimeRquiredField As Boolean
        
        Private creationUserRquiredField As Boolean
        
        Private creationDateTimeRquiredField As Boolean
        
        Private lastUpdateDateTimeRquiredField As Boolean
        
        Private lastUpdateUserRequiredField As Boolean
        
        Private sharePathRequiredField As Boolean
        
        '''<remarks/>
        Public Property serverLabelRequired() As Boolean
            Get
                Return Me.serverLabelRequiredField
            End Get
            Set
                Me.serverLabelRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property serverHostNameRequired() As Boolean
            Get
                Return Me.serverHostNameRequiredField
            End Get
            Set
                Me.serverHostNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property serverUUIDRequired() As Boolean
            Get
                Return Me.serverUUIDRequiredField
            End Get
            Set
                Me.serverUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property domainUUIDRequired() As Boolean
            Get
                Return Me.domainUUIDRequiredField
            End Get
            Set
                Me.domainUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property serverDescriptionRequired() As Boolean
            Get
                Return Me.serverDescriptionRequiredField
            End Get
            Set
                Me.serverDescriptionRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property serverVersionRequired() As Boolean
            Get
                Return Me.serverVersionRequiredField
            End Get
            Set
                Me.serverVersionRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastEvaluationDateTimeRquired() As Boolean
            Get
                Return Me.lastEvaluationDateTimeRquiredField
            End Get
            Set
                Me.lastEvaluationDateTimeRquiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationUserRquired() As Boolean
            Get
                Return Me.creationUserRquiredField
            End Get
            Set
                Me.creationUserRquiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDateTimeRquired() As Boolean
            Get
                Return Me.creationDateTimeRquiredField
            End Get
            Set
                Me.creationDateTimeRquiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastUpdateDateTimeRquired() As Boolean
            Get
                Return Me.lastUpdateDateTimeRquiredField
            End Get
            Set
                Me.lastUpdateDateTimeRquiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastUpdateUserRequired() As Boolean
            Get
                Return Me.lastUpdateUserRequiredField
            End Get
            Set
                Me.lastUpdateUserRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sharePathRequired() As Boolean
            Get
                Return Me.sharePathRequiredField
            End Get
            Set
                Me.sharePathRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class OSIMparameterDesc
        
        Private propertyNameField As String
        
        Private propertyValueField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property propertyName() As String
            Get
                Return Me.propertyNameField
            End Get
            Set
                Me.propertyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property propertyValue() As String
            Get
                Return Me.propertyValueField
            End Get
            Set
                Me.propertyValueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class OSIMPropertiesWithDesc
        
        Private propertyNameField As String
        
        Private propertyValueField As String
        
        Private osimparamDescArrayField() As OSIMparameterDesc
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property propertyName() As String
            Get
                Return Me.propertyNameField
            End Get
            Set
                Me.propertyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property propertyValue() As String
            Get
                Return Me.propertyValueField
            End Get
            Set
                Me.propertyValueField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("osimParameterDesc", IsNullable:=false)>  _
        Public Property osimparamDescArray() As OSIMparameterDesc()
            Get
                Return Me.osimparamDescArrayField
            End Get
            Set
                Me.osimparamDescArrayField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ArrayOfOSIMIRParametersWithDesc
        
        Private osimPropertiesField() As OSIMPropertiesWithDesc
        
        Private configStateField As WSOSIMCONFIGSTATE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("osimProperties")>  _
        Public Property osimProperties() As OSIMPropertiesWithDesc()
            Get
                Return Me.osimPropertiesField
            End Get
            Set
                Me.osimPropertiesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property configState() As WSOSIMCONFIGSTATE
            Get
                Return Me.configStateField
            End Get
            Set
                Me.configStateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class OSIMProperties
        
        Private propertyNameField As String
        
        Private propertyValueField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property propertyName() As String
            Get
                Return Me.propertyNameField
            End Get
            Set
                Me.propertyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property propertyValue() As String
            Get
                Return Me.propertyValueField
            End Get
            Set
                Me.propertyValueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateOSIMComputerProperties
        
        Private computerLabelField As String
        
        Private computerHostNameField As String
        
        Private computerHostNameSuppliedField As Boolean
        
        Private computerPrimaryNetworkAddressField As String
        
        Private serialNumberField As String
        
        Private serialNumberSuppliedField As Boolean
        
        Private assetTagField As String
        
        Private assetTagSuppliedField As Boolean
        
        Private computerTypeField As ComputerType
        
        Private computerTypeSuppliedField As Boolean
        
        Private operatingSystemTypeField As Long
        
        Private scalabilityServerNameField As String
        
        Private scalabilityServerNameSuppliedField As Boolean
        
        Private createAgentComponentsField As CreateAgentComponents
        
        Private descriptionField As String
        
        Private descriptionSuppliedField As Boolean
        
        Private sdAgentPropertiesField As SDAgentProperties
        
        Private sdAgentPropertiesSuppliedField As Boolean
        
        Private userField As String
        
        Private userSuppliedField As Boolean
        
        Private phoneField As String
        
        Private phoneSuppliedField As Boolean
        
        Private locationField As String
        
        Private locationSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private computerPrimaryMACAddressField As String
        
        Private computerPrimaryMACAddressSuppliedField As Boolean
        
        Private osimImageField As String
        
        Private osimBootServerNameField As String
        
        Private osimBootServerNameSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerLabel() As String
            Get
                Return Me.computerLabelField
            End Get
            Set
                Me.computerLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerHostName() As String
            Get
                Return Me.computerHostNameField
            End Get
            Set
                Me.computerHostNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerHostNameSupplied() As Boolean
            Get
                Return Me.computerHostNameSuppliedField
            End Get
            Set
                Me.computerHostNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerPrimaryNetworkAddress() As String
            Get
                Return Me.computerPrimaryNetworkAddressField
            End Get
            Set
                Me.computerPrimaryNetworkAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property serialNumber() As String
            Get
                Return Me.serialNumberField
            End Get
            Set
                Me.serialNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property serialNumberSupplied() As Boolean
            Get
                Return Me.serialNumberSuppliedField
            End Get
            Set
                Me.serialNumberSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property assetTag() As String
            Get
                Return Me.assetTagField
            End Get
            Set
                Me.assetTagField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property assetTagSupplied() As Boolean
            Get
                Return Me.assetTagSuppliedField
            End Get
            Set
                Me.assetTagSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerType() As ComputerType
            Get
                Return Me.computerTypeField
            End Get
            Set
                Me.computerTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerTypeSupplied() As Boolean
            Get
                Return Me.computerTypeSuppliedField
            End Get
            Set
                Me.computerTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemType() As Long
            Get
                Return Me.operatingSystemTypeField
            End Get
            Set
                Me.operatingSystemTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property scalabilityServerName() As String
            Get
                Return Me.scalabilityServerNameField
            End Get
            Set
                Me.scalabilityServerNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property scalabilityServerNameSupplied() As Boolean
            Get
                Return Me.scalabilityServerNameSuppliedField
            End Get
            Set
                Me.scalabilityServerNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property createAgentComponents() As CreateAgentComponents
            Get
                Return Me.createAgentComponentsField
            End Get
            Set
                Me.createAgentComponentsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property descriptionSupplied() As Boolean
            Get
                Return Me.descriptionSuppliedField
            End Get
            Set
                Me.descriptionSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sdAgentProperties() As SDAgentProperties
            Get
                Return Me.sdAgentPropertiesField
            End Get
            Set
                Me.sdAgentPropertiesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sdAgentPropertiesSupplied() As Boolean
            Get
                Return Me.sdAgentPropertiesSuppliedField
            End Get
            Set
                Me.sdAgentPropertiesSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property user() As String
            Get
                Return Me.userField
            End Get
            Set
                Me.userField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSupplied() As Boolean
            Get
                Return Me.userSuppliedField
            End Get
            Set
                Me.userSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property phone() As String
            Get
                Return Me.phoneField
            End Get
            Set
                Me.phoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property phoneSupplied() As Boolean
            Get
                Return Me.phoneSuppliedField
            End Get
            Set
                Me.phoneSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property location() As String
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property locationSupplied() As Boolean
            Get
                Return Me.locationSuppliedField
            End Get
            Set
                Me.locationSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerPrimaryMACAddress() As String
            Get
                Return Me.computerPrimaryMACAddressField
            End Get
            Set
                Me.computerPrimaryMACAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerPrimaryMACAddressSupplied() As Boolean
            Get
                Return Me.computerPrimaryMACAddressSuppliedField
            End Get
            Set
                Me.computerPrimaryMACAddressSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property osimImage() As String
            Get
                Return Me.osimImageField
            End Get
            Set
                Me.osimImageField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property osimBootServerName() As String
            Get
                Return Me.osimBootServerNameField
            End Get
            Set
                Me.osimBootServerNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property osimBootServerNameSupplied() As Boolean
            Get
                Return Me.osimBootServerNameSuppliedField
            End Get
            Set
                Me.osimBootServerNameSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UnitQueryProperties
        
        Private queryIdField As String
        
        Private queryNameField As String
        
        Private queryTypeField As QueryType
        
        Private queryDomainIdField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryId() As String
            Get
                Return Me.queryIdField
            End Get
            Set
                Me.queryIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryName() As String
            Get
                Return Me.queryNameField
            End Get
            Set
                Me.queryNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryType() As QueryType
            Get
                Return Me.queryTypeField
            End Get
            Set
                Me.queryTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryDomainId() As String
            Get
                Return Me.queryDomainIdField
            End Get
            Set
                Me.queryDomainIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UnitQueryPropertiesRequired
        
        Private queryIdRequiredField As Boolean
        
        Private queryNameRequiredField As Boolean
        
        Private queryTypeRequiredField As Boolean
        
        Private queryDomainIdRequiredField As Boolean
        
        '''<remarks/>
        Public Property queryIdRequired() As Boolean
            Get
                Return Me.queryIdRequiredField
            End Get
            Set
                Me.queryIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryNameRequired() As Boolean
            Get
                Return Me.queryNameRequiredField
            End Get
            Set
                Me.queryNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTypeRequired() As Boolean
            Get
                Return Me.queryTypeRequiredField
            End Get
            Set
                Me.queryTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryDomainIdRequired() As Boolean
            Get
                Return Me.queryDomainIdRequiredField
            End Get
            Set
                Me.queryDomainIdRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class AuthenticationData
        
        Private sizeField As Long
        
        Private authenticationDataField As String
        
        '''<remarks/>
        Public Property size() As Long
            Get
                Return Me.sizeField
            End Get
            Set
                Me.sizeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property authenticationData() As String
            Get
                Return Me.authenticationDataField
            End Get
            Set
                Me.authenticationDataField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UnitSoftwareJobProperties2
        
        Private unitSoftwareJobIdField As String
        
        Private unitIdField As String
        
        Private unitNameField As String
        
        Private unitTypeField As UnitType
        
        Private unitNetAddressField As String
        
        Private softwareJobIdField As String
        
        Private softwareJobNameField As String
        
        Private softwareJobStateField As SoftwareJobState
        
        Private softwareJobOrderNumberField As Long
        
        Private softwarePackageIdField As String
        
        Private softwarePackageNameField As String
        
        Private softwarePackageVersionField As String
        
        Private softwarePackageTypeField As SoftwarePackageClass
        
        Private softwarePackageProcedureIdField As String
        
        Private softwarePackageProcedureNameField As String
        
        Private activationDateTimeField As DateTime
        
        Private creationDateTimeField As DateTime
        
        Private completionDateTimeField As DateTime
        
        Private softwareJobTypeField As SoftwareJobType
        
        Private orderedByField As String
        
        Private unitSoftwareJobStateField As UnitSoftwareJobState
        
        Private unitSoftwareJobRenewStateField As UnitSoftwareJobState
        
        Private unitSoftwareJobPermissionMaskField As SoftwareJobPermissionMask
        
        Private errorMessageField As String
        
        Private errorCodeField As Long
        
        Private userDefinedNameField As String
        
        Private commentField As String
        
        Private unitInstallationSoftwareJobIdField As String
        
        Private unitInstallationSoftwarePackageProcedureIdField As String
        
        Private unitInstallationSoftwarePackageProcedureNameField As String
        
        Private softwareJobTaskMaskField As UnitSoftwareJobTaskMask
        
        Private percentSentField As Long
        
        Private softwarePackagingTypeField As SoftwarePackagingType
        
        Private userParamsField As String
        
        Private unitHostUUIDField As String
        
        Private formatField As PackageFormat
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitSoftwareJobId() As String
            Get
                Return Me.unitSoftwareJobIdField
            End Get
            Set
                Me.unitSoftwareJobIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitId() As String
            Get
                Return Me.unitIdField
            End Get
            Set
                Me.unitIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitName() As String
            Get
                Return Me.unitNameField
            End Get
            Set
                Me.unitNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitType() As UnitType
            Get
                Return Me.unitTypeField
            End Get
            Set
                Me.unitTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitNetAddress() As String
            Get
                Return Me.unitNetAddressField
            End Get
            Set
                Me.unitNetAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareJobId() As String
            Get
                Return Me.softwareJobIdField
            End Get
            Set
                Me.softwareJobIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareJobName() As String
            Get
                Return Me.softwareJobNameField
            End Get
            Set
                Me.softwareJobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobState() As SoftwareJobState
            Get
                Return Me.softwareJobStateField
            End Get
            Set
                Me.softwareJobStateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobOrderNumber() As Long
            Get
                Return Me.softwareJobOrderNumberField
            End Get
            Set
                Me.softwareJobOrderNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageId() As String
            Get
                Return Me.softwarePackageIdField
            End Get
            Set
                Me.softwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageName() As String
            Get
                Return Me.softwarePackageNameField
            End Get
            Set
                Me.softwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVersion() As String
            Get
                Return Me.softwarePackageVersionField
            End Get
            Set
                Me.softwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageType() As SoftwarePackageClass
            Get
                Return Me.softwarePackageTypeField
            End Get
            Set
                Me.softwarePackageTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureId() As String
            Get
                Return Me.softwarePackageProcedureIdField
            End Get
            Set
                Me.softwarePackageProcedureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureName() As String
            Get
                Return Me.softwarePackageProcedureNameField
            End Get
            Set
                Me.softwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activationDateTime() As DateTime
            Get
                Return Me.activationDateTimeField
            End Get
            Set
                Me.activationDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDateTime() As DateTime
            Get
                Return Me.creationDateTimeField
            End Get
            Set
                Me.creationDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property completionDateTime() As DateTime
            Get
                Return Me.completionDateTimeField
            End Get
            Set
                Me.completionDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobType() As SoftwareJobType
            Get
                Return Me.softwareJobTypeField
            End Get
            Set
                Me.softwareJobTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property orderedBy() As String
            Get
                Return Me.orderedByField
            End Get
            Set
                Me.orderedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitSoftwareJobState() As UnitSoftwareJobState
            Get
                Return Me.unitSoftwareJobStateField
            End Get
            Set
                Me.unitSoftwareJobStateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitSoftwareJobRenewState() As UnitSoftwareJobState
            Get
                Return Me.unitSoftwareJobRenewStateField
            End Get
            Set
                Me.unitSoftwareJobRenewStateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitSoftwareJobPermissionMask() As SoftwareJobPermissionMask
            Get
                Return Me.unitSoftwareJobPermissionMaskField
            End Get
            Set
                Me.unitSoftwareJobPermissionMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property errorMessage() As String
            Get
                Return Me.errorMessageField
            End Get
            Set
                Me.errorMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property errorCode() As Long
            Get
                Return Me.errorCodeField
            End Get
            Set
                Me.errorCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userDefinedName() As String
            Get
                Return Me.userDefinedNameField
            End Get
            Set
                Me.userDefinedNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitInstallationSoftwareJobId() As String
            Get
                Return Me.unitInstallationSoftwareJobIdField
            End Get
            Set
                Me.unitInstallationSoftwareJobIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitInstallationSoftwarePackageProcedureId() As String
            Get
                Return Me.unitInstallationSoftwarePackageProcedureIdField
            End Get
            Set
                Me.unitInstallationSoftwarePackageProcedureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitInstallationSoftwarePackageProcedureName() As String
            Get
                Return Me.unitInstallationSoftwarePackageProcedureNameField
            End Get
            Set
                Me.unitInstallationSoftwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobTaskMask() As UnitSoftwareJobTaskMask
            Get
                Return Me.softwareJobTaskMaskField
            End Get
            Set
                Me.softwareJobTaskMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property percentSent() As Long
            Get
                Return Me.percentSentField
            End Get
            Set
                Me.percentSentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackagingType() As SoftwarePackagingType
            Get
                Return Me.softwarePackagingTypeField
            End Get
            Set
                Me.softwarePackagingTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userParams() As String
            Get
                Return Me.userParamsField
            End Get
            Set
                Me.userParamsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitHostUUID() As String
            Get
                Return Me.unitHostUUIDField
            End Get
            Set
                Me.unitHostUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property format() As PackageFormat
            Get
                Return Me.formatField
            End Get
            Set
                Me.formatField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProperties2
        
        Private softwarePackageIdField As String
        
        Private softwarePackageNameField As String
        
        Private softwarePackageVersionField As String
        
        Private basedOnSoftwarePackageIdField As String
        
        Private basedOnSoftwarePackageNameField As String
        
        Private basedOnSoftwarePackageVersionField As String
        
        Private supplierField As String
        
        Private commentField As String
        
        Private sourcePathField As String
        
        Private softwarePackageTypeField As SoftwarePackageType
        
        Private userSelectableField As Boolean
        
        Private softwarePackageDataSourceField As SourceMedium
        
        Private softwarePackageFiledByField As SoftwarePackageFiledBy
        
        Private registrationDateTimeField As DateTime
        
        Private changeDateTimeField As DateTime
        
        Private packageTypeField As SoftwarePackagingType
        
        Private packetSizeField As Long
        
        Private buildOnSizeField As Long
        
        Private archivePathField As String
        
        Private archiveCommentField As String
        
        Private archivedByField As String
        
        Private archiveFlagField As ArchivePath
        
        Private archDateTimeField As DateTime
        
        Private softwarePackageMaskField As SoftwarePackageMask
        
        Private formatField As PackageFormat
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageId() As String
            Get
                Return Me.softwarePackageIdField
            End Get
            Set
                Me.softwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageName() As String
            Get
                Return Me.softwarePackageNameField
            End Get
            Set
                Me.softwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVersion() As String
            Get
                Return Me.softwarePackageVersionField
            End Get
            Set
                Me.softwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property basedOnSoftwarePackageId() As String
            Get
                Return Me.basedOnSoftwarePackageIdField
            End Get
            Set
                Me.basedOnSoftwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property basedOnSoftwarePackageName() As String
            Get
                Return Me.basedOnSoftwarePackageNameField
            End Get
            Set
                Me.basedOnSoftwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property basedOnSoftwarePackageVersion() As String
            Get
                Return Me.basedOnSoftwarePackageVersionField
            End Get
            Set
                Me.basedOnSoftwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property supplier() As String
            Get
                Return Me.supplierField
            End Get
            Set
                Me.supplierField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sourcePath() As String
            Get
                Return Me.sourcePathField
            End Get
            Set
                Me.sourcePathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageType() As SoftwarePackageType
            Get
                Return Me.softwarePackageTypeField
            End Get
            Set
                Me.softwarePackageTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectable() As Boolean
            Get
                Return Me.userSelectableField
            End Get
            Set
                Me.userSelectableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageDataSource() As SourceMedium
            Get
                Return Me.softwarePackageDataSourceField
            End Get
            Set
                Me.softwarePackageDataSourceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageFiledBy() As SoftwarePackageFiledBy
            Get
                Return Me.softwarePackageFiledByField
            End Get
            Set
                Me.softwarePackageFiledByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property registrationDateTime() As DateTime
            Get
                Return Me.registrationDateTimeField
            End Get
            Set
                Me.registrationDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property changeDateTime() As DateTime
            Get
                Return Me.changeDateTimeField
            End Get
            Set
                Me.changeDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property packageType() As SoftwarePackagingType
            Get
                Return Me.packageTypeField
            End Get
            Set
                Me.packageTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property packetSize() As Long
            Get
                Return Me.packetSizeField
            End Get
            Set
                Me.packetSizeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property buildOnSize() As Long
            Get
                Return Me.buildOnSizeField
            End Get
            Set
                Me.buildOnSizeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property archivePath() As String
            Get
                Return Me.archivePathField
            End Get
            Set
                Me.archivePathField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property archiveComment() As String
            Get
                Return Me.archiveCommentField
            End Get
            Set
                Me.archiveCommentField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property archivedBy() As String
            Get
                Return Me.archivedByField
            End Get
            Set
                Me.archivedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property archiveFlag() As ArchivePath
            Get
                Return Me.archiveFlagField
            End Get
            Set
                Me.archiveFlagField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property archDateTime() As DateTime
            Get
                Return Me.archDateTimeField
            End Get
            Set
                Me.archDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageMask() As SoftwarePackageMask
            Get
                Return Me.softwarePackageMaskField
            End Get
            Set
                Me.softwarePackageMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property format() As PackageFormat
            Get
                Return Me.formatField
            End Get
            Set
                Me.formatField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SourceMedium
        
        '''<remarks/>
        DISKETTE
        
        '''<remarks/>
        HARDDISK
        
        '''<remarks/>
        UNDEFINED
        
        '''<remarks/>
        TAPE
        
        '''<remarks/>
        CD
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageMask
        
        Private checksumField As Boolean
        
        '''<remarks/>
        Public Property checksum() As Boolean
            Get
                Return Me.checksumField
            End Get
            Set
                Me.checksumField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSoftwarePackageProcedureProperties2
        
        Private softwarePackageProcedureIdField As String
        
        Private softwarePackageProcedureIdSuppliedField As Boolean
        
        Private softwarePackageProcedureNameField As String
        
        Private softwarePackageProcedureNameSuppliedField As Boolean
        
        Private softwarePackageProcedureTaskField As SoftwarePackageProcedureTask
        
        Private softwarePackageProcedureTaskSuppliedField As Boolean
        
        Private softwarePackageProcedureTypeField As SoftwarePackageProcedureType
        
        Private softwarePackageProcedureTypeSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private userSelectableField As Boolean
        
        Private userSelectableSuppliedField As Boolean
        
        Private externalProcedureField As Boolean
        
        Private externalProcedureSuppliedField As Boolean
        
        Private operatingSystemTypeField As Long
        
        Private operatingSystemTypeSuppliedField As Boolean
        
        Private subPathField As String
        
        Private subPathSuppliedField As Boolean
        
        Private procToRunField As String
        
        Private procToRunSuppliedField As Boolean
        
        Private parametersField As String
        
        Private parametersSuppliedField As Boolean
        
        Private softwarePackageVolumeIdField As String
        
        Private softwarePackageVolumeIdSuppliedField As Boolean
        
        Private operationMaskField As SoftwarePackageProcedureOperationMask2
        
        Private operationMaskSuppliedField As Boolean
        
        Private bootBeforeMaskField As SoftwarePackageProcedureBootMask2
        
        Private bootBeforeMaskSuppliedField As Boolean
        
        Private bootAfterMaskField As SoftwarePackageProcedureBootMask2
        
        Private bootAfterMaskSuppliedField As Boolean
        
        Private dependancyQueryIdField As String
        
        Private dependancyQueryIdSuppliedField As Boolean
        
        Private managementTypeMaskField As SoftwarePackageProcedureManagementTypeMask
        
        Private managementTypeMaskSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureId() As String
            Get
                Return Me.softwarePackageProcedureIdField
            End Get
            Set
                Me.softwarePackageProcedureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureIdSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureIdSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureName() As String
            Get
                Return Me.softwarePackageProcedureNameField
            End Get
            Set
                Me.softwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureNameSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureNameSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTask() As SoftwarePackageProcedureTask
            Get
                Return Me.softwarePackageProcedureTaskField
            End Get
            Set
                Me.softwarePackageProcedureTaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTaskSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureTaskSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureTaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureType() As SoftwarePackageProcedureType
            Get
                Return Me.softwarePackageProcedureTypeField
            End Get
            Set
                Me.softwarePackageProcedureTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTypeSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureTypeSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectable() As Boolean
            Get
                Return Me.userSelectableField
            End Get
            Set
                Me.userSelectableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectableSupplied() As Boolean
            Get
                Return Me.userSelectableSuppliedField
            End Get
            Set
                Me.userSelectableSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property externalProcedure() As Boolean
            Get
                Return Me.externalProcedureField
            End Get
            Set
                Me.externalProcedureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property externalProcedureSupplied() As Boolean
            Get
                Return Me.externalProcedureSuppliedField
            End Get
            Set
                Me.externalProcedureSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemType() As Long
            Get
                Return Me.operatingSystemTypeField
            End Get
            Set
                Me.operatingSystemTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemTypeSupplied() As Boolean
            Get
                Return Me.operatingSystemTypeSuppliedField
            End Get
            Set
                Me.operatingSystemTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property subPath() As String
            Get
                Return Me.subPathField
            End Get
            Set
                Me.subPathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property subPathSupplied() As Boolean
            Get
                Return Me.subPathSuppliedField
            End Get
            Set
                Me.subPathSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property procToRun() As String
            Get
                Return Me.procToRunField
            End Get
            Set
                Me.procToRunField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property procToRunSupplied() As Boolean
            Get
                Return Me.procToRunSuppliedField
            End Get
            Set
                Me.procToRunSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property parameters() As String
            Get
                Return Me.parametersField
            End Get
            Set
                Me.parametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property parametersSupplied() As Boolean
            Get
                Return Me.parametersSuppliedField
            End Get
            Set
                Me.parametersSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVolumeId() As String
            Get
                Return Me.softwarePackageVolumeIdField
            End Get
            Set
                Me.softwarePackageVolumeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageVolumeIdSupplied() As Boolean
            Get
                Return Me.softwarePackageVolumeIdSuppliedField
            End Get
            Set
                Me.softwarePackageVolumeIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask() As SoftwarePackageProcedureOperationMask2
            Get
                Return Me.operationMaskField
            End Get
            Set
                Me.operationMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskSupplied() As Boolean
            Get
                Return Me.operationMaskSuppliedField
            End Get
            Set
                Me.operationMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwarePackageProcedureBootMask2
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskSupplied() As Boolean
            Get
                Return Me.bootBeforeMaskSuppliedField
            End Get
            Set
                Me.bootBeforeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwarePackageProcedureBootMask2
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskSupplied() As Boolean
            Get
                Return Me.bootAfterMaskSuppliedField
            End Get
            Set
                Me.bootAfterMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dependancyQueryId() As String
            Get
                Return Me.dependancyQueryIdField
            End Get
            Set
                Me.dependancyQueryIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dependancyQueryIdSupplied() As Boolean
            Get
                Return Me.dependancyQueryIdSuppliedField
            End Get
            Set
                Me.dependancyQueryIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property managementTypeMask() As SoftwarePackageProcedureManagementTypeMask
            Get
                Return Me.managementTypeMaskField
            End Get
            Set
                Me.managementTypeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property managementTypeMaskSupplied() As Boolean
            Get
                Return Me.managementTypeMaskSuppliedField
            End Get
            Set
                Me.managementTypeMaskSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProcedureOperationMask2
        
        Private offlineField As Boolean
        
        Private promptField As Boolean
        
        Private calendarControlField As Boolean
        
        Private shieldField As Boolean
        
        Private lockField As Boolean
        
        Private noPromptCancelField As Boolean
        
        Private backgroundField As Boolean
        
        Private rerunField As Boolean
        
        Private permActAreaField As Boolean
        
        Private execPromptTimeoutField As Boolean
        
        Private resolveQueryGroupsField As Boolean
        
        Private autoDeliverItemField As Boolean
        
        Private defaultItemProcField As Boolean
        
        Private renewFailedOnlyField As Boolean
        
        Private useDefaultJobMessageField As Boolean
        
        '''<remarks/>
        Public Property offline() As Boolean
            Get
                Return Me.offlineField
            End Get
            Set
                Me.offlineField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prompt() As Boolean
            Get
                Return Me.promptField
            End Get
            Set
                Me.promptField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property calendarControl() As Boolean
            Get
                Return Me.calendarControlField
            End Get
            Set
                Me.calendarControlField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property shield() As Boolean
            Get
                Return Me.shieldField
            End Get
            Set
                Me.shieldField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lock() As Boolean
            Get
                Return Me.lockField
            End Get
            Set
                Me.lockField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noPromptCancel() As Boolean
            Get
                Return Me.noPromptCancelField
            End Get
            Set
                Me.noPromptCancelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property background() As Boolean
            Get
                Return Me.backgroundField
            End Get
            Set
                Me.backgroundField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rerun() As Boolean
            Get
                Return Me.rerunField
            End Get
            Set
                Me.rerunField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property permActArea() As Boolean
            Get
                Return Me.permActAreaField
            End Get
            Set
                Me.permActAreaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property execPromptTimeout() As Boolean
            Get
                Return Me.execPromptTimeoutField
            End Get
            Set
                Me.execPromptTimeoutField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property resolveQueryGroups() As Boolean
            Get
                Return Me.resolveQueryGroupsField
            End Get
            Set
                Me.resolveQueryGroupsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property autoDeliverItem() As Boolean
            Get
                Return Me.autoDeliverItemField
            End Get
            Set
                Me.autoDeliverItemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property defaultItemProc() As Boolean
            Get
                Return Me.defaultItemProcField
            End Get
            Set
                Me.defaultItemProcField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property renewFailedOnly() As Boolean
            Get
                Return Me.renewFailedOnlyField
            End Get
            Set
                Me.renewFailedOnlyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property useDefaultJobMessage() As Boolean
            Get
                Return Me.useDefaultJobMessageField
            End Get
            Set
                Me.useDefaultJobMessageField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProcedureProperties2
        
        Private softwarePackageProcedureIdField As String
        
        Private softwarePackageProcedureNameField As String
        
        Private softwarePackageProcedureTaskField As SoftwarePackageProcedureTask
        
        Private softwarePackageProcedureTypeField As SoftwarePackageProcedureType
        
        Private commentField As String
        
        Private userSelectableField As Boolean
        
        Private externalProcedureField As Boolean
        
        Private filedByField As SoftwarePackageProcedureFiledBy
        
        Private operatingSystemTypeField As Long
        
        Private subPathField As String
        
        Private procToRunField As String
        
        Private parametersField As String
        
        Private procedureRelationField As SoftwarePackageProcedureRelation
        
        Private activatedByField As SoftwarePackageProcedureFiledBy
        
        Private activatedDateTimeField As DateTime
        
        Private softwarePackageIdField As String
        
        Private softwarePackageNameField As String
        
        Private softwarePackageVersionField As String
        
        Private softwarePackageTypeField As SoftwarePackageType
        
        Private softwarePackageVolumeIdField As String
        
        Private softwarePackageVolumeNameField As String
        
        Private operationMaskField As SoftwarePackageProcedureOperationMask2
        
        Private bootBeforeMaskField As SoftwarePackageProcedureBootMask2
        
        Private bootAfterMaskField As SoftwarePackageProcedureBootMask2
        
        Private dependancyQueryIdField As String
        
        Private managementTypeMaskField As SoftwarePackageProcedureManagementTypeMask
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureId() As String
            Get
                Return Me.softwarePackageProcedureIdField
            End Get
            Set
                Me.softwarePackageProcedureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureName() As String
            Get
                Return Me.softwarePackageProcedureNameField
            End Get
            Set
                Me.softwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTask() As SoftwarePackageProcedureTask
            Get
                Return Me.softwarePackageProcedureTaskField
            End Get
            Set
                Me.softwarePackageProcedureTaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureType() As SoftwarePackageProcedureType
            Get
                Return Me.softwarePackageProcedureTypeField
            End Get
            Set
                Me.softwarePackageProcedureTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectable() As Boolean
            Get
                Return Me.userSelectableField
            End Get
            Set
                Me.userSelectableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property externalProcedure() As Boolean
            Get
                Return Me.externalProcedureField
            End Get
            Set
                Me.externalProcedureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property filedBy() As SoftwarePackageProcedureFiledBy
            Get
                Return Me.filedByField
            End Get
            Set
                Me.filedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemType() As Long
            Get
                Return Me.operatingSystemTypeField
            End Get
            Set
                Me.operatingSystemTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property subPath() As String
            Get
                Return Me.subPathField
            End Get
            Set
                Me.subPathField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property procToRun() As String
            Get
                Return Me.procToRunField
            End Get
            Set
                Me.procToRunField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property parameters() As String
            Get
                Return Me.parametersField
            End Get
            Set
                Me.parametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property procedureRelation() As SoftwarePackageProcedureRelation
            Get
                Return Me.procedureRelationField
            End Get
            Set
                Me.procedureRelationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activatedBy() As SoftwarePackageProcedureFiledBy
            Get
                Return Me.activatedByField
            End Get
            Set
                Me.activatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activatedDateTime() As DateTime
            Get
                Return Me.activatedDateTimeField
            End Get
            Set
                Me.activatedDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageId() As String
            Get
                Return Me.softwarePackageIdField
            End Get
            Set
                Me.softwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageName() As String
            Get
                Return Me.softwarePackageNameField
            End Get
            Set
                Me.softwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVersion() As String
            Get
                Return Me.softwarePackageVersionField
            End Get
            Set
                Me.softwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageType() As SoftwarePackageType
            Get
                Return Me.softwarePackageTypeField
            End Get
            Set
                Me.softwarePackageTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVolumeId() As String
            Get
                Return Me.softwarePackageVolumeIdField
            End Get
            Set
                Me.softwarePackageVolumeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVolumeName() As String
            Get
                Return Me.softwarePackageVolumeNameField
            End Get
            Set
                Me.softwarePackageVolumeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask() As SoftwarePackageProcedureOperationMask2
            Get
                Return Me.operationMaskField
            End Get
            Set
                Me.operationMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwarePackageProcedureBootMask2
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwarePackageProcedureBootMask2
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dependancyQueryId() As String
            Get
                Return Me.dependancyQueryIdField
            End Get
            Set
                Me.dependancyQueryIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property managementTypeMask() As SoftwarePackageProcedureManagementTypeMask
            Get
                Return Me.managementTypeMaskField
            End Get
            Set
                Me.managementTypeMaskField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSoftwarePackageProcedureProperties2
        
        Private softwarePackageIdField As String
        
        Private softwarePackageIdSuppliedField As Boolean
        
        Private softwarePackageProcedureNameField As String
        
        Private softwarePackageProcedureNameSuppliedField As Boolean
        
        Private softwarePackageProcedureTaskField As SoftwarePackageProcedureTask
        
        Private softwarePackageProcedureTaskSuppliedField As Boolean
        
        Private softwarePackageProcedureTypeField As SoftwarePackageProcedureType
        
        Private softwarePackageProcedureTypeSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private userSelectableField As Boolean
        
        Private userSelectableSuppliedField As Boolean
        
        Private externalProcedureField As Boolean
        
        Private externalProcedureSuppliedField As Boolean
        
        Private operatingSystemTypeField As Long
        
        Private operatingSystemTypeSuppliedField As Boolean
        
        Private subPathField As String
        
        Private subPathSuppliedField As Boolean
        
        Private procToRunField As String
        
        Private procToRunSuppliedField As Boolean
        
        Private parametersField As String
        
        Private parametersSuppliedField As Boolean
        
        Private softwarePackageVolumeIdField As String
        
        Private softwarePackageVolumeIdSuppliedField As Boolean
        
        Private operationMaskField As SoftwarePackageProcedureOperationMask2
        
        Private operationMaskSuppliedField As Boolean
        
        Private bootBeforeMaskField As SoftwarePackageProcedureBootMask2
        
        Private bootBeforeMaskSuppliedField As Boolean
        
        Private bootAfterMaskField As SoftwarePackageProcedureBootMask2
        
        Private bootAfterMaskSuppliedField As Boolean
        
        Private dependancyQueryIdField As String
        
        Private dependancyQueryIdSuppliedField As Boolean
        
        Private managementTypeMaskField As SoftwarePackageProcedureManagementTypeMask
        
        Private managementTypeMaskSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageId() As String
            Get
                Return Me.softwarePackageIdField
            End Get
            Set
                Me.softwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageIdSupplied() As Boolean
            Get
                Return Me.softwarePackageIdSuppliedField
            End Get
            Set
                Me.softwarePackageIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureName() As String
            Get
                Return Me.softwarePackageProcedureNameField
            End Get
            Set
                Me.softwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureNameSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureNameSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTask() As SoftwarePackageProcedureTask
            Get
                Return Me.softwarePackageProcedureTaskField
            End Get
            Set
                Me.softwarePackageProcedureTaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTaskSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureTaskSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureTaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureType() As SoftwarePackageProcedureType
            Get
                Return Me.softwarePackageProcedureTypeField
            End Get
            Set
                Me.softwarePackageProcedureTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTypeSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureTypeSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectable() As Boolean
            Get
                Return Me.userSelectableField
            End Get
            Set
                Me.userSelectableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectableSupplied() As Boolean
            Get
                Return Me.userSelectableSuppliedField
            End Get
            Set
                Me.userSelectableSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property externalProcedure() As Boolean
            Get
                Return Me.externalProcedureField
            End Get
            Set
                Me.externalProcedureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property externalProcedureSupplied() As Boolean
            Get
                Return Me.externalProcedureSuppliedField
            End Get
            Set
                Me.externalProcedureSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemType() As Long
            Get
                Return Me.operatingSystemTypeField
            End Get
            Set
                Me.operatingSystemTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemTypeSupplied() As Boolean
            Get
                Return Me.operatingSystemTypeSuppliedField
            End Get
            Set
                Me.operatingSystemTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property subPath() As String
            Get
                Return Me.subPathField
            End Get
            Set
                Me.subPathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property subPathSupplied() As Boolean
            Get
                Return Me.subPathSuppliedField
            End Get
            Set
                Me.subPathSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property procToRun() As String
            Get
                Return Me.procToRunField
            End Get
            Set
                Me.procToRunField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property procToRunSupplied() As Boolean
            Get
                Return Me.procToRunSuppliedField
            End Get
            Set
                Me.procToRunSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property parameters() As String
            Get
                Return Me.parametersField
            End Get
            Set
                Me.parametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property parametersSupplied() As Boolean
            Get
                Return Me.parametersSuppliedField
            End Get
            Set
                Me.parametersSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVolumeId() As String
            Get
                Return Me.softwarePackageVolumeIdField
            End Get
            Set
                Me.softwarePackageVolumeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageVolumeIdSupplied() As Boolean
            Get
                Return Me.softwarePackageVolumeIdSuppliedField
            End Get
            Set
                Me.softwarePackageVolumeIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask() As SoftwarePackageProcedureOperationMask2
            Get
                Return Me.operationMaskField
            End Get
            Set
                Me.operationMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskSupplied() As Boolean
            Get
                Return Me.operationMaskSuppliedField
            End Get
            Set
                Me.operationMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwarePackageProcedureBootMask2
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskSupplied() As Boolean
            Get
                Return Me.bootBeforeMaskSuppliedField
            End Get
            Set
                Me.bootBeforeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwarePackageProcedureBootMask2
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskSupplied() As Boolean
            Get
                Return Me.bootAfterMaskSuppliedField
            End Get
            Set
                Me.bootAfterMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dependancyQueryId() As String
            Get
                Return Me.dependancyQueryIdField
            End Get
            Set
                Me.dependancyQueryIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dependancyQueryIdSupplied() As Boolean
            Get
                Return Me.dependancyQueryIdSuppliedField
            End Get
            Set
                Me.dependancyQueryIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property managementTypeMask() As SoftwarePackageProcedureManagementTypeMask
            Get
                Return Me.managementTypeMaskField
            End Get
            Set
                Me.managementTypeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property managementTypeMaskSupplied() As Boolean
            Get
                Return Me.managementTypeMaskSuppliedField
            End Get
            Set
                Me.managementTypeMaskSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSoftwareJobOrderPolicyProperties3
        
        Private timeoutHoursField As Long
        
        Private timeoutHoursSuppliedField As Boolean
        
        Private startWhenField As SoftwareJobStartupTime
        
        Private startWhenSuppliedField As Boolean
        
        Private jobNameField As String
        
        Private jobNameSuppliedField As Boolean
        
        Private userMessageField As String
        
        Private userMessageSuppliedField As Boolean
        
        Private bootBeforeMaskField As SoftwareJobBootMask3
        
        Private bootBeforeMaskSuppliedField As Boolean
        
        Private bootAfterMaskField As SoftwareJobBootMask3
        
        Private bootAfterMaskSuppliedField As Boolean
        
        Private operationMaskField As SoftwareJobOperationMask
        
        Private operationMaskSuppliedField As Boolean
        
        Private userParametersField As String
        
        Private userParametersSuppliedField As Boolean
        
        Private promptTimeoutHoursField As Long
        
        Private promptTimeoutHoursSuppliedField As Boolean
        
        Private deliveryCalendarField As String
        
        Private deliveryCalendarSuppliedField As Boolean
        
        '''<remarks/>
        Public Property timeoutHours() As Long
            Get
                Return Me.timeoutHoursField
            End Get
            Set
                Me.timeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeoutHoursSupplied() As Boolean
            Get
                Return Me.timeoutHoursSuppliedField
            End Get
            Set
                Me.timeoutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhen() As SoftwareJobStartupTime
            Get
                Return Me.startWhenField
            End Get
            Set
                Me.startWhenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhenSupplied() As Boolean
            Get
                Return Me.startWhenSuppliedField
            End Get
            Set
                Me.startWhenSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property jobName() As String
            Get
                Return Me.jobNameField
            End Get
            Set
                Me.jobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property jobNameSupplied() As Boolean
            Get
                Return Me.jobNameSuppliedField
            End Get
            Set
                Me.jobNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userMessage() As String
            Get
                Return Me.userMessageField
            End Get
            Set
                Me.userMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userMessageSupplied() As Boolean
            Get
                Return Me.userMessageSuppliedField
            End Get
            Set
                Me.userMessageSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwareJobBootMask3
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskSupplied() As Boolean
            Get
                Return Me.bootBeforeMaskSuppliedField
            End Get
            Set
                Me.bootBeforeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwareJobBootMask3
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskSupplied() As Boolean
            Get
                Return Me.bootAfterMaskSuppliedField
            End Get
            Set
                Me.bootAfterMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask() As SoftwareJobOperationMask
            Get
                Return Me.operationMaskField
            End Get
            Set
                Me.operationMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskSupplied() As Boolean
            Get
                Return Me.operationMaskSuppliedField
            End Get
            Set
                Me.operationMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userParameters() As String
            Get
                Return Me.userParametersField
            End Get
            Set
                Me.userParametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userParametersSupplied() As Boolean
            Get
                Return Me.userParametersSuppliedField
            End Get
            Set
                Me.userParametersSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHours() As Long
            Get
                Return Me.promptTimeoutHoursField
            End Get
            Set
                Me.promptTimeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHoursSupplied() As Boolean
            Get
                Return Me.promptTimeoutHoursSuppliedField
            End Get
            Set
                Me.promptTimeoutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property deliveryCalendar() As String
            Get
                Return Me.deliveryCalendarField
            End Get
            Set
                Me.deliveryCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryCalendarSupplied() As Boolean
            Get
                Return Me.deliveryCalendarSuppliedField
            End Get
            Set
                Me.deliveryCalendarSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwareJobOperationMask
        
        Private offlineField As Boolean
        
        Private promptField As Boolean
        
        Private calendarControlField As Boolean
        
        Private shieldField As Boolean
        
        Private noPromptCancelField As Boolean
        
        Private rerunField As Boolean
        
        Private execPromptTimeoutField As Boolean
        
        Private resolveQueryGroupsField As Boolean
        
        Private autoDeliverItemField As Boolean
        
        Private defaultItemProcField As Boolean
        
        Private renewFailedOnlyField As Boolean
        
        Private runAtShutdownField As Boolean
        
        '''<remarks/>
        Public Property offline() As Boolean
            Get
                Return Me.offlineField
            End Get
            Set
                Me.offlineField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prompt() As Boolean
            Get
                Return Me.promptField
            End Get
            Set
                Me.promptField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property calendarControl() As Boolean
            Get
                Return Me.calendarControlField
            End Get
            Set
                Me.calendarControlField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property shield() As Boolean
            Get
                Return Me.shieldField
            End Get
            Set
                Me.shieldField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noPromptCancel() As Boolean
            Get
                Return Me.noPromptCancelField
            End Get
            Set
                Me.noPromptCancelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rerun() As Boolean
            Get
                Return Me.rerunField
            End Get
            Set
                Me.rerunField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property execPromptTimeout() As Boolean
            Get
                Return Me.execPromptTimeoutField
            End Get
            Set
                Me.execPromptTimeoutField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property resolveQueryGroups() As Boolean
            Get
                Return Me.resolveQueryGroupsField
            End Get
            Set
                Me.resolveQueryGroupsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property autoDeliverItem() As Boolean
            Get
                Return Me.autoDeliverItemField
            End Get
            Set
                Me.autoDeliverItemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property defaultItemProc() As Boolean
            Get
                Return Me.defaultItemProcField
            End Get
            Set
                Me.defaultItemProcField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property renewFailedOnly() As Boolean
            Get
                Return Me.renewFailedOnlyField
            End Get
            Set
                Me.renewFailedOnlyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property runAtShutdown() As Boolean
            Get
                Return Me.runAtShutdownField
            End Get
            Set
                Me.runAtShutdownField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwareJobOrderProperties3
        
        Private executionDateField As DateTime
        
        Private executionDateSuppliedField As Boolean
        
        Private timeOutHoursField As Long
        
        Private timeOutHoursSuppliedField As Boolean
        
        Private startWhenField As SoftwareJobStartupTime
        
        Private startWhenSuppliedField As Boolean
        
        Private jobNameField As String
        
        Private jobNameSuppliedField As Boolean
        
        Private userMessageField As String
        
        Private userMessageSuppliedField As Boolean
        
        Private bootBeforeMaskField As SoftwareJobBootMask3
        
        Private bootBeforeMaskSuppliedField As Boolean
        
        Private bootAfterMaskField As SoftwareJobBootMask3
        
        Private bootAfterMaskSuppliedField As Boolean
        
        Private operationMaskField As SoftwareJobOperationMask
        
        Private operationMaskSuppliedField As Boolean
        
        Private userParametersField As String
        
        Private userParametersSuppliedField As Boolean
        
        Private orderNumberField As Long
        
        Private orderNumberSuppliedField As Boolean
        
        Private promptTimeoutHoursField As Long
        
        Private promptTimeoutHoursSuppliedField As Boolean
        
        Private deliveryCalendarField As String
        
        Private deliveryCalendarSuppliedField As Boolean
        
        Private deliveryDateTimeField As DateTime
        
        Private deliveryDateTimeSuppliedField As Boolean
        
        '''<remarks/>
        Public Property executionDate() As DateTime
            Get
                Return Me.executionDateField
            End Get
            Set
                Me.executionDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property executionDateSupplied() As Boolean
            Get
                Return Me.executionDateSuppliedField
            End Get
            Set
                Me.executionDateSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeOutHours() As Long
            Get
                Return Me.timeOutHoursField
            End Get
            Set
                Me.timeOutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeOutHoursSupplied() As Boolean
            Get
                Return Me.timeOutHoursSuppliedField
            End Get
            Set
                Me.timeOutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhen() As SoftwareJobStartupTime
            Get
                Return Me.startWhenField
            End Get
            Set
                Me.startWhenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhenSupplied() As Boolean
            Get
                Return Me.startWhenSuppliedField
            End Get
            Set
                Me.startWhenSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property jobName() As String
            Get
                Return Me.jobNameField
            End Get
            Set
                Me.jobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property jobNameSupplied() As Boolean
            Get
                Return Me.jobNameSuppliedField
            End Get
            Set
                Me.jobNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userMessage() As String
            Get
                Return Me.userMessageField
            End Get
            Set
                Me.userMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userMessageSupplied() As Boolean
            Get
                Return Me.userMessageSuppliedField
            End Get
            Set
                Me.userMessageSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwareJobBootMask3
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskSupplied() As Boolean
            Get
                Return Me.bootBeforeMaskSuppliedField
            End Get
            Set
                Me.bootBeforeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwareJobBootMask3
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskSupplied() As Boolean
            Get
                Return Me.bootAfterMaskSuppliedField
            End Get
            Set
                Me.bootAfterMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask() As SoftwareJobOperationMask
            Get
                Return Me.operationMaskField
            End Get
            Set
                Me.operationMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskSupplied() As Boolean
            Get
                Return Me.operationMaskSuppliedField
            End Get
            Set
                Me.operationMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userParameters() As String
            Get
                Return Me.userParametersField
            End Get
            Set
                Me.userParametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userParametersSupplied() As Boolean
            Get
                Return Me.userParametersSuppliedField
            End Get
            Set
                Me.userParametersSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property orderNumber() As Long
            Get
                Return Me.orderNumberField
            End Get
            Set
                Me.orderNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property orderNumberSupplied() As Boolean
            Get
                Return Me.orderNumberSuppliedField
            End Get
            Set
                Me.orderNumberSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHours() As Long
            Get
                Return Me.promptTimeoutHoursField
            End Get
            Set
                Me.promptTimeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHoursSupplied() As Boolean
            Get
                Return Me.promptTimeoutHoursSuppliedField
            End Get
            Set
                Me.promptTimeoutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property deliveryCalendar() As String
            Get
                Return Me.deliveryCalendarField
            End Get
            Set
                Me.deliveryCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryCalendarSupplied() As Boolean
            Get
                Return Me.deliveryCalendarSuppliedField
            End Get
            Set
                Me.deliveryCalendarSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryDateTime() As DateTime
            Get
                Return Me.deliveryDateTimeField
            End Get
            Set
                Me.deliveryDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryDateTimeSupplied() As Boolean
            Get
                Return Me.deliveryDateTimeSuppliedField
            End Get
            Set
                Me.deliveryDateTimeSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSoftwareJobOrderProperties3
        
        Private executionDateField As DateTime
        
        Private executionDateSuppliedField As Boolean
        
        Private timeoutHoursField As Long
        
        Private timeoutHoursSuppliedField As Boolean
        
        Private startWhenField As SoftwareJobStartupTime
        
        Private startWhenSuppliedField As Boolean
        
        Private jobNameField As String
        
        Private jobNameSuppliedField As Boolean
        
        Private userMessageField As String
        
        Private userMessageSuppliedField As Boolean
        
        Private bootBeforeMaskField As SoftwareJobBootMask3
        
        Private bootBeforeMaskSuppliedField As Boolean
        
        Private bootAfterMaskField As SoftwareJobBootMask3
        
        Private bootAfterMaskSuppliedField As Boolean
        
        Private operationMaskField As SoftwareJobOperationMask
        
        Private operationMaskSuppliedField As Boolean
        
        Private userParametersField As String
        
        Private userParametersSuppliedField As Boolean
        
        Private promptTimeoutHoursField As Long
        
        Private promptTimeoutHoursSuppliedField As Boolean
        
        Private deliveryCalendarField As String
        
        Private deliveryCalendarSuppliedField As Boolean
        
        Private deliveryDateTimeField As DateTime
        
        Private deliveryDateTimeSuppliedField As Boolean
        
        '''<remarks/>
        Public Property executionDate() As DateTime
            Get
                Return Me.executionDateField
            End Get
            Set
                Me.executionDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property executionDateSupplied() As Boolean
            Get
                Return Me.executionDateSuppliedField
            End Get
            Set
                Me.executionDateSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeoutHours() As Long
            Get
                Return Me.timeoutHoursField
            End Get
            Set
                Me.timeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeoutHoursSupplied() As Boolean
            Get
                Return Me.timeoutHoursSuppliedField
            End Get
            Set
                Me.timeoutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhen() As SoftwareJobStartupTime
            Get
                Return Me.startWhenField
            End Get
            Set
                Me.startWhenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhenSupplied() As Boolean
            Get
                Return Me.startWhenSuppliedField
            End Get
            Set
                Me.startWhenSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property jobName() As String
            Get
                Return Me.jobNameField
            End Get
            Set
                Me.jobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property jobNameSupplied() As Boolean
            Get
                Return Me.jobNameSuppliedField
            End Get
            Set
                Me.jobNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userMessage() As String
            Get
                Return Me.userMessageField
            End Get
            Set
                Me.userMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userMessageSupplied() As Boolean
            Get
                Return Me.userMessageSuppliedField
            End Get
            Set
                Me.userMessageSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwareJobBootMask3
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskSupplied() As Boolean
            Get
                Return Me.bootBeforeMaskSuppliedField
            End Get
            Set
                Me.bootBeforeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwareJobBootMask3
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskSupplied() As Boolean
            Get
                Return Me.bootAfterMaskSuppliedField
            End Get
            Set
                Me.bootAfterMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask() As SoftwareJobOperationMask
            Get
                Return Me.operationMaskField
            End Get
            Set
                Me.operationMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskSupplied() As Boolean
            Get
                Return Me.operationMaskSuppliedField
            End Get
            Set
                Me.operationMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userParameters() As String
            Get
                Return Me.userParametersField
            End Get
            Set
                Me.userParametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userParametersSupplied() As Boolean
            Get
                Return Me.userParametersSuppliedField
            End Get
            Set
                Me.userParametersSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHours() As Long
            Get
                Return Me.promptTimeoutHoursField
            End Get
            Set
                Me.promptTimeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHoursSupplied() As Boolean
            Get
                Return Me.promptTimeoutHoursSuppliedField
            End Get
            Set
                Me.promptTimeoutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property deliveryCalendar() As String
            Get
                Return Me.deliveryCalendarField
            End Get
            Set
                Me.deliveryCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryCalendarSupplied() As Boolean
            Get
                Return Me.deliveryCalendarSuppliedField
            End Get
            Set
                Me.deliveryCalendarSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryDateTime() As DateTime
            Get
                Return Me.deliveryDateTimeField
            End Get
            Set
                Me.deliveryDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryDateTimeSupplied() As Boolean
            Get
                Return Me.deliveryDateTimeSuppliedField
            End Get
            Set
                Me.deliveryDateTimeSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwareJobProperties3
        
        Private softwareJobIdField As String
        
        Private softwareJobNameField As String
        
        Private softwarePackageIdField As String
        
        Private softwarePackageNameField As String
        
        Private softwarePackageVersionField As String
        
        Private softwarePackageTypeField As SoftwarePackageType
        
        Private softwarePackageProcedureIdField As String
        
        Private softwarePackageProcedureNameField As String
        
        Private executionDateField As DateTime
        
        Private createdDateField As DateTime
        
        Private timeoutHoursField As Long
        
        Private softwareJobTypeField As SoftwareJobType
        
        Private softwareJobStateField As SoftwareJobState
        
        Private startWhenField As SoftwareJobStartupTime
        
        Private permissionMaskField As SoftwareJobPermissionMask
        
        Private bootBeforeMaskField As SoftwareJobBootMask3
        
        Private bootAfterMaskField As SoftwareJobBootMask3
        
        Private operationMask2Field As SoftwareJobOperationMask2
        
        Private userParametersField As String
        
        Private jobStatusCountersField As SoftwareJobStatusCounters
        
        Private internalMaskField As Long
        
        Private orderNumberField As Long
        
        Private promptTimeoutHoursField As Long
        
        Private softwareJobTaskField As SoftwareJobTask
        
        Private deliveryCalendarField As String
        
        Private deliveryDateField As DateTime
        
        Private causeField As Long
        
        Private causeParamField As String
        
        Private renewStateField As SoftwareJobRenewState
        
        Private userMessageField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareJobId() As String
            Get
                Return Me.softwareJobIdField
            End Get
            Set
                Me.softwareJobIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareJobName() As String
            Get
                Return Me.softwareJobNameField
            End Get
            Set
                Me.softwareJobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageId() As String
            Get
                Return Me.softwarePackageIdField
            End Get
            Set
                Me.softwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageName() As String
            Get
                Return Me.softwarePackageNameField
            End Get
            Set
                Me.softwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVersion() As String
            Get
                Return Me.softwarePackageVersionField
            End Get
            Set
                Me.softwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageType() As SoftwarePackageType
            Get
                Return Me.softwarePackageTypeField
            End Get
            Set
                Me.softwarePackageTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureId() As String
            Get
                Return Me.softwarePackageProcedureIdField
            End Get
            Set
                Me.softwarePackageProcedureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureName() As String
            Get
                Return Me.softwarePackageProcedureNameField
            End Get
            Set
                Me.softwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property executionDate() As DateTime
            Get
                Return Me.executionDateField
            End Get
            Set
                Me.executionDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property createdDate() As DateTime
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeoutHours() As Long
            Get
                Return Me.timeoutHoursField
            End Get
            Set
                Me.timeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobType() As SoftwareJobType
            Get
                Return Me.softwareJobTypeField
            End Get
            Set
                Me.softwareJobTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobState() As SoftwareJobState
            Get
                Return Me.softwareJobStateField
            End Get
            Set
                Me.softwareJobStateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhen() As SoftwareJobStartupTime
            Get
                Return Me.startWhenField
            End Get
            Set
                Me.startWhenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property permissionMask() As SoftwareJobPermissionMask
            Get
                Return Me.permissionMaskField
            End Get
            Set
                Me.permissionMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwareJobBootMask3
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwareJobBootMask3
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask2() As SoftwareJobOperationMask2
            Get
                Return Me.operationMask2Field
            End Get
            Set
                Me.operationMask2Field = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userParameters() As String
            Get
                Return Me.userParametersField
            End Get
            Set
                Me.userParametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property jobStatusCounters() As SoftwareJobStatusCounters
            Get
                Return Me.jobStatusCountersField
            End Get
            Set
                Me.jobStatusCountersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property internalMask() As Long
            Get
                Return Me.internalMaskField
            End Get
            Set
                Me.internalMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property orderNumber() As Long
            Get
                Return Me.orderNumberField
            End Get
            Set
                Me.orderNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHours() As Long
            Get
                Return Me.promptTimeoutHoursField
            End Get
            Set
                Me.promptTimeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobTask() As SoftwareJobTask
            Get
                Return Me.softwareJobTaskField
            End Get
            Set
                Me.softwareJobTaskField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property deliveryCalendar() As String
            Get
                Return Me.deliveryCalendarField
            End Get
            Set
                Me.deliveryCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryDate() As DateTime
            Get
                Return Me.deliveryDateField
            End Get
            Set
                Me.deliveryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cause() As Long
            Get
                Return Me.causeField
            End Get
            Set
                Me.causeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property causeParam() As String
            Get
                Return Me.causeParamField
            End Get
            Set
                Me.causeParamField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property renewState() As SoftwareJobRenewState
            Get
                Return Me.renewStateField
            End Get
            Set
                Me.renewStateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userMessage() As String
            Get
                Return Me.userMessageField
            End Get
            Set
                Me.userMessageField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwareJobOperationMask2
        
        Private offlineField As Boolean
        
        Private promptField As Boolean
        
        Private calendarControlField As Boolean
        
        Private shieldField As Boolean
        
        Private noPromptCancelField As Boolean
        
        Private rerunField As Boolean
        
        Private execPromptTimeoutField As Boolean
        
        Private resolveQueryGroupsField As Boolean
        
        Private autoDeliverItemField As Boolean
        
        Private defaultItemProcField As Boolean
        
        Private renewFailedOnlyField As Boolean
        
        Private runAtShutdownField As Boolean
        
        Private reInstallField As Boolean
        
        '''<remarks/>
        Public Property offline() As Boolean
            Get
                Return Me.offlineField
            End Get
            Set
                Me.offlineField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prompt() As Boolean
            Get
                Return Me.promptField
            End Get
            Set
                Me.promptField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property calendarControl() As Boolean
            Get
                Return Me.calendarControlField
            End Get
            Set
                Me.calendarControlField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property shield() As Boolean
            Get
                Return Me.shieldField
            End Get
            Set
                Me.shieldField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noPromptCancel() As Boolean
            Get
                Return Me.noPromptCancelField
            End Get
            Set
                Me.noPromptCancelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rerun() As Boolean
            Get
                Return Me.rerunField
            End Get
            Set
                Me.rerunField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property execPromptTimeout() As Boolean
            Get
                Return Me.execPromptTimeoutField
            End Get
            Set
                Me.execPromptTimeoutField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property resolveQueryGroups() As Boolean
            Get
                Return Me.resolveQueryGroupsField
            End Get
            Set
                Me.resolveQueryGroupsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property autoDeliverItem() As Boolean
            Get
                Return Me.autoDeliverItemField
            End Get
            Set
                Me.autoDeliverItemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property defaultItemProc() As Boolean
            Get
                Return Me.defaultItemProcField
            End Get
            Set
                Me.defaultItemProcField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property renewFailedOnly() As Boolean
            Get
                Return Me.renewFailedOnlyField
            End Get
            Set
                Me.renewFailedOnlyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property runAtShutdown() As Boolean
            Get
                Return Me.runAtShutdownField
            End Get
            Set
                Me.runAtShutdownField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property reInstall() As Boolean
            Get
                Return Me.reInstallField
            End Get
            Set
                Me.reInstallField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwareJobStatusCounters
        
        Private waitingField As Long
        
        Private activeField As Long
        
        Private okField As Long
        
        Private failedField As Long
        
        '''<remarks/>
        Public Property waiting() As Long
            Get
                Return Me.waitingField
            End Get
            Set
                Me.waitingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property active() As Long
            Get
                Return Me.activeField
            End Get
            Set
                Me.activeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ok() As Long
            Get
                Return Me.okField
            End Get
            Set
                Me.okField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property failed() As Long
            Get
                Return Me.failedField
            End Get
            Set
                Me.failedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SoftwareJobTask
        
        '''<remarks/>
        NONE
        
        '''<remarks/>
        INSTALL
        
        '''<remarks/>
        UNINSTALL
        
        '''<remarks/>
        CONFIGURE
        
        '''<remarks/>
        ACTIVATE
        
        '''<remarks/>
        DELIVER
        
        '''<remarks/>
        UNDELIVER
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SoftwareJobRenewState
        
        '''<remarks/>
        WAITING
        
        '''<remarks/>
        INPROGRESS
        
        '''<remarks/>
        OK
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DSM-ERROR")>  _
        DSMERROR
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("NOT-RENEWED")>  _
        NOTRENEWED
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSoftwareJobProperties3
        
        Private softwareJobNameField As String
        
        Private softwareJobNameSuppliedField As Boolean
        
        Private userMessageField As String
        
        Private userMessageSuppliedField As Boolean
        
        Private executionDateField As DateTime
        
        Private executionDateSuppliedField As Boolean
        
        Private timeoutHoursField As Long
        
        Private timeoutHoursSuppliedField As Boolean
        
        Private startWhenField As SoftwareJobStartupTime
        
        Private startWhenSuppliedField As Boolean
        
        Private bootBeforeMaskField As SoftwareJobBootMask3
        
        Private bootBeforeMaskSuppliedField As Boolean
        
        Private bootAfterMaskField As SoftwareJobBootMask3
        
        Private bootAfterMaskSuppliedField As Boolean
        
        Private operationMask2Field As SoftwareJobOperationMask2
        
        Private operationMaskSuppliedField As Boolean
        
        Private userParametersField As String
        
        Private userParametersSuppliedField As Boolean
        
        Private promptTimeoutHoursField As Long
        
        Private promptTimeoutHoursSuppliedField As Boolean
        
        Private deliveryCalendarField As String
        
        Private deliveryCalendarSuppliedField As Boolean
        
        Private deliveryDateField As DateTime
        
        Private deliveryDateSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareJobName() As String
            Get
                Return Me.softwareJobNameField
            End Get
            Set
                Me.softwareJobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobNameSupplied() As Boolean
            Get
                Return Me.softwareJobNameSuppliedField
            End Get
            Set
                Me.softwareJobNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userMessage() As String
            Get
                Return Me.userMessageField
            End Get
            Set
                Me.userMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userMessageSupplied() As Boolean
            Get
                Return Me.userMessageSuppliedField
            End Get
            Set
                Me.userMessageSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property executionDate() As DateTime
            Get
                Return Me.executionDateField
            End Get
            Set
                Me.executionDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property executionDateSupplied() As Boolean
            Get
                Return Me.executionDateSuppliedField
            End Get
            Set
                Me.executionDateSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeoutHours() As Long
            Get
                Return Me.timeoutHoursField
            End Get
            Set
                Me.timeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeoutHoursSupplied() As Boolean
            Get
                Return Me.timeoutHoursSuppliedField
            End Get
            Set
                Me.timeoutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhen() As SoftwareJobStartupTime
            Get
                Return Me.startWhenField
            End Get
            Set
                Me.startWhenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhenSupplied() As Boolean
            Get
                Return Me.startWhenSuppliedField
            End Get
            Set
                Me.startWhenSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwareJobBootMask3
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskSupplied() As Boolean
            Get
                Return Me.bootBeforeMaskSuppliedField
            End Get
            Set
                Me.bootBeforeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwareJobBootMask3
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskSupplied() As Boolean
            Get
                Return Me.bootAfterMaskSuppliedField
            End Get
            Set
                Me.bootAfterMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask2() As SoftwareJobOperationMask2
            Get
                Return Me.operationMask2Field
            End Get
            Set
                Me.operationMask2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskSupplied() As Boolean
            Get
                Return Me.operationMaskSuppliedField
            End Get
            Set
                Me.operationMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userParameters() As String
            Get
                Return Me.userParametersField
            End Get
            Set
                Me.userParametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userParametersSupplied() As Boolean
            Get
                Return Me.userParametersSuppliedField
            End Get
            Set
                Me.userParametersSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHours() As Long
            Get
                Return Me.promptTimeoutHoursField
            End Get
            Set
                Me.promptTimeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHoursSupplied() As Boolean
            Get
                Return Me.promptTimeoutHoursSuppliedField
            End Get
            Set
                Me.promptTimeoutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property deliveryCalendar() As String
            Get
                Return Me.deliveryCalendarField
            End Get
            Set
                Me.deliveryCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryCalendarSupplied() As Boolean
            Get
                Return Me.deliveryCalendarSuppliedField
            End Get
            Set
                Me.deliveryCalendarSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryDate() As DateTime
            Get
                Return Me.deliveryDateField
            End Get
            Set
                Me.deliveryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryDateSupplied() As Boolean
            Get
                Return Me.deliveryDateSuppliedField
            End Get
            Set
                Me.deliveryDateSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateInstallSoftwareJobOrderPolicyProperties3
        
        Private timeoutHoursField As Long
        
        Private timeoutHoursSuppliedField As Boolean
        
        Private startWhenField As SoftwareJobStartupTime
        
        Private startWhenSuppliedField As Boolean
        
        Private jobNameField As String
        
        Private jobNameSuppliedField As Boolean
        
        Private userMessageField As String
        
        Private userMessageSuppliedField As Boolean
        
        Private bootBeforeMaskField As SoftwareJobBootMask3
        
        Private bootBeforeMaskSuppliedField As Boolean
        
        Private bootAfterMaskField As SoftwareJobBootMask3
        
        Private bootAfterMaskSuppliedField As Boolean
        
        Private operationMask2Field As SoftwareJobOperationMask2
        
        Private operationMaskSuppliedField As Boolean
        
        Private userParametersField As String
        
        Private userParametersSuppliedField As Boolean
        
        Private promptTimeoutHoursField As Long
        
        Private promptTimeoutHoursSuppliedField As Boolean
        
        Private deliveryCalendarField As String
        
        Private deliveryCalendarSuppliedField As Boolean
        
        '''<remarks/>
        Public Property timeoutHours() As Long
            Get
                Return Me.timeoutHoursField
            End Get
            Set
                Me.timeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeoutHoursSupplied() As Boolean
            Get
                Return Me.timeoutHoursSuppliedField
            End Get
            Set
                Me.timeoutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhen() As SoftwareJobStartupTime
            Get
                Return Me.startWhenField
            End Get
            Set
                Me.startWhenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhenSupplied() As Boolean
            Get
                Return Me.startWhenSuppliedField
            End Get
            Set
                Me.startWhenSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property jobName() As String
            Get
                Return Me.jobNameField
            End Get
            Set
                Me.jobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property jobNameSupplied() As Boolean
            Get
                Return Me.jobNameSuppliedField
            End Get
            Set
                Me.jobNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userMessage() As String
            Get
                Return Me.userMessageField
            End Get
            Set
                Me.userMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userMessageSupplied() As Boolean
            Get
                Return Me.userMessageSuppliedField
            End Get
            Set
                Me.userMessageSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwareJobBootMask3
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskSupplied() As Boolean
            Get
                Return Me.bootBeforeMaskSuppliedField
            End Get
            Set
                Me.bootBeforeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwareJobBootMask3
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskSupplied() As Boolean
            Get
                Return Me.bootAfterMaskSuppliedField
            End Get
            Set
                Me.bootAfterMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask2() As SoftwareJobOperationMask2
            Get
                Return Me.operationMask2Field
            End Get
            Set
                Me.operationMask2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskSupplied() As Boolean
            Get
                Return Me.operationMaskSuppliedField
            End Get
            Set
                Me.operationMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userParameters() As String
            Get
                Return Me.userParametersField
            End Get
            Set
                Me.userParametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userParametersSupplied() As Boolean
            Get
                Return Me.userParametersSuppliedField
            End Get
            Set
                Me.userParametersSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHours() As Long
            Get
                Return Me.promptTimeoutHoursField
            End Get
            Set
                Me.promptTimeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHoursSupplied() As Boolean
            Get
                Return Me.promptTimeoutHoursSuppliedField
            End Get
            Set
                Me.promptTimeoutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property deliveryCalendar() As String
            Get
                Return Me.deliveryCalendarField
            End Get
            Set
                Me.deliveryCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryCalendarSupplied() As Boolean
            Get
                Return Me.deliveryCalendarSuppliedField
            End Get
            Set
                Me.deliveryCalendarSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateInstallSoftwareJobOrderProperties3
        
        Private executionDateField As DateTime
        
        Private executionDateSuppliedField As Boolean
        
        Private timeoutHoursField As Long
        
        Private timeoutHoursSuppliedField As Boolean
        
        Private startWhenField As SoftwareJobStartupTime
        
        Private startWhenSuppliedField As Boolean
        
        Private jobNameField As String
        
        Private jobNameSuppliedField As Boolean
        
        Private userMessageField As String
        
        Private userMessageSuppliedField As Boolean
        
        Private bootBeforeMaskField As SoftwareJobBootMask3
        
        Private bootBeforeMaskSuppliedField As Boolean
        
        Private bootAfterMaskField As SoftwareJobBootMask3
        
        Private bootAfterMaskSuppliedField As Boolean
        
        Private operationMask2Field As SoftwareJobOperationMask2
        
        Private operationMaskSuppliedField As Boolean
        
        Private userParametersField As String
        
        Private userParametersSuppliedField As Boolean
        
        Private promptTimeoutHoursField As Long
        
        Private promptTimeoutHoursSuppliedField As Boolean
        
        Private deliveryCalendarField As String
        
        Private deliveryCalendarSuppliedField As Boolean
        
        Private deliveryDateTimeField As DateTime
        
        Private deliveryDateTimeSuppliedField As Boolean
        
        '''<remarks/>
        Public Property executionDate() As DateTime
            Get
                Return Me.executionDateField
            End Get
            Set
                Me.executionDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property executionDateSupplied() As Boolean
            Get
                Return Me.executionDateSuppliedField
            End Get
            Set
                Me.executionDateSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeoutHours() As Long
            Get
                Return Me.timeoutHoursField
            End Get
            Set
                Me.timeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeoutHoursSupplied() As Boolean
            Get
                Return Me.timeoutHoursSuppliedField
            End Get
            Set
                Me.timeoutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhen() As SoftwareJobStartupTime
            Get
                Return Me.startWhenField
            End Get
            Set
                Me.startWhenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhenSupplied() As Boolean
            Get
                Return Me.startWhenSuppliedField
            End Get
            Set
                Me.startWhenSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property jobName() As String
            Get
                Return Me.jobNameField
            End Get
            Set
                Me.jobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property jobNameSupplied() As Boolean
            Get
                Return Me.jobNameSuppliedField
            End Get
            Set
                Me.jobNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userMessage() As String
            Get
                Return Me.userMessageField
            End Get
            Set
                Me.userMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userMessageSupplied() As Boolean
            Get
                Return Me.userMessageSuppliedField
            End Get
            Set
                Me.userMessageSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwareJobBootMask3
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskSupplied() As Boolean
            Get
                Return Me.bootBeforeMaskSuppliedField
            End Get
            Set
                Me.bootBeforeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwareJobBootMask3
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskSupplied() As Boolean
            Get
                Return Me.bootAfterMaskSuppliedField
            End Get
            Set
                Me.bootAfterMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask2() As SoftwareJobOperationMask2
            Get
                Return Me.operationMask2Field
            End Get
            Set
                Me.operationMask2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskSupplied() As Boolean
            Get
                Return Me.operationMaskSuppliedField
            End Get
            Set
                Me.operationMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userParameters() As String
            Get
                Return Me.userParametersField
            End Get
            Set
                Me.userParametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userParametersSupplied() As Boolean
            Get
                Return Me.userParametersSuppliedField
            End Get
            Set
                Me.userParametersSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHours() As Long
            Get
                Return Me.promptTimeoutHoursField
            End Get
            Set
                Me.promptTimeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHoursSupplied() As Boolean
            Get
                Return Me.promptTimeoutHoursSuppliedField
            End Get
            Set
                Me.promptTimeoutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property deliveryCalendar() As String
            Get
                Return Me.deliveryCalendarField
            End Get
            Set
                Me.deliveryCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryCalendarSupplied() As Boolean
            Get
                Return Me.deliveryCalendarSuppliedField
            End Get
            Set
                Me.deliveryCalendarSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryDateTime() As DateTime
            Get
                Return Me.deliveryDateTimeField
            End Get
            Set
                Me.deliveryDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryDateTimeSupplied() As Boolean
            Get
                Return Me.deliveryDateTimeSuppliedField
            End Get
            Set
                Me.deliveryDateTimeSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePolicyProperties3
        
        Private softwarePolicyIdField As String
        
        Private stateField As SoftwarePolicyState
        
        Private sealField As Boolean
        
        Private noOfParentSoftwarePoliciesField As Long
        
        Private noOfChildSoftwarePoliciesField As Long
        
        Private noOfSoftwareJobsField As Long
        
        Private nameField As String
        
        Private commentField As String
        
        Private priorityField As Long
        
        Private softwarePolicyEvaluationTypeField As SoftwarePolicyEvaluationType
        
        Private softwareJobLinkageField As SoftwareJobLinkage
        
        Private unitGroupIdField As String
        
        Private creationDateField As DateTime
        
        Private changeDateField As DateTime
        
        Private attributeMaskField As AttributeMask
        
        Private evaluationCalendarField As String
        
        Private evaluationPeriodField As Long
        
        Private nextEvaluationDateField As DateTime
        
        Private evaluationDateField As DateTime
        
        Private adhocTargetEvaluationField As AdhocTargetEvaluation
        
        Private userMessageField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePolicyId() As String
            Get
                Return Me.softwarePolicyIdField
            End Get
            Set
                Me.softwarePolicyIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property state() As SoftwarePolicyState
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property seal() As Boolean
            Get
                Return Me.sealField
            End Get
            Set
                Me.sealField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfParentSoftwarePolicies() As Long
            Get
                Return Me.noOfParentSoftwarePoliciesField
            End Get
            Set
                Me.noOfParentSoftwarePoliciesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfChildSoftwarePolicies() As Long
            Get
                Return Me.noOfChildSoftwarePoliciesField
            End Get
            Set
                Me.noOfChildSoftwarePoliciesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfSoftwareJobs() As Long
            Get
                Return Me.noOfSoftwareJobsField
            End Get
            Set
                Me.noOfSoftwareJobsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property priority() As Long
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationType() As SoftwarePolicyEvaluationType
            Get
                Return Me.softwarePolicyEvaluationTypeField
            End Get
            Set
                Me.softwarePolicyEvaluationTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobLinkage() As SoftwareJobLinkage
            Get
                Return Me.softwareJobLinkageField
            End Get
            Set
                Me.softwareJobLinkageField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitGroupId() As String
            Get
                Return Me.unitGroupIdField
            End Get
            Set
                Me.unitGroupIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDate() As DateTime
            Get
                Return Me.creationDateField
            End Get
            Set
                Me.creationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property changeDate() As DateTime
            Get
                Return Me.changeDateField
            End Get
            Set
                Me.changeDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property attributeMask() As AttributeMask
            Get
                Return Me.attributeMaskField
            End Get
            Set
                Me.attributeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property evaluationCalendar() As String
            Get
                Return Me.evaluationCalendarField
            End Get
            Set
                Me.evaluationCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriod() As Long
            Get
                Return Me.evaluationPeriodField
            End Get
            Set
                Me.evaluationPeriodField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nextEvaluationDate() As DateTime
            Get
                Return Me.nextEvaluationDateField
            End Get
            Set
                Me.nextEvaluationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationDate() As DateTime
            Get
                Return Me.evaluationDateField
            End Get
            Set
                Me.evaluationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property adhocTargetEvaluation() As AdhocTargetEvaluation
            Get
                Return Me.adhocTargetEvaluationField
            End Get
            Set
                Me.adhocTargetEvaluationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userMessage() As String
            Get
                Return Me.userMessageField
            End Get
            Set
                Me.userMessageField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePolicyState
        
        Private hasExceptionsField As Boolean
        
        Private sealedAndEvaluationField As Boolean
        
        '''<remarks/>
        Public Property hasExceptions() As Boolean
            Get
                Return Me.hasExceptionsField
            End Get
            Set
                Me.hasExceptionsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sealedAndEvaluation() As Boolean
            Get
                Return Me.sealedAndEvaluationField
            End Get
            Set
                Me.sealedAndEvaluationField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SoftwarePolicyEvaluationType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ET-POPULATEEXCEPTIONS")>  _
        ETPOPULATEEXCEPTIONS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ET-SETUPJOBS")>  _
        ETSETUPJOBS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ET-SETUPANDEXECUTEJOBS")>  _
        ETSETUPANDEXECUTEJOBS
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwareJobLinkage
        
        Private softwareJobLinkageTypeField As SoftwareJobLinkageType
        
        Private rollBackField As Boolean
        
        Private cascadeField As Boolean
        
        '''<remarks/>
        Public Property softwareJobLinkageType() As SoftwareJobLinkageType
            Get
                Return Me.softwareJobLinkageTypeField
            End Get
            Set
                Me.softwareJobLinkageTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rollBack() As Boolean
            Get
                Return Me.rollBackField
            End Get
            Set
                Me.rollBackField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cascade() As Boolean
            Get
                Return Me.cascadeField
            End Get
            Set
                Me.cascadeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class AttributeMask
        
        Private systemField As Boolean
        
        Private hiddenField As Boolean
        
        Private distributedField As Boolean
        
        Private tobeRemovedField As Boolean
        
        '''<remarks/>
        Public Property system() As Boolean
            Get
                Return Me.systemField
            End Get
            Set
                Me.systemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property hidden() As Boolean
            Get
                Return Me.hiddenField
            End Get
            Set
                Me.hiddenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property distributed() As Boolean
            Get
                Return Me.distributedField
            End Get
            Set
                Me.distributedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property tobeRemoved() As Boolean
            Get
                Return Me.tobeRemovedField
            End Get
            Set
                Me.tobeRemovedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum AdhocTargetEvaluation
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("NO-ADHOC")>  _
        NOADHOC
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ADHOC-ONLY")>  _
        ADHOCONLY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ADHOC-ALWAYS")>  _
        ADHOCALWAYS
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePolicyPropertiesRequired3
        
        Private softwarePolicyIdRequiredField As Boolean
        
        Private stateRequiredField As Boolean
        
        Private sealRequiredField As Boolean
        
        Private noOfParentSoftwarePoliciesRequiredField As Boolean
        
        Private noOfChildSoftwarePoliciesRequiredField As Boolean
        
        Private noOfSoftwareJobsRequiredField As Boolean
        
        Private nameRequiredField As Boolean
        
        Private commentRequiredField As Boolean
        
        Private priorityRequiredField As Boolean
        
        Private softwarePolicyEvaluationTypeRequiredField As Boolean
        
        Private softwareJobLinkageRequiredField As Boolean
        
        Private unitGroupIdRequiredField As Boolean
        
        Private creationDateRequiredField As Boolean
        
        Private changeDateRequiredField As Boolean
        
        Private attribMaskRequiredField As Boolean
        
        Private evaluationCalendarRequiredField As Boolean
        
        Private evaluationPeriodRequiredField As Boolean
        
        Private nextEvaluationDateRequiredField As Boolean
        
        Private evaluationDateRequiredField As Boolean
        
        Private adhocTargetEvaluationRequiredField As Boolean
        
        Private userMessageRequiredField As Boolean
        
        '''<remarks/>
        Public Property softwarePolicyIdRequired() As Boolean
            Get
                Return Me.softwarePolicyIdRequiredField
            End Get
            Set
                Me.softwarePolicyIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property stateRequired() As Boolean
            Get
                Return Me.stateRequiredField
            End Get
            Set
                Me.stateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sealRequired() As Boolean
            Get
                Return Me.sealRequiredField
            End Get
            Set
                Me.sealRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfParentSoftwarePoliciesRequired() As Boolean
            Get
                Return Me.noOfParentSoftwarePoliciesRequiredField
            End Get
            Set
                Me.noOfParentSoftwarePoliciesRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfChildSoftwarePoliciesRequired() As Boolean
            Get
                Return Me.noOfChildSoftwarePoliciesRequiredField
            End Get
            Set
                Me.noOfChildSoftwarePoliciesRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfSoftwareJobsRequired() As Boolean
            Get
                Return Me.noOfSoftwareJobsRequiredField
            End Get
            Set
                Me.noOfSoftwareJobsRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameRequired() As Boolean
            Get
                Return Me.nameRequiredField
            End Get
            Set
                Me.nameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentRequired() As Boolean
            Get
                Return Me.commentRequiredField
            End Get
            Set
                Me.commentRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property priorityRequired() As Boolean
            Get
                Return Me.priorityRequiredField
            End Get
            Set
                Me.priorityRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationTypeRequired() As Boolean
            Get
                Return Me.softwarePolicyEvaluationTypeRequiredField
            End Get
            Set
                Me.softwarePolicyEvaluationTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobLinkageRequired() As Boolean
            Get
                Return Me.softwareJobLinkageRequiredField
            End Get
            Set
                Me.softwareJobLinkageRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitGroupIdRequired() As Boolean
            Get
                Return Me.unitGroupIdRequiredField
            End Get
            Set
                Me.unitGroupIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDateRequired() As Boolean
            Get
                Return Me.creationDateRequiredField
            End Get
            Set
                Me.creationDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property changeDateRequired() As Boolean
            Get
                Return Me.changeDateRequiredField
            End Get
            Set
                Me.changeDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property attribMaskRequired() As Boolean
            Get
                Return Me.attribMaskRequiredField
            End Get
            Set
                Me.attribMaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationCalendarRequired() As Boolean
            Get
                Return Me.evaluationCalendarRequiredField
            End Get
            Set
                Me.evaluationCalendarRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriodRequired() As Boolean
            Get
                Return Me.evaluationPeriodRequiredField
            End Get
            Set
                Me.evaluationPeriodRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nextEvaluationDateRequired() As Boolean
            Get
                Return Me.nextEvaluationDateRequiredField
            End Get
            Set
                Me.nextEvaluationDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationDateRequired() As Boolean
            Get
                Return Me.evaluationDateRequiredField
            End Get
            Set
                Me.evaluationDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property adhocTargetEvaluationRequired() As Boolean
            Get
                Return Me.adhocTargetEvaluationRequiredField
            End Get
            Set
                Me.adhocTargetEvaluationRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userMessageRequired() As Boolean
            Get
                Return Me.userMessageRequiredField
            End Get
            Set
                Me.userMessageRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSoftwarePolicyPropertiesByName3
        
        Private policyNameField As String
        
        Private policyNameSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private priorityField As Long
        
        Private prioritySuppliedField As Boolean
        
        Private unitGroupNameField As String
        
        Private unitGroupNameSuppliedField As Boolean
        
        Private createSoftwareJobLinkageField As CreateSoftwareJobLinkage
        
        Private createSoftwareJobLinkageSuppliedField As Boolean
        
        Private softwarePolicyEvaluationTypeField As SoftwarePolicyEvaluationType
        
        Private softwarePolicyEvaluationTypeSuppliedField As Boolean
        
        Private softwarePolicyEvaluationPeriodTypeField As SoftwarePolicyEvaluationPeriodType
        
        Private softwarePolicyEvaluationPeriodTypeSuppliedField As Boolean
        
        Private nextEvaluationDateField As DateTime
        
        Private nextEvaluationDateSuppliedField As Boolean
        
        Private evaluationPeriodField As Long
        
        Private evaluationPeriodSuppliedField As Boolean
        
        Private enterpriseTimeField As Boolean
        
        Private enterpriseTimeSuppliedField As Boolean
        
        Private evaluationCalendarField As String
        
        Private evaluationCalendarSuppliedField As Boolean
        
        Private adhocTargetEvaluationField As AdhocTargetEvaluation
        
        Private adhocTargetEvaluationSuppliedField As Boolean
        
        Private regenerateField As Boolean
        
        Private regenerateSuppliedField As Boolean
        
        Private evaluateDynamicGroupsField As Boolean
        
        Private evaluateDynamicGroupsSuppliedField As Boolean
        
        Private userMessageField As String
        
        Private userMessageSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property policyName() As String
            Get
                Return Me.policyNameField
            End Get
            Set
                Me.policyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property policyNameSupplied() As Boolean
            Get
                Return Me.policyNameSuppliedField
            End Get
            Set
                Me.policyNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property priority() As Long
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prioritySupplied() As Boolean
            Get
                Return Me.prioritySuppliedField
            End Get
            Set
                Me.prioritySuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitGroupName() As String
            Get
                Return Me.unitGroupNameField
            End Get
            Set
                Me.unitGroupNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitGroupNameSupplied() As Boolean
            Get
                Return Me.unitGroupNameSuppliedField
            End Get
            Set
                Me.unitGroupNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property createSoftwareJobLinkage() As CreateSoftwareJobLinkage
            Get
                Return Me.createSoftwareJobLinkageField
            End Get
            Set
                Me.createSoftwareJobLinkageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property createSoftwareJobLinkageSupplied() As Boolean
            Get
                Return Me.createSoftwareJobLinkageSuppliedField
            End Get
            Set
                Me.createSoftwareJobLinkageSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationType() As SoftwarePolicyEvaluationType
            Get
                Return Me.softwarePolicyEvaluationTypeField
            End Get
            Set
                Me.softwarePolicyEvaluationTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationTypeSupplied() As Boolean
            Get
                Return Me.softwarePolicyEvaluationTypeSuppliedField
            End Get
            Set
                Me.softwarePolicyEvaluationTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationPeriodType() As SoftwarePolicyEvaluationPeriodType
            Get
                Return Me.softwarePolicyEvaluationPeriodTypeField
            End Get
            Set
                Me.softwarePolicyEvaluationPeriodTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationPeriodTypeSupplied() As Boolean
            Get
                Return Me.softwarePolicyEvaluationPeriodTypeSuppliedField
            End Get
            Set
                Me.softwarePolicyEvaluationPeriodTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property nextEvaluationDate() As DateTime
            Get
                Return Me.nextEvaluationDateField
            End Get
            Set
                Me.nextEvaluationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nextEvaluationDateSupplied() As Boolean
            Get
                Return Me.nextEvaluationDateSuppliedField
            End Get
            Set
                Me.nextEvaluationDateSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriod() As Long
            Get
                Return Me.evaluationPeriodField
            End Get
            Set
                Me.evaluationPeriodField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriodSupplied() As Boolean
            Get
                Return Me.evaluationPeriodSuppliedField
            End Get
            Set
                Me.evaluationPeriodSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property enterpriseTime() As Boolean
            Get
                Return Me.enterpriseTimeField
            End Get
            Set
                Me.enterpriseTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property enterpriseTimeSupplied() As Boolean
            Get
                Return Me.enterpriseTimeSuppliedField
            End Get
            Set
                Me.enterpriseTimeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property evaluationCalendar() As String
            Get
                Return Me.evaluationCalendarField
            End Get
            Set
                Me.evaluationCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationCalendarSupplied() As Boolean
            Get
                Return Me.evaluationCalendarSuppliedField
            End Get
            Set
                Me.evaluationCalendarSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property adhocTargetEvaluation() As AdhocTargetEvaluation
            Get
                Return Me.adhocTargetEvaluationField
            End Get
            Set
                Me.adhocTargetEvaluationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property adhocTargetEvaluationSupplied() As Boolean
            Get
                Return Me.adhocTargetEvaluationSuppliedField
            End Get
            Set
                Me.adhocTargetEvaluationSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property regenerate() As Boolean
            Get
                Return Me.regenerateField
            End Get
            Set
                Me.regenerateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property regenerateSupplied() As Boolean
            Get
                Return Me.regenerateSuppliedField
            End Get
            Set
                Me.regenerateSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluateDynamicGroups() As Boolean
            Get
                Return Me.evaluateDynamicGroupsField
            End Get
            Set
                Me.evaluateDynamicGroupsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluateDynamicGroupsSupplied() As Boolean
            Get
                Return Me.evaluateDynamicGroupsSuppliedField
            End Get
            Set
                Me.evaluateDynamicGroupsSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userMessage() As String
            Get
                Return Me.userMessageField
            End Get
            Set
                Me.userMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userMessageSupplied() As Boolean
            Get
                Return Me.userMessageSuppliedField
            End Get
            Set
                Me.userMessageSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSoftwareJobLinkage
        
        Private softwareJobLinkageTypeField As SoftwareJobLinkageType
        
        Private softwareJobLinkageTypeSuppliedField As Boolean
        
        Private rollBackField As Boolean
        
        Private rollBackSuppliedField As Boolean
        
        Private cascadeField As Boolean
        
        Private cascadeSuppliedField As Boolean
        
        '''<remarks/>
        Public Property softwareJobLinkageType() As SoftwareJobLinkageType
            Get
                Return Me.softwareJobLinkageTypeField
            End Get
            Set
                Me.softwareJobLinkageTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobLinkageTypeSupplied() As Boolean
            Get
                Return Me.softwareJobLinkageTypeSuppliedField
            End Get
            Set
                Me.softwareJobLinkageTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rollBack() As Boolean
            Get
                Return Me.rollBackField
            End Get
            Set
                Me.rollBackField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rollBackSupplied() As Boolean
            Get
                Return Me.rollBackSuppliedField
            End Get
            Set
                Me.rollBackSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cascade() As Boolean
            Get
                Return Me.cascadeField
            End Get
            Set
                Me.cascadeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cascadeSupplied() As Boolean
            Get
                Return Me.cascadeSuppliedField
            End Get
            Set
                Me.cascadeSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SoftwarePolicyEvaluationPeriodType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("EPT-ONCE")>  _
        EPTONCE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("EPT-PERIODIC")>  _
        EPTPERIODIC
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSoftwarePolicyProperties3
        
        Private policyNameField As String
        
        Private policyNameSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private priorityField As Long
        
        Private prioritySuppliedField As Boolean
        
        Private unitGroupIdField As String
        
        Private unitGroupIdSuppliedField As Boolean
        
        Private createSoftwareJobLinkageField As CreateSoftwareJobLinkage
        
        Private createSoftwareJobLinkageSuppliedField As Boolean
        
        Private softwarePolicyEvaluationTypeField As SoftwarePolicyEvaluationType
        
        Private softwarePolicyEvaluationTypeSuppliedField As Boolean
        
        Private softwarePolicyEvaluationPeriodTypeField As SoftwarePolicyEvaluationPeriodType
        
        Private softwarePolicyEvaluationPeriodTypeSuppliedField As Boolean
        
        Private nextEvaluationDateField As DateTime
        
        Private nextEvaluationDateSuppliedField As Boolean
        
        Private evaluationPeriodField As Long
        
        Private evaluationPeriodSuppliedField As Boolean
        
        Private enterpriseTimeField As Boolean
        
        Private enterpriseTimeSuppliedField As Boolean
        
        Private evaluationCalendarField As String
        
        Private evaluationCalendarSuppliedField As Boolean
        
        Private adhocTargetEvaluationField As AdhocTargetEvaluation
        
        Private adhocTargetEvaluationSuppliedField As Boolean
        
        Private regenerateField As Boolean
        
        Private regenerateSuppliedField As Boolean
        
        Private evaluateDynamicGroupsField As Boolean
        
        Private evaluateDynamicGroupsSuppliedField As Boolean
        
        Private userMessageField As String
        
        Private userMessageSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property policyName() As String
            Get
                Return Me.policyNameField
            End Get
            Set
                Me.policyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property policyNameSupplied() As Boolean
            Get
                Return Me.policyNameSuppliedField
            End Get
            Set
                Me.policyNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property priority() As Long
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prioritySupplied() As Boolean
            Get
                Return Me.prioritySuppliedField
            End Get
            Set
                Me.prioritySuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitGroupId() As String
            Get
                Return Me.unitGroupIdField
            End Get
            Set
                Me.unitGroupIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitGroupIdSupplied() As Boolean
            Get
                Return Me.unitGroupIdSuppliedField
            End Get
            Set
                Me.unitGroupIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property createSoftwareJobLinkage() As CreateSoftwareJobLinkage
            Get
                Return Me.createSoftwareJobLinkageField
            End Get
            Set
                Me.createSoftwareJobLinkageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property createSoftwareJobLinkageSupplied() As Boolean
            Get
                Return Me.createSoftwareJobLinkageSuppliedField
            End Get
            Set
                Me.createSoftwareJobLinkageSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationType() As SoftwarePolicyEvaluationType
            Get
                Return Me.softwarePolicyEvaluationTypeField
            End Get
            Set
                Me.softwarePolicyEvaluationTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationTypeSupplied() As Boolean
            Get
                Return Me.softwarePolicyEvaluationTypeSuppliedField
            End Get
            Set
                Me.softwarePolicyEvaluationTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationPeriodType() As SoftwarePolicyEvaluationPeriodType
            Get
                Return Me.softwarePolicyEvaluationPeriodTypeField
            End Get
            Set
                Me.softwarePolicyEvaluationPeriodTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationPeriodTypeSupplied() As Boolean
            Get
                Return Me.softwarePolicyEvaluationPeriodTypeSuppliedField
            End Get
            Set
                Me.softwarePolicyEvaluationPeriodTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property nextEvaluationDate() As DateTime
            Get
                Return Me.nextEvaluationDateField
            End Get
            Set
                Me.nextEvaluationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nextEvaluationDateSupplied() As Boolean
            Get
                Return Me.nextEvaluationDateSuppliedField
            End Get
            Set
                Me.nextEvaluationDateSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriod() As Long
            Get
                Return Me.evaluationPeriodField
            End Get
            Set
                Me.evaluationPeriodField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriodSupplied() As Boolean
            Get
                Return Me.evaluationPeriodSuppliedField
            End Get
            Set
                Me.evaluationPeriodSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property enterpriseTime() As Boolean
            Get
                Return Me.enterpriseTimeField
            End Get
            Set
                Me.enterpriseTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property enterpriseTimeSupplied() As Boolean
            Get
                Return Me.enterpriseTimeSuppliedField
            End Get
            Set
                Me.enterpriseTimeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property evaluationCalendar() As String
            Get
                Return Me.evaluationCalendarField
            End Get
            Set
                Me.evaluationCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationCalendarSupplied() As Boolean
            Get
                Return Me.evaluationCalendarSuppliedField
            End Get
            Set
                Me.evaluationCalendarSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property adhocTargetEvaluation() As AdhocTargetEvaluation
            Get
                Return Me.adhocTargetEvaluationField
            End Get
            Set
                Me.adhocTargetEvaluationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property adhocTargetEvaluationSupplied() As Boolean
            Get
                Return Me.adhocTargetEvaluationSuppliedField
            End Get
            Set
                Me.adhocTargetEvaluationSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property regenerate() As Boolean
            Get
                Return Me.regenerateField
            End Get
            Set
                Me.regenerateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property regenerateSupplied() As Boolean
            Get
                Return Me.regenerateSuppliedField
            End Get
            Set
                Me.regenerateSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluateDynamicGroups() As Boolean
            Get
                Return Me.evaluateDynamicGroupsField
            End Get
            Set
                Me.evaluateDynamicGroupsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluateDynamicGroupsSupplied() As Boolean
            Get
                Return Me.evaluateDynamicGroupsSuppliedField
            End Get
            Set
                Me.evaluateDynamicGroupsSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userMessage() As String
            Get
                Return Me.userMessageField
            End Get
            Set
                Me.userMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userMessageSupplied() As Boolean
            Get
                Return Me.userMessageSuppliedField
            End Get
            Set
                Me.userMessageSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSoftwarePolicyProperties3
        
        Private policyNameField As String
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private priorityField As Long
        
        Private prioritySuppliedField As Boolean
        
        Private createSoftwareJobLinkageField As CreateSoftwareJobLinkage
        
        Private createSoftwareJobLinkageSuppliedField As Boolean
        
        Private softwarePolicyEvaluationTypeField As SoftwarePolicyEvaluationType
        
        Private softwarePolicyEvaluationTypeSuppliedField As Boolean
        
        Private softwarePolicyEvaluationPeriodTypeField As SoftwarePolicyEvaluationPeriodType
        
        Private softwarePolicyEvaluationPeriodTypeSuppliedField As Boolean
        
        Private nextEvaluationDateField As DateTime
        
        Private nextEvaluationDateSuppliedField As Boolean
        
        Private evaluationPeriodField As Long
        
        Private evaluationPeriodSuppliedField As Boolean
        
        Private enterpriseTimeField As Integer
        
        Private enterpriseTimeSuppliedField As Boolean
        
        Private evaluationCalendarField As String
        
        Private evaluationCalendarSuppliedField As Boolean
        
        Private adhocTargetEvaluationField As AdhocTargetEvaluation
        
        Private adhocTargetEvaluationSuppliedField As Boolean
        
        Private regenerateField As Boolean
        
        Private regenerateSuppliedField As Boolean
        
        Private evaluateDynamicGroupsField As Boolean
        
        Private evaluateDynamicGroupsSuppliedField As Boolean
        
        Private userMessageField As String
        
        Private userMessageSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property policyName() As String
            Get
                Return Me.policyNameField
            End Get
            Set
                Me.policyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property priority() As Long
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prioritySupplied() As Boolean
            Get
                Return Me.prioritySuppliedField
            End Get
            Set
                Me.prioritySuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property createSoftwareJobLinkage() As CreateSoftwareJobLinkage
            Get
                Return Me.createSoftwareJobLinkageField
            End Get
            Set
                Me.createSoftwareJobLinkageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property createSoftwareJobLinkageSupplied() As Boolean
            Get
                Return Me.createSoftwareJobLinkageSuppliedField
            End Get
            Set
                Me.createSoftwareJobLinkageSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationType() As SoftwarePolicyEvaluationType
            Get
                Return Me.softwarePolicyEvaluationTypeField
            End Get
            Set
                Me.softwarePolicyEvaluationTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationTypeSupplied() As Boolean
            Get
                Return Me.softwarePolicyEvaluationTypeSuppliedField
            End Get
            Set
                Me.softwarePolicyEvaluationTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationPeriodType() As SoftwarePolicyEvaluationPeriodType
            Get
                Return Me.softwarePolicyEvaluationPeriodTypeField
            End Get
            Set
                Me.softwarePolicyEvaluationPeriodTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationPeriodTypeSupplied() As Boolean
            Get
                Return Me.softwarePolicyEvaluationPeriodTypeSuppliedField
            End Get
            Set
                Me.softwarePolicyEvaluationPeriodTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property nextEvaluationDate() As DateTime
            Get
                Return Me.nextEvaluationDateField
            End Get
            Set
                Me.nextEvaluationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nextEvaluationDateSupplied() As Boolean
            Get
                Return Me.nextEvaluationDateSuppliedField
            End Get
            Set
                Me.nextEvaluationDateSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriod() As Long
            Get
                Return Me.evaluationPeriodField
            End Get
            Set
                Me.evaluationPeriodField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriodSupplied() As Boolean
            Get
                Return Me.evaluationPeriodSuppliedField
            End Get
            Set
                Me.evaluationPeriodSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property enterpriseTime() As Integer
            Get
                Return Me.enterpriseTimeField
            End Get
            Set
                Me.enterpriseTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property enterpriseTimeSupplied() As Boolean
            Get
                Return Me.enterpriseTimeSuppliedField
            End Get
            Set
                Me.enterpriseTimeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property evaluationCalendar() As String
            Get
                Return Me.evaluationCalendarField
            End Get
            Set
                Me.evaluationCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationCalendarSupplied() As Boolean
            Get
                Return Me.evaluationCalendarSuppliedField
            End Get
            Set
                Me.evaluationCalendarSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property adhocTargetEvaluation() As AdhocTargetEvaluation
            Get
                Return Me.adhocTargetEvaluationField
            End Get
            Set
                Me.adhocTargetEvaluationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property adhocTargetEvaluationSupplied() As Boolean
            Get
                Return Me.adhocTargetEvaluationSuppliedField
            End Get
            Set
                Me.adhocTargetEvaluationSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property regenerate() As Boolean
            Get
                Return Me.regenerateField
            End Get
            Set
                Me.regenerateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property regenerateSupplied() As Boolean
            Get
                Return Me.regenerateSuppliedField
            End Get
            Set
                Me.regenerateSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluateDynamicGroups() As Boolean
            Get
                Return Me.evaluateDynamicGroupsField
            End Get
            Set
                Me.evaluateDynamicGroupsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluateDynamicGroupsSupplied() As Boolean
            Get
                Return Me.evaluateDynamicGroupsSuppliedField
            End Get
            Set
                Me.evaluateDynamicGroupsSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userMessage() As String
            Get
                Return Me.userMessageField
            End Get
            Set
                Me.userMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userMessageSupplied() As Boolean
            Get
                Return Me.userMessageSuppliedField
            End Get
            Set
                Me.userMessageSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DistributionContainerOrderProperties3
        
        Private distributionContainerOrderIdField As String
        
        Private distributionContainerOrderNameField As String
        
        Private distributionContainerOrderTypeField As DistributionContainerOrderType
        
        Private jobContainerProperties3Field As SoftwareJobContainerProperties3
        
        Private fetchItemOrderPropertiesField As FetchItemOrderProperties
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property distributionContainerOrderId() As String
            Get
                Return Me.distributionContainerOrderIdField
            End Get
            Set
                Me.distributionContainerOrderIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property distributionContainerOrderName() As String
            Get
                Return Me.distributionContainerOrderNameField
            End Get
            Set
                Me.distributionContainerOrderNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property distributionContainerOrderType() As DistributionContainerOrderType
            Get
                Return Me.distributionContainerOrderTypeField
            End Get
            Set
                Me.distributionContainerOrderTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property jobContainerProperties3() As SoftwareJobContainerProperties3
            Get
                Return Me.jobContainerProperties3Field
            End Get
            Set
                Me.jobContainerProperties3Field = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property fetchItemOrderProperties() As FetchItemOrderProperties
            Get
                Return Me.fetchItemOrderPropertiesField
            End Get
            Set
                Me.fetchItemOrderPropertiesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum DistributionContainerOrderType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("REGISTER-PACKAGE")>  _
        REGISTERPACKAGE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DEREGISTER-PACKAGE")>  _
        DEREGISTERPACKAGE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("REGISTER-PROCEDURE")>  _
        REGISTERPROCEDURE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DEREGISTER-PROCEDURE")>  _
        DEREGISTERPROCEDURE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("FETCH-ITEM")>  _
        FETCHITEM
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("REGISTER-DIFF-PACKAGE")>  _
        REGISTERDIFFPACKAGE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("REGISTER-SOFTWARE-POLICY")>  _
        REGISTERSOFTWAREPOLICY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DEREGISTER-SOFTWARE-POLICY")>  _
        DEREGISTERSOFTWAREPOLICY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("REGISTER-JOB-CONTAINER")>  _
        REGISTERJOBCONTAINER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DEREGISTER-JOB-CONTAINER")>  _
        DEREGISTERJOBCONTAINER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ARCHIVE-PACKAGE")>  _
        ARCHIVEPACKAGE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("RESTORE-PROCEDURE")>  _
        RESTOREPROCEDURE
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwareJobContainerProperties3
        
        Private softwareJobContainerIdField As String
        
        Private stateField As SoftwareJobContainerState
        
        Private sealField As Boolean
        
        Private noOfParentSoftwareJobContainersField As Long
        
        Private noOfChildSoftwareJobContainersField As Long
        
        Private noOfSoftwareJobsField As Long
        
        Private nameField As String
        
        Private commentField As String
        
        Private priorityField As Long
        
        Private softwareJobContainerPropertyMaskField As SoftwareJobContainerPropertyMask
        
        Private creationDateField As DateTime
        
        Private changeDateField As DateTime
        
        Private attribMaskField As AttributeMask
        
        Private waitCountField As Long
        
        Private activeCountField As Long
        
        Private errorCountField As Long
        
        Private okCountField As Long
        
        Private renewStateField As Long
        
        Private userMessageField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareJobContainerId() As String
            Get
                Return Me.softwareJobContainerIdField
            End Get
            Set
                Me.softwareJobContainerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property state() As SoftwareJobContainerState
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property seal() As Boolean
            Get
                Return Me.sealField
            End Get
            Set
                Me.sealField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfParentSoftwareJobContainers() As Long
            Get
                Return Me.noOfParentSoftwareJobContainersField
            End Get
            Set
                Me.noOfParentSoftwareJobContainersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfChildSoftwareJobContainers() As Long
            Get
                Return Me.noOfChildSoftwareJobContainersField
            End Get
            Set
                Me.noOfChildSoftwareJobContainersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfSoftwareJobs() As Long
            Get
                Return Me.noOfSoftwareJobsField
            End Get
            Set
                Me.noOfSoftwareJobsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property priority() As Long
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMask() As SoftwareJobContainerPropertyMask
            Get
                Return Me.softwareJobContainerPropertyMaskField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDate() As DateTime
            Get
                Return Me.creationDateField
            End Get
            Set
                Me.creationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property changeDate() As DateTime
            Get
                Return Me.changeDateField
            End Get
            Set
                Me.changeDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property attribMask() As AttributeMask
            Get
                Return Me.attribMaskField
            End Get
            Set
                Me.attribMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property waitCount() As Long
            Get
                Return Me.waitCountField
            End Get
            Set
                Me.waitCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activeCount() As Long
            Get
                Return Me.activeCountField
            End Get
            Set
                Me.activeCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property errorCount() As Long
            Get
                Return Me.errorCountField
            End Get
            Set
                Me.errorCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property okCount() As Long
            Get
                Return Me.okCountField
            End Get
            Set
                Me.okCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property renewState() As Long
            Get
                Return Me.renewStateField
            End Get
            Set
                Me.renewStateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userMessage() As String
            Get
                Return Me.userMessageField
            End Get
            Set
                Me.userMessageField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SoftwareJobContainerState
        
        '''<remarks/>
        CREATED
        
        '''<remarks/>
        WAITING
        
        '''<remarks/>
        EVALUATING
        
        '''<remarks/>
        CASCADING
        
        '''<remarks/>
        BUILDING
        
        '''<remarks/>
        INPROGRESS
        
        '''<remarks/>
        SUCCESS
        
        '''<remarks/>
        FAILURE
        
        '''<remarks/>
        TERMINATING
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("BUILD-SUCCESS")>  _
        BUILDSUCCESS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("BUILD-SUCCESS-WITH-FAILURES")>  _
        BUILDSUCCESSWITHFAILURES
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SUCCESS-WITH-WARNINGS")>  _
        SUCCESSWITHWARNINGS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DELIVERY-HALT-INPROGRESS")>  _
        DELIVERYHALTINPROGRESS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DELIVERY-HALTED")>  _
        DELIVERYHALTED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("NOT-RENEWED")>  _
        NOTRENEWED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("PARTIALLY-RENEWED-OK")>  _
        PARTIALLYRENEWEDOK
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class FetchItemOrderProperties
        
        Private fetchItemOrderNameField As String
        
        Private fetchItemOrderPathField As String
        
        Private fetchItemOrderCommentField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property fetchItemOrderName() As String
            Get
                Return Me.fetchItemOrderNameField
            End Get
            Set
                Me.fetchItemOrderNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property fetchItemOrderPath() As String
            Get
                Return Me.fetchItemOrderPathField
            End Get
            Set
                Me.fetchItemOrderPathField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property fetchItemOrderComment() As String
            Get
                Return Me.fetchItemOrderCommentField
            End Get
            Set
                Me.fetchItemOrderCommentField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwareJobContainerPropertiesRequired3
        
        Private softwareJobContainerIdRequiredField As Boolean
        
        Private stateRequiredField As Boolean
        
        Private sealRequiredField As Boolean
        
        Private noOfParentSoftwareJobContainersRequiredField As Boolean
        
        Private noOfChildSoftwareJobContainersRequiredField As Boolean
        
        Private noOfSoftwareJobsRequiredField As Boolean
        
        Private nameRequiredField As Boolean
        
        Private commentRequiredField As Boolean
        
        Private priorityRequiredField As Boolean
        
        Private softwareJobContainerPropertyMaskRequiredField As Boolean
        
        Private creationDateRequiredField As Boolean
        
        Private changeDateRequiredField As Boolean
        
        Private attribMaskRequiredField As Boolean
        
        Private waitCountRequiredField As Boolean
        
        Private activeCountRequiredField As Boolean
        
        Private errorCountRequiredField As Boolean
        
        Private okCountRequiredField As Boolean
        
        Private renewStateRequiredField As Boolean
        
        Private userMessageRequiredField As Boolean
        
        '''<remarks/>
        Public Property softwareJobContainerIdRequired() As Boolean
            Get
                Return Me.softwareJobContainerIdRequiredField
            End Get
            Set
                Me.softwareJobContainerIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property stateRequired() As Boolean
            Get
                Return Me.stateRequiredField
            End Get
            Set
                Me.stateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sealRequired() As Boolean
            Get
                Return Me.sealRequiredField
            End Get
            Set
                Me.sealRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfParentSoftwareJobContainersRequired() As Boolean
            Get
                Return Me.noOfParentSoftwareJobContainersRequiredField
            End Get
            Set
                Me.noOfParentSoftwareJobContainersRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfChildSoftwareJobContainersRequired() As Boolean
            Get
                Return Me.noOfChildSoftwareJobContainersRequiredField
            End Get
            Set
                Me.noOfChildSoftwareJobContainersRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfSoftwareJobsRequired() As Boolean
            Get
                Return Me.noOfSoftwareJobsRequiredField
            End Get
            Set
                Me.noOfSoftwareJobsRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameRequired() As Boolean
            Get
                Return Me.nameRequiredField
            End Get
            Set
                Me.nameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentRequired() As Boolean
            Get
                Return Me.commentRequiredField
            End Get
            Set
                Me.commentRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property priorityRequired() As Boolean
            Get
                Return Me.priorityRequiredField
            End Get
            Set
                Me.priorityRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMaskRequired() As Boolean
            Get
                Return Me.softwareJobContainerPropertyMaskRequiredField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDateRequired() As Boolean
            Get
                Return Me.creationDateRequiredField
            End Get
            Set
                Me.creationDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property changeDateRequired() As Boolean
            Get
                Return Me.changeDateRequiredField
            End Get
            Set
                Me.changeDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property attribMaskRequired() As Boolean
            Get
                Return Me.attribMaskRequiredField
            End Get
            Set
                Me.attribMaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property waitCountRequired() As Boolean
            Get
                Return Me.waitCountRequiredField
            End Get
            Set
                Me.waitCountRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activeCountRequired() As Boolean
            Get
                Return Me.activeCountRequiredField
            End Get
            Set
                Me.activeCountRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property errorCountRequired() As Boolean
            Get
                Return Me.errorCountRequiredField
            End Get
            Set
                Me.errorCountRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property okCountRequired() As Boolean
            Get
                Return Me.okCountRequiredField
            End Get
            Set
                Me.okCountRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property renewStateRequired() As Boolean
            Get
                Return Me.renewStateRequiredField
            End Get
            Set
                Me.renewStateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userMessageRequired() As Boolean
            Get
                Return Me.userMessageRequiredField
            End Get
            Set
                Me.userMessageRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSoftwareJobContainerProperties3
        
        Private nameField As String
        
        Private nameSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private priorityField As Long
        
        Private prioritySuppliedField As Boolean
        
        Private softwareJobContainerPropertyMaskField As SoftwareJobContainerPropertyMask
        
        Private softwareJobContainerPropertyMaskSuppliedField As Boolean
        
        Private userMessageField As String
        
        Private userMessageSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameSupplied() As Boolean
            Get
                Return Me.nameSuppliedField
            End Get
            Set
                Me.nameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property priority() As Long
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prioritySupplied() As Boolean
            Get
                Return Me.prioritySuppliedField
            End Get
            Set
                Me.prioritySuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMask() As SoftwareJobContainerPropertyMask
            Get
                Return Me.softwareJobContainerPropertyMaskField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMaskSupplied() As Boolean
            Get
                Return Me.softwareJobContainerPropertyMaskSuppliedField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userMessage() As String
            Get
                Return Me.userMessageField
            End Get
            Set
                Me.userMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userMessageSupplied() As Boolean
            Get
                Return Me.userMessageSuppliedField
            End Get
            Set
                Me.userMessageSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSoftwareJobContainerProperties3
        
        Private nameField As String
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private priorityField As Long
        
        Private prioritySuppliedField As Boolean
        
        Private parentSoftwareJobContainerIdField As String
        
        Private parentSoftwareJobContainerIdSuppliedField As Boolean
        
        Private softwareJobContainerPropertyMaskField As SoftwareJobContainerPropertyMask
        
        Private softwareJobContainerPropertyMaskSuppliedField As Boolean
        
        Private userMessageField As String
        
        Private userMessageSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property priority() As Long
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prioritySupplied() As Boolean
            Get
                Return Me.prioritySuppliedField
            End Get
            Set
                Me.prioritySuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property parentSoftwareJobContainerId() As String
            Get
                Return Me.parentSoftwareJobContainerIdField
            End Get
            Set
                Me.parentSoftwareJobContainerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property parentSoftwareJobContainerIdSupplied() As Boolean
            Get
                Return Me.parentSoftwareJobContainerIdSuppliedField
            End Get
            Set
                Me.parentSoftwareJobContainerIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMask() As SoftwareJobContainerPropertyMask
            Get
                Return Me.softwareJobContainerPropertyMaskField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMaskSupplied() As Boolean
            Get
                Return Me.softwareJobContainerPropertyMaskSuppliedField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userMessage() As String
            Get
                Return Me.userMessageField
            End Get
            Set
                Me.userMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userMessageSupplied() As Boolean
            Get
                Return Me.userMessageSuppliedField
            End Get
            Set
                Me.userMessageSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ExportSoftwarePkgProperties
        
        Private targetPathField As String
        
        Private targetOnServerField As Boolean
        
        Private exportAsField As PackageExportType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property targetPath() As String
            Get
                Return Me.targetPathField
            End Get
            Set
                Me.targetPathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property targetOnServer() As Boolean
            Get
                Return Me.targetOnServerField
            End Get
            Set
                Me.targetOnServerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property exportAs() As PackageExportType
            Get
                Return Me.exportAsField
            End Get
            Set
                Me.exportAsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum PackageExportType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SOFTWARE-PACKAGE")>  _
        SOFTWAREPACKAGE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("LIBRARY-IMAGE")>  _
        LIBRARYIMAGE
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SSPackageInfo
        
        Private productNameField As String
        
        Private packageNameField As String
        
        Private packageVersionField As String
        
        Private platformField As String
        
        Private languageField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property productName() As String
            Get
                Return Me.productNameField
            End Get
            Set
                Me.productNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property packageName() As String
            Get
                Return Me.packageNameField
            End Get
            Set
                Me.packageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property packageVersion() As String
            Get
                Return Me.packageVersionField
            End Get
            Set
                Me.packageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property platform() As String
            Get
                Return Me.platformField
            End Get
            Set
                Me.platformField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property language() As String
            Get
                Return Me.languageField
            End Get
            Set
                Me.languageField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SSPackageInfoRequired
        
        Private bProductNameRequiredField As Boolean
        
        Private bPackageNameRequiredField As Boolean
        
        Private bPackageVersionRequiredField As Boolean
        
        Private bPlatformRequiredField As Boolean
        
        Private bLanguageRequiredField As Boolean
        
        '''<remarks/>
        Public Property bProductNameRequired() As Boolean
            Get
                Return Me.bProductNameRequiredField
            End Get
            Set
                Me.bProductNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bPackageNameRequired() As Boolean
            Get
                Return Me.bPackageNameRequiredField
            End Get
            Set
                Me.bPackageNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bPackageVersionRequired() As Boolean
            Get
                Return Me.bPackageVersionRequiredField
            End Get
            Set
                Me.bPackageVersionRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bPlatformRequired() As Boolean
            Get
                Return Me.bPlatformRequiredField
            End Get
            Set
                Me.bPlatformRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bLanguageRequired() As Boolean
            Get
                Return Me.bLanguageRequiredField
            End Get
            Set
                Me.bLanguageRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class StagingCredentials
        
        Private targetUserNameField As String
        
        Private bTargetUserSuppliedField As Boolean
        
        Private targetPasswordField As String
        
        Private bTargetPwdSuppliedField As Boolean
        
        Private arrayOfTargetMachineCredentialsField() As MachineCredentials
        
        Private bTargetMachCredentialsSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property targetUserName() As String
            Get
                Return Me.targetUserNameField
            End Get
            Set
                Me.targetUserNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bTargetUserSupplied() As Boolean
            Get
                Return Me.bTargetUserSuppliedField
            End Get
            Set
                Me.bTargetUserSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property targetPassword() As String
            Get
                Return Me.targetPasswordField
            End Get
            Set
                Me.targetPasswordField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bTargetPwdSupplied() As Boolean
            Get
                Return Me.bTargetPwdSuppliedField
            End Get
            Set
                Me.bTargetPwdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("machineCredentialsArray", IsNullable:=false)>  _
        Public Property arrayOfTargetMachineCredentials() As MachineCredentials()
            Get
                Return Me.arrayOfTargetMachineCredentialsField
            End Get
            Set
                Me.arrayOfTargetMachineCredentialsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bTargetMachCredentialsSupplied() As Boolean
            Get
                Return Me.bTargetMachCredentialsSuppliedField
            End Get
            Set
                Me.bTargetMachCredentialsSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class MachineCredentials
        
        Private targetMachineField As String
        
        Private userNameField As String
        
        Private passWordField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property targetMachine() As String
            Get
                Return Me.targetMachineField
            End Get
            Set
                Me.targetMachineField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userName() As String
            Get
                Return Me.userNameField
            End Get
            Set
                Me.userNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property passWord() As String
            Get
                Return Me.passWordField
            End Get
            Set
                Me.passWordField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ComputerStatusInfo
        
        Private computerNameField As String
        
        Private computerTypeField As String
        
        Private computerDescriptionField As String
        
        Private iPAddressField As String
        
        Private eComputerStatusCodeField As DeploymentStatusCode
        
        Private computerStatusCodeExField As Integer
        
        Private computerStatusMsgField As String
        
        Private bDmPrimerExistsField As Boolean
        
        Private bCredentialsNecessaryField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerName() As String
            Get
                Return Me.computerNameField
            End Get
            Set
                Me.computerNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerType() As String
            Get
                Return Me.computerTypeField
            End Get
            Set
                Me.computerTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerDescription() As String
            Get
                Return Me.computerDescriptionField
            End Get
            Set
                Me.computerDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property IPAddress() As String
            Get
                Return Me.iPAddressField
            End Get
            Set
                Me.iPAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property eComputerStatusCode() As DeploymentStatusCode
            Get
                Return Me.eComputerStatusCodeField
            End Get
            Set
                Me.eComputerStatusCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerStatusCodeEx() As Integer
            Get
                Return Me.computerStatusCodeExField
            End Get
            Set
                Me.computerStatusCodeExField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerStatusMsg() As String
            Get
                Return Me.computerStatusMsgField
            End Get
            Set
                Me.computerStatusMsgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bDmPrimerExists() As Boolean
            Get
                Return Me.bDmPrimerExistsField
            End Get
            Set
                Me.bDmPrimerExistsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bCredentialsNecessary() As Boolean
            Get
                Return Me.bCredentialsNecessaryField
            End Get
            Set
                Me.bCredentialsNecessaryField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum DeploymentStatusCode
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MACHINE-UP")>  _
        MACHINEUP
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("READY-TO-DEPLOY")>  _
        READYTODEPLOY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("PACKAGE-DEPLOYED")>  _
        PACKAGEDEPLOYED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("PACKAGE-OLDER")>  _
        PACKAGEOLDER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("PACKAGE-NEWER")>  _
        PACKAGENEWER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("PACKAGE-DEPLOYING")>  _
        PACKAGEDEPLOYING
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("PACKAGE-POSTED")>  _
        PACKAGEPOSTED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("PACKAGE-IN-TRANSIT")>  _
        PACKAGEINTRANSIT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("PACKAGE-DELIVERED")>  _
        PACKAGEDELIVERED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("PACKAGE-INSTALLING")>  _
        PACKAGEINSTALLING
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("PACKAGE-INSTALLED")>  _
        PACKAGEINSTALLED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("PRIMER-DEPLOYING")>  _
        PRIMERDEPLOYING
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("PRIMER-INSTALLED")>  _
        PRIMERINSTALLED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MACHINE-DOWN")>  _
        MACHINEDOWN
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DELIVERY-FAILED")>  _
        DELIVERYFAILED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("INSTALL-FAILED")>  _
        INSTALLFAILED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("PRIMER-FAILED")>  _
        PRIMERFAILED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("PACKAGE-INCOMPATIBLE")>  _
        PACKAGEINCOMPATIBLE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNKNOWN-TARGET")>  _
        UNKNOWNTARGET
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("NO-DOMAIN-SCANNING")>  _
        NODOMAINSCANNING
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("PACKAGE-STAGED")>  _
        PACKAGESTAGED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNKNOWN-STATUS")>  _
        UNKNOWNSTATUS
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ComputerStatusInfoRequired
        
        Private bComputerNameRequiredField As Boolean
        
        Private bComputerTypeRequiredField As Boolean
        
        Private bComputerDescRequiredField As Boolean
        
        Private bIPAddressRequiredField As Boolean
        
        Private bComputerStatusCodeRequiredField As Boolean
        
        Private bComputerStatusCodeExRequiredField As Boolean
        
        Private bComputerStatusMsgRequiredField As Boolean
        
        Private bPrimerExistsRequiredField As Boolean
        
        Private bCredentialsNecessaryRequiredField As Boolean
        
        '''<remarks/>
        Public Property bComputerNameRequired() As Boolean
            Get
                Return Me.bComputerNameRequiredField
            End Get
            Set
                Me.bComputerNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bComputerTypeRequired() As Boolean
            Get
                Return Me.bComputerTypeRequiredField
            End Get
            Set
                Me.bComputerTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bComputerDescRequired() As Boolean
            Get
                Return Me.bComputerDescRequiredField
            End Get
            Set
                Me.bComputerDescRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bIPAddressRequired() As Boolean
            Get
                Return Me.bIPAddressRequiredField
            End Get
            Set
                Me.bIPAddressRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bComputerStatusCodeRequired() As Boolean
            Get
                Return Me.bComputerStatusCodeRequiredField
            End Get
            Set
                Me.bComputerStatusCodeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bComputerStatusCodeExRequired() As Boolean
            Get
                Return Me.bComputerStatusCodeExRequiredField
            End Get
            Set
                Me.bComputerStatusCodeExRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bComputerStatusMsgRequired() As Boolean
            Get
                Return Me.bComputerStatusMsgRequiredField
            End Get
            Set
                Me.bComputerStatusMsgRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bPrimerExistsRequired() As Boolean
            Get
                Return Me.bPrimerExistsRequiredField
            End Get
            Set
                Me.bPrimerExistsRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bCredentialsNecessaryRequired() As Boolean
            Get
                Return Me.bCredentialsNecessaryRequiredField
            End Get
            Set
                Me.bCredentialsNecessaryRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ParameterValue
        
        Private paramNameField As String
        
        Private valueField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property paramName() As String
            Get
                Return Me.paramNameField
            End Get
            Set
                Me.paramNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DeploymentPackageInfo
        
        Private productNameField As String
        
        Private packageNameField As String
        
        Private packageVersionField As String
        
        Private bPackageVersionSuppliedField As Boolean
        
        Private platformField As String
        
        Private bPlatformSuppliedField As Boolean
        
        Private languageField As String
        
        Private bLanguageSuppliedField As Boolean
        
        Private arrayOfParameterValuesField() As ParameterValue
        
        Private bParamValuesSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property productName() As String
            Get
                Return Me.productNameField
            End Get
            Set
                Me.productNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property packageName() As String
            Get
                Return Me.packageNameField
            End Get
            Set
                Me.packageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property packageVersion() As String
            Get
                Return Me.packageVersionField
            End Get
            Set
                Me.packageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bPackageVersionSupplied() As Boolean
            Get
                Return Me.bPackageVersionSuppliedField
            End Get
            Set
                Me.bPackageVersionSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property platform() As String
            Get
                Return Me.platformField
            End Get
            Set
                Me.platformField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bPlatformSupplied() As Boolean
            Get
                Return Me.bPlatformSuppliedField
            End Get
            Set
                Me.bPlatformSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property language() As String
            Get
                Return Me.languageField
            End Get
            Set
                Me.languageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bLanguageSupplied() As Boolean
            Get
                Return Me.bLanguageSuppliedField
            End Get
            Set
                Me.bLanguageSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("parameterValueArray", IsNullable:=false)>  _
        Public Property arrayOfParameterValues() As ParameterValue()
            Get
                Return Me.arrayOfParameterValuesField
            End Get
            Set
                Me.arrayOfParameterValuesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bParamValuesSupplied() As Boolean
            Get
                Return Me.bParamValuesSuppliedField
            End Get
            Set
                Me.bParamValuesSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DeploymentInfo
        
        Private targetUserNameField As String
        
        Private bTargetUserSuppliedField As Boolean
        
        Private targetPasswordField As String
        
        Private bTargetPwdSuppliedField As Boolean
        
        Private scalabilityServerField As String
        
        Private bScalabilityServerSuppliedField As Boolean
        
        Private scalabilityServerUserNameField As String
        
        Private bSSUserNameSuppliedField As Boolean
        
        Private scalabilityServerPasswordField As String
        
        Private bSSPasswordSuppliedField As Boolean
        
        Private arrayOfTargetMachineCredentialsField() As MachineCredentials
        
        Private bTargetMachCredentialsSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property targetUserName() As String
            Get
                Return Me.targetUserNameField
            End Get
            Set
                Me.targetUserNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bTargetUserSupplied() As Boolean
            Get
                Return Me.bTargetUserSuppliedField
            End Get
            Set
                Me.bTargetUserSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property targetPassword() As String
            Get
                Return Me.targetPasswordField
            End Get
            Set
                Me.targetPasswordField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bTargetPwdSupplied() As Boolean
            Get
                Return Me.bTargetPwdSuppliedField
            End Get
            Set
                Me.bTargetPwdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property scalabilityServer() As String
            Get
                Return Me.scalabilityServerField
            End Get
            Set
                Me.scalabilityServerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bScalabilityServerSupplied() As Boolean
            Get
                Return Me.bScalabilityServerSuppliedField
            End Get
            Set
                Me.bScalabilityServerSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property scalabilityServerUserName() As String
            Get
                Return Me.scalabilityServerUserNameField
            End Get
            Set
                Me.scalabilityServerUserNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bSSUserNameSupplied() As Boolean
            Get
                Return Me.bSSUserNameSuppliedField
            End Get
            Set
                Me.bSSUserNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property scalabilityServerPassword() As String
            Get
                Return Me.scalabilityServerPasswordField
            End Get
            Set
                Me.scalabilityServerPasswordField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bSSPasswordSupplied() As Boolean
            Get
                Return Me.bSSPasswordSuppliedField
            End Get
            Set
                Me.bSSPasswordSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("machineCredentialsArray", IsNullable:=false)>  _
        Public Property arrayOfTargetMachineCredentials() As MachineCredentials()
            Get
                Return Me.arrayOfTargetMachineCredentialsField
            End Get
            Set
                Me.arrayOfTargetMachineCredentialsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bTargetMachCredentialsSupplied() As Boolean
            Get
                Return Me.bTargetMachCredentialsSuppliedField
            End Get
            Set
                Me.bTargetMachCredentialsSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ScanPackageInfo
        
        Private productNameField As String
        
        Private packageNameField As String
        
        Private packageVersionField As String
        
        Private bPackageVersionSuppliedField As Boolean
        
        Private platformField As String
        
        Private bPlatformSuppliedField As Boolean
        
        Private languageField As String
        
        Private bLanguageSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property productName() As String
            Get
                Return Me.productNameField
            End Get
            Set
                Me.productNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property packageName() As String
            Get
                Return Me.packageNameField
            End Get
            Set
                Me.packageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property packageVersion() As String
            Get
                Return Me.packageVersionField
            End Get
            Set
                Me.packageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bPackageVersionSupplied() As Boolean
            Get
                Return Me.bPackageVersionSuppliedField
            End Get
            Set
                Me.bPackageVersionSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property platform() As String
            Get
                Return Me.platformField
            End Get
            Set
                Me.platformField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bPlatformSupplied() As Boolean
            Get
                Return Me.bPlatformSuppliedField
            End Get
            Set
                Me.bPlatformSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property language() As String
            Get
                Return Me.languageField
            End Get
            Set
                Me.languageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bLanguageSupplied() As Boolean
            Get
                Return Me.bLanguageSuppliedField
            End Get
            Set
                Me.bLanguageSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ScanParameters
        
        Private arrayOfTargetMachinesField() As String
        
        Private bTargetMachinesSuppliedField As Boolean
        
        Private domainNameField As String
        
        Private bDomainNameSuppliedField As Boolean
        
        Private startIPAddressField As String
        
        Private bStartIPAddressSuppliedField As Boolean
        
        Private endIPAddressField As String
        
        Private bEndIPAddressSuppliedField As Boolean
        
        Private queryNameField As String
        
        Private bQueryNameSuppliedField As Boolean
        
        Private uRIField As String
        
        Private bURISuppliedField As Boolean
        
        Private bDeploymentPackageFromSSField As Boolean
        
        Private bDeploymentPackageFromSSSuppliedField As Boolean
        
        Private bScanStagedPackagesField As Boolean
        
        Private bScanStagedPackagesSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("stringElements")>  _
        Public Property arrayOfTargetMachines() As String()
            Get
                Return Me.arrayOfTargetMachinesField
            End Get
            Set
                Me.arrayOfTargetMachinesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bTargetMachinesSupplied() As Boolean
            Get
                Return Me.bTargetMachinesSuppliedField
            End Get
            Set
                Me.bTargetMachinesSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property domainName() As String
            Get
                Return Me.domainNameField
            End Get
            Set
                Me.domainNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bDomainNameSupplied() As Boolean
            Get
                Return Me.bDomainNameSuppliedField
            End Get
            Set
                Me.bDomainNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property startIPAddress() As String
            Get
                Return Me.startIPAddressField
            End Get
            Set
                Me.startIPAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bStartIPAddressSupplied() As Boolean
            Get
                Return Me.bStartIPAddressSuppliedField
            End Get
            Set
                Me.bStartIPAddressSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property endIPAddress() As String
            Get
                Return Me.endIPAddressField
            End Get
            Set
                Me.endIPAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bEndIPAddressSupplied() As Boolean
            Get
                Return Me.bEndIPAddressSuppliedField
            End Get
            Set
                Me.bEndIPAddressSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryName() As String
            Get
                Return Me.queryNameField
            End Get
            Set
                Me.queryNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bQueryNameSupplied() As Boolean
            Get
                Return Me.bQueryNameSuppliedField
            End Get
            Set
                Me.bQueryNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property URI() As String
            Get
                Return Me.uRIField
            End Get
            Set
                Me.uRIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bURISupplied() As Boolean
            Get
                Return Me.bURISuppliedField
            End Get
            Set
                Me.bURISuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bDeploymentPackageFromSS() As Boolean
            Get
                Return Me.bDeploymentPackageFromSSField
            End Get
            Set
                Me.bDeploymentPackageFromSSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bDeploymentPackageFromSSSupplied() As Boolean
            Get
                Return Me.bDeploymentPackageFromSSSuppliedField
            End Get
            Set
                Me.bDeploymentPackageFromSSSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bScanStagedPackages() As Boolean
            Get
                Return Me.bScanStagedPackagesField
            End Get
            Set
                Me.bScanStagedPackagesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bScanStagedPackagesSupplied() As Boolean
            Get
                Return Me.bScanStagedPackagesSuppliedField
            End Get
            Set
                Me.bScanStagedPackagesSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ParameterInfo
        
        Private paramNameField As String
        
        Private paramTypeField As Integer
        
        Private paramValueField As String
        
        Private paramDescriptionField As String
        
        Private formatValidationField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property paramName() As String
            Get
                Return Me.paramNameField
            End Get
            Set
                Me.paramNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property paramType() As Integer
            Get
                Return Me.paramTypeField
            End Get
            Set
                Me.paramTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property paramValue() As String
            Get
                Return Me.paramValueField
            End Get
            Set
                Me.paramValueField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property paramDescription() As String
            Get
                Return Me.paramDescriptionField
            End Get
            Set
                Me.paramDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property formatValidation() As String
            Get
                Return Me.formatValidationField
            End Get
            Set
                Me.formatValidationField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DeploymentPackageProperties
        
        Private productNameField As String
        
        Private packageNameField As String
        
        Private packageVersionField As String
        
        Private productDisplayNameField As String
        
        Private packageDisplayNameField As String
        
        Private packageVersionExtendedField As String
        
        Private displaySortOrderField As Integer
        
        Private platformField As String
        
        Private languageField As String
        
        Private descriptionField As String
        
        Private windowsCommandField As String
        
        Private unixCommandField As String
        
        Private operatingSystemTypeField As String
        
        Private mSIProductCodeField As String
        
        Private pIFProductCodeField As String
        
        Private arrayOfParamInfoField() As ParameterInfo
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property productName() As String
            Get
                Return Me.productNameField
            End Get
            Set
                Me.productNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property packageName() As String
            Get
                Return Me.packageNameField
            End Get
            Set
                Me.packageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property packageVersion() As String
            Get
                Return Me.packageVersionField
            End Get
            Set
                Me.packageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property productDisplayName() As String
            Get
                Return Me.productDisplayNameField
            End Get
            Set
                Me.productDisplayNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property packageDisplayName() As String
            Get
                Return Me.packageDisplayNameField
            End Get
            Set
                Me.packageDisplayNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property packageVersionExtended() As String
            Get
                Return Me.packageVersionExtendedField
            End Get
            Set
                Me.packageVersionExtendedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property displaySortOrder() As Integer
            Get
                Return Me.displaySortOrderField
            End Get
            Set
                Me.displaySortOrderField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property platform() As String
            Get
                Return Me.platformField
            End Get
            Set
                Me.platformField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property language() As String
            Get
                Return Me.languageField
            End Get
            Set
                Me.languageField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property windowsCommand() As String
            Get
                Return Me.windowsCommandField
            End Get
            Set
                Me.windowsCommandField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unixCommand() As String
            Get
                Return Me.unixCommandField
            End Get
            Set
                Me.unixCommandField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property operatingSystemType() As String
            Get
                Return Me.operatingSystemTypeField
            End Get
            Set
                Me.operatingSystemTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property MSIProductCode() As String
            Get
                Return Me.mSIProductCodeField
            End Get
            Set
                Me.mSIProductCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PIFProductCode() As String
            Get
                Return Me.pIFProductCodeField
            End Get
            Set
                Me.pIFProductCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("parameterInfoArray", IsNullable:=false)>  _
        Public Property arrayOfParamInfo() As ParameterInfo()
            Get
                Return Me.arrayOfParamInfoField
            End Get
            Set
                Me.arrayOfParamInfoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DeploymentPackagePropertiesRequired
        
        Private bProductNameRequiredField As Boolean
        
        Private bPackageNameRequiredField As Boolean
        
        Private bPackageVersionRequiredField As Boolean
        
        Private bProductDisplayNameRequiredField As Boolean
        
        Private bPackageDisplayNameRequiredField As Boolean
        
        Private bPackageVersionExtRequiredField As Boolean
        
        Private bDisplaySortOrderRequiredField As Boolean
        
        Private bPlatformRequiredField As Boolean
        
        Private bLanguageRequiredField As Boolean
        
        Private bDescriptionRequiredField As Boolean
        
        Private bWindowsCommandRequiredField As Boolean
        
        Private bUnixCommandRequiredField As Boolean
        
        Private bOperatingSystemTypeRequiredField As Boolean
        
        Private bMSIProductCodeRequiredField As Boolean
        
        Private bPIFProductCodeRequiredField As Boolean
        
        Private bParameterInfoRequiredField As Boolean
        
        '''<remarks/>
        Public Property bProductNameRequired() As Boolean
            Get
                Return Me.bProductNameRequiredField
            End Get
            Set
                Me.bProductNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bPackageNameRequired() As Boolean
            Get
                Return Me.bPackageNameRequiredField
            End Get
            Set
                Me.bPackageNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bPackageVersionRequired() As Boolean
            Get
                Return Me.bPackageVersionRequiredField
            End Get
            Set
                Me.bPackageVersionRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bProductDisplayNameRequired() As Boolean
            Get
                Return Me.bProductDisplayNameRequiredField
            End Get
            Set
                Me.bProductDisplayNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bPackageDisplayNameRequired() As Boolean
            Get
                Return Me.bPackageDisplayNameRequiredField
            End Get
            Set
                Me.bPackageDisplayNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bPackageVersionExtRequired() As Boolean
            Get
                Return Me.bPackageVersionExtRequiredField
            End Get
            Set
                Me.bPackageVersionExtRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bDisplaySortOrderRequired() As Boolean
            Get
                Return Me.bDisplaySortOrderRequiredField
            End Get
            Set
                Me.bDisplaySortOrderRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bPlatformRequired() As Boolean
            Get
                Return Me.bPlatformRequiredField
            End Get
            Set
                Me.bPlatformRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bLanguageRequired() As Boolean
            Get
                Return Me.bLanguageRequiredField
            End Get
            Set
                Me.bLanguageRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bDescriptionRequired() As Boolean
            Get
                Return Me.bDescriptionRequiredField
            End Get
            Set
                Me.bDescriptionRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bWindowsCommandRequired() As Boolean
            Get
                Return Me.bWindowsCommandRequiredField
            End Get
            Set
                Me.bWindowsCommandRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bUnixCommandRequired() As Boolean
            Get
                Return Me.bUnixCommandRequiredField
            End Get
            Set
                Me.bUnixCommandRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bOperatingSystemTypeRequired() As Boolean
            Get
                Return Me.bOperatingSystemTypeRequiredField
            End Get
            Set
                Me.bOperatingSystemTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bMSIProductCodeRequired() As Boolean
            Get
                Return Me.bMSIProductCodeRequiredField
            End Get
            Set
                Me.bMSIProductCodeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bPIFProductCodeRequired() As Boolean
            Get
                Return Me.bPIFProductCodeRequiredField
            End Get
            Set
                Me.bPIFProductCodeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bParameterInfoRequired() As Boolean
            Get
                Return Me.bParameterInfoRequiredField
            End Get
            Set
                Me.bParameterInfoRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetUnitGroupProperties2
        
        Private groupLabelField As String
        
        Private groupLabelSuppliedField As Boolean
        
        Private evaluationFrequencyField As Long
        
        Private evaluationFrequencySuppliedField As Boolean
        
        Private lastEvaluationDateTimeField As DateTime
        
        Private lastEvaluationDateTimeSuppliedField As Boolean
        
        Private queryUUIDField As String
        
        Private queryUUIDSuppliedField As Boolean
        
        Private groupDescriptionField As String
        
        Private groupDescriptionSuppliedField As Boolean
        
        Private engineNameField As String
        
        Private engineNameSuppliedField As Boolean
        
        Private inheritPermissionsField As Long
        
        Private inheritPermissionsSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupLabel() As String
            Get
                Return Me.groupLabelField
            End Get
            Set
                Me.groupLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupLabelSupplied() As Boolean
            Get
                Return Me.groupLabelSuppliedField
            End Get
            Set
                Me.groupLabelSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationFrequency() As Long
            Get
                Return Me.evaluationFrequencyField
            End Get
            Set
                Me.evaluationFrequencyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationFrequencySupplied() As Boolean
            Get
                Return Me.evaluationFrequencySuppliedField
            End Get
            Set
                Me.evaluationFrequencySuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property lastEvaluationDateTime() As DateTime
            Get
                Return Me.lastEvaluationDateTimeField
            End Get
            Set
                Me.lastEvaluationDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastEvaluationDateTimeSupplied() As Boolean
            Get
                Return Me.lastEvaluationDateTimeSuppliedField
            End Get
            Set
                Me.lastEvaluationDateTimeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryUUID() As String
            Get
                Return Me.queryUUIDField
            End Get
            Set
                Me.queryUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryUUIDSupplied() As Boolean
            Get
                Return Me.queryUUIDSuppliedField
            End Get
            Set
                Me.queryUUIDSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupDescription() As String
            Get
                Return Me.groupDescriptionField
            End Get
            Set
                Me.groupDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupDescriptionSupplied() As Boolean
            Get
                Return Me.groupDescriptionSuppliedField
            End Get
            Set
                Me.groupDescriptionSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property engineName() As String
            Get
                Return Me.engineNameField
            End Get
            Set
                Me.engineNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property engineNameSupplied() As Boolean
            Get
                Return Me.engineNameSuppliedField
            End Get
            Set
                Me.engineNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property inheritPermissions() As Long
            Get
                Return Me.inheritPermissionsField
            End Get
            Set
                Me.inheritPermissionsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property inheritPermissionsSupplied() As Boolean
            Get
                Return Me.inheritPermissionsSuppliedField
            End Get
            Set
                Me.inheritPermissionsSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SecurityObjectPermissionsForAllSecurityProfiles
        
        Private securityProfileUUIDField As String
        
        Private securityObjectPermissionsField As SecurityObjectPermissions
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityProfileUUID() As String
            Get
                Return Me.securityProfileUUIDField
            End Get
            Set
                Me.securityProfileUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityObjectPermissions() As SecurityObjectPermissions
            Get
                Return Me.securityObjectPermissionsField
            End Get
            Set
                Me.securityObjectPermissionsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SecurityObjectPermissions
        
        Private securityProfilePermissionField As SecurityProfilePermission
        
        Private securityProfileSpecialPermissionFlagsField As SecurityProfileSpecialPermissionFlags
        
        '''<remarks/>
        Public Property securityProfilePermission() As SecurityProfilePermission
            Get
                Return Me.securityProfilePermissionField
            End Get
            Set
                Me.securityProfilePermissionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityProfileSpecialPermissionFlags() As SecurityProfileSpecialPermissionFlags
            Get
                Return Me.securityProfileSpecialPermissionFlagsField
            End Get
            Set
                Me.securityProfileSpecialPermissionFlagsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SecurityProfilePermission
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("NO-ACCESS")>  _
        NOACCESS
        
        '''<remarks/>
        VIEW
        
        '''<remarks/>
        READ
        
        '''<remarks/>
        MANAGE
        
        '''<remarks/>
        CHANGE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("FULL-CONTROL")>  _
        FULLCONTROL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SPECIAL-ACCESS")>  _
        SPECIALACCESS
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SecurityProfileSpecialPermissionFlags
        
        Private createPermissionField As Boolean
        
        Private viewPermissionField As Boolean
        
        Private readPermissionField As Boolean
        
        Private writePermissionField As Boolean
        
        Private executePermissionField As Boolean
        
        Private deletePermissionField As Boolean
        
        Private changePermissionField As Boolean
        
        Private takeOwnerShipPermissionField As Boolean
        
        '''<remarks/>
        Public Property createPermission() As Boolean
            Get
                Return Me.createPermissionField
            End Get
            Set
                Me.createPermissionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property viewPermission() As Boolean
            Get
                Return Me.viewPermissionField
            End Get
            Set
                Me.viewPermissionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property readPermission() As Boolean
            Get
                Return Me.readPermissionField
            End Get
            Set
                Me.readPermissionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property writePermission() As Boolean
            Get
                Return Me.writePermissionField
            End Get
            Set
                Me.writePermissionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property executePermission() As Boolean
            Get
                Return Me.executePermissionField
            End Get
            Set
                Me.executePermissionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deletePermission() As Boolean
            Get
                Return Me.deletePermissionField
            End Get
            Set
                Me.deletePermissionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property changePermission() As Boolean
            Get
                Return Me.changePermissionField
            End Get
            Set
                Me.changePermissionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property takeOwnerShipPermission() As Boolean
            Get
                Return Me.takeOwnerShipPermissionField
            End Get
            Set
                Me.takeOwnerShipPermissionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSecurityObjectPermissions
        
        Private securityProfileUUIDField As String
        
        Private securityObjectPermissionsField As SecurityObjectPermissions
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityProfileUUID() As String
            Get
                Return Me.securityProfileUUIDField
            End Get
            Set
                Me.securityProfileUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityObjectPermissions() As SecurityObjectPermissions
            Get
                Return Me.securityObjectPermissionsField
            End Get
            Set
                Me.securityObjectPermissionsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SecurityObjectProfilePermission
        
        Private securityProfileUUIDField As String
        
        Private securityObjectPermissionsField As SecurityObjectPermissions
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityProfileUUID() As String
            Get
                Return Me.securityProfileUUIDField
            End Get
            Set
                Me.securityProfileUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityObjectPermissions() As SecurityObjectPermissions
            Get
                Return Me.securityObjectPermissionsField
            End Get
            Set
                Me.securityObjectPermissionsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class GetSecurityObjectsPermissions
        
        Private securityObjectUUIDField As String
        
        Private securityObjectOwnerField As String
        
        Private inheritLevelField As InheritanceLevel
        
        Private arrayOfSecurityObjectProfilePermissionField() As SecurityObjectProfilePermission
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityObjectUUID() As String
            Get
                Return Me.securityObjectUUIDField
            End Get
            Set
                Me.securityObjectUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityObjectOwner() As String
            Get
                Return Me.securityObjectOwnerField
            End Get
            Set
                Me.securityObjectOwnerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property inheritLevel() As InheritanceLevel
            Get
                Return Me.inheritLevelField
            End Get
            Set
                Me.inheritLevelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("securityObjectProfilePermissionArray", IsNullable:=false)>  _
        Public Property arrayOfSecurityObjectProfilePermission() As SecurityObjectProfilePermission()
            Get
                Return Me.arrayOfSecurityObjectProfilePermissionField
            End Get
            Set
                Me.arrayOfSecurityObjectProfilePermissionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum InheritanceLevel
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-INHERIT-CLASS")>  _
        SECINHERITCLASS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-INHERIT-GROUP")>  _
        SECINHERITGROUP
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-INHERIT-OBJECT")>  _
        SECINHERITOBJECT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-INHERIT-REVERT")>  _
        SECINHERITREVERT
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SecurityGroupPermissionsForAllSecurityProfiles
        
        Private securityProfileUUIDField As String
        
        Private objectPermissionsField As SecurityObjectPermissions
        
        Private membersPermissionsField As SecurityObjectPermissions
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityProfileUUID() As String
            Get
                Return Me.securityProfileUUIDField
            End Get
            Set
                Me.securityProfileUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property objectPermissions() As SecurityObjectPermissions
            Get
                Return Me.objectPermissionsField
            End Get
            Set
                Me.objectPermissionsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property membersPermissions() As SecurityObjectPermissions
            Get
                Return Me.membersPermissionsField
            End Get
            Set
                Me.membersPermissionsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSecurityGroupPermissions
        
        Private securityProfileUUIDField As String
        
        Private objectPermissionsField As SecurityObjectPermissions
        
        Private objectPermissionsSuppliedField As Boolean
        
        Private membersPermissionsField As SecurityObjectPermissions
        
        Private memberPermissionsSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityProfileUUID() As String
            Get
                Return Me.securityProfileUUIDField
            End Get
            Set
                Me.securityProfileUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property objectPermissions() As SecurityObjectPermissions
            Get
                Return Me.objectPermissionsField
            End Get
            Set
                Me.objectPermissionsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property objectPermissionsSupplied() As Boolean
            Get
                Return Me.objectPermissionsSuppliedField
            End Get
            Set
                Me.objectPermissionsSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property membersPermissions() As SecurityObjectPermissions
            Get
                Return Me.membersPermissionsField
            End Get
            Set
                Me.membersPermissionsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property memberPermissionsSupplied() As Boolean
            Get
                Return Me.memberPermissionsSuppliedField
            End Get
            Set
                Me.memberPermissionsSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SecurityGroupProfilePermission
        
        Private securityProfileUUIDField As String
        
        Private objectPermissionsField As SecurityObjectPermissions
        
        Private membersPermissionsField As SecurityObjectPermissions
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityProfileUUID() As String
            Get
                Return Me.securityProfileUUIDField
            End Get
            Set
                Me.securityProfileUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property objectPermissions() As SecurityObjectPermissions
            Get
                Return Me.objectPermissionsField
            End Get
            Set
                Me.objectPermissionsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property membersPermissions() As SecurityObjectPermissions
            Get
                Return Me.membersPermissionsField
            End Get
            Set
                Me.membersPermissionsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class GetSecurityGroupPermissions
        
        Private securityGroupUUIDField As String
        
        Private securityObjectOwnerField As String
        
        Private inheritLevelField As InheritanceLevel
        
        Private arrayOfSecurityGroupProfilePermissionField() As SecurityGroupProfilePermission
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityGroupUUID() As String
            Get
                Return Me.securityGroupUUIDField
            End Get
            Set
                Me.securityGroupUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityObjectOwner() As String
            Get
                Return Me.securityObjectOwnerField
            End Get
            Set
                Me.securityObjectOwnerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property inheritLevel() As InheritanceLevel
            Get
                Return Me.inheritLevelField
            End Get
            Set
                Me.inheritLevelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("securityGroupProfilePermissionArray", IsNullable:=false)>  _
        Public Property arrayOfSecurityGroupProfilePermission() As SecurityGroupProfilePermission()
            Get
                Return Me.arrayOfSecurityGroupProfilePermissionField
            End Get
            Set
                Me.arrayOfSecurityGroupProfilePermissionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SecurityClassPermissionsForSecurityProfile
        
        Private securityClassTypeField As SecurityClassType
        
        Private securityProfilePermissionField As SecurityProfilePermission
        
        Private securityProfileSpecialPermissionFlagsField As SecurityProfileSpecialPermissionFlags
        
        '''<remarks/>
        Public Property securityClassType() As SecurityClassType
            Get
                Return Me.securityClassTypeField
            End Get
            Set
                Me.securityClassTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityProfilePermission() As SecurityProfilePermission
            Get
                Return Me.securityProfilePermissionField
            End Get
            Set
                Me.securityProfilePermissionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityProfileSpecialPermissionFlags() As SecurityProfileSpecialPermissionFlags
            Get
                Return Me.securityProfileSpecialPermissionFlagsField
            End Get
            Set
                Me.securityProfileSpecialPermissionFlagsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SecurityClassType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-POLICY-CONFIGURATION-COMPUTER")>  _
        SECCLASSPOLICYCONFIGURATIONCOMPUTER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-DOMAIN")>  _
        SECCLASSDOMAIN
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-EXTERNAL-ASSET")>  _
        SECCLASSEXTERNALASSET
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-SOFTWARE-PACKAGE")>  _
        SECCLASSSOFTWAREPACKAGE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-REPORT-SCHEDULING")>  _
        SECCLASSREPORTSCHEDULING
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-DOMAIN-GROUP")>  _
        SECCLASSDOMAINGROUP
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-SECURITY-CLASS-PERMISSIONS")>  _
        SECCLASSSECURITYCLASSPERMISSIONS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-ENGINE")>  _
        SECCLASSENGINE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-SCALABILITY-SERVER-GROUP")>  _
        SECCLASSSCALABILITYSERVERGROUP
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-SECURITY-AREA")>  _
        SECCLASSSECURITYAREA
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-SOFTWARE-JOB")>  _
        SECCLASSSOFTWAREJOB
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-INVENTORY-TASK")>  _
        SECCLASSINVENTORYTASK
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-COMPUTER")>  _
        SECCLASSCOMPUTER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-POLICY-SOFTWARE-BASED")>  _
        SECCLASSPOLICYSOFTWAREBASED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-REPORT-TEMPLATE")>  _
        SECCLASSREPORTTEMPLATE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-COMMON-QUERY")>  _
        SECCLASSCOMMONQUERY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-SOFTWARE-JOB-CONTAINER")>  _
        SECCLASSSOFTWAREJOBCONTAINER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-ASSET-JOB")>  _
        SECCLASSASSETJOB
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-DEPLOYMENT-JOB")>  _
        SECCLASSDEPLOYMENTJOB
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-SOFTWARE-USAGE-TASK")>  _
        SECCLASSSOFTWAREUSAGETASK
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-SOFTWARE-DISTRCONTAINER")>  _
        SECCLASSSOFTWAREDISTRCONTAINER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-OS-INSTALLATION-IMAGE")>  _
        SECCLASSOSINSTALLATIONIMAGE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-REMOTE-CONTROL-ACCESS")>  _
        SECCLASSREMOTECONTROLACCESS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-ENGINE-TASK")>  _
        SECCLASSENGINETASK
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-ASSET-GROUP")>  _
        SECCLASSASSETGROUP
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-USER-ACCOUNT")>  _
        SECCLASSUSERACCOUNT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-MANAGER")>  _
        SECCLASSMANAGER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-SOFTWARE-DISTRIBUTIONS")>  _
        SECCLASSSOFTWAREDISTRIBUTIONS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-CONTROL-PANEL-ACCESS")>  _
        SECCLASSCONTROLPANELACCESS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-DATABASE-CREDENTIALS")>  _
        SECCLASSDATABASECREDENTIALS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-SCALABILITY-SERVER")>  _
        SECCLASSSCALABILITYSERVER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-POLICY-EVENT-BASED")>  _
        SECCLASSPOLICYEVENTBASED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-SECURITY-PROFILE")>  _
        SECCLASSSECURITYPROFILE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-SOFTWARE-CATEGORY")>  _
        SECCLASSSOFTWARECATEGORY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-PROCEDURE-GROUP")>  _
        SECCLASSPROCEDUREGROUP
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-SOFTWARE-DEFINITION")>  _
        SECCLASSSOFTWAREDEFINITION
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-USER-PROFILE")>  _
        SECCLASSUSERPROFILE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-POLICY-QUERY-BASED")>  _
        SECCLASSPOLICYQUERYBASED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-PROCEDURE")>  _
        SECCLASSPROCEDURE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-CONFIGURED-DIRECTORY")>  _
        SECCLASSCONFIGUREDDIRECTORY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-SOFTWARE-GROUP")>  _
        SECCLASSSOFTWAREGROUP
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-SOFTWARE-DISCOVERY-TASK")>  _
        SECCLASSSOFTWAREDISCOVERYTASK
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-TEMPLATE-TASK")>  _
        SECCLASSTEMPLATETASK
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-BACKUP-USER")>  _
        SECCLASSBACKUPUSER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-BACKUP-AGENT-CONFIG")>  _
        SECCLASSBACKUPAGENTCONFIG
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-BACKUP-ACT-USR-POLICY")>  _
        SECCLASSBACKUPACTUSRPOLICY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-BACKUP-SERVER")>  _
        SECCLASSBACKUPSERVER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-BACKUP-SERVER-CONFIG")>  _
        SECCLASSBACKUPSERVERCONFIG
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-BACKUP-JOB")>  _
        SECCLASSBACKUPJOB
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-BACKUP-POLICY")>  _
        SECCLASSBACKUPPOLICY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-BACKUP-SET")>  _
        SECCLASSBACKUPSET
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-BACKUP-PERFORMED-BU")>  _
        SECCLASSBACKUPPERFORMEDBU
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-BACKUP-BU-FILE-REV")>  _
        SECCLASSBACKUPBUFILEREV
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-CLASS-BACKUP-PERFORMED-RS")>  _
        SECCLASSBACKUPPERFORMEDRS
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SecurityClassPermissionProperties
        
        Private securityClassTypeField As SecurityClassType
        
        Private arrayOfSecurityClassPermissionsField() As SecurityClassPermissions
        
        '''<remarks/>
        Public Property securityClassType() As SecurityClassType
            Get
                Return Me.securityClassTypeField
            End Get
            Set
                Me.securityClassTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("securityClassPermissionsArray", IsNullable:=false)>  _
        Public Property arrayOfSecurityClassPermissions() As SecurityClassPermissions()
            Get
                Return Me.arrayOfSecurityClassPermissionsField
            End Get
            Set
                Me.arrayOfSecurityClassPermissionsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SecurityClassPermissions
        
        Private securityProfileUUIDField As String
        
        Private securityProfilePermissionField As SecurityProfilePermission
        
        Private securityProfileSpecialPermissionFlagsField As SecurityProfileSpecialPermissionFlags
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityProfileUUID() As String
            Get
                Return Me.securityProfileUUIDField
            End Get
            Set
                Me.securityProfileUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityProfilePermission() As SecurityProfilePermission
            Get
                Return Me.securityProfilePermissionField
            End Get
            Set
                Me.securityProfilePermissionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityProfileSpecialPermissionFlags() As SecurityProfileSpecialPermissionFlags
            Get
                Return Me.securityProfileSpecialPermissionFlagsField
            End Get
            Set
                Me.securityProfileSpecialPermissionFlagsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SecurityClassProperties
        
        Private securityClassTypeField As SecurityClassType
        
        Private securityClassUUIDField As String
        
        Private securityClassOwnerField As String
        
        Private arrSecurityClassPermissionsField() As SecurityClassPermissions
        
        '''<remarks/>
        Public Property securityClassType() As SecurityClassType
            Get
                Return Me.securityClassTypeField
            End Get
            Set
                Me.securityClassTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityClassUUID() As String
            Get
                Return Me.securityClassUUIDField
            End Get
            Set
                Me.securityClassUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityClassOwner() As String
            Get
                Return Me.securityClassOwnerField
            End Get
            Set
                Me.securityClassOwnerField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("securityClassPermissionsArray", IsNullable:=false)>  _
        Public Property arrSecurityClassPermissions() As SecurityClassPermissions()
            Get
                Return Me.arrSecurityClassPermissionsField
            End Get
            Set
                Me.arrSecurityClassPermissionsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SecurityClassPropertiesRequired
        
        Private securityClassTypeRequiredField As Boolean
        
        Private securityClassUUIDRequiredField As Boolean
        
        Private securityClassOwnerRequiredField As Boolean
        
        Private securityClassPermissionsRequiredField As Boolean
        
        '''<remarks/>
        Public Property securityClassTypeRequired() As Boolean
            Get
                Return Me.securityClassTypeRequiredField
            End Get
            Set
                Me.securityClassTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityClassUUIDRequired() As Boolean
            Get
                Return Me.securityClassUUIDRequiredField
            End Get
            Set
                Me.securityClassUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityClassOwnerRequired() As Boolean
            Get
                Return Me.securityClassOwnerRequiredField
            End Get
            Set
                Me.securityClassOwnerRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityClassPermissionsRequired() As Boolean
            Get
                Return Me.securityClassPermissionsRequiredField
            End Get
            Set
                Me.securityClassPermissionsRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSecurityProfileProperties
        
        Private securityProfileNameField As String
        
        Private securityProfileDescriptionField As String
        
        Private securityProfileDescriptionSuppliedField As Boolean
        
        Private securityAreaEnabledField As Boolean
        
        Private securityAreaEnabledSuppliedField As Boolean
        
        Private securityProfilePermissionField As SecurityProfilePermission
        
        Private securityProfilePermissionSuppliedField As Boolean
        
        Private securityProfileSpecialPermissionFlagsField As SecurityProfileSpecialPermissionFlags
        
        Private securityProfileSpecialPermissionFlagsSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityProfileName() As String
            Get
                Return Me.securityProfileNameField
            End Get
            Set
                Me.securityProfileNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityProfileDescription() As String
            Get
                Return Me.securityProfileDescriptionField
            End Get
            Set
                Me.securityProfileDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityProfileDescriptionSupplied() As Boolean
            Get
                Return Me.securityProfileDescriptionSuppliedField
            End Get
            Set
                Me.securityProfileDescriptionSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityAreaEnabled() As Boolean
            Get
                Return Me.securityAreaEnabledField
            End Get
            Set
                Me.securityAreaEnabledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityAreaEnabledSupplied() As Boolean
            Get
                Return Me.securityAreaEnabledSuppliedField
            End Get
            Set
                Me.securityAreaEnabledSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityProfilePermission() As SecurityProfilePermission
            Get
                Return Me.securityProfilePermissionField
            End Get
            Set
                Me.securityProfilePermissionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityProfilePermissionSupplied() As Boolean
            Get
                Return Me.securityProfilePermissionSuppliedField
            End Get
            Set
                Me.securityProfilePermissionSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityProfileSpecialPermissionFlags() As SecurityProfileSpecialPermissionFlags
            Get
                Return Me.securityProfileSpecialPermissionFlagsField
            End Get
            Set
                Me.securityProfileSpecialPermissionFlagsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SecurityProfileSpecialPermissionFlagsSupplied() As Boolean
            Get
                Return Me.securityProfileSpecialPermissionFlagsSuppliedField
            End Get
            Set
                Me.securityProfileSpecialPermissionFlagsSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSecurityProfileProperties
        
        Private securityProfileNameField As String
        
        Private securityProfileNameSuppliedField As Boolean
        
        Private securityProfileDescriptionField As String
        
        Private securityProfileDescriptionSuppliedField As Boolean
        
        Private securityAreaEnabledField As Boolean
        
        Private securityAreaEnabledSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityProfileName() As String
            Get
                Return Me.securityProfileNameField
            End Get
            Set
                Me.securityProfileNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityProfileNameSupplied() As Boolean
            Get
                Return Me.securityProfileNameSuppliedField
            End Get
            Set
                Me.securityProfileNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityProfileDescription() As String
            Get
                Return Me.securityProfileDescriptionField
            End Get
            Set
                Me.securityProfileDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityProfileDescriptionSupplied() As Boolean
            Get
                Return Me.securityProfileDescriptionSuppliedField
            End Get
            Set
                Me.securityProfileDescriptionSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityAreaEnabled() As Boolean
            Get
                Return Me.securityAreaEnabledField
            End Get
            Set
                Me.securityAreaEnabledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityAreaEnabledSupplied() As Boolean
            Get
                Return Me.securityAreaEnabledSuppliedField
            End Get
            Set
                Me.securityAreaEnabledSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SecurityProfileProperties
        
        Private securityProfileUUIDField As String
        
        Private securityProfileOwnerField As String
        
        Private securityProfileNameField As String
        
        Private securityProfileDescriptionField As String
        
        Private securityProfileTypeField As SecurityProfileType
        
        Private builtInProfileField As Boolean
        
        Private securityAreaEnabledField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityProfileUUID() As String
            Get
                Return Me.securityProfileUUIDField
            End Get
            Set
                Me.securityProfileUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityProfileOwner() As String
            Get
                Return Me.securityProfileOwnerField
            End Get
            Set
                Me.securityProfileOwnerField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityProfileName() As String
            Get
                Return Me.securityProfileNameField
            End Get
            Set
                Me.securityProfileNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityProfileDescription() As String
            Get
                Return Me.securityProfileDescriptionField
            End Get
            Set
                Me.securityProfileDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityProfileType() As SecurityProfileType
            Get
                Return Me.securityProfileTypeField
            End Get
            Set
                Me.securityProfileTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property builtInProfile() As Boolean
            Get
                Return Me.builtInProfileField
            End Get
            Set
                Me.builtInProfileField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityAreaEnabled() As Boolean
            Get
                Return Me.securityAreaEnabledField
            End Get
            Set
                Me.securityAreaEnabledField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SecurityProfileType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-PROFILE-OWNER")>  _
        SECPROFILEOWNER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-PROFILE-EVERYONE")>  _
        SECPROFILEEVERYONE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-PROFILE-DISTRIBUTIONS")>  _
        SECPROFILEDISTRIBUTIONS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-PROFILE-LOCALUSER")>  _
        SECPROFILELOCALUSER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-PROFILE-GLOBALUSER")>  _
        SECPROFILEGLOBALUSER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-PROFILE-LOCALGROUP")>  _
        SECPROFILELOCALGROUP
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-PROFILE-GLOBALGROUP")>  _
        SECPROFILEGLOBALGROUP
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-PROFILE-GLOBALMACHINE")>  _
        SECPROFILEGLOBALMACHINE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-PROFILE-SDCATALOG")>  _
        SECPROFILESDCATALOG
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-PROFILE-CERT-CSM-AGCT")>  _
        SECPROFILECERTCSMAGCT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-PROFILE-CERT-SERVER-REG")>  _
        SECPROFILECERTSERVERREG
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-PROFILE-CERT-DIR-SYNC")>  _
        SECPROFILECERTDIRSYNC
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-PROFILE-CERT-DOMDB-PWD")>  _
        SECPROFILECERTDOMDBPWD
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-PROFILE-CERT-ENTDB-PWD")>  _
        SECPROFILECERTENTDBPWD
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-PROFILE-CERT-REPDB-PWD")>  _
        SECPROFILECERTREPDBPWD
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-PROFILE-CERT-SD-AGMOV")>  _
        SECPROFILECERTSDAGMOV
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-PROFILE-CERT-SD-CATALOG")>  _
        SECPROFILECERTSDCATALOG
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-PROFILE-CERT-BABLD-REG")>  _
        SECPROFILECERTBABLDREG
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SecurityProfilePropertiesRequired
        
        Private securityProfileUUIDRequiredField As Boolean
        
        Private securityProfileOwnerRequiredField As Boolean
        
        Private securityProfileNameRequiredField As Boolean
        
        Private securityProfileDescriptionRequiredField As Boolean
        
        Private securityProfileTypeRequiredField As Boolean
        
        Private builtinProfileRequiredField As Boolean
        
        Private securityAreaEnabledRequiredField As Boolean
        
        '''<remarks/>
        Public Property securityProfileUUIDRequired() As Boolean
            Get
                Return Me.securityProfileUUIDRequiredField
            End Get
            Set
                Me.securityProfileUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityProfileOwnerRequired() As Boolean
            Get
                Return Me.securityProfileOwnerRequiredField
            End Get
            Set
                Me.securityProfileOwnerRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityProfileNameRequired() As Boolean
            Get
                Return Me.securityProfileNameRequiredField
            End Get
            Set
                Me.securityProfileNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityProfileDescriptionRequired() As Boolean
            Get
                Return Me.securityProfileDescriptionRequiredField
            End Get
            Set
                Me.securityProfileDescriptionRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityProfileTypeRequired() As Boolean
            Get
                Return Me.securityProfileTypeRequiredField
            End Get
            Set
                Me.securityProfileTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property builtinProfileRequired() As Boolean
            Get
                Return Me.builtinProfileRequiredField
            End Get
            Set
                Me.builtinProfileRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityAreaEnabledRequired() As Boolean
            Get
                Return Me.securityAreaEnabledRequiredField
            End Get
            Set
                Me.securityAreaEnabledRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SecurityObjectOwner
        
        Private securityObjectUUIDField As String
        
        Private securityObjectOwnerField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityObjectUUID() As String
            Get
                Return Me.securityObjectUUIDField
            End Get
            Set
                Me.securityObjectUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityObjectOwner() As String
            Get
                Return Me.securityObjectOwnerField
            End Get
            Set
                Me.securityObjectOwnerField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SecurityObjectLinkageProperties
        
        Private securityAreaNameField As String
        
        Private securityAreaLinkageField As SecurityAreaLinkage
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityAreaName() As String
            Get
                Return Me.securityAreaNameField
            End Get
            Set
                Me.securityAreaNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityAreaLinkage() As SecurityAreaLinkage
            Get
                Return Me.securityAreaLinkageField
            End Get
            Set
                Me.securityAreaLinkageField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SecurityAreaLinkage
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-AREA-LINK")>  _
        SECAREALINK
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SEC-AREA-UNLINK")>  _
        SECAREAUNLINK
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SecurityObjectSecurityAreaLinkages
        
        Private securityObjectUUIDField As String
        
        Private securityObjectLinkagesPropertiesArrayField() As SecurityObjectLinkageProperties
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityObjectUUID() As String
            Get
                Return Me.securityObjectUUIDField
            End Get
            Set
                Me.securityObjectUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("securityObjectLinkageProperties", IsNullable:=false)>  _
        Public Property securityObjectLinkagesPropertiesArray() As SecurityObjectLinkageProperties()
            Get
                Return Me.securityObjectLinkagesPropertiesArrayField
            End Get
            Set
                Me.securityObjectLinkagesPropertiesArrayField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SecurityObjectsSecurityAreaProperties
        
        Private securityObjectUUIDField As String
        
        Private securityAreaLinkedField() As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityObjectUUID() As String
            Get
                Return Me.securityObjectUUIDField
            End Get
            Set
                Me.securityObjectUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("stringElements")>  _
        Public Property securityAreaLinked() As String()
            Get
                Return Me.securityAreaLinkedField
            End Get
            Set
                Me.securityAreaLinkedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SecurityAreaByName
        
        Private securityAreaNameField As String
        
        Private securityAreaEnabledField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityAreaName() As String
            Get
                Return Me.securityAreaNameField
            End Get
            Set
                Me.securityAreaNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityAreaEnabled() As Boolean
            Get
                Return Me.securityAreaEnabledField
            End Get
            Set
                Me.securityAreaEnabledField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SecurityAreaConfigurationByName
        
        Private securityAreaSupportField As Boolean
        
        Private securityAreasField() As SecurityAreaByName
        
        '''<remarks/>
        Public Property securityAreaSupport() As Boolean
            Get
                Return Me.securityAreaSupportField
            End Get
            Set
                Me.securityAreaSupportField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("securityAreaArray", IsNullable:=false)>  _
        Public Property securityAreas() As SecurityAreaByName()
            Get
                Return Me.securityAreasField
            End Get
            Set
                Me.securityAreasField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SecurityArea
        
        Private securityAreaUUIDField As String
        
        Private securityAreaEnabledField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityAreaUUID() As String
            Get
                Return Me.securityAreaUUIDField
            End Get
            Set
                Me.securityAreaUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityAreaEnabled() As Boolean
            Get
                Return Me.securityAreaEnabledField
            End Get
            Set
                Me.securityAreaEnabledField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SecurityAreaConfiguration
        
        Private securityAreaSupportField As Boolean
        
        Private securityAreasField() As SecurityArea
        
        '''<remarks/>
        Public Property securityAreaSupport() As Boolean
            Get
                Return Me.securityAreaSupportField
            End Get
            Set
                Me.securityAreaSupportField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("securityAreaArray", IsNullable:=false)>  _
        Public Property securityAreas() As SecurityArea()
            Get
                Return Me.securityAreasField
            End Get
            Set
                Me.securityAreasField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSecurityAreaProperties
        
        Private securityAreaNameField As String
        
        Private securityAreaNameSuppliedField As Boolean
        
        Private securityAreaDescriptionField As String
        
        Private securityAreaDescriptionSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityAreaName() As String
            Get
                Return Me.securityAreaNameField
            End Get
            Set
                Me.securityAreaNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityAreaNameSupplied() As Boolean
            Get
                Return Me.securityAreaNameSuppliedField
            End Get
            Set
                Me.securityAreaNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityAreaDescription() As String
            Get
                Return Me.securityAreaDescriptionField
            End Get
            Set
                Me.securityAreaDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityAreaDescriptionSupplied() As Boolean
            Get
                Return Me.securityAreaDescriptionSuppliedField
            End Get
            Set
                Me.securityAreaDescriptionSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SecurityAreaProperties
        
        Private securityAreaUUIDField As String
        
        Private securityAreaOwnerField As String
        
        Private securityAreaIDField As Long
        
        Private securityAreaNameField As String
        
        Private securityAreaDescriptionField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityAreaUUID() As String
            Get
                Return Me.securityAreaUUIDField
            End Get
            Set
                Me.securityAreaUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityAreaOwner() As String
            Get
                Return Me.securityAreaOwnerField
            End Get
            Set
                Me.securityAreaOwnerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityAreaID() As Long
            Get
                Return Me.securityAreaIDField
            End Get
            Set
                Me.securityAreaIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityAreaName() As String
            Get
                Return Me.securityAreaNameField
            End Get
            Set
                Me.securityAreaNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityAreaDescription() As String
            Get
                Return Me.securityAreaDescriptionField
            End Get
            Set
                Me.securityAreaDescriptionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SecurityAreaPropertiesRequired
        
        Private securityAreaUUIDRequiredField As Boolean
        
        Private securityAreaOwnerRequiredField As Boolean
        
        Private securityAreaIDRequiredField As Boolean
        
        Private securityAreaNameRequiredField As Boolean
        
        Private securityAreaDescriptionRequiredField As Boolean
        
        '''<remarks/>
        Public Property securityAreaUUIDRequired() As Boolean
            Get
                Return Me.securityAreaUUIDRequiredField
            End Get
            Set
                Me.securityAreaUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityAreaOwnerRequired() As Boolean
            Get
                Return Me.securityAreaOwnerRequiredField
            End Get
            Set
                Me.securityAreaOwnerRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityAreaIDRequired() As Boolean
            Get
                Return Me.securityAreaIDRequiredField
            End Get
            Set
                Me.securityAreaIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityAreaNameRequired() As Boolean
            Get
                Return Me.securityAreaNameRequiredField
            End Get
            Set
                Me.securityAreaNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityAreaDescriptionRequired() As Boolean
            Get
                Return Me.securityAreaDescriptionRequiredField
            End Get
            Set
                Me.securityAreaDescriptionRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSecurityAreaProperties
        
        Private securityAreaNameField As String
        
        Private securityAreaDescriptionField As String
        
        Private securtiyAreaDescriptionSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityAreaName() As String
            Get
                Return Me.securityAreaNameField
            End Get
            Set
                Me.securityAreaNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property securityAreaDescription() As String
            Get
                Return Me.securityAreaDescriptionField
            End Get
            Set
                Me.securityAreaDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securtiyAreaDescriptionSupplied() As Boolean
            Get
                Return Me.securtiyAreaDescriptionSuppliedField
            End Get
            Set
                Me.securtiyAreaDescriptionSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateQueryProperties2
        
        Private queryNameField As String
        
        Private queryNameSuppliedField As Boolean
        
        Private queryTableField As String
        
        Private queryTableSuppliedField As Boolean
        
        Private queryTypeField As QueryType
        
        Private queryTypeSuppliedField As Boolean
        
        Private queryTableLabelFieldField As String
        
        Private queryTableLabelFieldSuppliedField As Boolean
        
        Private queryTableLabelPrimaryKeyField As String
        
        Private queryTableLabelPrimaryKeySuppliedField As Boolean
        
        Private queryTableLabelSecondaryKeyField As String
        
        Private queryTableLabelSecondaryKeySuppliedField As Boolean
        
        Private queryFragments2Field() As QueryFragment2
        
        Private queryFragmentsSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryName() As String
            Get
                Return Me.queryNameField
            End Get
            Set
                Me.queryNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryNameSupplied() As Boolean
            Get
                Return Me.queryNameSuppliedField
            End Get
            Set
                Me.queryNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryTable() As String
            Get
                Return Me.queryTableField
            End Get
            Set
                Me.queryTableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTableSupplied() As Boolean
            Get
                Return Me.queryTableSuppliedField
            End Get
            Set
                Me.queryTableSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryType() As QueryType
            Get
                Return Me.queryTypeField
            End Get
            Set
                Me.queryTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTypeSupplied() As Boolean
            Get
                Return Me.queryTypeSuppliedField
            End Get
            Set
                Me.queryTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryTableLabelField() As String
            Get
                Return Me.queryTableLabelFieldField
            End Get
            Set
                Me.queryTableLabelFieldField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTableLabelFieldSupplied() As Boolean
            Get
                Return Me.queryTableLabelFieldSuppliedField
            End Get
            Set
                Me.queryTableLabelFieldSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryTableLabelPrimaryKey() As String
            Get
                Return Me.queryTableLabelPrimaryKeyField
            End Get
            Set
                Me.queryTableLabelPrimaryKeyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTableLabelPrimaryKeySupplied() As Boolean
            Get
                Return Me.queryTableLabelPrimaryKeySuppliedField
            End Get
            Set
                Me.queryTableLabelPrimaryKeySuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryTableLabelSecondaryKey() As String
            Get
                Return Me.queryTableLabelSecondaryKeyField
            End Get
            Set
                Me.queryTableLabelSecondaryKeyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTableLabelSecondaryKeySupplied() As Boolean
            Get
                Return Me.queryTableLabelSecondaryKeySuppliedField
            End Get
            Set
                Me.queryTableLabelSecondaryKeySuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("queryFragmentsArray2", IsNullable:=false)>  _
        Public Property queryFragments2() As QueryFragment2()
            Get
                Return Me.queryFragments2Field
            End Get
            Set
                Me.queryFragments2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryFragmentsSupplied() As Boolean
            Get
                Return Me.queryFragmentsSuppliedField
            End Get
            Set
                Me.queryFragmentsSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class Components2
        
        Private isAMInstalledField As Boolean
        
        Private isSDInstalledField As Boolean
        
        Private isRCInstalledField As Boolean
        
        Private isBABLDInstalledField As Boolean
        
        Private isSDESKInstalledField As Boolean
        
        Private isACInstalledField As Boolean
        
        '''<remarks/>
        Public Property isAMInstalled() As Boolean
            Get
                Return Me.isAMInstalledField
            End Get
            Set
                Me.isAMInstalledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isSDInstalled() As Boolean
            Get
                Return Me.isSDInstalledField
            End Get
            Set
                Me.isSDInstalledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isRCInstalled() As Boolean
            Get
                Return Me.isRCInstalledField
            End Get
            Set
                Me.isRCInstalledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isBABLDInstalled() As Boolean
            Get
                Return Me.isBABLDInstalledField
            End Get
            Set
                Me.isBABLDInstalledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isSDESKInstalled() As Boolean
            Get
                Return Me.isSDESKInstalledField
            End Get
            Set
                Me.isSDESKInstalledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isACInstalled() As Boolean
            Get
                Return Me.isACInstalledField
            End Get
            Set
                Me.isACInstalledField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class FetchItemJobOrderProperties
        
        Private fetchItemJobOrderNameField As String
        
        Private fetchItemJobOrderPathField As String
        
        Private fetchItemJobOrderCommentField As String
        
        Private orderPositionField As Long
        
        Private orderPositionSuppliedField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property fetchItemJobOrderName() As String
            Get
                Return Me.fetchItemJobOrderNameField
            End Get
            Set
                Me.fetchItemJobOrderNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property fetchItemJobOrderPath() As String
            Get
                Return Me.fetchItemJobOrderPathField
            End Get
            Set
                Me.fetchItemJobOrderPathField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property fetchItemJobOrderComment() As String
            Get
                Return Me.fetchItemJobOrderCommentField
            End Get
            Set
                Me.fetchItemJobOrderCommentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property orderPosition() As Long
            Get
                Return Me.orderPositionField
            End Get
            Set
                Me.orderPositionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property orderPositionSupplied() As Long
            Get
                Return Me.orderPositionSuppliedField
            End Get
            Set
                Me.orderPositionSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DistributionContainerOrderProperties
        
        Private distributionContainerOrderIdField As String
        
        Private distributionContainerOrderNameField As String
        
        Private distributionContainerOrderTypeField As DistributionContainerOrderType
        
        Private jobContainerPropertiesField As SoftwareJobContainerProperties
        
        Private fetchItemOrderPropertiesField As FetchItemOrderProperties
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property distributionContainerOrderId() As String
            Get
                Return Me.distributionContainerOrderIdField
            End Get
            Set
                Me.distributionContainerOrderIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property distributionContainerOrderName() As String
            Get
                Return Me.distributionContainerOrderNameField
            End Get
            Set
                Me.distributionContainerOrderNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property distributionContainerOrderType() As DistributionContainerOrderType
            Get
                Return Me.distributionContainerOrderTypeField
            End Get
            Set
                Me.distributionContainerOrderTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property jobContainerProperties() As SoftwareJobContainerProperties
            Get
                Return Me.jobContainerPropertiesField
            End Get
            Set
                Me.jobContainerPropertiesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property fetchItemOrderProperties() As FetchItemOrderProperties
            Get
                Return Me.fetchItemOrderPropertiesField
            End Get
            Set
                Me.fetchItemOrderPropertiesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwareJobContainerProperties
        
        Private softwareJobContainerIdField As String
        
        Private stateField As SoftwareJobContainerState
        
        Private sealField As Boolean
        
        Private noOfParentSoftwareJobContainersField As Long
        
        Private noOfChildSoftwareJobContainersField As Long
        
        Private noOfSoftwareJobsField As Long
        
        Private nameField As String
        
        Private commentField As String
        
        Private softwareJobContainerPropertyMaskField As SoftwareJobContainerPropertyMask
        
        Private creationDateField As DateTime
        
        Private changeDateField As DateTime
        
        Private attribMaskField As AttributeMask
        
        Private waitCountField As Long
        
        Private activeCountField As Long
        
        Private errorCountField As Long
        
        Private okCountField As Long
        
        Private renewStateField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareJobContainerId() As String
            Get
                Return Me.softwareJobContainerIdField
            End Get
            Set
                Me.softwareJobContainerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property state() As SoftwareJobContainerState
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property seal() As Boolean
            Get
                Return Me.sealField
            End Get
            Set
                Me.sealField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfParentSoftwareJobContainers() As Long
            Get
                Return Me.noOfParentSoftwareJobContainersField
            End Get
            Set
                Me.noOfParentSoftwareJobContainersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfChildSoftwareJobContainers() As Long
            Get
                Return Me.noOfChildSoftwareJobContainersField
            End Get
            Set
                Me.noOfChildSoftwareJobContainersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfSoftwareJobs() As Long
            Get
                Return Me.noOfSoftwareJobsField
            End Get
            Set
                Me.noOfSoftwareJobsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMask() As SoftwareJobContainerPropertyMask
            Get
                Return Me.softwareJobContainerPropertyMaskField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDate() As DateTime
            Get
                Return Me.creationDateField
            End Get
            Set
                Me.creationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property changeDate() As DateTime
            Get
                Return Me.changeDateField
            End Get
            Set
                Me.changeDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property attribMask() As AttributeMask
            Get
                Return Me.attribMaskField
            End Get
            Set
                Me.attribMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property waitCount() As Long
            Get
                Return Me.waitCountField
            End Get
            Set
                Me.waitCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activeCount() As Long
            Get
                Return Me.activeCountField
            End Get
            Set
                Me.activeCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property errorCount() As Long
            Get
                Return Me.errorCountField
            End Get
            Set
                Me.errorCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property okCount() As Long
            Get
                Return Me.okCountField
            End Get
            Set
                Me.okCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property renewState() As Long
            Get
                Return Me.renewStateField
            End Get
            Set
                Me.renewStateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DistributionContainerOrderPropertiesRequired
        
        Private distributionContainerOrderIdRequiredField As Boolean
        
        Private distributionContainerOrderNameRequiredField As Boolean
        
        Private distributionContainerOrderTypeRequiredField As Boolean
        
        Private jobContainerPropertiesRequiredField As Boolean
        
        Private fetchItemOrderPropertiesRequiredField As Boolean
        
        '''<remarks/>
        Public Property distributionContainerOrderIdRequired() As Boolean
            Get
                Return Me.distributionContainerOrderIdRequiredField
            End Get
            Set
                Me.distributionContainerOrderIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property distributionContainerOrderNameRequired() As Boolean
            Get
                Return Me.distributionContainerOrderNameRequiredField
            End Get
            Set
                Me.distributionContainerOrderNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property distributionContainerOrderTypeRequired() As Boolean
            Get
                Return Me.distributionContainerOrderTypeRequiredField
            End Get
            Set
                Me.distributionContainerOrderTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property jobContainerPropertiesRequired() As Boolean
            Get
                Return Me.jobContainerPropertiesRequiredField
            End Get
            Set
                Me.jobContainerPropertiesRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property fetchItemOrderPropertiesRequired() As Boolean
            Get
                Return Me.fetchItemOrderPropertiesRequiredField
            End Get
            Set
                Me.fetchItemOrderPropertiesRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DistributionDomainProperties
        
        Private distributionDomainIdField As String
        
        Private domainIdField As String
        
        Private domainNameField As String
        
        Private domainDescriptionField As String
        
        Private percentSentField As Long
        
        Private distributionStatusField As DistributionStatus
        
        Private distributionMessageField As String
        
        Private distributionErrorCodeField As Long
        
        Private distributionOrderStatusField As DistributionOrderStatus
        
        Private distributionOrderMessageField As String
        
        Private distributionOrderErrorCodeField As Long
        
        Private distributionFailedOrderNumberField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property distributionDomainId() As String
            Get
                Return Me.distributionDomainIdField
            End Get
            Set
                Me.distributionDomainIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property domainId() As String
            Get
                Return Me.domainIdField
            End Get
            Set
                Me.domainIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property domainName() As String
            Get
                Return Me.domainNameField
            End Get
            Set
                Me.domainNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property domainDescription() As String
            Get
                Return Me.domainDescriptionField
            End Get
            Set
                Me.domainDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property percentSent() As Long
            Get
                Return Me.percentSentField
            End Get
            Set
                Me.percentSentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property distributionStatus() As DistributionStatus
            Get
                Return Me.distributionStatusField
            End Get
            Set
                Me.distributionStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property distributionMessage() As String
            Get
                Return Me.distributionMessageField
            End Get
            Set
                Me.distributionMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property distributionErrorCode() As Long
            Get
                Return Me.distributionErrorCodeField
            End Get
            Set
                Me.distributionErrorCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property distributionOrderStatus() As DistributionOrderStatus
            Get
                Return Me.distributionOrderStatusField
            End Get
            Set
                Me.distributionOrderStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property distributionOrderMessage() As String
            Get
                Return Me.distributionOrderMessageField
            End Get
            Set
                Me.distributionOrderMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property distributionOrderErrorCode() As Long
            Get
                Return Me.distributionOrderErrorCodeField
            End Get
            Set
                Me.distributionOrderErrorCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property distributionFailedOrderNumber() As Long
            Get
                Return Me.distributionFailedOrderNumberField
            End Get
            Set
                Me.distributionFailedOrderNumberField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum DistributionStatus
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DIST-OK")>  _
        DISTOK
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DIST-WAITING")>  _
        DISTWAITING
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DIST-ACTIVE")>  _
        DISTACTIVE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DIST-ERRORED")>  _
        DISTERRORED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DIST-HALTINPROGRESS")>  _
        DISTHALTINPROGRESS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DIST-HALTED")>  _
        DISTHALTED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DIST-TERMINATING")>  _
        DISTTERMINATING
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DIST-BUILDING")>  _
        DISTBUILDING
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum DistributionOrderStatus
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DIST-ORDER-OK")>  _
        DISTORDEROK
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DIST-ORDER-NO-STATUS")>  _
        DISTORDERNOSTATUS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DIST-ORDER-ERROR")>  _
        DISTORDERERROR
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DistributionDomainPropertiesRequired
        
        Private distributionDomainIdRequiredField As Boolean
        
        Private domainIdRequiredField As Boolean
        
        Private domainNameRequiredField As Boolean
        
        Private domainDescriptionRequiredField As Boolean
        
        Private percentSentRequiredField As Boolean
        
        Private distributionStatusRequiredField As Boolean
        
        Private distributionMessageRequiredField As Boolean
        
        Private distributionErrorCodeRequiredField As Boolean
        
        Private distributionOrderStatusRequiredField As Boolean
        
        Private distributionOrderMessageRequiredField As Boolean
        
        Private distributionOrderErrorCodeRequiredField As Boolean
        
        Private distributionFailedOrderNumberRequiredField As Boolean
        
        '''<remarks/>
        Public Property distributionDomainIdRequired() As Boolean
            Get
                Return Me.distributionDomainIdRequiredField
            End Get
            Set
                Me.distributionDomainIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property domainIdRequired() As Boolean
            Get
                Return Me.domainIdRequiredField
            End Get
            Set
                Me.domainIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property domainNameRequired() As Boolean
            Get
                Return Me.domainNameRequiredField
            End Get
            Set
                Me.domainNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property domainDescriptionRequired() As Boolean
            Get
                Return Me.domainDescriptionRequiredField
            End Get
            Set
                Me.domainDescriptionRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property percentSentRequired() As Boolean
            Get
                Return Me.percentSentRequiredField
            End Get
            Set
                Me.percentSentRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property distributionStatusRequired() As Boolean
            Get
                Return Me.distributionStatusRequiredField
            End Get
            Set
                Me.distributionStatusRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property distributionMessageRequired() As Boolean
            Get
                Return Me.distributionMessageRequiredField
            End Get
            Set
                Me.distributionMessageRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property distributionErrorCodeRequired() As Boolean
            Get
                Return Me.distributionErrorCodeRequiredField
            End Get
            Set
                Me.distributionErrorCodeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property distributionOrderStatusRequired() As Boolean
            Get
                Return Me.distributionOrderStatusRequiredField
            End Get
            Set
                Me.distributionOrderStatusRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property distributionOrderMessageRequired() As Boolean
            Get
                Return Me.distributionOrderMessageRequiredField
            End Get
            Set
                Me.distributionOrderMessageRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property distributionOrderErrorCodeRequired() As Boolean
            Get
                Return Me.distributionOrderErrorCodeRequiredField
            End Get
            Set
                Me.distributionOrderErrorCodeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property distributionFailedOrderNumberRequired() As Boolean
            Get
                Return Me.distributionFailedOrderNumberRequiredField
            End Get
            Set
                Me.distributionFailedOrderNumberRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DistributionContainerPropertiesRequired
        
        Private distributionContainerIdRequiredField As Boolean
        
        Private distributionContainerNameRequiredField As Boolean
        
        Private priorityRequiredField As Boolean
        
        Private distributionStatusRequiredField As Boolean
        
        Private distributionPermissionMaskRequiredField As Boolean
        
        Private regDateTimeRequiredField As Boolean
        
        Private distDateTimeRequiredField As Boolean
        
        Private haltDateTimeRequiredField As Boolean
        
        Private noOfDistributionDomainsRequiredField As Boolean
        
        Private ahdInfoRequiredField As Boolean
        
        '''<remarks/>
        Public Property distributionContainerIdRequired() As Boolean
            Get
                Return Me.distributionContainerIdRequiredField
            End Get
            Set
                Me.distributionContainerIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property distributionContainerNameRequired() As Boolean
            Get
                Return Me.distributionContainerNameRequiredField
            End Get
            Set
                Me.distributionContainerNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property priorityRequired() As Boolean
            Get
                Return Me.priorityRequiredField
            End Get
            Set
                Me.priorityRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property distributionStatusRequired() As Boolean
            Get
                Return Me.distributionStatusRequiredField
            End Get
            Set
                Me.distributionStatusRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property distributionPermissionMaskRequired() As Boolean
            Get
                Return Me.distributionPermissionMaskRequiredField
            End Get
            Set
                Me.distributionPermissionMaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property regDateTimeRequired() As Boolean
            Get
                Return Me.regDateTimeRequiredField
            End Get
            Set
                Me.regDateTimeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property distDateTimeRequired() As Boolean
            Get
                Return Me.distDateTimeRequiredField
            End Get
            Set
                Me.distDateTimeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property haltDateTimeRequired() As Boolean
            Get
                Return Me.haltDateTimeRequiredField
            End Get
            Set
                Me.haltDateTimeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfDistributionDomainsRequired() As Boolean
            Get
                Return Me.noOfDistributionDomainsRequiredField
            End Get
            Set
                Me.noOfDistributionDomainsRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ahdInfoRequired() As Boolean
            Get
                Return Me.ahdInfoRequiredField
            End Get
            Set
                Me.ahdInfoRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class NoOfDistributionDomains
        
        Private totalNoOfDomainsField As Long
        
        Private noOfDomainsWaitingField As Long
        
        Private noOfDomainsActiveField As Long
        
        Private noOfDomainsFailedField As Long
        
        Private noOfDomainsOKField As Long
        
        '''<remarks/>
        Public Property totalNoOfDomains() As Long
            Get
                Return Me.totalNoOfDomainsField
            End Get
            Set
                Me.totalNoOfDomainsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfDomainsWaiting() As Long
            Get
                Return Me.noOfDomainsWaitingField
            End Get
            Set
                Me.noOfDomainsWaitingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfDomainsActive() As Long
            Get
                Return Me.noOfDomainsActiveField
            End Get
            Set
                Me.noOfDomainsActiveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfDomainsFailed() As Long
            Get
                Return Me.noOfDomainsFailedField
            End Get
            Set
                Me.noOfDomainsFailedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfDomainsOK() As Long
            Get
                Return Me.noOfDomainsOKField
            End Get
            Set
                Me.noOfDomainsOKField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DistributionPermissionMask
        
        Private deleteAllowedField As Boolean
        
        Private haltAllowedField As Boolean
        
        Private renewAllowedField As Boolean
        
        Private resumeAllowedField As Boolean
        
        Private sendAllowedField As Boolean
        
        '''<remarks/>
        Public Property deleteAllowed() As Boolean
            Get
                Return Me.deleteAllowedField
            End Get
            Set
                Me.deleteAllowedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property haltAllowed() As Boolean
            Get
                Return Me.haltAllowedField
            End Get
            Set
                Me.haltAllowedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property renewAllowed() As Boolean
            Get
                Return Me.renewAllowedField
            End Get
            Set
                Me.renewAllowedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property resumeAllowed() As Boolean
            Get
                Return Me.resumeAllowedField
            End Get
            Set
                Me.resumeAllowedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sendAllowed() As Boolean
            Get
                Return Me.sendAllowedField
            End Get
            Set
                Me.sendAllowedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DistributionContainerProperties
        
        Private distributionContainerIdField As String
        
        Private distributionContainerNameField As String
        
        Private priorityField As Long
        
        Private distributionStatusField As DistributionStatus
        
        Private distributionPermissionMaskField As DistributionPermissionMask
        
        Private regDateTimeField As DateTime
        
        Private distDateTimeField As DateTime
        
        Private haltDateTimeField As DateTime
        
        Private noOfDistributionDomainsField As NoOfDistributionDomains
        
        Private ahdInfoField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property distributionContainerId() As String
            Get
                Return Me.distributionContainerIdField
            End Get
            Set
                Me.distributionContainerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property distributionContainerName() As String
            Get
                Return Me.distributionContainerNameField
            End Get
            Set
                Me.distributionContainerNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property priority() As Long
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property distributionStatus() As DistributionStatus
            Get
                Return Me.distributionStatusField
            End Get
            Set
                Me.distributionStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property distributionPermissionMask() As DistributionPermissionMask
            Get
                Return Me.distributionPermissionMaskField
            End Get
            Set
                Me.distributionPermissionMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property regDateTime() As DateTime
            Get
                Return Me.regDateTimeField
            End Get
            Set
                Me.regDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property distDateTime() As DateTime
            Get
                Return Me.distDateTimeField
            End Get
            Set
                Me.distDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property haltDateTime() As DateTime
            Get
                Return Me.haltDateTimeField
            End Get
            Set
                Me.haltDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property noOfDistributionDomains() As NoOfDistributionDomains
            Get
                Return Me.noOfDistributionDomainsField
            End Get
            Set
                Me.noOfDistributionDomainsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ahdInfo() As String
            Get
                Return Me.ahdInfoField
            End Get
            Set
                Me.ahdInfoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DeliveryDistributionContainerProperties
        
        Private distributionContainerIdField As String
        
        Private distributionDateTimeField As DateTime
        
        Private distributionDateTimeSuppliedField As Boolean
        
        Private haltDateTimeField As DateTime
        
        Private haltDateTimeSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property distributionContainerId() As String
            Get
                Return Me.distributionContainerIdField
            End Get
            Set
                Me.distributionContainerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property distributionDateTime() As DateTime
            Get
                Return Me.distributionDateTimeField
            End Get
            Set
                Me.distributionDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property distributionDateTimeSupplied() As Boolean
            Get
                Return Me.distributionDateTimeSuppliedField
            End Get
            Set
                Me.distributionDateTimeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property haltDateTime() As DateTime
            Get
                Return Me.haltDateTimeField
            End Get
            Set
                Me.haltDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property haltDateTimeSupplied() As Boolean
            Get
                Return Me.haltDateTimeSuppliedField
            End Get
            Set
                Me.haltDateTimeSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetDistributionContainerProperties
        
        Private priorityField As Long
        
        Private prioritySuppliedField As Boolean
        
        Private ahdInfoField As String
        
        Private ahdInfoSuppliedField As Boolean
        
        '''<remarks/>
        Public Property priority() As Long
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prioritySupplied() As Boolean
            Get
                Return Me.prioritySuppliedField
            End Get
            Set
                Me.prioritySuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ahdInfo() As String
            Get
                Return Me.ahdInfoField
            End Get
            Set
                Me.ahdInfoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ahdInfoSupplied() As Boolean
            Get
                Return Me.ahdInfoSuppliedField
            End Get
            Set
                Me.ahdInfoSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwareJobContainerOrder
        
        Private softwareJobContainerIdField As String
        
        Private positionField As Long
        
        Private positionSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareJobContainerId() As String
            Get
                Return Me.softwareJobContainerIdField
            End Get
            Set
                Me.softwareJobContainerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property position() As Long
            Get
                Return Me.positionField
            End Get
            Set
                Me.positionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property positionSupplied() As Boolean
            Get
                Return Me.positionSuppliedField
            End Get
            Set
                Me.positionSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePolicyOrder
        
        Private softwarePolicyIdField As String
        
        Private positionField As Long
        
        Private positionSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePolicyId() As String
            Get
                Return Me.softwarePolicyIdField
            End Get
            Set
                Me.softwarePolicyIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property position() As Long
            Get
                Return Me.positionField
            End Get
            Set
                Me.positionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property positionSupplied() As Boolean
            Get
                Return Me.positionSuppliedField
            End Get
            Set
                Me.positionSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProcedureOrder
        
        Private softwarePackageProcedureIdField As String
        
        Private positionField As Long
        
        Private positionSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureId() As String
            Get
                Return Me.softwarePackageProcedureIdField
            End Get
            Set
                Me.softwarePackageProcedureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property position() As Long
            Get
                Return Me.positionField
            End Get
            Set
                Me.positionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property positionSupplied() As Boolean
            Get
                Return Me.positionSuppliedField
            End Get
            Set
                Me.positionSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageOrder
        
        Private softwarePackageIdField As String
        
        Private positionField As Long
        
        Private positionSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageId() As String
            Get
                Return Me.softwarePackageIdField
            End Get
            Set
                Me.softwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property position() As Long
            Get
                Return Me.positionField
            End Get
            Set
                Me.positionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property positionSupplied() As Boolean
            Get
                Return Me.positionSuppliedField
            End Get
            Set
                Me.positionSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateDistributionContainerProperties
        
        Private nameField As String
        
        Private priorityField As Long
        
        Private prioritySuppliedField As Boolean
        
        Private ahdInfoField As String
        
        Private ahdInfoSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property priority() As Long
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prioritySupplied() As Boolean
            Get
                Return Me.prioritySuppliedField
            End Get
            Set
                Me.prioritySuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ahdInfo() As String
            Get
                Return Me.ahdInfoField
            End Get
            Set
                Me.ahdInfoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ahdInfoSupplied() As Boolean
            Get
                Return Me.ahdInfoSuppliedField
            End Get
            Set
                Me.ahdInfoSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DomainPropertyFilter
        
        Private domainPropertyField As DomainProperty
        
        Private searchStringField As String
        
        Private searchValueField As Long
        
        '''<remarks/>
        Public Property domainProperty() As DomainProperty
            Get
                Return Me.domainPropertyField
            End Get
            Set
                Me.domainPropertyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property searchString() As String
            Get
                Return Me.searchStringField
            End Get
            Set
                Me.searchStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property searchValue() As Long
            Get
                Return Me.searchValueField
            End Get
            Set
                Me.searchValueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum DomainProperty
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DOMAIN-UUID")>  _
        DOMAINUUID
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DOMAIN-PARENT-UUID")>  _
        DOMAINPARENTUUID
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DOMAIN-LABEL")>  _
        DOMAINLABEL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DOMAIN-DESCR")>  _
        DOMAINDESCR
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DOMAIN-CREATION-USER")>  _
        DOMAINCREATIONUSER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DOMAIN-LAST-UPDATED-USER")>  _
        DOMAINLASTUPDATEDUSER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DOMAIN-CONTACT-INFO")>  _
        DOMAINCONTACTINFO
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DOMAIN-DIS-HW-UUID")>  _
        DOMAINDISHWUUID
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DOMAIN-DB-HOST-NAME")>  _
        DOMAINDBHOSTNAME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DOMAIN-DB-SERVER")>  _
        DOMAINDBSERVER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DOMAIN-DB-TYPE")>  _
        DOMAINDBTYPE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DOMAIN-DB-NAME")>  _
        DOMAINDBNAME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DOMAIN-DB-USER-NAME")>  _
        DOMAINDBUSERNAME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DOMAIN-DB-INSTANCE")>  _
        DOMAINDBINSTANCE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DOMAIN-USAGE-LIST-MASK")>  _
        DOMAINUSAGELISTMASK
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DOMAIN-NUMBER")>  _
        DOMAINNUMBER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DOMAIN-LAST-UPDATED-DATE")>  _
        DOMAINLASTUPDATEDDATE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DOMAIN-TYPE")>  _
        DOMAINTYPE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DOMAIN-CREATION-DATE")>  _
        DOMAINCREATIONDATE
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetDomainGroupProperties
        
        Private groupLabelField As String
        
        Private groupLabelSuppliedField As Boolean
        
        Private groupDescriptionField As String
        
        Private groupDescriptionSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupLabel() As String
            Get
                Return Me.groupLabelField
            End Get
            Set
                Me.groupLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupLabelSupplied() As Boolean
            Get
                Return Me.groupLabelSuppliedField
            End Get
            Set
                Me.groupLabelSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupDescription() As String
            Get
                Return Me.groupDescriptionField
            End Get
            Set
                Me.groupDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupDescriptionSupplied() As Boolean
            Get
                Return Me.groupDescriptionSuppliedField
            End Get
            Set
                Me.groupDescriptionSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateDomainGroupProperties
        
        Private groupLabelField As String
        
        Private groupDescriptionField As String
        
        Private groupDescriptionSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupLabel() As String
            Get
                Return Me.groupLabelField
            End Get
            Set
                Me.groupLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupDescription() As String
            Get
                Return Me.groupDescriptionField
            End Get
            Set
                Me.groupDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupDescriptionSupplied() As Boolean
            Get
                Return Me.groupDescriptionSuppliedField
            End Get
            Set
                Me.groupDescriptionSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DomainGroupProperties
        
        Private groupUUIDField As String
        
        Private groupLabelField As String
        
        Private groupDescriptionField As String
        
        Private groupInheritanceField As GroupInheritance
        
        Private creationUserField As String
        
        Private creationDateField As DateTime
        
        Private lastUpdatedUserField As String
        
        Private lastUpdatedDateField As DateTime
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupUUID() As String
            Get
                Return Me.groupUUIDField
            End Get
            Set
                Me.groupUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupLabel() As String
            Get
                Return Me.groupLabelField
            End Get
            Set
                Me.groupLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupDescription() As String
            Get
                Return Me.groupDescriptionField
            End Get
            Set
                Me.groupDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupInheritance() As GroupInheritance
            Get
                Return Me.groupInheritanceField
            End Get
            Set
                Me.groupInheritanceField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property creationUser() As String
            Get
                Return Me.creationUserField
            End Get
            Set
                Me.creationUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDate() As DateTime
            Get
                Return Me.creationDateField
            End Get
            Set
                Me.creationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property lastUpdatedUser() As String
            Get
                Return Me.lastUpdatedUserField
            End Get
            Set
                Me.lastUpdatedUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastUpdatedDate() As DateTime
            Get
                Return Me.lastUpdatedDateField
            End Get
            Set
                Me.lastUpdatedDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum GroupInheritance
        
        '''<remarks/>
        FLAT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SINGLE-PARENT")>  _
        SINGLEPARENT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MULTIPLE-PARENT")>  _
        MULTIPLEPARENT
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DomainGroupPropertiesRequired
        
        Private groupUUIDRequiredField As Integer
        
        Private groupLabelRequiredField As Integer
        
        Private groupInheritanceRequiredField As Integer
        
        Private groupDescriptionRequiredField As Integer
        
        Private creationUserRequiredField As Integer
        
        Private creationDateRequiredField As Integer
        
        Private lastUpdatedUserRequiredField As Integer
        
        Private lastUpdatedDateRequiredField As Integer
        
        '''<remarks/>
        Public Property groupUUIDRequired() As Integer
            Get
                Return Me.groupUUIDRequiredField
            End Get
            Set
                Me.groupUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupLabelRequired() As Integer
            Get
                Return Me.groupLabelRequiredField
            End Get
            Set
                Me.groupLabelRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupInheritanceRequired() As Integer
            Get
                Return Me.groupInheritanceRequiredField
            End Get
            Set
                Me.groupInheritanceRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupDescriptionRequired() As Integer
            Get
                Return Me.groupDescriptionRequiredField
            End Get
            Set
                Me.groupDescriptionRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationUserRequired() As Integer
            Get
                Return Me.creationUserRequiredField
            End Get
            Set
                Me.creationUserRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDateRequired() As Integer
            Get
                Return Me.creationDateRequiredField
            End Get
            Set
                Me.creationDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastUpdatedUserRequired() As Integer
            Get
                Return Me.lastUpdatedUserRequiredField
            End Get
            Set
                Me.lastUpdatedUserRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastUpdatedDateRequired() As Integer
            Get
                Return Me.lastUpdatedDateRequiredField
            End Get
            Set
                Me.lastUpdatedDateRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DomainProperties
        
        Private domainUUIDField As String
        
        Private domainTypeField As DomainType
        
        Private parentDomainUUIDField As String
        
        Private domainLabelField As String
        
        Private domainDescriptionField As String
        
        Private creationUserField As String
        
        Private creationDateField As DateTime
        
        Private lastUpdatedUserField As String
        
        Private lastUpdatedDateField As DateTime
        
        Private contactInformationField As String
        
        Private disHWUUIDField As String
        
        Private dbHostNameField As String
        
        Private dbServerField As String
        
        Private dbTypeField As String
        
        Private dbNameField As String
        
        Private dbUserNameField As String
        
        Private dbInstanceField As String
        
        Private domainNumberField As Long
        
        Private usageListField As UsageListMask
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property domainUUID() As String
            Get
                Return Me.domainUUIDField
            End Get
            Set
                Me.domainUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property domainType() As DomainType
            Get
                Return Me.domainTypeField
            End Get
            Set
                Me.domainTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property parentDomainUUID() As String
            Get
                Return Me.parentDomainUUIDField
            End Get
            Set
                Me.parentDomainUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property domainLabel() As String
            Get
                Return Me.domainLabelField
            End Get
            Set
                Me.domainLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property domainDescription() As String
            Get
                Return Me.domainDescriptionField
            End Get
            Set
                Me.domainDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property creationUser() As String
            Get
                Return Me.creationUserField
            End Get
            Set
                Me.creationUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDate() As DateTime
            Get
                Return Me.creationDateField
            End Get
            Set
                Me.creationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property lastUpdatedUser() As String
            Get
                Return Me.lastUpdatedUserField
            End Get
            Set
                Me.lastUpdatedUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastUpdatedDate() As DateTime
            Get
                Return Me.lastUpdatedDateField
            End Get
            Set
                Me.lastUpdatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property contactInformation() As String
            Get
                Return Me.contactInformationField
            End Get
            Set
                Me.contactInformationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property disHWUUID() As String
            Get
                Return Me.disHWUUIDField
            End Get
            Set
                Me.disHWUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dbHostName() As String
            Get
                Return Me.dbHostNameField
            End Get
            Set
                Me.dbHostNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dbServer() As String
            Get
                Return Me.dbServerField
            End Get
            Set
                Me.dbServerField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dbType() As String
            Get
                Return Me.dbTypeField
            End Get
            Set
                Me.dbTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dbName() As String
            Get
                Return Me.dbNameField
            End Get
            Set
                Me.dbNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dbUserName() As String
            Get
                Return Me.dbUserNameField
            End Get
            Set
                Me.dbUserNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dbInstance() As String
            Get
                Return Me.dbInstanceField
            End Get
            Set
                Me.dbInstanceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property domainNumber() As Long
            Get
                Return Me.domainNumberField
            End Get
            Set
                Me.domainNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property usageList() As UsageListMask
            Get
                Return Me.usageListField
            End Get
            Set
                Me.usageListField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum DomainType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-ENTERPRISE")>  _
        WSENTERPRISE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-DOMAIN")>  _
        WSDOMAIN
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DomainPropertiesRequired
        
        Private domainUUIDRequiredField As Boolean
        
        Private domainTypeRequiredField As Boolean
        
        Private parentDomainUUIDRequiredField As Boolean
        
        Private domainLabelRequiredField As Boolean
        
        Private domainDescriptionRequiredField As Boolean
        
        Private creationUserRequiredField As Boolean
        
        Private creationDateRequiredField As Boolean
        
        Private lastUpdatedUserRequiredField As Boolean
        
        Private lastUpdatedDateRequiredField As Boolean
        
        Private contactInformationRequiredField As Boolean
        
        Private disHWUUIDRequiredField As Boolean
        
        Private dbHostNameRequiredField As Boolean
        
        Private dbServerRequiredField As Boolean
        
        Private dbTypeRequiredField As Boolean
        
        Private dbNameRequiredField As Boolean
        
        Private dbUserNameRequiredField As Boolean
        
        Private dbInstanceRequiredField As Boolean
        
        Private domainNumberRequiredField As Boolean
        
        Private usageListRequiredField As Boolean
        
        '''<remarks/>
        Public Property domainUUIDRequired() As Boolean
            Get
                Return Me.domainUUIDRequiredField
            End Get
            Set
                Me.domainUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property domainTypeRequired() As Boolean
            Get
                Return Me.domainTypeRequiredField
            End Get
            Set
                Me.domainTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property parentDomainUUIDRequired() As Boolean
            Get
                Return Me.parentDomainUUIDRequiredField
            End Get
            Set
                Me.parentDomainUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property domainLabelRequired() As Boolean
            Get
                Return Me.domainLabelRequiredField
            End Get
            Set
                Me.domainLabelRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property domainDescriptionRequired() As Boolean
            Get
                Return Me.domainDescriptionRequiredField
            End Get
            Set
                Me.domainDescriptionRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationUserRequired() As Boolean
            Get
                Return Me.creationUserRequiredField
            End Get
            Set
                Me.creationUserRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDateRequired() As Boolean
            Get
                Return Me.creationDateRequiredField
            End Get
            Set
                Me.creationDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastUpdatedUserRequired() As Boolean
            Get
                Return Me.lastUpdatedUserRequiredField
            End Get
            Set
                Me.lastUpdatedUserRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastUpdatedDateRequired() As Boolean
            Get
                Return Me.lastUpdatedDateRequiredField
            End Get
            Set
                Me.lastUpdatedDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property contactInformationRequired() As Boolean
            Get
                Return Me.contactInformationRequiredField
            End Get
            Set
                Me.contactInformationRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property disHWUUIDRequired() As Boolean
            Get
                Return Me.disHWUUIDRequiredField
            End Get
            Set
                Me.disHWUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dbHostNameRequired() As Boolean
            Get
                Return Me.dbHostNameRequiredField
            End Get
            Set
                Me.dbHostNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dbServerRequired() As Boolean
            Get
                Return Me.dbServerRequiredField
            End Get
            Set
                Me.dbServerRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dbTypeRequired() As Boolean
            Get
                Return Me.dbTypeRequiredField
            End Get
            Set
                Me.dbTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dbNameRequired() As Boolean
            Get
                Return Me.dbNameRequiredField
            End Get
            Set
                Me.dbNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dbUserNameRequired() As Boolean
            Get
                Return Me.dbUserNameRequiredField
            End Get
            Set
                Me.dbUserNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dbInstanceRequired() As Boolean
            Get
                Return Me.dbInstanceRequiredField
            End Get
            Set
                Me.dbInstanceRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property domainNumberRequired() As Boolean
            Get
                Return Me.domainNumberRequiredField
            End Get
            Set
                Me.domainNumberRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property usageListRequired() As Boolean
            Get
                Return Me.usageListRequiredField
            End Get
            Set
                Me.usageListRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwareByName
        
        Private softwarePackageNameField As String
        
        Private softwarePackageVersionField As String
        
        Private softwarePackageProcedureNameField As String
        
        Private softwarePackageInstallProcedureNameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageName() As String
            Get
                Return Me.softwarePackageNameField
            End Get
            Set
                Me.softwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVersion() As String
            Get
                Return Me.softwarePackageVersionField
            End Get
            Set
                Me.softwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureName() As String
            Get
                Return Me.softwarePackageProcedureNameField
            End Get
            Set
                Me.softwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageInstallProcedureName() As String
            Get
                Return Me.softwarePackageInstallProcedureNameField
            End Get
            Set
                Me.softwarePackageInstallProcedureNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePolicyPropertiesByName
        
        Private softwarePolicyNameField As String
        
        Private objectPreferenceField As ObjectPreference
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePolicyName() As String
            Get
                Return Me.softwarePolicyNameField
            End Get
            Set
                Me.softwarePolicyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property objectPreference() As ObjectPreference
            Get
                Return Me.objectPreferenceField
            End Get
            Set
                Me.objectPreferenceField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum ObjectPreference
        
        '''<remarks/>
        LOCALLY
        
        '''<remarks/>
        REPLICATE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("N0-PREFERENCE")>  _
        N0PREFERENCE
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackage
        
        Private softwarePackageNameField As String
        
        Private softwarePackageVersionField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageName() As String
            Get
                Return Me.softwarePackageNameField
            End Get
            Set
                Me.softwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVersion() As String
            Get
                Return Me.softwarePackageVersionField
            End Get
            Set
                Me.softwarePackageVersionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ComputerPropertiesByName
        
        Private computerNameField As String
        
        Private objectPreferenceField As ObjectPreference
        
        Private domainNameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerName() As String
            Get
                Return Me.computerNameField
            End Get
            Set
                Me.computerNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property objectPreference() As ObjectPreference
            Get
                Return Me.objectPreferenceField
            End Get
            Set
                Me.objectPreferenceField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property domainName() As String
            Get
                Return Me.domainNameField
            End Get
            Set
                Me.domainNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UnitGroupPropertiesByName
        
        Private unitGroupNameField As String
        
        Private objectPreferenceField As ObjectPreference
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitGroupName() As String
            Get
                Return Me.unitGroupNameField
            End Get
            Set
                Me.unitGroupNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property objectPreference() As ObjectPreference
            Get
                Return Me.objectPreferenceField
            End Get
            Set
                Me.objectPreferenceField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePolicyProperties2
        
        Private softwarePolicyIdField As String
        
        Private stateField As SoftwarePolicyState
        
        Private sealField As Boolean
        
        Private noOfParentSoftwarePoliciesField As Long
        
        Private noOfChildSoftwarePoliciesField As Long
        
        Private noOfSoftwareJobsField As Long
        
        Private nameField As String
        
        Private commentField As String
        
        Private priorityField As Long
        
        Private softwarePolicyEvaluationTypeField As SoftwarePolicyEvaluationType
        
        Private softwareJobLinkageField As SoftwareJobLinkage
        
        Private unitGroupIdField As String
        
        Private creationDateField As DateTime
        
        Private changeDateField As DateTime
        
        Private attributeMaskField As AttributeMask
        
        Private evaluationCalendarField As String
        
        Private evaluationPeriodField As Long
        
        Private nextEvaluationDateField As DateTime
        
        Private evaluationDateField As DateTime
        
        Private adhocTargetEvaluationField As AdhocTargetEvaluation
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePolicyId() As String
            Get
                Return Me.softwarePolicyIdField
            End Get
            Set
                Me.softwarePolicyIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property state() As SoftwarePolicyState
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property seal() As Boolean
            Get
                Return Me.sealField
            End Get
            Set
                Me.sealField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfParentSoftwarePolicies() As Long
            Get
                Return Me.noOfParentSoftwarePoliciesField
            End Get
            Set
                Me.noOfParentSoftwarePoliciesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfChildSoftwarePolicies() As Long
            Get
                Return Me.noOfChildSoftwarePoliciesField
            End Get
            Set
                Me.noOfChildSoftwarePoliciesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfSoftwareJobs() As Long
            Get
                Return Me.noOfSoftwareJobsField
            End Get
            Set
                Me.noOfSoftwareJobsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property priority() As Long
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationType() As SoftwarePolicyEvaluationType
            Get
                Return Me.softwarePolicyEvaluationTypeField
            End Get
            Set
                Me.softwarePolicyEvaluationTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobLinkage() As SoftwareJobLinkage
            Get
                Return Me.softwareJobLinkageField
            End Get
            Set
                Me.softwareJobLinkageField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitGroupId() As String
            Get
                Return Me.unitGroupIdField
            End Get
            Set
                Me.unitGroupIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDate() As DateTime
            Get
                Return Me.creationDateField
            End Get
            Set
                Me.creationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property changeDate() As DateTime
            Get
                Return Me.changeDateField
            End Get
            Set
                Me.changeDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property attributeMask() As AttributeMask
            Get
                Return Me.attributeMaskField
            End Get
            Set
                Me.attributeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property evaluationCalendar() As String
            Get
                Return Me.evaluationCalendarField
            End Get
            Set
                Me.evaluationCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriod() As Long
            Get
                Return Me.evaluationPeriodField
            End Get
            Set
                Me.evaluationPeriodField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nextEvaluationDate() As DateTime
            Get
                Return Me.nextEvaluationDateField
            End Get
            Set
                Me.nextEvaluationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationDate() As DateTime
            Get
                Return Me.evaluationDateField
            End Get
            Set
                Me.evaluationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property adhocTargetEvaluation() As AdhocTargetEvaluation
            Get
                Return Me.adhocTargetEvaluationField
            End Get
            Set
                Me.adhocTargetEvaluationField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePolicyPropertiesRequired2
        
        Private softwarePolicyIdRequiredField As Boolean
        
        Private stateRequiredField As Boolean
        
        Private sealRequiredField As Boolean
        
        Private noOfParentSoftwarePoliciesRequiredField As Boolean
        
        Private noOfChildSoftwarePoliciesRequiredField As Boolean
        
        Private noOfSoftwareJobsRequiredField As Boolean
        
        Private nameRequiredField As Boolean
        
        Private commentRequiredField As Boolean
        
        Private priorityRequiredField As Boolean
        
        Private softwarePolicyEvaluationTypeRequiredField As Boolean
        
        Private softwareJobLinkageRequiredField As Boolean
        
        Private unitGroupIdRequiredField As Boolean
        
        Private creationDateRequiredField As Boolean
        
        Private changeDateRequiredField As Boolean
        
        Private attribMaskRequiredField As Boolean
        
        Private evaluationCalendarRequiredField As Boolean
        
        Private evaluationPeriodRequiredField As Boolean
        
        Private nextEvaluationDateRequiredField As Boolean
        
        Private evaluationDateRequiredField As Boolean
        
        Private adhocTargetEvaluationRequiredField As Boolean
        
        '''<remarks/>
        Public Property softwarePolicyIdRequired() As Boolean
            Get
                Return Me.softwarePolicyIdRequiredField
            End Get
            Set
                Me.softwarePolicyIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property stateRequired() As Boolean
            Get
                Return Me.stateRequiredField
            End Get
            Set
                Me.stateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sealRequired() As Boolean
            Get
                Return Me.sealRequiredField
            End Get
            Set
                Me.sealRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfParentSoftwarePoliciesRequired() As Boolean
            Get
                Return Me.noOfParentSoftwarePoliciesRequiredField
            End Get
            Set
                Me.noOfParentSoftwarePoliciesRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfChildSoftwarePoliciesRequired() As Boolean
            Get
                Return Me.noOfChildSoftwarePoliciesRequiredField
            End Get
            Set
                Me.noOfChildSoftwarePoliciesRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfSoftwareJobsRequired() As Boolean
            Get
                Return Me.noOfSoftwareJobsRequiredField
            End Get
            Set
                Me.noOfSoftwareJobsRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameRequired() As Boolean
            Get
                Return Me.nameRequiredField
            End Get
            Set
                Me.nameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentRequired() As Boolean
            Get
                Return Me.commentRequiredField
            End Get
            Set
                Me.commentRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property priorityRequired() As Boolean
            Get
                Return Me.priorityRequiredField
            End Get
            Set
                Me.priorityRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationTypeRequired() As Boolean
            Get
                Return Me.softwarePolicyEvaluationTypeRequiredField
            End Get
            Set
                Me.softwarePolicyEvaluationTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobLinkageRequired() As Boolean
            Get
                Return Me.softwareJobLinkageRequiredField
            End Get
            Set
                Me.softwareJobLinkageRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitGroupIdRequired() As Boolean
            Get
                Return Me.unitGroupIdRequiredField
            End Get
            Set
                Me.unitGroupIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDateRequired() As Boolean
            Get
                Return Me.creationDateRequiredField
            End Get
            Set
                Me.creationDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property changeDateRequired() As Boolean
            Get
                Return Me.changeDateRequiredField
            End Get
            Set
                Me.changeDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property attribMaskRequired() As Boolean
            Get
                Return Me.attribMaskRequiredField
            End Get
            Set
                Me.attribMaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationCalendarRequired() As Boolean
            Get
                Return Me.evaluationCalendarRequiredField
            End Get
            Set
                Me.evaluationCalendarRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriodRequired() As Boolean
            Get
                Return Me.evaluationPeriodRequiredField
            End Get
            Set
                Me.evaluationPeriodRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nextEvaluationDateRequired() As Boolean
            Get
                Return Me.nextEvaluationDateRequiredField
            End Get
            Set
                Me.nextEvaluationDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationDateRequired() As Boolean
            Get
                Return Me.evaluationDateRequiredField
            End Get
            Set
                Me.evaluationDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property adhocTargetEvaluationRequired() As Boolean
            Get
                Return Me.adhocTargetEvaluationRequiredField
            End Get
            Set
                Me.adhocTargetEvaluationRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwareJobContainerProperties2
        
        Private softwareJobContainerIdField As String
        
        Private stateField As SoftwareJobContainerState
        
        Private sealField As Boolean
        
        Private noOfParentSoftwareJobContainersField As Long
        
        Private noOfChildSoftwareJobContainersField As Long
        
        Private noOfSoftwareJobsField As Long
        
        Private nameField As String
        
        Private commentField As String
        
        Private priorityField As Long
        
        Private softwareJobContainerPropertyMaskField As SoftwareJobContainerPropertyMask
        
        Private creationDateField As DateTime
        
        Private changeDateField As DateTime
        
        Private attribMaskField As AttributeMask
        
        Private waitCountField As Long
        
        Private activeCountField As Long
        
        Private errorCountField As Long
        
        Private okCountField As Long
        
        Private renewStateField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareJobContainerId() As String
            Get
                Return Me.softwareJobContainerIdField
            End Get
            Set
                Me.softwareJobContainerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property state() As SoftwareJobContainerState
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property seal() As Boolean
            Get
                Return Me.sealField
            End Get
            Set
                Me.sealField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfParentSoftwareJobContainers() As Long
            Get
                Return Me.noOfParentSoftwareJobContainersField
            End Get
            Set
                Me.noOfParentSoftwareJobContainersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfChildSoftwareJobContainers() As Long
            Get
                Return Me.noOfChildSoftwareJobContainersField
            End Get
            Set
                Me.noOfChildSoftwareJobContainersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfSoftwareJobs() As Long
            Get
                Return Me.noOfSoftwareJobsField
            End Get
            Set
                Me.noOfSoftwareJobsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property priority() As Long
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMask() As SoftwareJobContainerPropertyMask
            Get
                Return Me.softwareJobContainerPropertyMaskField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDate() As DateTime
            Get
                Return Me.creationDateField
            End Get
            Set
                Me.creationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property changeDate() As DateTime
            Get
                Return Me.changeDateField
            End Get
            Set
                Me.changeDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property attribMask() As AttributeMask
            Get
                Return Me.attribMaskField
            End Get
            Set
                Me.attribMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property waitCount() As Long
            Get
                Return Me.waitCountField
            End Get
            Set
                Me.waitCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activeCount() As Long
            Get
                Return Me.activeCountField
            End Get
            Set
                Me.activeCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property errorCount() As Long
            Get
                Return Me.errorCountField
            End Get
            Set
                Me.errorCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property okCount() As Long
            Get
                Return Me.okCountField
            End Get
            Set
                Me.okCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property renewState() As Long
            Get
                Return Me.renewStateField
            End Get
            Set
                Me.renewStateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwareJobContainerPropertiesRequired2
        
        Private softwareJobContainerIdRequiredField As Boolean
        
        Private stateRequiredField As Boolean
        
        Private sealRequiredField As Boolean
        
        Private noOfParentSoftwareJobContainersRequiredField As Boolean
        
        Private noOfChildSoftwareJobContainersRequiredField As Boolean
        
        Private noOfSoftwareJobsRequiredField As Boolean
        
        Private nameRequiredField As Boolean
        
        Private commentRequiredField As Boolean
        
        Private priorityRequiredField As Boolean
        
        Private softwareJobContainerPropertyMaskRequiredField As Boolean
        
        Private creationDateRequiredField As Boolean
        
        Private changeDateRequiredField As Boolean
        
        Private attribMaskRequiredField As Boolean
        
        Private waitCountRequiredField As Boolean
        
        Private activeCountRequiredField As Boolean
        
        Private errorCountRequiredField As Boolean
        
        Private okCountRequiredField As Boolean
        
        Private renewStateRequiredField As Boolean
        
        '''<remarks/>
        Public Property softwareJobContainerIdRequired() As Boolean
            Get
                Return Me.softwareJobContainerIdRequiredField
            End Get
            Set
                Me.softwareJobContainerIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property stateRequired() As Boolean
            Get
                Return Me.stateRequiredField
            End Get
            Set
                Me.stateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sealRequired() As Boolean
            Get
                Return Me.sealRequiredField
            End Get
            Set
                Me.sealRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfParentSoftwareJobContainersRequired() As Boolean
            Get
                Return Me.noOfParentSoftwareJobContainersRequiredField
            End Get
            Set
                Me.noOfParentSoftwareJobContainersRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfChildSoftwareJobContainersRequired() As Boolean
            Get
                Return Me.noOfChildSoftwareJobContainersRequiredField
            End Get
            Set
                Me.noOfChildSoftwareJobContainersRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfSoftwareJobsRequired() As Boolean
            Get
                Return Me.noOfSoftwareJobsRequiredField
            End Get
            Set
                Me.noOfSoftwareJobsRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameRequired() As Boolean
            Get
                Return Me.nameRequiredField
            End Get
            Set
                Me.nameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentRequired() As Boolean
            Get
                Return Me.commentRequiredField
            End Get
            Set
                Me.commentRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property priorityRequired() As Boolean
            Get
                Return Me.priorityRequiredField
            End Get
            Set
                Me.priorityRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMaskRequired() As Boolean
            Get
                Return Me.softwareJobContainerPropertyMaskRequiredField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDateRequired() As Boolean
            Get
                Return Me.creationDateRequiredField
            End Get
            Set
                Me.creationDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property changeDateRequired() As Boolean
            Get
                Return Me.changeDateRequiredField
            End Get
            Set
                Me.changeDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property attribMaskRequired() As Boolean
            Get
                Return Me.attribMaskRequiredField
            End Get
            Set
                Me.attribMaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property waitCountRequired() As Boolean
            Get
                Return Me.waitCountRequiredField
            End Get
            Set
                Me.waitCountRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activeCountRequired() As Boolean
            Get
                Return Me.activeCountRequiredField
            End Get
            Set
                Me.activeCountRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property errorCountRequired() As Boolean
            Get
                Return Me.errorCountRequiredField
            End Get
            Set
                Me.errorCountRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property okCountRequired() As Boolean
            Get
                Return Me.okCountRequiredField
            End Get
            Set
                Me.okCountRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property renewStateRequired() As Boolean
            Get
                Return Me.renewStateRequiredField
            End Get
            Set
                Me.renewStateRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSoftwareJobContainerProperties2
        
        Private nameField As String
        
        Private nameSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private priorityField As Long
        
        Private prioritySuppliedField As Boolean
        
        Private softwareJobContainerPropertyMaskField As SoftwareJobContainerPropertyMask
        
        Private softwareJobContainerPropertyMaskSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameSupplied() As Boolean
            Get
                Return Me.nameSuppliedField
            End Get
            Set
                Me.nameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property priority() As Long
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prioritySupplied() As Boolean
            Get
                Return Me.prioritySuppliedField
            End Get
            Set
                Me.prioritySuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMask() As SoftwareJobContainerPropertyMask
            Get
                Return Me.softwareJobContainerPropertyMaskField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMaskSupplied() As Boolean
            Get
                Return Me.softwareJobContainerPropertyMaskSuppliedField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSoftwareJobContainerProperties2
        
        Private nameField As String
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private priorityField As Long
        
        Private prioritySuppliedField As Boolean
        
        Private parentSoftwareJobContainerIdField As String
        
        Private parentSoftwareJobContainerIdSuppliedField As Boolean
        
        Private softwareJobContainerPropertyMaskField As SoftwareJobContainerPropertyMask
        
        Private softwareJobContainerPropertyMaskSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property priority() As Long
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prioritySupplied() As Boolean
            Get
                Return Me.prioritySuppliedField
            End Get
            Set
                Me.prioritySuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property parentSoftwareJobContainerId() As String
            Get
                Return Me.parentSoftwareJobContainerIdField
            End Get
            Set
                Me.parentSoftwareJobContainerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property parentSoftwareJobContainerIdSupplied() As Boolean
            Get
                Return Me.parentSoftwareJobContainerIdSuppliedField
            End Get
            Set
                Me.parentSoftwareJobContainerIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMask() As SoftwareJobContainerPropertyMask
            Get
                Return Me.softwareJobContainerPropertyMaskField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMaskSupplied() As Boolean
            Get
                Return Me.softwareJobContainerPropertyMaskSuppliedField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwareJobProperties2
        
        Private softwareJobIdField As String
        
        Private softwareJobNameField As String
        
        Private softwarePackageIdField As String
        
        Private softwarePackageNameField As String
        
        Private softwarePackageVersionField As String
        
        Private softwarePackageTypeField As SoftwarePackageType
        
        Private softwarePackageProcedureIdField As String
        
        Private softwarePackageProcedureNameField As String
        
        Private executionDateField As DateTime
        
        Private createdDateField As DateTime
        
        Private timeoutHoursField As Long
        
        Private softwareJobTypeField As SoftwareJobType
        
        Private softwareJobStateField As SoftwareJobState
        
        Private startWhenField As SoftwareJobStartupTime
        
        Private permissionMaskField As SoftwareJobPermissionMask
        
        Private bootBeforeMaskField As SoftwareJobBootMask
        
        Private bootAfterMaskField As SoftwareJobBootMask
        
        Private operationMask2Field As SoftwareJobOperationMask2
        
        Private userParametersField As String
        
        Private jobStatusCountersField As SoftwareJobStatusCounters
        
        Private internalMaskField As Long
        
        Private orderNumberField As Long
        
        Private promptTimeoutHoursField As Long
        
        Private softwareJobTaskField As SoftwareJobTask
        
        Private deliveryCalendarField As String
        
        Private deliveryDateField As DateTime
        
        Private causeField As Long
        
        Private causeParamField As String
        
        Private renewStateField As SoftwareJobRenewState
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareJobId() As String
            Get
                Return Me.softwareJobIdField
            End Get
            Set
                Me.softwareJobIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareJobName() As String
            Get
                Return Me.softwareJobNameField
            End Get
            Set
                Me.softwareJobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageId() As String
            Get
                Return Me.softwarePackageIdField
            End Get
            Set
                Me.softwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageName() As String
            Get
                Return Me.softwarePackageNameField
            End Get
            Set
                Me.softwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVersion() As String
            Get
                Return Me.softwarePackageVersionField
            End Get
            Set
                Me.softwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageType() As SoftwarePackageType
            Get
                Return Me.softwarePackageTypeField
            End Get
            Set
                Me.softwarePackageTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureId() As String
            Get
                Return Me.softwarePackageProcedureIdField
            End Get
            Set
                Me.softwarePackageProcedureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureName() As String
            Get
                Return Me.softwarePackageProcedureNameField
            End Get
            Set
                Me.softwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property executionDate() As DateTime
            Get
                Return Me.executionDateField
            End Get
            Set
                Me.executionDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property createdDate() As DateTime
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeoutHours() As Long
            Get
                Return Me.timeoutHoursField
            End Get
            Set
                Me.timeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobType() As SoftwareJobType
            Get
                Return Me.softwareJobTypeField
            End Get
            Set
                Me.softwareJobTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobState() As SoftwareJobState
            Get
                Return Me.softwareJobStateField
            End Get
            Set
                Me.softwareJobStateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhen() As SoftwareJobStartupTime
            Get
                Return Me.startWhenField
            End Get
            Set
                Me.startWhenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property permissionMask() As SoftwareJobPermissionMask
            Get
                Return Me.permissionMaskField
            End Get
            Set
                Me.permissionMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwareJobBootMask
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwareJobBootMask
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask2() As SoftwareJobOperationMask2
            Get
                Return Me.operationMask2Field
            End Get
            Set
                Me.operationMask2Field = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userParameters() As String
            Get
                Return Me.userParametersField
            End Get
            Set
                Me.userParametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property jobStatusCounters() As SoftwareJobStatusCounters
            Get
                Return Me.jobStatusCountersField
            End Get
            Set
                Me.jobStatusCountersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property internalMask() As Long
            Get
                Return Me.internalMaskField
            End Get
            Set
                Me.internalMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property orderNumber() As Long
            Get
                Return Me.orderNumberField
            End Get
            Set
                Me.orderNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHours() As Long
            Get
                Return Me.promptTimeoutHoursField
            End Get
            Set
                Me.promptTimeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobTask() As SoftwareJobTask
            Get
                Return Me.softwareJobTaskField
            End Get
            Set
                Me.softwareJobTaskField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property deliveryCalendar() As String
            Get
                Return Me.deliveryCalendarField
            End Get
            Set
                Me.deliveryCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryDate() As DateTime
            Get
                Return Me.deliveryDateField
            End Get
            Set
                Me.deliveryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cause() As Long
            Get
                Return Me.causeField
            End Get
            Set
                Me.causeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property causeParam() As String
            Get
                Return Me.causeParamField
            End Get
            Set
                Me.causeParamField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property renewState() As SoftwareJobRenewState
            Get
                Return Me.renewStateField
            End Get
            Set
                Me.renewStateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwareJobBootMask
        
        Private noRebootField As Boolean
        
        Private rebootField As Boolean
        
        Private logoffField As Boolean
        
        Private rebootAfterLastField As Boolean
        
        Private logoffAfterLastField As Boolean
        
        '''<remarks/>
        Public Property noReboot() As Boolean
            Get
                Return Me.noRebootField
            End Get
            Set
                Me.noRebootField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property reboot() As Boolean
            Get
                Return Me.rebootField
            End Get
            Set
                Me.rebootField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property logoff() As Boolean
            Get
                Return Me.logoffField
            End Get
            Set
                Me.logoffField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rebootAfterLast() As Boolean
            Get
                Return Me.rebootAfterLastField
            End Get
            Set
                Me.rebootAfterLastField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property logoffAfterLast() As Boolean
            Get
                Return Me.logoffAfterLastField
            End Get
            Set
                Me.logoffAfterLastField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSoftwareJobProperties2
        
        Private softwareJobNameField As String
        
        Private softwareJobNameSuppliedField As Boolean
        
        Private executionDateField As DateTime
        
        Private executionDateSuppliedField As Boolean
        
        Private timeoutHoursField As Long
        
        Private timeoutHoursSuppliedField As Boolean
        
        Private startWhenField As SoftwareJobStartupTime
        
        Private startWhenSuppliedField As Boolean
        
        Private bootBeforeMaskField As SoftwareJobBootMask
        
        Private bootBeforeMaskSuppliedField As Boolean
        
        Private bootAfterMaskField As SoftwareJobBootMask
        
        Private bootAfterMaskSuppliedField As Boolean
        
        Private operationMask2Field As SoftwareJobOperationMask2
        
        Private operationMaskSuppliedField As Boolean
        
        Private userParametersField As String
        
        Private userParametersSuppliedField As Boolean
        
        Private promptTimeoutHoursField As Long
        
        Private promptTimeoutHoursSuppliedField As Boolean
        
        Private deliveryCalendarField As String
        
        Private deliveryCalendarSuppliedField As Boolean
        
        Private deliveryDateField As DateTime
        
        Private deliveryDateSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareJobName() As String
            Get
                Return Me.softwareJobNameField
            End Get
            Set
                Me.softwareJobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobNameSupplied() As Boolean
            Get
                Return Me.softwareJobNameSuppliedField
            End Get
            Set
                Me.softwareJobNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property executionDate() As DateTime
            Get
                Return Me.executionDateField
            End Get
            Set
                Me.executionDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property executionDateSupplied() As Boolean
            Get
                Return Me.executionDateSuppliedField
            End Get
            Set
                Me.executionDateSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeoutHours() As Long
            Get
                Return Me.timeoutHoursField
            End Get
            Set
                Me.timeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeoutHoursSupplied() As Boolean
            Get
                Return Me.timeoutHoursSuppliedField
            End Get
            Set
                Me.timeoutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhen() As SoftwareJobStartupTime
            Get
                Return Me.startWhenField
            End Get
            Set
                Me.startWhenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhenSupplied() As Boolean
            Get
                Return Me.startWhenSuppliedField
            End Get
            Set
                Me.startWhenSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwareJobBootMask
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskSupplied() As Boolean
            Get
                Return Me.bootBeforeMaskSuppliedField
            End Get
            Set
                Me.bootBeforeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwareJobBootMask
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskSupplied() As Boolean
            Get
                Return Me.bootAfterMaskSuppliedField
            End Get
            Set
                Me.bootAfterMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask2() As SoftwareJobOperationMask2
            Get
                Return Me.operationMask2Field
            End Get
            Set
                Me.operationMask2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskSupplied() As Boolean
            Get
                Return Me.operationMaskSuppliedField
            End Get
            Set
                Me.operationMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userParameters() As String
            Get
                Return Me.userParametersField
            End Get
            Set
                Me.userParametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userParametersSupplied() As Boolean
            Get
                Return Me.userParametersSuppliedField
            End Get
            Set
                Me.userParametersSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHours() As Long
            Get
                Return Me.promptTimeoutHoursField
            End Get
            Set
                Me.promptTimeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHoursSupplied() As Boolean
            Get
                Return Me.promptTimeoutHoursSuppliedField
            End Get
            Set
                Me.promptTimeoutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property deliveryCalendar() As String
            Get
                Return Me.deliveryCalendarField
            End Get
            Set
                Me.deliveryCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryCalendarSupplied() As Boolean
            Get
                Return Me.deliveryCalendarSuppliedField
            End Get
            Set
                Me.deliveryCalendarSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryDate() As DateTime
            Get
                Return Me.deliveryDateField
            End Get
            Set
                Me.deliveryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryDateSupplied() As Boolean
            Get
                Return Me.deliveryDateSuppliedField
            End Get
            Set
                Me.deliveryDateSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateInstallSoftwareJobOrderPolicyProperties
        
        Private timeoutHoursField As Long
        
        Private timeoutHoursSuppliedField As Boolean
        
        Private startWhenField As SoftwareJobStartupTime
        
        Private startWhenSuppliedField As Boolean
        
        Private jobNameField As String
        
        Private jobNameSuppliedField As Boolean
        
        Private bootBeforeMaskField As SoftwareJobBootMask
        
        Private bootBeforeMaskSuppliedField As Boolean
        
        Private bootAfterMaskField As SoftwareJobBootMask
        
        Private bootAfterMaskSuppliedField As Boolean
        
        Private operationMask2Field As SoftwareJobOperationMask2
        
        Private operationMaskSuppliedField As Boolean
        
        Private userParametersField As String
        
        Private userParametersSuppliedField As Boolean
        
        Private promptTimeoutHoursField As Long
        
        Private promptTimeoutHoursSuppliedField As Boolean
        
        Private deliveryCalendarField As String
        
        Private deliveryCalendarSuppliedField As Boolean
        
        '''<remarks/>
        Public Property timeoutHours() As Long
            Get
                Return Me.timeoutHoursField
            End Get
            Set
                Me.timeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeoutHoursSupplied() As Boolean
            Get
                Return Me.timeoutHoursSuppliedField
            End Get
            Set
                Me.timeoutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhen() As SoftwareJobStartupTime
            Get
                Return Me.startWhenField
            End Get
            Set
                Me.startWhenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhenSupplied() As Boolean
            Get
                Return Me.startWhenSuppliedField
            End Get
            Set
                Me.startWhenSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property jobName() As String
            Get
                Return Me.jobNameField
            End Get
            Set
                Me.jobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property jobNameSupplied() As Boolean
            Get
                Return Me.jobNameSuppliedField
            End Get
            Set
                Me.jobNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwareJobBootMask
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskSupplied() As Boolean
            Get
                Return Me.bootBeforeMaskSuppliedField
            End Get
            Set
                Me.bootBeforeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwareJobBootMask
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskSupplied() As Boolean
            Get
                Return Me.bootAfterMaskSuppliedField
            End Get
            Set
                Me.bootAfterMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask2() As SoftwareJobOperationMask2
            Get
                Return Me.operationMask2Field
            End Get
            Set
                Me.operationMask2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskSupplied() As Boolean
            Get
                Return Me.operationMaskSuppliedField
            End Get
            Set
                Me.operationMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userParameters() As String
            Get
                Return Me.userParametersField
            End Get
            Set
                Me.userParametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userParametersSupplied() As Boolean
            Get
                Return Me.userParametersSuppliedField
            End Get
            Set
                Me.userParametersSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHours() As Long
            Get
                Return Me.promptTimeoutHoursField
            End Get
            Set
                Me.promptTimeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHoursSupplied() As Boolean
            Get
                Return Me.promptTimeoutHoursSuppliedField
            End Get
            Set
                Me.promptTimeoutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property deliveryCalendar() As String
            Get
                Return Me.deliveryCalendarField
            End Get
            Set
                Me.deliveryCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryCalendarSupplied() As Boolean
            Get
                Return Me.deliveryCalendarSuppliedField
            End Get
            Set
                Me.deliveryCalendarSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateInstallSoftwareJobOrderProperties
        
        Private executionDateField As DateTime
        
        Private executionDateSuppliedField As Boolean
        
        Private timeoutHoursField As Long
        
        Private timeoutHoursSuppliedField As Boolean
        
        Private startWhenField As SoftwareJobStartupTime
        
        Private startWhenSuppliedField As Boolean
        
        Private jobNameField As String
        
        Private jobNameSuppliedField As Boolean
        
        Private bootBeforeMaskField As SoftwareJobBootMask
        
        Private bootBeforeMaskSuppliedField As Boolean
        
        Private bootAfterMaskField As SoftwareJobBootMask
        
        Private bootAfterMaskSuppliedField As Boolean
        
        Private operationMask2Field As SoftwareJobOperationMask2
        
        Private operationMaskSuppliedField As Boolean
        
        Private userParametersField As String
        
        Private userParametersSuppliedField As Boolean
        
        Private promptTimeoutHoursField As Long
        
        Private promptTimeoutHoursSuppliedField As Boolean
        
        Private deliveryCalendarField As String
        
        Private deliveryCalendarSuppliedField As Boolean
        
        Private deliveryDateTimeField As DateTime
        
        Private deliveryDateTimeSuppliedField As Boolean
        
        '''<remarks/>
        Public Property executionDate() As DateTime
            Get
                Return Me.executionDateField
            End Get
            Set
                Me.executionDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property executionDateSupplied() As Boolean
            Get
                Return Me.executionDateSuppliedField
            End Get
            Set
                Me.executionDateSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeoutHours() As Long
            Get
                Return Me.timeoutHoursField
            End Get
            Set
                Me.timeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeoutHoursSupplied() As Boolean
            Get
                Return Me.timeoutHoursSuppliedField
            End Get
            Set
                Me.timeoutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhen() As SoftwareJobStartupTime
            Get
                Return Me.startWhenField
            End Get
            Set
                Me.startWhenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhenSupplied() As Boolean
            Get
                Return Me.startWhenSuppliedField
            End Get
            Set
                Me.startWhenSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property jobName() As String
            Get
                Return Me.jobNameField
            End Get
            Set
                Me.jobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property jobNameSupplied() As Boolean
            Get
                Return Me.jobNameSuppliedField
            End Get
            Set
                Me.jobNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwareJobBootMask
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskSupplied() As Boolean
            Get
                Return Me.bootBeforeMaskSuppliedField
            End Get
            Set
                Me.bootBeforeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwareJobBootMask
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskSupplied() As Boolean
            Get
                Return Me.bootAfterMaskSuppliedField
            End Get
            Set
                Me.bootAfterMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask2() As SoftwareJobOperationMask2
            Get
                Return Me.operationMask2Field
            End Get
            Set
                Me.operationMask2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskSupplied() As Boolean
            Get
                Return Me.operationMaskSuppliedField
            End Get
            Set
                Me.operationMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userParameters() As String
            Get
                Return Me.userParametersField
            End Get
            Set
                Me.userParametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userParametersSupplied() As Boolean
            Get
                Return Me.userParametersSuppliedField
            End Get
            Set
                Me.userParametersSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHours() As Long
            Get
                Return Me.promptTimeoutHoursField
            End Get
            Set
                Me.promptTimeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHoursSupplied() As Boolean
            Get
                Return Me.promptTimeoutHoursSuppliedField
            End Get
            Set
                Me.promptTimeoutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property deliveryCalendar() As String
            Get
                Return Me.deliveryCalendarField
            End Get
            Set
                Me.deliveryCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryCalendarSupplied() As Boolean
            Get
                Return Me.deliveryCalendarSuppliedField
            End Get
            Set
                Me.deliveryCalendarSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryDateTime() As DateTime
            Get
                Return Me.deliveryDateTimeField
            End Get
            Set
                Me.deliveryDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryDateTimeSupplied() As Boolean
            Get
                Return Me.deliveryDateTimeSuppliedField
            End Get
            Set
                Me.deliveryDateTimeSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProcedure
        
        Private softwarePackageNameField As String
        
        Private softwarePackageVersionField As String
        
        Private softwarePackageProcedureNameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageName() As String
            Get
                Return Me.softwarePackageNameField
            End Get
            Set
                Me.softwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVersion() As String
            Get
                Return Me.softwarePackageVersionField
            End Get
            Set
                Me.softwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureName() As String
            Get
                Return Me.softwarePackageProcedureNameField
            End Get
            Set
                Me.softwarePackageProcedureNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ImportSoftwarePackagePropertiesByName
        
        Private sourcePathField As String
        
        Private regInfoPathField As String
        
        Private regInfoPathSuppliedField As Boolean
        
        Private basedOnSoftwarePackageNameField As String
        
        Private basedOnSoftwarePackageNameSuppliedField As Boolean
        
        Private basedOnSoftwarePackageVersionField As String
        
        Private basedOnSoftwarePackageVersionSuppliedField As Boolean
        
        Private sourceOnManagerField As Boolean
        
        Private sourceOnManagerSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sourcePath() As String
            Get
                Return Me.sourcePathField
            End Get
            Set
                Me.sourcePathField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property regInfoPath() As String
            Get
                Return Me.regInfoPathField
            End Get
            Set
                Me.regInfoPathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property regInfoPathSupplied() As Boolean
            Get
                Return Me.regInfoPathSuppliedField
            End Get
            Set
                Me.regInfoPathSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property basedOnSoftwarePackageName() As String
            Get
                Return Me.basedOnSoftwarePackageNameField
            End Get
            Set
                Me.basedOnSoftwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property basedOnSoftwarePackageNameSupplied() As Boolean
            Get
                Return Me.basedOnSoftwarePackageNameSuppliedField
            End Get
            Set
                Me.basedOnSoftwarePackageNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property basedOnSoftwarePackageVersion() As String
            Get
                Return Me.basedOnSoftwarePackageVersionField
            End Get
            Set
                Me.basedOnSoftwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property basedOnSoftwarePackageVersionSupplied() As Boolean
            Get
                Return Me.basedOnSoftwarePackageVersionSuppliedField
            End Get
            Set
                Me.basedOnSoftwarePackageVersionSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sourceOnManager() As Boolean
            Get
                Return Me.sourceOnManagerField
            End Get
            Set
                Me.sourceOnManagerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sourceOnManagerSupplied() As Boolean
            Get
                Return Me.sourceOnManagerSuppliedField
            End Get
            Set
                Me.sourceOnManagerSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSoftwarePolicyPropertiesByName
        
        Private policyNameField As String
        
        Private policyNameSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private priorityField As Long
        
        Private prioritySuppliedField As Boolean
        
        Private unitGroupNameField As String
        
        Private unitGroupNameSuppliedField As Boolean
        
        Private createSoftwareJobLinkageField As CreateSoftwareJobLinkage
        
        Private createSoftwareJobLinkageSuppliedField As Boolean
        
        Private softwarePolicyEvaluationTypeField As SoftwarePolicyEvaluationType
        
        Private softwarePolicyEvaluationTypeSuppliedField As Boolean
        
        Private softwarePolicyEvaluationPeriodTypeField As SoftwarePolicyEvaluationPeriodType
        
        Private softwarePolicyEvaluationPeriodTypeSuppliedField As Boolean
        
        Private nextEvaluationDateField As DateTime
        
        Private nextEvaluationDateSuppliedField As Boolean
        
        Private evaluationPeriodField As Long
        
        Private evaluationPeriodSuppliedField As Boolean
        
        Private enterpriseTimeField As Boolean
        
        Private enterpriseTimeSuppliedField As Boolean
        
        Private evaluationCalendarField As String
        
        Private evaluationCalendarSuppliedField As Boolean
        
        Private adhocTargetEvaluationField As AdhocTargetEvaluation
        
        Private adhocTargetEvaluationSuppliedField As Boolean
        
        Private regenerateField As Boolean
        
        Private regenerateSuppliedField As Boolean
        
        Private evaluateDynamicGroupsField As Boolean
        
        Private evaluateDynamicGroupsSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property policyName() As String
            Get
                Return Me.policyNameField
            End Get
            Set
                Me.policyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property policyNameSupplied() As Boolean
            Get
                Return Me.policyNameSuppliedField
            End Get
            Set
                Me.policyNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property priority() As Long
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prioritySupplied() As Boolean
            Get
                Return Me.prioritySuppliedField
            End Get
            Set
                Me.prioritySuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitGroupName() As String
            Get
                Return Me.unitGroupNameField
            End Get
            Set
                Me.unitGroupNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitGroupNameSupplied() As Boolean
            Get
                Return Me.unitGroupNameSuppliedField
            End Get
            Set
                Me.unitGroupNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property createSoftwareJobLinkage() As CreateSoftwareJobLinkage
            Get
                Return Me.createSoftwareJobLinkageField
            End Get
            Set
                Me.createSoftwareJobLinkageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property createSoftwareJobLinkageSupplied() As Boolean
            Get
                Return Me.createSoftwareJobLinkageSuppliedField
            End Get
            Set
                Me.createSoftwareJobLinkageSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationType() As SoftwarePolicyEvaluationType
            Get
                Return Me.softwarePolicyEvaluationTypeField
            End Get
            Set
                Me.softwarePolicyEvaluationTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationTypeSupplied() As Boolean
            Get
                Return Me.softwarePolicyEvaluationTypeSuppliedField
            End Get
            Set
                Me.softwarePolicyEvaluationTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationPeriodType() As SoftwarePolicyEvaluationPeriodType
            Get
                Return Me.softwarePolicyEvaluationPeriodTypeField
            End Get
            Set
                Me.softwarePolicyEvaluationPeriodTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationPeriodTypeSupplied() As Boolean
            Get
                Return Me.softwarePolicyEvaluationPeriodTypeSuppliedField
            End Get
            Set
                Me.softwarePolicyEvaluationPeriodTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property nextEvaluationDate() As DateTime
            Get
                Return Me.nextEvaluationDateField
            End Get
            Set
                Me.nextEvaluationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nextEvaluationDateSupplied() As Boolean
            Get
                Return Me.nextEvaluationDateSuppliedField
            End Get
            Set
                Me.nextEvaluationDateSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriod() As Long
            Get
                Return Me.evaluationPeriodField
            End Get
            Set
                Me.evaluationPeriodField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriodSupplied() As Boolean
            Get
                Return Me.evaluationPeriodSuppliedField
            End Get
            Set
                Me.evaluationPeriodSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property enterpriseTime() As Boolean
            Get
                Return Me.enterpriseTimeField
            End Get
            Set
                Me.enterpriseTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property enterpriseTimeSupplied() As Boolean
            Get
                Return Me.enterpriseTimeSuppliedField
            End Get
            Set
                Me.enterpriseTimeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property evaluationCalendar() As String
            Get
                Return Me.evaluationCalendarField
            End Get
            Set
                Me.evaluationCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationCalendarSupplied() As Boolean
            Get
                Return Me.evaluationCalendarSuppliedField
            End Get
            Set
                Me.evaluationCalendarSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property adhocTargetEvaluation() As AdhocTargetEvaluation
            Get
                Return Me.adhocTargetEvaluationField
            End Get
            Set
                Me.adhocTargetEvaluationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property adhocTargetEvaluationSupplied() As Boolean
            Get
                Return Me.adhocTargetEvaluationSuppliedField
            End Get
            Set
                Me.adhocTargetEvaluationSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property regenerate() As Boolean
            Get
                Return Me.regenerateField
            End Get
            Set
                Me.regenerateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property regenerateSupplied() As Boolean
            Get
                Return Me.regenerateSuppliedField
            End Get
            Set
                Me.regenerateSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluateDynamicGroups() As Boolean
            Get
                Return Me.evaluateDynamicGroupsField
            End Get
            Set
                Me.evaluateDynamicGroupsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluateDynamicGroupsSupplied() As Boolean
            Get
                Return Me.evaluateDynamicGroupsSuppliedField
            End Get
            Set
                Me.evaluateDynamicGroupsSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UnitGroupPropertiesForSoftwarePolicy
        
        Private unitGroupNameField As String
        
        Private parentUnitGroupNameField As String
        
        Private parentUnitGroupNameSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private queryNameField As String
        
        Private queryNameSuppliedField As Boolean
        
        Private engineNameField As String
        
        Private engineNameSuppliedField As Boolean
        
        Private evaluationPeriodField As Long
        
        Private evaluationPeriodSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitGroupName() As String
            Get
                Return Me.unitGroupNameField
            End Get
            Set
                Me.unitGroupNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property parentUnitGroupName() As String
            Get
                Return Me.parentUnitGroupNameField
            End Get
            Set
                Me.parentUnitGroupNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property parentUnitGroupNameSupplied() As Boolean
            Get
                Return Me.parentUnitGroupNameSuppliedField
            End Get
            Set
                Me.parentUnitGroupNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryName() As String
            Get
                Return Me.queryNameField
            End Get
            Set
                Me.queryNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryNameSupplied() As Boolean
            Get
                Return Me.queryNameSuppliedField
            End Get
            Set
                Me.queryNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property engineName() As String
            Get
                Return Me.engineNameField
            End Get
            Set
                Me.engineNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property engineNameSupplied() As Boolean
            Get
                Return Me.engineNameSuppliedField
            End Get
            Set
                Me.engineNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriod() As Long
            Get
                Return Me.evaluationPeriodField
            End Get
            Set
                Me.evaluationPeriodField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriodSupplied() As Boolean
            Get
                Return Me.evaluationPeriodSuppliedField
            End Get
            Set
                Me.evaluationPeriodSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateUnitGroupPropertiesByName
        
        Private groupLabelField As String
        
        Private groupDescriptionField As String
        
        Private groupDescriptionSuppliedField As Boolean
        
        Private queryNameField As String
        
        Private queryNameSuppliedField As Boolean
        
        Private engineNameField As String
        
        Private engineNameSuppliedField As Boolean
        
        Private evaluationPeriodField As Long
        
        Private evaluationPeriodSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupLabel() As String
            Get
                Return Me.groupLabelField
            End Get
            Set
                Me.groupLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupDescription() As String
            Get
                Return Me.groupDescriptionField
            End Get
            Set
                Me.groupDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupDescriptionSupplied() As Boolean
            Get
                Return Me.groupDescriptionSuppliedField
            End Get
            Set
                Me.groupDescriptionSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryName() As String
            Get
                Return Me.queryNameField
            End Get
            Set
                Me.queryNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryNameSupplied() As Boolean
            Get
                Return Me.queryNameSuppliedField
            End Get
            Set
                Me.queryNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property engineName() As String
            Get
                Return Me.engineNameField
            End Get
            Set
                Me.engineNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property engineNameSupplied() As Boolean
            Get
                Return Me.engineNameSuppliedField
            End Get
            Set
                Me.engineNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriod() As Long
            Get
                Return Me.evaluationPeriodField
            End Get
            Set
                Me.evaluationPeriodField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriodSupplied() As Boolean
            Get
                Return Me.evaluationPeriodSuppliedField
            End Get
            Set
                Me.evaluationPeriodSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateUnitGroupProperties2
        
        Private groupLabelField As String
        
        Private groupDescriptionField As String
        
        Private groupDescriptionSuppliedField As Boolean
        
        Private queryUUIDField As String
        
        Private queryUUIDSuppliedField As Boolean
        
        Private engineNameField As String
        
        Private engineNameSuppliedField As Boolean
        
        Private evaluationPeriodField As Long
        
        Private evaluationPeriodSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupLabel() As String
            Get
                Return Me.groupLabelField
            End Get
            Set
                Me.groupLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupDescription() As String
            Get
                Return Me.groupDescriptionField
            End Get
            Set
                Me.groupDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupDescriptionSupplied() As Boolean
            Get
                Return Me.groupDescriptionSuppliedField
            End Get
            Set
                Me.groupDescriptionSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryUUID() As String
            Get
                Return Me.queryUUIDField
            End Get
            Set
                Me.queryUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryUUIDSupplied() As Boolean
            Get
                Return Me.queryUUIDSuppliedField
            End Get
            Set
                Me.queryUUIDSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property engineName() As String
            Get
                Return Me.engineNameField
            End Get
            Set
                Me.engineNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property engineNameSupplied() As Boolean
            Get
                Return Me.engineNameSuppliedField
            End Get
            Set
                Me.engineNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriod() As Long
            Get
                Return Me.evaluationPeriodField
            End Get
            Set
                Me.evaluationPeriodField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriodSupplied() As Boolean
            Get
                Return Me.evaluationPeriodSuppliedField
            End Get
            Set
                Me.evaluationPeriodSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSoftwarePolicyProperties2
        
        Private policyNameField As String
        
        Private policyNameSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private priorityField As Long
        
        Private prioritySuppliedField As Boolean
        
        Private unitGroupIdField As String
        
        Private unitGroupIdSuppliedField As Boolean
        
        Private createSoftwareJobLinkageField As CreateSoftwareJobLinkage
        
        Private createSoftwareJobLinkageSuppliedField As Boolean
        
        Private softwarePolicyEvaluationTypeField As SoftwarePolicyEvaluationType
        
        Private softwarePolicyEvaluationTypeSuppliedField As Boolean
        
        Private softwarePolicyEvaluationPeriodTypeField As SoftwarePolicyEvaluationPeriodType
        
        Private softwarePolicyEvaluationPeriodTypeSuppliedField As Boolean
        
        Private nextEvaluationDateField As DateTime
        
        Private nextEvaluationDateSuppliedField As Boolean
        
        Private evaluationPeriodField As Long
        
        Private evaluationPeriodSuppliedField As Boolean
        
        Private enterpriseTimeField As Boolean
        
        Private enterpriseTimeSuppliedField As Boolean
        
        Private evaluationCalendarField As String
        
        Private evaluationCalendarSuppliedField As Boolean
        
        Private adhocTargetEvaluationField As AdhocTargetEvaluation
        
        Private adhocTargetEvaluationSuppliedField As Boolean
        
        Private regenerateField As Boolean
        
        Private regenerateSuppliedField As Boolean
        
        Private evaluateDynamicGroupsField As Boolean
        
        Private evaluateDynamicGroupsSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property policyName() As String
            Get
                Return Me.policyNameField
            End Get
            Set
                Me.policyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property policyNameSupplied() As Boolean
            Get
                Return Me.policyNameSuppliedField
            End Get
            Set
                Me.policyNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property priority() As Long
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prioritySupplied() As Boolean
            Get
                Return Me.prioritySuppliedField
            End Get
            Set
                Me.prioritySuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitGroupId() As String
            Get
                Return Me.unitGroupIdField
            End Get
            Set
                Me.unitGroupIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitGroupIdSupplied() As Boolean
            Get
                Return Me.unitGroupIdSuppliedField
            End Get
            Set
                Me.unitGroupIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property createSoftwareJobLinkage() As CreateSoftwareJobLinkage
            Get
                Return Me.createSoftwareJobLinkageField
            End Get
            Set
                Me.createSoftwareJobLinkageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property createSoftwareJobLinkageSupplied() As Boolean
            Get
                Return Me.createSoftwareJobLinkageSuppliedField
            End Get
            Set
                Me.createSoftwareJobLinkageSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationType() As SoftwarePolicyEvaluationType
            Get
                Return Me.softwarePolicyEvaluationTypeField
            End Get
            Set
                Me.softwarePolicyEvaluationTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationTypeSupplied() As Boolean
            Get
                Return Me.softwarePolicyEvaluationTypeSuppliedField
            End Get
            Set
                Me.softwarePolicyEvaluationTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationPeriodType() As SoftwarePolicyEvaluationPeriodType
            Get
                Return Me.softwarePolicyEvaluationPeriodTypeField
            End Get
            Set
                Me.softwarePolicyEvaluationPeriodTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationPeriodTypeSupplied() As Boolean
            Get
                Return Me.softwarePolicyEvaluationPeriodTypeSuppliedField
            End Get
            Set
                Me.softwarePolicyEvaluationPeriodTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property nextEvaluationDate() As DateTime
            Get
                Return Me.nextEvaluationDateField
            End Get
            Set
                Me.nextEvaluationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nextEvaluationDateSupplied() As Boolean
            Get
                Return Me.nextEvaluationDateSuppliedField
            End Get
            Set
                Me.nextEvaluationDateSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriod() As Long
            Get
                Return Me.evaluationPeriodField
            End Get
            Set
                Me.evaluationPeriodField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriodSupplied() As Boolean
            Get
                Return Me.evaluationPeriodSuppliedField
            End Get
            Set
                Me.evaluationPeriodSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property enterpriseTime() As Boolean
            Get
                Return Me.enterpriseTimeField
            End Get
            Set
                Me.enterpriseTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property enterpriseTimeSupplied() As Boolean
            Get
                Return Me.enterpriseTimeSuppliedField
            End Get
            Set
                Me.enterpriseTimeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property evaluationCalendar() As String
            Get
                Return Me.evaluationCalendarField
            End Get
            Set
                Me.evaluationCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationCalendarSupplied() As Boolean
            Get
                Return Me.evaluationCalendarSuppliedField
            End Get
            Set
                Me.evaluationCalendarSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property adhocTargetEvaluation() As AdhocTargetEvaluation
            Get
                Return Me.adhocTargetEvaluationField
            End Get
            Set
                Me.adhocTargetEvaluationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property adhocTargetEvaluationSupplied() As Boolean
            Get
                Return Me.adhocTargetEvaluationSuppliedField
            End Get
            Set
                Me.adhocTargetEvaluationSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property regenerate() As Boolean
            Get
                Return Me.regenerateField
            End Get
            Set
                Me.regenerateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property regenerateSupplied() As Boolean
            Get
                Return Me.regenerateSuppliedField
            End Get
            Set
                Me.regenerateSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluateDynamicGroups() As Boolean
            Get
                Return Me.evaluateDynamicGroupsField
            End Get
            Set
                Me.evaluateDynamicGroupsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluateDynamicGroupsSupplied() As Boolean
            Get
                Return Me.evaluateDynamicGroupsSuppliedField
            End Get
            Set
                Me.evaluateDynamicGroupsSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSoftwarePolicyProperties2
        
        Private policyNameField As String
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private priorityField As Long
        
        Private prioritySuppliedField As Boolean
        
        Private createSoftwareJobLinkageField As CreateSoftwareJobLinkage
        
        Private createSoftwareJobLinkageSuppliedField As Boolean
        
        Private softwarePolicyEvaluationTypeField As SoftwarePolicyEvaluationType
        
        Private softwarePolicyEvaluationTypeSuppliedField As Boolean
        
        Private softwarePolicyEvaluationPeriodTypeField As SoftwarePolicyEvaluationPeriodType
        
        Private softwarePolicyEvaluationPeriodTypeSuppliedField As Boolean
        
        Private nextEvaluationDateField As DateTime
        
        Private nextEvaluationDateSuppliedField As Boolean
        
        Private evaluationPeriodField As Long
        
        Private evaluationPeriodSuppliedField As Boolean
        
        Private enterpriseTimeField As Integer
        
        Private enterpriseTimeSuppliedField As Boolean
        
        Private evaluationCalendarField As String
        
        Private evaluationCalendarSuppliedField As Boolean
        
        Private adhocTargetEvaluationField As AdhocTargetEvaluation
        
        Private adhocTargetEvaluationSuppliedField As Boolean
        
        Private regenerateField As Boolean
        
        Private regenerateSuppliedField As Boolean
        
        Private evaluateDynamicGroupsField As Boolean
        
        Private evaluateDynamicGroupsSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property policyName() As String
            Get
                Return Me.policyNameField
            End Get
            Set
                Me.policyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property priority() As Long
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prioritySupplied() As Boolean
            Get
                Return Me.prioritySuppliedField
            End Get
            Set
                Me.prioritySuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property createSoftwareJobLinkage() As CreateSoftwareJobLinkage
            Get
                Return Me.createSoftwareJobLinkageField
            End Get
            Set
                Me.createSoftwareJobLinkageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property createSoftwareJobLinkageSupplied() As Boolean
            Get
                Return Me.createSoftwareJobLinkageSuppliedField
            End Get
            Set
                Me.createSoftwareJobLinkageSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationType() As SoftwarePolicyEvaluationType
            Get
                Return Me.softwarePolicyEvaluationTypeField
            End Get
            Set
                Me.softwarePolicyEvaluationTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationTypeSupplied() As Boolean
            Get
                Return Me.softwarePolicyEvaluationTypeSuppliedField
            End Get
            Set
                Me.softwarePolicyEvaluationTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationPeriodType() As SoftwarePolicyEvaluationPeriodType
            Get
                Return Me.softwarePolicyEvaluationPeriodTypeField
            End Get
            Set
                Me.softwarePolicyEvaluationPeriodTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationPeriodTypeSupplied() As Boolean
            Get
                Return Me.softwarePolicyEvaluationPeriodTypeSuppliedField
            End Get
            Set
                Me.softwarePolicyEvaluationPeriodTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property nextEvaluationDate() As DateTime
            Get
                Return Me.nextEvaluationDateField
            End Get
            Set
                Me.nextEvaluationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nextEvaluationDateSupplied() As Boolean
            Get
                Return Me.nextEvaluationDateSuppliedField
            End Get
            Set
                Me.nextEvaluationDateSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriod() As Long
            Get
                Return Me.evaluationPeriodField
            End Get
            Set
                Me.evaluationPeriodField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriodSupplied() As Boolean
            Get
                Return Me.evaluationPeriodSuppliedField
            End Get
            Set
                Me.evaluationPeriodSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property enterpriseTime() As Integer
            Get
                Return Me.enterpriseTimeField
            End Get
            Set
                Me.enterpriseTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property enterpriseTimeSupplied() As Boolean
            Get
                Return Me.enterpriseTimeSuppliedField
            End Get
            Set
                Me.enterpriseTimeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property evaluationCalendar() As String
            Get
                Return Me.evaluationCalendarField
            End Get
            Set
                Me.evaluationCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationCalendarSupplied() As Boolean
            Get
                Return Me.evaluationCalendarSuppliedField
            End Get
            Set
                Me.evaluationCalendarSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property adhocTargetEvaluation() As AdhocTargetEvaluation
            Get
                Return Me.adhocTargetEvaluationField
            End Get
            Set
                Me.adhocTargetEvaluationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property adhocTargetEvaluationSupplied() As Boolean
            Get
                Return Me.adhocTargetEvaluationSuppliedField
            End Get
            Set
                Me.adhocTargetEvaluationSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property regenerate() As Boolean
            Get
                Return Me.regenerateField
            End Get
            Set
                Me.regenerateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property regenerateSupplied() As Boolean
            Get
                Return Me.regenerateSuppliedField
            End Get
            Set
                Me.regenerateSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluateDynamicGroups() As Boolean
            Get
                Return Me.evaluateDynamicGroupsField
            End Get
            Set
                Me.evaluateDynamicGroupsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluateDynamicGroupsSupplied() As Boolean
            Get
                Return Me.evaluateDynamicGroupsSuppliedField
            End Get
            Set
                Me.evaluateDynamicGroupsSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetUserProfileProperties
        
        Private sdAgentPropertiesField As SDAgentProperties
        
        Private sdAgentPropertiesSuppliedField As Boolean
        
        Private userField As String
        
        Private userSuppliedField As Boolean
        
        Private phoneField As String
        
        Private phoneSuppliedField As Boolean
        
        Private locationField As String
        
        Private locationSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sdAgentProperties() As SDAgentProperties
            Get
                Return Me.sdAgentPropertiesField
            End Get
            Set
                Me.sdAgentPropertiesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sdAgentPropertiesSupplied() As Boolean
            Get
                Return Me.sdAgentPropertiesSuppliedField
            End Get
            Set
                Me.sdAgentPropertiesSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property user() As String
            Get
                Return Me.userField
            End Get
            Set
                Me.userField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSupplied() As Boolean
            Get
                Return Me.userSuppliedField
            End Get
            Set
                Me.userSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property phone() As String
            Get
                Return Me.phoneField
            End Get
            Set
                Me.phoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property phoneSupplied() As Boolean
            Get
                Return Me.phoneSuppliedField
            End Get
            Set
                Me.phoneSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property location() As String
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property locationSupplied() As Boolean
            Get
                Return Me.locationSuppliedField
            End Get
            Set
                Me.locationSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetComputerProperties
        
        Private computerPrimaryNetworkAddressField As String
        
        Private computerPrimaryNetworkAddressSuppliedField As Boolean
        
        Private sdAgentPropertiesField As SDAgentProperties
        
        Private sdAgentPropertiesSuppliedField As Boolean
        
        Private userField As String
        
        Private userSuppliedField As Boolean
        
        Private phoneField As String
        
        Private phoneSuppliedField As Boolean
        
        Private locationField As String
        
        Private locationSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerPrimaryNetworkAddress() As String
            Get
                Return Me.computerPrimaryNetworkAddressField
            End Get
            Set
                Me.computerPrimaryNetworkAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerPrimaryNetworkAddressSupplied() As Boolean
            Get
                Return Me.computerPrimaryNetworkAddressSuppliedField
            End Get
            Set
                Me.computerPrimaryNetworkAddressSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sdAgentProperties() As SDAgentProperties
            Get
                Return Me.sdAgentPropertiesField
            End Get
            Set
                Me.sdAgentPropertiesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sdAgentPropertiesSupplied() As Boolean
            Get
                Return Me.sdAgentPropertiesSuppliedField
            End Get
            Set
                Me.sdAgentPropertiesSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property user() As String
            Get
                Return Me.userField
            End Get
            Set
                Me.userField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSupplied() As Boolean
            Get
                Return Me.userSuppliedField
            End Get
            Set
                Me.userSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property phone() As String
            Get
                Return Me.phoneField
            End Get
            Set
                Me.phoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property phoneSupplied() As Boolean
            Get
                Return Me.phoneSuppliedField
            End Get
            Set
                Me.phoneSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property location() As String
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property locationSupplied() As Boolean
            Get
                Return Me.locationSuppliedField
            End Get
            Set
                Me.locationSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateUserProfileProperties
        
        Private userProfileNameField As String
        
        Private hostComputerOperatingSystemTypeField As Long
        
        Private sdAgentPropertiesField As SDAgentProperties
        
        Private sdAgentPropertiesSuppliedField As Boolean
        
        Private userField As String
        
        Private userSuppliedField As Boolean
        
        Private phoneField As String
        
        Private phoneSuppliedField As Boolean
        
        Private locationField As String
        
        Private locationSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userProfileName() As String
            Get
                Return Me.userProfileNameField
            End Get
            Set
                Me.userProfileNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property hostComputerOperatingSystemType() As Long
            Get
                Return Me.hostComputerOperatingSystemTypeField
            End Get
            Set
                Me.hostComputerOperatingSystemTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sdAgentProperties() As SDAgentProperties
            Get
                Return Me.sdAgentPropertiesField
            End Get
            Set
                Me.sdAgentPropertiesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sdAgentPropertiesSupplied() As Boolean
            Get
                Return Me.sdAgentPropertiesSuppliedField
            End Get
            Set
                Me.sdAgentPropertiesSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property user() As String
            Get
                Return Me.userField
            End Get
            Set
                Me.userField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSupplied() As Boolean
            Get
                Return Me.userSuppliedField
            End Get
            Set
                Me.userSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property phone() As String
            Get
                Return Me.phoneField
            End Get
            Set
                Me.phoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property phoneSupplied() As Boolean
            Get
                Return Me.phoneSuppliedField
            End Get
            Set
                Me.phoneSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property location() As String
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property locationSupplied() As Boolean
            Get
                Return Me.locationSuppliedField
            End Get
            Set
                Me.locationSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateComputerProperties
        
        Private computerHostNameField As String
        
        Private computerPrimaryNetworkAddressField As String
        
        Private operatingSystemTypeField As Long
        
        Private computerTypeField As ComputerType
        
        Private computerTypeSuppliedField As Boolean
        
        Private computerLabelField As String
        
        Private computerLabelSuppliedField As Boolean
        
        Private scalabilityServerNameField As String
        
        Private scalabilityServerNameSuppliedField As Boolean
        
        Private createAgentComponentsField As CreateAgentComponents
        
        Private sdAgentPropertiesField As SDAgentProperties
        
        Private sdAgentPropertiesSuppliedField As Boolean
        
        Private userField As String
        
        Private userSuppliedField As Boolean
        
        Private phoneField As String
        
        Private phoneSuppliedField As Boolean
        
        Private locationField As String
        
        Private locationSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private computerPrimaryMACAddressField As String
        
        Private computerPrimaryMACAddressSuppliedField As Boolean
        
        Private osimImageField As String
        
        Private osimImageSuppliedField As Boolean
        
        Private osimBootServerNameField As String
        
        Private osimBootServerNameSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerHostName() As String
            Get
                Return Me.computerHostNameField
            End Get
            Set
                Me.computerHostNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerPrimaryNetworkAddress() As String
            Get
                Return Me.computerPrimaryNetworkAddressField
            End Get
            Set
                Me.computerPrimaryNetworkAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemType() As Long
            Get
                Return Me.operatingSystemTypeField
            End Get
            Set
                Me.operatingSystemTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerType() As ComputerType
            Get
                Return Me.computerTypeField
            End Get
            Set
                Me.computerTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerTypeSupplied() As Boolean
            Get
                Return Me.computerTypeSuppliedField
            End Get
            Set
                Me.computerTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerLabel() As String
            Get
                Return Me.computerLabelField
            End Get
            Set
                Me.computerLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerLabelSupplied() As Boolean
            Get
                Return Me.computerLabelSuppliedField
            End Get
            Set
                Me.computerLabelSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property scalabilityServerName() As String
            Get
                Return Me.scalabilityServerNameField
            End Get
            Set
                Me.scalabilityServerNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property scalabilityServerNameSupplied() As Boolean
            Get
                Return Me.scalabilityServerNameSuppliedField
            End Get
            Set
                Me.scalabilityServerNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property createAgentComponents() As CreateAgentComponents
            Get
                Return Me.createAgentComponentsField
            End Get
            Set
                Me.createAgentComponentsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sdAgentProperties() As SDAgentProperties
            Get
                Return Me.sdAgentPropertiesField
            End Get
            Set
                Me.sdAgentPropertiesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sdAgentPropertiesSupplied() As Boolean
            Get
                Return Me.sdAgentPropertiesSuppliedField
            End Get
            Set
                Me.sdAgentPropertiesSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property user() As String
            Get
                Return Me.userField
            End Get
            Set
                Me.userField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSupplied() As Boolean
            Get
                Return Me.userSuppliedField
            End Get
            Set
                Me.userSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property phone() As String
            Get
                Return Me.phoneField
            End Get
            Set
                Me.phoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property phoneSupplied() As Boolean
            Get
                Return Me.phoneSuppliedField
            End Get
            Set
                Me.phoneSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property location() As String
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property locationSupplied() As Boolean
            Get
                Return Me.locationSuppliedField
            End Get
            Set
                Me.locationSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerPrimaryMACAddress() As String
            Get
                Return Me.computerPrimaryMACAddressField
            End Get
            Set
                Me.computerPrimaryMACAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerPrimaryMACAddressSupplied() As Boolean
            Get
                Return Me.computerPrimaryMACAddressSuppliedField
            End Get
            Set
                Me.computerPrimaryMACAddressSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property osimImage() As String
            Get
                Return Me.osimImageField
            End Get
            Set
                Me.osimImageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property osimImageSupplied() As Boolean
            Get
                Return Me.osimImageSuppliedField
            End Get
            Set
                Me.osimImageSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property osimBootServerName() As String
            Get
                Return Me.osimBootServerNameField
            End Get
            Set
                Me.osimBootServerNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property osimBootServerNameSupplied() As Boolean
            Get
                Return Me.osimBootServerNameSuppliedField
            End Get
            Set
                Me.osimBootServerNameSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSoftwareGroupProperties
        
        Private softwareGroupNameField As String
        
        Private softwareGroupNameSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareGroupName() As String
            Get
                Return Me.softwareGroupNameField
            End Get
            Set
                Me.softwareGroupNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareGroupNameSupplied() As Boolean
            Get
                Return Me.softwareGroupNameSuppliedField
            End Get
            Set
                Me.softwareGroupNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSoftwareGroupProperties
        
        Private softwareGroupNameField As String
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private softwareGroupTypeField As SoftwareGroupType
        
        Private softwareGroupTypeSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareGroupName() As String
            Get
                Return Me.softwareGroupNameField
            End Get
            Set
                Me.softwareGroupNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareGroupType() As SoftwareGroupType
            Get
                Return Me.softwareGroupTypeField
            End Get
            Set
                Me.softwareGroupTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareGroupTypeSupplied() As Boolean
            Get
                Return Me.softwareGroupTypeSuppliedField
            End Get
            Set
                Me.softwareGroupTypeSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SoftwareGroupType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SW-PACKAGE-GROUP")>  _
        SWPACKAGEGROUP
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SW-PACKAGE-PROCEDURE-GROUP")>  _
        SWPACKAGEPROCEDUREGROUP
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ImportSoftwarePackageProperties2
        
        Private sourcePathField As String
        
        Private regInfoPathField As String
        
        Private regInfoPathSuppliedField As Boolean
        
        Private basedOnSoftwarePackageIdField As String
        
        Private basedOnSoftwarePackageIdSuppliedField As Boolean
        
        Private sourceOnManagerField As Boolean
        
        Private sourceOnManagerSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sourcePath() As String
            Get
                Return Me.sourcePathField
            End Get
            Set
                Me.sourcePathField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property regInfoPath() As String
            Get
                Return Me.regInfoPathField
            End Get
            Set
                Me.regInfoPathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property regInfoPathSupplied() As Boolean
            Get
                Return Me.regInfoPathSuppliedField
            End Get
            Set
                Me.regInfoPathSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property basedOnSoftwarePackageId() As String
            Get
                Return Me.basedOnSoftwarePackageIdField
            End Get
            Set
                Me.basedOnSoftwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property basedOnSoftwarePackageIdSupplied() As Boolean
            Get
                Return Me.basedOnSoftwarePackageIdSuppliedField
            End Get
            Set
                Me.basedOnSoftwarePackageIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sourceOnManager() As Boolean
            Get
                Return Me.sourceOnManagerField
            End Get
            Set
                Me.sourceOnManagerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sourceOnManagerSupplied() As Boolean
            Get
                Return Me.sourceOnManagerSuppliedField
            End Get
            Set
                Me.sourceOnManagerSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class Components
        
        Private isAMInstalledField As Boolean
        
        Private isSDInstalledField As Boolean
        
        Private isRCInstalledField As Boolean
        
        Private isBABLDInstalledField As Boolean
        
        Private isSDESKInstalledField As Boolean
        
        '''<remarks/>
        Public Property isAMInstalled() As Boolean
            Get
                Return Me.isAMInstalledField
            End Get
            Set
                Me.isAMInstalledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isSDInstalled() As Boolean
            Get
                Return Me.isSDInstalledField
            End Get
            Set
                Me.isSDInstalledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isRCInstalled() As Boolean
            Get
                Return Me.isRCInstalledField
            End Get
            Set
                Me.isRCInstalledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isBABLDInstalled() As Boolean
            Get
                Return Me.isBABLDInstalledField
            End Get
            Set
                Me.isBABLDInstalledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isSDESKInstalled() As Boolean
            Get
                Return Me.isSDESKInstalledField
            End Get
            Set
                Me.isSDESKInstalledField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetTimeoutProperties
        
        Private setTimeoutValueField As Long
        
        '''<remarks/>
        Public Property setTimeoutValue() As Long
            Get
                Return Me.setTimeoutValueField
            End Get
            Set
                Me.setTimeoutValueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSoftwareJobOrderPolicyProperties
        
        Private timeoutHoursField As Long
        
        Private timeoutHoursSuppliedField As Boolean
        
        Private startWhenField As SoftwareJobStartupTime
        
        Private startWhenSuppliedField As Boolean
        
        Private jobNameField As String
        
        Private jobNameSuppliedField As Boolean
        
        Private bootBeforeMaskField As SoftwareJobBootMask
        
        Private bootBeforeMaskSuppliedField As Boolean
        
        Private bootAfterMaskField As SoftwareJobBootMask
        
        Private bootAfterMaskSuppliedField As Boolean
        
        Private operationMaskField As SoftwareJobOperationMask
        
        Private operationMaskSuppliedField As Boolean
        
        Private userParametersField As String
        
        Private userParametersSuppliedField As Boolean
        
        Private promptTimeoutHoursField As Long
        
        Private promptTimeoutHoursSuppliedField As Boolean
        
        Private deliveryCalendarField As String
        
        Private deliveryCalendarSuppliedField As Boolean
        
        '''<remarks/>
        Public Property timeoutHours() As Long
            Get
                Return Me.timeoutHoursField
            End Get
            Set
                Me.timeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeoutHoursSupplied() As Boolean
            Get
                Return Me.timeoutHoursSuppliedField
            End Get
            Set
                Me.timeoutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhen() As SoftwareJobStartupTime
            Get
                Return Me.startWhenField
            End Get
            Set
                Me.startWhenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhenSupplied() As Boolean
            Get
                Return Me.startWhenSuppliedField
            End Get
            Set
                Me.startWhenSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property jobName() As String
            Get
                Return Me.jobNameField
            End Get
            Set
                Me.jobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property jobNameSupplied() As Boolean
            Get
                Return Me.jobNameSuppliedField
            End Get
            Set
                Me.jobNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwareJobBootMask
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskSupplied() As Boolean
            Get
                Return Me.bootBeforeMaskSuppliedField
            End Get
            Set
                Me.bootBeforeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwareJobBootMask
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskSupplied() As Boolean
            Get
                Return Me.bootAfterMaskSuppliedField
            End Get
            Set
                Me.bootAfterMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask() As SoftwareJobOperationMask
            Get
                Return Me.operationMaskField
            End Get
            Set
                Me.operationMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskSupplied() As Boolean
            Get
                Return Me.operationMaskSuppliedField
            End Get
            Set
                Me.operationMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userParameters() As String
            Get
                Return Me.userParametersField
            End Get
            Set
                Me.userParametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userParametersSupplied() As Boolean
            Get
                Return Me.userParametersSuppliedField
            End Get
            Set
                Me.userParametersSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHours() As Long
            Get
                Return Me.promptTimeoutHoursField
            End Get
            Set
                Me.promptTimeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHoursSupplied() As Boolean
            Get
                Return Me.promptTimeoutHoursSuppliedField
            End Get
            Set
                Me.promptTimeoutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property deliveryCalendar() As String
            Get
                Return Me.deliveryCalendarField
            End Get
            Set
                Me.deliveryCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryCalendarSupplied() As Boolean
            Get
                Return Me.deliveryCalendarSuppliedField
            End Get
            Set
                Me.deliveryCalendarSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DiscoveredSoftwareProperties
        
        Private softwareTitleField As String
        
        Private softwareVersionField As String
        
        Private softwareTypeField As DiscoveredSoftwareType
        
        Private sourceTypeField As DiscoveredSoftwareSourceType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareTitle() As String
            Get
                Return Me.softwareTitleField
            End Get
            Set
                Me.softwareTitleField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareVersion() As String
            Get
                Return Me.softwareVersionField
            End Get
            Set
                Me.softwareVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareType() As DiscoveredSoftwareType
            Get
                Return Me.softwareTypeField
            End Get
            Set
                Me.softwareTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sourceType() As DiscoveredSoftwareSourceType
            Get
                Return Me.sourceTypeField
            End Get
            Set
                Me.sourceTypeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum DiscoveredSoftwareType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SOFTWARE-TYPE-UNDEFINED")>  _
        SOFTWARETYPEUNDEFINED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SOFTWARE-TYPE-SOFTWARE")>  _
        SOFTWARETYPESOFTWARE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SOFTWARE-TYPE-RELEASE")>  _
        SOFTWARETYPERELEASE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SOFTWARE-TYPE-PATCH")>  _
        SOFTWARETYPEPATCH
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SOFTWARE-TYPE-CONFIGURATION-SETTING")>  _
        SOFTWARETYPECONFIGURATIONSETTING
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SOFTWARE-TYPE-SERVICE")>  _
        SOFTWARETYPESERVICE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SOFTWARE-TYPE-PRODUCT")>  _
        SOFTWARETYPEPRODUCT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SOFTWARE-TYPE-PATCH-ROLLUP")>  _
        SOFTWARETYPEPATCHROLLUP
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum DiscoveredSoftwareSourceType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SOURCE-TYPE-CA")>  _
        SOURCETYPECA
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SOURCE-TYPE-CUSTOM")>  _
        SOURCETYPECUSTOM
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SOURCE-TYPE-HEURISTIC")>  _
        SOURCETYPEHEURISTIC
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class DiscoveredSoftwarePropertiesRequired
        
        Private softwareTitleRequiredField As Boolean
        
        Private softwareVersionRequiredField As Boolean
        
        Private softwareTypeRequiredField As Boolean
        
        Private sourceTypeRequiredField As Boolean
        
        '''<remarks/>
        Public Property softwareTitleRequired() As Boolean
            Get
                Return Me.softwareTitleRequiredField
            End Get
            Set
                Me.softwareTitleRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareVersionRequired() As Boolean
            Get
                Return Me.softwareVersionRequiredField
            End Get
            Set
                Me.softwareVersionRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareTypeRequired() As Boolean
            Get
                Return Me.softwareTypeRequiredField
            End Get
            Set
                Me.softwareTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sourceTypeRequired() As Boolean
            Get
                Return Me.sourceTypeRequiredField
            End Get
            Set
                Me.sourceTypeRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePolicyExceptionProperties
        
        Private unitUUIDField As String
        
        Private unitNameField As String
        
        Private unitTypeField As UnitType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitUUID() As String
            Get
                Return Me.unitUUIDField
            End Get
            Set
                Me.unitUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitName() As String
            Get
                Return Me.unitNameField
            End Get
            Set
                Me.unitNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitType() As UnitType
            Get
                Return Me.unitTypeField
            End Get
            Set
                Me.unitTypeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePolicyExceptionPropertiesRequired
        
        Private unitUUIDRequiredField As Boolean
        
        Private unitNameRequiredField As Boolean
        
        Private unitTypeRequiredField As Boolean
        
        '''<remarks/>
        Public Property unitUUIDRequired() As Boolean
            Get
                Return Me.unitUUIDRequiredField
            End Get
            Set
                Me.unitUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitNameRequired() As Boolean
            Get
                Return Me.unitNameRequiredField
            End Get
            Set
                Me.unitNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitTypeRequired() As Boolean
            Get
                Return Me.unitTypeRequiredField
            End Get
            Set
                Me.unitTypeRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class Item
        
        Private itemUuidField As String
        
        Private itemTypeField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property itemUuid() As String
            Get
                Return Me.itemUuidField
            End Get
            Set
                Me.itemUuidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property itemType() As Integer
            Get
                Return Me.itemTypeField
            End Get
            Set
                Me.itemTypeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePolicyProperties
        
        Private softwarePolicyIdField As String
        
        Private stateField As SoftwarePolicyState
        
        Private sealField As Boolean
        
        Private noOfParentSoftwarePoliciesField As Long
        
        Private noOfChildSoftwarePoliciesField As Long
        
        Private noOfSoftwareJobsField As Long
        
        Private nameField As String
        
        Private commentField As String
        
        Private softwarePolicyEvaluationTypeField As SoftwarePolicyEvaluationType
        
        Private softwareJobContainerPropertyMaskField As SoftwareJobContainerPropertyMask
        
        Private unitGroupIdField As String
        
        Private creationDateField As DateTime
        
        Private changeDateField As DateTime
        
        Private attributeMaskField As AttributeMask
        
        Private evaluationCalendarField As String
        
        Private evaluationPeriodField As Long
        
        Private nextEvaluationDateField As DateTime
        
        Private evaluationDateField As DateTime
        
        Private evaluationTypeMaskField As EvaluationTypeMask
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePolicyId() As String
            Get
                Return Me.softwarePolicyIdField
            End Get
            Set
                Me.softwarePolicyIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property state() As SoftwarePolicyState
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property seal() As Boolean
            Get
                Return Me.sealField
            End Get
            Set
                Me.sealField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfParentSoftwarePolicies() As Long
            Get
                Return Me.noOfParentSoftwarePoliciesField
            End Get
            Set
                Me.noOfParentSoftwarePoliciesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfChildSoftwarePolicies() As Long
            Get
                Return Me.noOfChildSoftwarePoliciesField
            End Get
            Set
                Me.noOfChildSoftwarePoliciesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfSoftwareJobs() As Long
            Get
                Return Me.noOfSoftwareJobsField
            End Get
            Set
                Me.noOfSoftwareJobsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationType() As SoftwarePolicyEvaluationType
            Get
                Return Me.softwarePolicyEvaluationTypeField
            End Get
            Set
                Me.softwarePolicyEvaluationTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMask() As SoftwareJobContainerPropertyMask
            Get
                Return Me.softwareJobContainerPropertyMaskField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitGroupId() As String
            Get
                Return Me.unitGroupIdField
            End Get
            Set
                Me.unitGroupIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDate() As DateTime
            Get
                Return Me.creationDateField
            End Get
            Set
                Me.creationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property changeDate() As DateTime
            Get
                Return Me.changeDateField
            End Get
            Set
                Me.changeDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property attributeMask() As AttributeMask
            Get
                Return Me.attributeMaskField
            End Get
            Set
                Me.attributeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property evaluationCalendar() As String
            Get
                Return Me.evaluationCalendarField
            End Get
            Set
                Me.evaluationCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriod() As Long
            Get
                Return Me.evaluationPeriodField
            End Get
            Set
                Me.evaluationPeriodField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nextEvaluationDate() As DateTime
            Get
                Return Me.nextEvaluationDateField
            End Get
            Set
                Me.nextEvaluationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationDate() As DateTime
            Get
                Return Me.evaluationDateField
            End Get
            Set
                Me.evaluationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationTypeMask() As EvaluationTypeMask
            Get
                Return Me.evaluationTypeMaskField
            End Get
            Set
                Me.evaluationTypeMaskField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class EvaluationTypeMask
        
        Private onceField As Boolean
        
        Private periodicField As Boolean
        
        Private enterpriseTimeField As Boolean
        
        Private adhocCreateField As Boolean
        
        Private adhocUpdateField As Boolean
        
        '''<remarks/>
        Public Property once() As Boolean
            Get
                Return Me.onceField
            End Get
            Set
                Me.onceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property periodic() As Boolean
            Get
                Return Me.periodicField
            End Get
            Set
                Me.periodicField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property enterpriseTime() As Boolean
            Get
                Return Me.enterpriseTimeField
            End Get
            Set
                Me.enterpriseTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property adhocCreate() As Boolean
            Get
                Return Me.adhocCreateField
            End Get
            Set
                Me.adhocCreateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property adhocUpdate() As Boolean
            Get
                Return Me.adhocUpdateField
            End Get
            Set
                Me.adhocUpdateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePolicyPropertiesRequired
        
        Private softwarePolicyIdRequiredField As Boolean
        
        Private stateRequiredField As Boolean
        
        Private sealRequiredField As Boolean
        
        Private noOfParentSoftwarePoliciesRequiredField As Boolean
        
        Private noOfChildSoftwarePoliciesRequiredField As Boolean
        
        Private noOfSoftwareJobsRequiredField As Boolean
        
        Private nameRequiredField As Boolean
        
        Private commentRequiredField As Boolean
        
        Private softwarePolicyEvaluationTypeRequiredField As Boolean
        
        Private softwareJobContainerPropertyMaskRequiredField As Boolean
        
        Private unitGroupIdRequiredField As Boolean
        
        Private creationDateRequiredField As Boolean
        
        Private changeDateRequiredField As Boolean
        
        Private attribMaskRequiredField As Boolean
        
        Private evaluationCalendarRequiredField As Boolean
        
        Private evaluationPeriodRequiredField As Boolean
        
        Private nextEvaluationDateRequiredField As Boolean
        
        Private evaluationDateRequiredField As Boolean
        
        Private evaluationTypeMaskRequiredField As Boolean
        
        '''<remarks/>
        Public Property softwarePolicyIdRequired() As Boolean
            Get
                Return Me.softwarePolicyIdRequiredField
            End Get
            Set
                Me.softwarePolicyIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property stateRequired() As Boolean
            Get
                Return Me.stateRequiredField
            End Get
            Set
                Me.stateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sealRequired() As Boolean
            Get
                Return Me.sealRequiredField
            End Get
            Set
                Me.sealRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfParentSoftwarePoliciesRequired() As Boolean
            Get
                Return Me.noOfParentSoftwarePoliciesRequiredField
            End Get
            Set
                Me.noOfParentSoftwarePoliciesRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfChildSoftwarePoliciesRequired() As Boolean
            Get
                Return Me.noOfChildSoftwarePoliciesRequiredField
            End Get
            Set
                Me.noOfChildSoftwarePoliciesRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfSoftwareJobsRequired() As Boolean
            Get
                Return Me.noOfSoftwareJobsRequiredField
            End Get
            Set
                Me.noOfSoftwareJobsRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameRequired() As Boolean
            Get
                Return Me.nameRequiredField
            End Get
            Set
                Me.nameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentRequired() As Boolean
            Get
                Return Me.commentRequiredField
            End Get
            Set
                Me.commentRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationTypeRequired() As Boolean
            Get
                Return Me.softwarePolicyEvaluationTypeRequiredField
            End Get
            Set
                Me.softwarePolicyEvaluationTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMaskRequired() As Boolean
            Get
                Return Me.softwareJobContainerPropertyMaskRequiredField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitGroupIdRequired() As Boolean
            Get
                Return Me.unitGroupIdRequiredField
            End Get
            Set
                Me.unitGroupIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDateRequired() As Boolean
            Get
                Return Me.creationDateRequiredField
            End Get
            Set
                Me.creationDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property changeDateRequired() As Boolean
            Get
                Return Me.changeDateRequiredField
            End Get
            Set
                Me.changeDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property attribMaskRequired() As Boolean
            Get
                Return Me.attribMaskRequiredField
            End Get
            Set
                Me.attribMaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationCalendarRequired() As Boolean
            Get
                Return Me.evaluationCalendarRequiredField
            End Get
            Set
                Me.evaluationCalendarRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriodRequired() As Boolean
            Get
                Return Me.evaluationPeriodRequiredField
            End Get
            Set
                Me.evaluationPeriodRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nextEvaluationDateRequired() As Boolean
            Get
                Return Me.nextEvaluationDateRequiredField
            End Get
            Set
                Me.nextEvaluationDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationDateRequired() As Boolean
            Get
                Return Me.evaluationDateRequiredField
            End Get
            Set
                Me.evaluationDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationTypeMaskRequired() As Boolean
            Get
                Return Me.evaluationTypeMaskRequiredField
            End Get
            Set
                Me.evaluationTypeMaskRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwareJobContainerPropertiesRequired
        
        Private softwareJobContainerIdRequiredField As Boolean
        
        Private stateRequiredField As Boolean
        
        Private sealRequiredField As Boolean
        
        Private noOfParentSoftwareJobContainersRequiredField As Boolean
        
        Private noOfChildSoftwareJobContainersRequiredField As Boolean
        
        Private noOfSoftwareJobsRequiredField As Boolean
        
        Private nameRequiredField As Boolean
        
        Private commentRequiredField As Boolean
        
        Private softwareJobContainerPropertyMaskRequiredField As Boolean
        
        Private creationDateRequiredField As Boolean
        
        Private changeDateRequiredField As Boolean
        
        Private attribMaskRequiredField As Boolean
        
        Private waitCountRequiredField As Boolean
        
        Private activeCountRequiredField As Boolean
        
        Private errorCountRequiredField As Boolean
        
        Private okCountRequiredField As Boolean
        
        Private renewStateRequiredField As Boolean
        
        '''<remarks/>
        Public Property softwareJobContainerIdRequired() As Boolean
            Get
                Return Me.softwareJobContainerIdRequiredField
            End Get
            Set
                Me.softwareJobContainerIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property stateRequired() As Boolean
            Get
                Return Me.stateRequiredField
            End Get
            Set
                Me.stateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sealRequired() As Boolean
            Get
                Return Me.sealRequiredField
            End Get
            Set
                Me.sealRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfParentSoftwareJobContainersRequired() As Boolean
            Get
                Return Me.noOfParentSoftwareJobContainersRequiredField
            End Get
            Set
                Me.noOfParentSoftwareJobContainersRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfChildSoftwareJobContainersRequired() As Boolean
            Get
                Return Me.noOfChildSoftwareJobContainersRequiredField
            End Get
            Set
                Me.noOfChildSoftwareJobContainersRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfSoftwareJobsRequired() As Boolean
            Get
                Return Me.noOfSoftwareJobsRequiredField
            End Get
            Set
                Me.noOfSoftwareJobsRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameRequired() As Boolean
            Get
                Return Me.nameRequiredField
            End Get
            Set
                Me.nameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentRequired() As Boolean
            Get
                Return Me.commentRequiredField
            End Get
            Set
                Me.commentRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMaskRequired() As Boolean
            Get
                Return Me.softwareJobContainerPropertyMaskRequiredField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDateRequired() As Boolean
            Get
                Return Me.creationDateRequiredField
            End Get
            Set
                Me.creationDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property changeDateRequired() As Boolean
            Get
                Return Me.changeDateRequiredField
            End Get
            Set
                Me.changeDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property attribMaskRequired() As Boolean
            Get
                Return Me.attribMaskRequiredField
            End Get
            Set
                Me.attribMaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property waitCountRequired() As Boolean
            Get
                Return Me.waitCountRequiredField
            End Get
            Set
                Me.waitCountRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activeCountRequired() As Boolean
            Get
                Return Me.activeCountRequiredField
            End Get
            Set
                Me.activeCountRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property errorCountRequired() As Boolean
            Get
                Return Me.errorCountRequiredField
            End Get
            Set
                Me.errorCountRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property okCountRequired() As Boolean
            Get
                Return Me.okCountRequiredField
            End Get
            Set
                Me.okCountRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property renewStateRequired() As Boolean
            Get
                Return Me.renewStateRequiredField
            End Get
            Set
                Me.renewStateRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProcedureGroupProperties
        
        Private softwarePackageProcedureGroupIdField As String
        
        Private noOfParentSoftwarePackageProcedureGroupsField As Long
        
        Private noOfSoftwarePackageProceduresField As Long
        
        Private nameField As String
        
        Private commentField As String
        
        Private creationDateField As DateTime
        
        Private changeDateField As DateTime
        
        Private attributeMaskField As AttributeMask
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureGroupId() As String
            Get
                Return Me.softwarePackageProcedureGroupIdField
            End Get
            Set
                Me.softwarePackageProcedureGroupIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfParentSoftwarePackageProcedureGroups() As Long
            Get
                Return Me.noOfParentSoftwarePackageProcedureGroupsField
            End Get
            Set
                Me.noOfParentSoftwarePackageProcedureGroupsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfSoftwarePackageProcedures() As Long
            Get
                Return Me.noOfSoftwarePackageProceduresField
            End Get
            Set
                Me.noOfSoftwarePackageProceduresField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDate() As DateTime
            Get
                Return Me.creationDateField
            End Get
            Set
                Me.creationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property changeDate() As DateTime
            Get
                Return Me.changeDateField
            End Get
            Set
                Me.changeDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property attributeMask() As AttributeMask
            Get
                Return Me.attributeMaskField
            End Get
            Set
                Me.attributeMaskField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProcedureGroupPropertiesRequired
        
        Private softwarePackageProcedureGroupIdRequiredField As Boolean
        
        Private noOfParentSoftwarePackageProcedureGroupsRequiredField As Boolean
        
        Private noOfSoftwarePackageProceduresRequiredField As Boolean
        
        Private nameRequiredField As Boolean
        
        Private commentRequiredField As Boolean
        
        Private creationDateRequiredField As Boolean
        
        Private changeDateRequiredField As Boolean
        
        Private attribMaskRequiredField As Boolean
        
        '''<remarks/>
        Public Property softwarePackageProcedureGroupIdRequired() As Boolean
            Get
                Return Me.softwarePackageProcedureGroupIdRequiredField
            End Get
            Set
                Me.softwarePackageProcedureGroupIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfParentSoftwarePackageProcedureGroupsRequired() As Boolean
            Get
                Return Me.noOfParentSoftwarePackageProcedureGroupsRequiredField
            End Get
            Set
                Me.noOfParentSoftwarePackageProcedureGroupsRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfSoftwarePackageProceduresRequired() As Boolean
            Get
                Return Me.noOfSoftwarePackageProceduresRequiredField
            End Get
            Set
                Me.noOfSoftwarePackageProceduresRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameRequired() As Boolean
            Get
                Return Me.nameRequiredField
            End Get
            Set
                Me.nameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentRequired() As Boolean
            Get
                Return Me.commentRequiredField
            End Get
            Set
                Me.commentRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDateRequired() As Boolean
            Get
                Return Me.creationDateRequiredField
            End Get
            Set
                Me.creationDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property changeDateRequired() As Boolean
            Get
                Return Me.changeDateRequiredField
            End Get
            Set
                Me.changeDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property attribMaskRequired() As Boolean
            Get
                Return Me.attribMaskRequiredField
            End Get
            Set
                Me.attribMaskRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageGroupProperties
        
        Private softwarePackageGroupIdField As String
        
        Private noOfParentSoftwarePackageGroupsField As Long
        
        Private noOfChildSoftwarePackageGroupsField As Long
        
        Private noOfSoftwarePackagesField As Long
        
        Private nameField As String
        
        Private commentField As String
        
        Private creationDateField As DateTime
        
        Private changeDateField As DateTime
        
        Private attributeMaskField As AttributeMask
        
        Private softwarePackageGroupPropertyField As SoftwarePackageGroupProperty
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageGroupId() As String
            Get
                Return Me.softwarePackageGroupIdField
            End Get
            Set
                Me.softwarePackageGroupIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfParentSoftwarePackageGroups() As Long
            Get
                Return Me.noOfParentSoftwarePackageGroupsField
            End Get
            Set
                Me.noOfParentSoftwarePackageGroupsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfChildSoftwarePackageGroups() As Long
            Get
                Return Me.noOfChildSoftwarePackageGroupsField
            End Get
            Set
                Me.noOfChildSoftwarePackageGroupsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfSoftwarePackages() As Long
            Get
                Return Me.noOfSoftwarePackagesField
            End Get
            Set
                Me.noOfSoftwarePackagesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDate() As DateTime
            Get
                Return Me.creationDateField
            End Get
            Set
                Me.creationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property changeDate() As DateTime
            Get
                Return Me.changeDateField
            End Get
            Set
                Me.changeDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property attributeMask() As AttributeMask
            Get
                Return Me.attributeMaskField
            End Get
            Set
                Me.attributeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageGroupProperty() As SoftwarePackageGroupProperty
            Get
                Return Me.softwarePackageGroupPropertyField
            End Get
            Set
                Me.softwarePackageGroupPropertyField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SoftwarePackageGroupProperty
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("NON-CATALOG")>  _
        NONCATALOG
        
        '''<remarks/>
        CATALOG
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CATALOG-GROUP")>  _
        CATALOGGROUP
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageGroupPropertiesRequired
        
        Private softwarePackageGroupIdRequiredField As Boolean
        
        Private noOfParentSoftwarePackageGroupsRequiredField As Boolean
        
        Private noOfChildSoftwarePackageGroupsRequiredField As Boolean
        
        Private noOfSoftwarePackagesRequiredField As Boolean
        
        Private nameRequiredField As Boolean
        
        Private commentRequiredField As Boolean
        
        Private creationDateRequiredField As Boolean
        
        Private changeDateRequiredField As Boolean
        
        Private attribMaskRequiredField As Boolean
        
        Private softwarePackageGroupPropertyRequiredField As Boolean
        
        '''<remarks/>
        Public Property softwarePackageGroupIdRequired() As Boolean
            Get
                Return Me.softwarePackageGroupIdRequiredField
            End Get
            Set
                Me.softwarePackageGroupIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfParentSoftwarePackageGroupsRequired() As Boolean
            Get
                Return Me.noOfParentSoftwarePackageGroupsRequiredField
            End Get
            Set
                Me.noOfParentSoftwarePackageGroupsRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfChildSoftwarePackageGroupsRequired() As Boolean
            Get
                Return Me.noOfChildSoftwarePackageGroupsRequiredField
            End Get
            Set
                Me.noOfChildSoftwarePackageGroupsRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noOfSoftwarePackagesRequired() As Boolean
            Get
                Return Me.noOfSoftwarePackagesRequiredField
            End Get
            Set
                Me.noOfSoftwarePackagesRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameRequired() As Boolean
            Get
                Return Me.nameRequiredField
            End Get
            Set
                Me.nameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentRequired() As Boolean
            Get
                Return Me.commentRequiredField
            End Get
            Set
                Me.commentRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDateRequired() As Boolean
            Get
                Return Me.creationDateRequiredField
            End Get
            Set
                Me.creationDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property changeDateRequired() As Boolean
            Get
                Return Me.changeDateRequiredField
            End Get
            Set
                Me.changeDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property attribMaskRequired() As Boolean
            Get
                Return Me.attribMaskRequiredField
            End Get
            Set
                Me.attribMaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageGroupPropertyRequired() As Boolean
            Get
                Return Me.softwarePackageGroupPropertyRequiredField
            End Get
            Set
                Me.softwarePackageGroupPropertyRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSoftwarePolicyProperties
        
        Private softwarePolicyIdField As String
        
        Private softwarePolicyIdSuppliedField As Boolean
        
        Private unitGroupIdField As String
        
        Private unitGroupIdSuppliedField As Boolean
        
        Private nameField As String
        
        Private nameSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private softwarePolicyEvaluationTypeField As SoftwarePolicyEvaluationType
        
        Private softwarePolicyEvaluationTypeSuppliedField As Boolean
        
        Private softwareJobContainerPropertyMaskField As SoftwareJobContainerPropertyMask
        
        Private softwareJobContainerPropertyMaskSuppliedField As Boolean
        
        Private evaluationCalendarField As String
        
        Private evaluationCalendarSuppliedField As Boolean
        
        Private evaluationPeriodField As Long
        
        Private evaluationPeriodSuppliedField As Boolean
        
        Private nextEvaluationDateField As DateTime
        
        Private nextEvaluationDateSuppliedField As Boolean
        
        Private evaluationTypeMaskField As EvaluationTypeMask
        
        Private evaluationTypeMaskSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePolicyId() As String
            Get
                Return Me.softwarePolicyIdField
            End Get
            Set
                Me.softwarePolicyIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyIdSupplied() As Boolean
            Get
                Return Me.softwarePolicyIdSuppliedField
            End Get
            Set
                Me.softwarePolicyIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitGroupId() As String
            Get
                Return Me.unitGroupIdField
            End Get
            Set
                Me.unitGroupIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitGroupIdSupplied() As Boolean
            Get
                Return Me.unitGroupIdSuppliedField
            End Get
            Set
                Me.unitGroupIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameSupplied() As Boolean
            Get
                Return Me.nameSuppliedField
            End Get
            Set
                Me.nameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationType() As SoftwarePolicyEvaluationType
            Get
                Return Me.softwarePolicyEvaluationTypeField
            End Get
            Set
                Me.softwarePolicyEvaluationTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationTypeSupplied() As Boolean
            Get
                Return Me.softwarePolicyEvaluationTypeSuppliedField
            End Get
            Set
                Me.softwarePolicyEvaluationTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMask() As SoftwareJobContainerPropertyMask
            Get
                Return Me.softwareJobContainerPropertyMaskField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMaskSupplied() As Boolean
            Get
                Return Me.softwareJobContainerPropertyMaskSuppliedField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property evaluationCalendar() As String
            Get
                Return Me.evaluationCalendarField
            End Get
            Set
                Me.evaluationCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationCalendarSupplied() As Boolean
            Get
                Return Me.evaluationCalendarSuppliedField
            End Get
            Set
                Me.evaluationCalendarSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriod() As Long
            Get
                Return Me.evaluationPeriodField
            End Get
            Set
                Me.evaluationPeriodField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriodSupplied() As Boolean
            Get
                Return Me.evaluationPeriodSuppliedField
            End Get
            Set
                Me.evaluationPeriodSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nextEvaluationDate() As DateTime
            Get
                Return Me.nextEvaluationDateField
            End Get
            Set
                Me.nextEvaluationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nextEvaluationDateSupplied() As Boolean
            Get
                Return Me.nextEvaluationDateSuppliedField
            End Get
            Set
                Me.nextEvaluationDateSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationTypeMask() As EvaluationTypeMask
            Get
                Return Me.evaluationTypeMaskField
            End Get
            Set
                Me.evaluationTypeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationTypeMaskSupplied() As Boolean
            Get
                Return Me.evaluationTypeMaskSuppliedField
            End Get
            Set
                Me.evaluationTypeMaskSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSoftwareJobContainerProperties
        
        Private softwareJobContainerIdField As String
        
        Private softwareJobContainerIdSuppliedField As Boolean
        
        Private nameField As String
        
        Private nameSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private softwareJobContainerPropertyMaskField As SoftwareJobContainerPropertyMask
        
        Private softwareJobContainerPropertyMaskSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareJobContainerId() As String
            Get
                Return Me.softwareJobContainerIdField
            End Get
            Set
                Me.softwareJobContainerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerIdSupplied() As Boolean
            Get
                Return Me.softwareJobContainerIdSuppliedField
            End Get
            Set
                Me.softwareJobContainerIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameSupplied() As Boolean
            Get
                Return Me.nameSuppliedField
            End Get
            Set
                Me.nameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMask() As SoftwareJobContainerPropertyMask
            Get
                Return Me.softwareJobContainerPropertyMaskField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMaskSupplied() As Boolean
            Get
                Return Me.softwareJobContainerPropertyMaskSuppliedField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSoftwarePackageProcedureGroupProperties
        
        Private softwarePackageProcedureGroupIdField As String
        
        Private softwarePackageProcedureGroupIdSuppliedField As Boolean
        
        Private nameField As String
        
        Private nameSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureGroupId() As String
            Get
                Return Me.softwarePackageProcedureGroupIdField
            End Get
            Set
                Me.softwarePackageProcedureGroupIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureGroupIdSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureGroupIdSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureGroupIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameSupplied() As Boolean
            Get
                Return Me.nameSuppliedField
            End Get
            Set
                Me.nameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetCatalogSoftwarePackageGroupProperties
        
        Private softwarePackageGroupIdField As String
        
        Private softwarePackageGroupIdSuppliedField As Boolean
        
        Private unitGroupIdField As String
        
        Private unitGroupIdSuppliedField As Boolean
        
        Private nameField As String
        
        Private nameSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageGroupId() As String
            Get
                Return Me.softwarePackageGroupIdField
            End Get
            Set
                Me.softwarePackageGroupIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageGroupIdSupplied() As Boolean
            Get
                Return Me.softwarePackageGroupIdSuppliedField
            End Get
            Set
                Me.softwarePackageGroupIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitGroupId() As String
            Get
                Return Me.unitGroupIdField
            End Get
            Set
                Me.unitGroupIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitGroupIdSupplied() As Boolean
            Get
                Return Me.unitGroupIdSuppliedField
            End Get
            Set
                Me.unitGroupIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameSupplied() As Boolean
            Get
                Return Me.nameSuppliedField
            End Get
            Set
                Me.nameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSoftwarePackageGroupProperties
        
        Private softwarePackageGroupIdField As String
        
        Private softwarePackageGroupIdSuppliedField As Boolean
        
        Private nameField As String
        
        Private nameSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageGroupId() As String
            Get
                Return Me.softwarePackageGroupIdField
            End Get
            Set
                Me.softwarePackageGroupIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageGroupIdSupplied() As Boolean
            Get
                Return Me.softwarePackageGroupIdSuppliedField
            End Get
            Set
                Me.softwarePackageGroupIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameSupplied() As Boolean
            Get
                Return Me.nameSuppliedField
            End Get
            Set
                Me.nameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSoftwarePolicyProperties
        
        Private unitGroupIdField As String
        
        Private unitGroupIdSuppliedField As Boolean
        
        Private nameField As String
        
        Private nameSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private softwarePolicyEvaluationTypeField As SoftwarePolicyEvaluationType
        
        Private softwarePolicyEvaluationTypeSuppliedField As Boolean
        
        Private softwareJobContainerPropertyMaskField As SoftwareJobContainerPropertyMask
        
        Private softwareJobContainerPropertyMaskSuppliedField As Boolean
        
        Private evaluationTypeMaskField As EvaluationTypeMask
        
        Private evaluationTypeMaskSuppliedField As Boolean
        
        Private evaluationCalendarField As String
        
        Private evaluationCalendarSuppliedField As Boolean
        
        Private evaluationPeriodField As Long
        
        Private evaluationPeriodSuppliedField As Boolean
        
        Private nextEvaluationDateField As DateTime
        
        Private nextEvaluationDateSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitGroupId() As String
            Get
                Return Me.unitGroupIdField
            End Get
            Set
                Me.unitGroupIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitGroupIdSupplied() As Boolean
            Get
                Return Me.unitGroupIdSuppliedField
            End Get
            Set
                Me.unitGroupIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameSupplied() As Boolean
            Get
                Return Me.nameSuppliedField
            End Get
            Set
                Me.nameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationType() As SoftwarePolicyEvaluationType
            Get
                Return Me.softwarePolicyEvaluationTypeField
            End Get
            Set
                Me.softwarePolicyEvaluationTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePolicyEvaluationTypeSupplied() As Boolean
            Get
                Return Me.softwarePolicyEvaluationTypeSuppliedField
            End Get
            Set
                Me.softwarePolicyEvaluationTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMask() As SoftwareJobContainerPropertyMask
            Get
                Return Me.softwareJobContainerPropertyMaskField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMaskSupplied() As Boolean
            Get
                Return Me.softwareJobContainerPropertyMaskSuppliedField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationTypeMask() As EvaluationTypeMask
            Get
                Return Me.evaluationTypeMaskField
            End Get
            Set
                Me.evaluationTypeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationTypeMaskSupplied() As Boolean
            Get
                Return Me.evaluationTypeMaskSuppliedField
            End Get
            Set
                Me.evaluationTypeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property evaluationCalendar() As String
            Get
                Return Me.evaluationCalendarField
            End Get
            Set
                Me.evaluationCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationCalendarSupplied() As Boolean
            Get
                Return Me.evaluationCalendarSuppliedField
            End Get
            Set
                Me.evaluationCalendarSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriod() As Long
            Get
                Return Me.evaluationPeriodField
            End Get
            Set
                Me.evaluationPeriodField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationPeriodSupplied() As Boolean
            Get
                Return Me.evaluationPeriodSuppliedField
            End Get
            Set
                Me.evaluationPeriodSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nextEvaluationDate() As DateTime
            Get
                Return Me.nextEvaluationDateField
            End Get
            Set
                Me.nextEvaluationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nextEvaluationDateSupplied() As Boolean
            Get
                Return Me.nextEvaluationDateSuppliedField
            End Get
            Set
                Me.nextEvaluationDateSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSoftwareJobContainerProperties
        
        Private parentSoftwareJobContainerIdField As String
        
        Private parentSoftwareJobContainerIdSuppliedField As Boolean
        
        Private nameField As String
        
        Private nameSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private softwareJobContainerPropertyMaskField As SoftwareJobContainerPropertyMask
        
        Private softwareJobContainerPropertyMaskSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property parentSoftwareJobContainerId() As String
            Get
                Return Me.parentSoftwareJobContainerIdField
            End Get
            Set
                Me.parentSoftwareJobContainerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property parentSoftwareJobContainerIdSupplied() As Boolean
            Get
                Return Me.parentSoftwareJobContainerIdSuppliedField
            End Get
            Set
                Me.parentSoftwareJobContainerIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameSupplied() As Boolean
            Get
                Return Me.nameSuppliedField
            End Get
            Set
                Me.nameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMask() As SoftwareJobContainerPropertyMask
            Get
                Return Me.softwareJobContainerPropertyMaskField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobContainerPropertyMaskSupplied() As Boolean
            Get
                Return Me.softwareJobContainerPropertyMaskSuppliedField
            End Get
            Set
                Me.softwareJobContainerPropertyMaskSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSoftwarePackageProcedureGroupProperties
        
        Private parentSoftwarePackageGroupIdField As String
        
        Private parentSoftwarePackageGroupIdSuppliedField As Boolean
        
        Private nameField As String
        
        Private nameSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property parentSoftwarePackageGroupId() As String
            Get
                Return Me.parentSoftwarePackageGroupIdField
            End Get
            Set
                Me.parentSoftwarePackageGroupIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property parentSoftwarePackageGroupIdSupplied() As Boolean
            Get
                Return Me.parentSoftwarePackageGroupIdSuppliedField
            End Get
            Set
                Me.parentSoftwarePackageGroupIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameSupplied() As Boolean
            Get
                Return Me.nameSuppliedField
            End Get
            Set
                Me.nameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreatePatchRollupProperties
        
        Private nameField As String
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateCatalogSoftwarePackageGroupProperties
        
        Private parentCatalogSoftwarePackageGroupIdField As String
        
        Private parentCatalogSoftwarePackageGroupIdSuppliedField As Boolean
        
        Private nameField As String
        
        Private nameSuppliedField As Boolean
        
        Private unitGroupIdField As String
        
        Private unitGroupIdSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property parentCatalogSoftwarePackageGroupId() As String
            Get
                Return Me.parentCatalogSoftwarePackageGroupIdField
            End Get
            Set
                Me.parentCatalogSoftwarePackageGroupIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property parentCatalogSoftwarePackageGroupIdSupplied() As Boolean
            Get
                Return Me.parentCatalogSoftwarePackageGroupIdSuppliedField
            End Get
            Set
                Me.parentCatalogSoftwarePackageGroupIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameSupplied() As Boolean
            Get
                Return Me.nameSuppliedField
            End Get
            Set
                Me.nameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitGroupId() As String
            Get
                Return Me.unitGroupIdField
            End Get
            Set
                Me.unitGroupIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitGroupIdSupplied() As Boolean
            Get
                Return Me.unitGroupIdSuppliedField
            End Get
            Set
                Me.unitGroupIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSoftwarePackageGroupProperties
        
        Private parentSoftwarePackageGroupIdField As String
        
        Private parentSoftwarePackageGroupIdSuppliedField As Boolean
        
        Private nameField As String
        
        Private nameSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property parentSoftwarePackageGroupId() As String
            Get
                Return Me.parentSoftwarePackageGroupIdField
            End Get
            Set
                Me.parentSoftwarePackageGroupIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property parentSoftwarePackageGroupIdSupplied() As Boolean
            Get
                Return Me.parentSoftwarePackageGroupIdSuppliedField
            End Get
            Set
                Me.parentSoftwarePackageGroupIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameSupplied() As Boolean
            Get
                Return Me.nameSuppliedField
            End Get
            Set
                Me.nameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSoftwareJobProperties
        
        Private softwareJobIdField As String
        
        Private softwareJobIdSuppliedField As Boolean
        
        Private softwareJobNameField As String
        
        Private softwareJobNameSuppliedField As Boolean
        
        Private executionDateField As DateTime
        
        Private executionDateSuppliedField As Boolean
        
        Private timeoutHoursField As Long
        
        Private timeoutHoursSuppliedField As Boolean
        
        Private startWhenField As SoftwareJobStartupTime
        
        Private startWhenSuppliedField As Boolean
        
        Private bootBeforeMaskField As SoftwareJobBootMask
        
        Private bootBeforeMaskSuppliedField As Boolean
        
        Private bootAfterMaskField As SoftwareJobBootMask
        
        Private bootAfterMaskSuppliedField As Boolean
        
        Private operationMaskField As SoftwareJobOperationMask
        
        Private operationMaskSuppliedField As Boolean
        
        Private userParametersField As String
        
        Private userParametersSuppliedField As Boolean
        
        Private promptTimeoutHoursField As Long
        
        Private promptTimeoutHoursSuppliedField As Boolean
        
        Private deliveryCalendarField As String
        
        Private deliveryCalendarSuppliedField As Boolean
        
        Private deliveryDateField As DateTime
        
        Private deliveryDateSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareJobId() As String
            Get
                Return Me.softwareJobIdField
            End Get
            Set
                Me.softwareJobIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobIdSupplied() As Boolean
            Get
                Return Me.softwareJobIdSuppliedField
            End Get
            Set
                Me.softwareJobIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareJobName() As String
            Get
                Return Me.softwareJobNameField
            End Get
            Set
                Me.softwareJobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobNameSupplied() As Boolean
            Get
                Return Me.softwareJobNameSuppliedField
            End Get
            Set
                Me.softwareJobNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property executionDate() As DateTime
            Get
                Return Me.executionDateField
            End Get
            Set
                Me.executionDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property executionDateSupplied() As Boolean
            Get
                Return Me.executionDateSuppliedField
            End Get
            Set
                Me.executionDateSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeoutHours() As Long
            Get
                Return Me.timeoutHoursField
            End Get
            Set
                Me.timeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeoutHoursSupplied() As Boolean
            Get
                Return Me.timeoutHoursSuppliedField
            End Get
            Set
                Me.timeoutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhen() As SoftwareJobStartupTime
            Get
                Return Me.startWhenField
            End Get
            Set
                Me.startWhenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhenSupplied() As Boolean
            Get
                Return Me.startWhenSuppliedField
            End Get
            Set
                Me.startWhenSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwareJobBootMask
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskSupplied() As Boolean
            Get
                Return Me.bootBeforeMaskSuppliedField
            End Get
            Set
                Me.bootBeforeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwareJobBootMask
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskSupplied() As Boolean
            Get
                Return Me.bootAfterMaskSuppliedField
            End Get
            Set
                Me.bootAfterMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask() As SoftwareJobOperationMask
            Get
                Return Me.operationMaskField
            End Get
            Set
                Me.operationMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskSupplied() As Boolean
            Get
                Return Me.operationMaskSuppliedField
            End Get
            Set
                Me.operationMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userParameters() As String
            Get
                Return Me.userParametersField
            End Get
            Set
                Me.userParametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userParametersSupplied() As Boolean
            Get
                Return Me.userParametersSuppliedField
            End Get
            Set
                Me.userParametersSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHours() As Long
            Get
                Return Me.promptTimeoutHoursField
            End Get
            Set
                Me.promptTimeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHoursSupplied() As Boolean
            Get
                Return Me.promptTimeoutHoursSuppliedField
            End Get
            Set
                Me.promptTimeoutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property deliveryCalendar() As String
            Get
                Return Me.deliveryCalendarField
            End Get
            Set
                Me.deliveryCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryCalendarSupplied() As Boolean
            Get
                Return Me.deliveryCalendarSuppliedField
            End Get
            Set
                Me.deliveryCalendarSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryDate() As DateTime
            Get
                Return Me.deliveryDateField
            End Get
            Set
                Me.deliveryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryDateSupplied() As Boolean
            Get
                Return Me.deliveryDateSuppliedField
            End Get
            Set
                Me.deliveryDateSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwareJobProperties
        
        Private softwareJobIdField As String
        
        Private softwareJobNameField As String
        
        Private softwarePackageIdField As String
        
        Private softwarePackageNameField As String
        
        Private softwarePackageVersionField As String
        
        Private softwarePackageTypeField As SoftwarePackageType
        
        Private softwarePackageProcedureIdField As String
        
        Private softwarePackageProcedureNameField As String
        
        Private executionDateField As DateTime
        
        Private createdDateField As DateTime
        
        Private timeoutHoursField As Long
        
        Private softwareJobTypeField As SoftwareJobType
        
        Private softwareJobStateField As SoftwareJobState
        
        Private startWhenField As SoftwareJobStartupTime
        
        Private permissionMaskField As SoftwareJobPermissionMask
        
        Private bootBeforeMaskField As SoftwareJobBootMask
        
        Private bootAfterMaskField As SoftwareJobBootMask
        
        Private operationMaskField As SoftwareJobOperationMask
        
        Private userParametersField As String
        
        Private jobStatusCountersField As SoftwareJobStatusCounters
        
        Private internalMaskField As Long
        
        Private orderNumberField As Long
        
        Private promptTimeoutHoursField As Long
        
        Private softwareJobTaskField As SoftwareJobTask
        
        Private deliveryCalendarField As String
        
        Private deliveryDateField As DateTime
        
        Private causeField As Long
        
        Private causeParamField As String
        
        Private renewStateField As SoftwareJobRenewState
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareJobId() As String
            Get
                Return Me.softwareJobIdField
            End Get
            Set
                Me.softwareJobIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareJobName() As String
            Get
                Return Me.softwareJobNameField
            End Get
            Set
                Me.softwareJobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageId() As String
            Get
                Return Me.softwarePackageIdField
            End Get
            Set
                Me.softwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageName() As String
            Get
                Return Me.softwarePackageNameField
            End Get
            Set
                Me.softwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVersion() As String
            Get
                Return Me.softwarePackageVersionField
            End Get
            Set
                Me.softwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageType() As SoftwarePackageType
            Get
                Return Me.softwarePackageTypeField
            End Get
            Set
                Me.softwarePackageTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureId() As String
            Get
                Return Me.softwarePackageProcedureIdField
            End Get
            Set
                Me.softwarePackageProcedureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureName() As String
            Get
                Return Me.softwarePackageProcedureNameField
            End Get
            Set
                Me.softwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property executionDate() As DateTime
            Get
                Return Me.executionDateField
            End Get
            Set
                Me.executionDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property createdDate() As DateTime
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeoutHours() As Long
            Get
                Return Me.timeoutHoursField
            End Get
            Set
                Me.timeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobType() As SoftwareJobType
            Get
                Return Me.softwareJobTypeField
            End Get
            Set
                Me.softwareJobTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobState() As SoftwareJobState
            Get
                Return Me.softwareJobStateField
            End Get
            Set
                Me.softwareJobStateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhen() As SoftwareJobStartupTime
            Get
                Return Me.startWhenField
            End Get
            Set
                Me.startWhenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property permissionMask() As SoftwareJobPermissionMask
            Get
                Return Me.permissionMaskField
            End Get
            Set
                Me.permissionMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwareJobBootMask
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwareJobBootMask
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask() As SoftwareJobOperationMask
            Get
                Return Me.operationMaskField
            End Get
            Set
                Me.operationMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userParameters() As String
            Get
                Return Me.userParametersField
            End Get
            Set
                Me.userParametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property jobStatusCounters() As SoftwareJobStatusCounters
            Get
                Return Me.jobStatusCountersField
            End Get
            Set
                Me.jobStatusCountersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property internalMask() As Long
            Get
                Return Me.internalMaskField
            End Get
            Set
                Me.internalMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property orderNumber() As Long
            Get
                Return Me.orderNumberField
            End Get
            Set
                Me.orderNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHours() As Long
            Get
                Return Me.promptTimeoutHoursField
            End Get
            Set
                Me.promptTimeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobTask() As SoftwareJobTask
            Get
                Return Me.softwareJobTaskField
            End Get
            Set
                Me.softwareJobTaskField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property deliveryCalendar() As String
            Get
                Return Me.deliveryCalendarField
            End Get
            Set
                Me.deliveryCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryDate() As DateTime
            Get
                Return Me.deliveryDateField
            End Get
            Set
                Me.deliveryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cause() As Long
            Get
                Return Me.causeField
            End Get
            Set
                Me.causeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property causeParam() As String
            Get
                Return Me.causeParamField
            End Get
            Set
                Me.causeParamField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property renewState() As SoftwareJobRenewState
            Get
                Return Me.renewStateField
            End Get
            Set
                Me.renewStateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwareJobPropertiesRequired
        
        Private softwareJobIdRequiredField As Boolean
        
        Private softwareJobNameRequiredField As Boolean
        
        Private softwarePackageIdRequiredField As Boolean
        
        Private softwarePackageNameRequiredField As Boolean
        
        Private softwarePackageVersionRequiredField As Boolean
        
        Private softwarePackageTypeRequiredField As Boolean
        
        Private softwarePackageProcedureIdRequiredField As Boolean
        
        Private softwarePackageProcedureNameRequiredField As Boolean
        
        Private executionDateRequiredField As Boolean
        
        Private createdDateRequiredField As Boolean
        
        Private timeoutHoursRequiredField As Boolean
        
        Private softwareJobTypeRequiredField As Boolean
        
        Private softwareJobStateRequiredField As Boolean
        
        Private startWhenRequiredField As Boolean
        
        Private permissionMaskRequiredField As Boolean
        
        Private bootBeforeMaskRequiredField As Boolean
        
        Private bootAfterMaskRequiredField As Boolean
        
        Private operationMaskRequiredField As Boolean
        
        Private userParametersRequiredField As Boolean
        
        Private jobStatusCountersRequiredField As Boolean
        
        Private internalMaskRequiredField As Boolean
        
        Private orderNumberRequiredField As Boolean
        
        Private promptTimeoutHoursRequiredField As Boolean
        
        Private softwareJobTaskRequiredField As Boolean
        
        Private deliveryCalendarRequiredField As Boolean
        
        Private deliveryDateTimeRequiredField As Boolean
        
        Private causeRequiredField As Boolean
        
        Private causeParamRequiredField As Boolean
        
        Private renewStateRequiredField As Boolean
        
        '''<remarks/>
        Public Property softwareJobIdRequired() As Boolean
            Get
                Return Me.softwareJobIdRequiredField
            End Get
            Set
                Me.softwareJobIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobNameRequired() As Boolean
            Get
                Return Me.softwareJobNameRequiredField
            End Get
            Set
                Me.softwareJobNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageIdRequired() As Boolean
            Get
                Return Me.softwarePackageIdRequiredField
            End Get
            Set
                Me.softwarePackageIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageNameRequired() As Boolean
            Get
                Return Me.softwarePackageNameRequiredField
            End Get
            Set
                Me.softwarePackageNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageVersionRequired() As Boolean
            Get
                Return Me.softwarePackageVersionRequiredField
            End Get
            Set
                Me.softwarePackageVersionRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageTypeRequired() As Boolean
            Get
                Return Me.softwarePackageTypeRequiredField
            End Get
            Set
                Me.softwarePackageTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureIdRequired() As Boolean
            Get
                Return Me.softwarePackageProcedureIdRequiredField
            End Get
            Set
                Me.softwarePackageProcedureIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureNameRequired() As Boolean
            Get
                Return Me.softwarePackageProcedureNameRequiredField
            End Get
            Set
                Me.softwarePackageProcedureNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property executionDateRequired() As Boolean
            Get
                Return Me.executionDateRequiredField
            End Get
            Set
                Me.executionDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property createdDateRequired() As Boolean
            Get
                Return Me.createdDateRequiredField
            End Get
            Set
                Me.createdDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeoutHoursRequired() As Boolean
            Get
                Return Me.timeoutHoursRequiredField
            End Get
            Set
                Me.timeoutHoursRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobTypeRequired() As Boolean
            Get
                Return Me.softwareJobTypeRequiredField
            End Get
            Set
                Me.softwareJobTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobStateRequired() As Boolean
            Get
                Return Me.softwareJobStateRequiredField
            End Get
            Set
                Me.softwareJobStateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhenRequired() As Boolean
            Get
                Return Me.startWhenRequiredField
            End Get
            Set
                Me.startWhenRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property permissionMaskRequired() As Boolean
            Get
                Return Me.permissionMaskRequiredField
            End Get
            Set
                Me.permissionMaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskRequired() As Boolean
            Get
                Return Me.bootBeforeMaskRequiredField
            End Get
            Set
                Me.bootBeforeMaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskRequired() As Boolean
            Get
                Return Me.bootAfterMaskRequiredField
            End Get
            Set
                Me.bootAfterMaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskRequired() As Boolean
            Get
                Return Me.operationMaskRequiredField
            End Get
            Set
                Me.operationMaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userParametersRequired() As Boolean
            Get
                Return Me.userParametersRequiredField
            End Get
            Set
                Me.userParametersRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property jobStatusCountersRequired() As Boolean
            Get
                Return Me.jobStatusCountersRequiredField
            End Get
            Set
                Me.jobStatusCountersRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property internalMaskRequired() As Boolean
            Get
                Return Me.internalMaskRequiredField
            End Get
            Set
                Me.internalMaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property orderNumberRequired() As Boolean
            Get
                Return Me.orderNumberRequiredField
            End Get
            Set
                Me.orderNumberRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHoursRequired() As Boolean
            Get
                Return Me.promptTimeoutHoursRequiredField
            End Get
            Set
                Me.promptTimeoutHoursRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobTaskRequired() As Boolean
            Get
                Return Me.softwareJobTaskRequiredField
            End Get
            Set
                Me.softwareJobTaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryCalendarRequired() As Boolean
            Get
                Return Me.deliveryCalendarRequiredField
            End Get
            Set
                Me.deliveryCalendarRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryDateTimeRequired() As Boolean
            Get
                Return Me.deliveryDateTimeRequiredField
            End Get
            Set
                Me.deliveryDateTimeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property causeRequired() As Boolean
            Get
                Return Me.causeRequiredField
            End Get
            Set
                Me.causeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property causeParamRequired() As Boolean
            Get
                Return Me.causeParamRequiredField
            End Get
            Set
                Me.causeParamRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property renewStateRequired() As Boolean
            Get
                Return Me.renewStateRequiredField
            End Get
            Set
                Me.renewStateRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSoftwareJobOrderProperties
        
        Private executionDateField As DateTime
        
        Private executionDateSuppliedField As Boolean
        
        Private timeoutHoursField As Long
        
        Private timeoutHoursSuppliedField As Boolean
        
        Private startWhenField As SoftwareJobStartupTime
        
        Private startWhenSuppliedField As Boolean
        
        Private jobNameField As String
        
        Private jobNameSuppliedField As Boolean
        
        Private bootBeforeMaskField As SoftwareJobBootMask
        
        Private bootBeforeMaskSuppliedField As Boolean
        
        Private bootAfterMaskField As SoftwareJobBootMask
        
        Private bootAfterMaskSuppliedField As Boolean
        
        Private operationMaskField As SoftwareJobOperationMask
        
        Private operationMaskSuppliedField As Boolean
        
        Private userParametersField As String
        
        Private userParametersSuppliedField As Boolean
        
        Private promptTimeoutHoursField As Long
        
        Private promptTimeoutHoursSuppliedField As Boolean
        
        Private deliveryCalendarField As String
        
        Private deliveryCalendarSuppliedField As Boolean
        
        Private deliveryDateTimeField As DateTime
        
        Private deliveryDateTimeSuppliedField As Boolean
        
        '''<remarks/>
        Public Property executionDate() As DateTime
            Get
                Return Me.executionDateField
            End Get
            Set
                Me.executionDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property executionDateSupplied() As Boolean
            Get
                Return Me.executionDateSuppliedField
            End Get
            Set
                Me.executionDateSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeoutHours() As Long
            Get
                Return Me.timeoutHoursField
            End Get
            Set
                Me.timeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeoutHoursSupplied() As Boolean
            Get
                Return Me.timeoutHoursSuppliedField
            End Get
            Set
                Me.timeoutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhen() As SoftwareJobStartupTime
            Get
                Return Me.startWhenField
            End Get
            Set
                Me.startWhenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhenSupplied() As Boolean
            Get
                Return Me.startWhenSuppliedField
            End Get
            Set
                Me.startWhenSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property jobName() As String
            Get
                Return Me.jobNameField
            End Get
            Set
                Me.jobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property jobNameSupplied() As Boolean
            Get
                Return Me.jobNameSuppliedField
            End Get
            Set
                Me.jobNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwareJobBootMask
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskSupplied() As Boolean
            Get
                Return Me.bootBeforeMaskSuppliedField
            End Get
            Set
                Me.bootBeforeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwareJobBootMask
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskSupplied() As Boolean
            Get
                Return Me.bootAfterMaskSuppliedField
            End Get
            Set
                Me.bootAfterMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask() As SoftwareJobOperationMask
            Get
                Return Me.operationMaskField
            End Get
            Set
                Me.operationMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskSupplied() As Boolean
            Get
                Return Me.operationMaskSuppliedField
            End Get
            Set
                Me.operationMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userParameters() As String
            Get
                Return Me.userParametersField
            End Get
            Set
                Me.userParametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userParametersSupplied() As Boolean
            Get
                Return Me.userParametersSuppliedField
            End Get
            Set
                Me.userParametersSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHours() As Long
            Get
                Return Me.promptTimeoutHoursField
            End Get
            Set
                Me.promptTimeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHoursSupplied() As Boolean
            Get
                Return Me.promptTimeoutHoursSuppliedField
            End Get
            Set
                Me.promptTimeoutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property deliveryCalendar() As String
            Get
                Return Me.deliveryCalendarField
            End Get
            Set
                Me.deliveryCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryCalendarSupplied() As Boolean
            Get
                Return Me.deliveryCalendarSuppliedField
            End Get
            Set
                Me.deliveryCalendarSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryDateTime() As DateTime
            Get
                Return Me.deliveryDateTimeField
            End Get
            Set
                Me.deliveryDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryDateTimeSupplied() As Boolean
            Get
                Return Me.deliveryDateTimeSuppliedField
            End Get
            Set
                Me.deliveryDateTimeSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class FileSystemElementPath
        
        Private elementNameField As String
        
        Private elementPathField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property elementName() As String
            Get
                Return Me.elementNameField
            End Get
            Set
                Me.elementNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property elementPath() As String
            Get
                Return Me.elementPathField
            End Get
            Set
                Me.elementPathField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageMaskType
        
        Private allField As Boolean
        
        Private pgmField As Boolean
        
        Private swdField As Boolean
        
        Private userSelectableField As Boolean
        
        Private sdsoftwareField As Boolean
        
        '''<remarks/>
        Public Property all() As Boolean
            Get
                Return Me.allField
            End Get
            Set
                Me.allField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property pgm() As Boolean
            Get
                Return Me.pgmField
            End Get
            Set
                Me.pgmField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property swd() As Boolean
            Get
                Return Me.swdField
            End Get
            Set
                Me.swdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectable() As Boolean
            Get
                Return Me.userSelectableField
            End Get
            Set
                Me.userSelectableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sdsoftware() As Boolean
            Get
                Return Me.sdsoftwareField
            End Get
            Set
                Me.sdsoftwareField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSoftwarePackageProperties
        
        Private softwarePackageIdField As String
        
        Private softwarePackageIdSuppliedField As Boolean
        
        Private softwarePackageNameField As String
        
        Private softwarePackageNameSuppliedField As Boolean
        
        Private softwarePackageVersionField As String
        
        Private softwarePackageVersionSuppliedField As Boolean
        
        Private supplierField As String
        
        Private supplierSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private archiveCommentField As String
        
        Private archiveCommentSuppliedField As Boolean
        
        Private softwarePackageMaskField As SoftwarePackageMask
        
        Private softwarePackageMaskSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageId() As String
            Get
                Return Me.softwarePackageIdField
            End Get
            Set
                Me.softwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageIdSupplied() As Boolean
            Get
                Return Me.softwarePackageIdSuppliedField
            End Get
            Set
                Me.softwarePackageIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageName() As String
            Get
                Return Me.softwarePackageNameField
            End Get
            Set
                Me.softwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageNameSupplied() As Boolean
            Get
                Return Me.softwarePackageNameSuppliedField
            End Get
            Set
                Me.softwarePackageNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVersion() As String
            Get
                Return Me.softwarePackageVersionField
            End Get
            Set
                Me.softwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageVersionSupplied() As Boolean
            Get
                Return Me.softwarePackageVersionSuppliedField
            End Get
            Set
                Me.softwarePackageVersionSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property supplier() As String
            Get
                Return Me.supplierField
            End Get
            Set
                Me.supplierField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property supplierSupplied() As Boolean
            Get
                Return Me.supplierSuppliedField
            End Get
            Set
                Me.supplierSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property archiveComment() As String
            Get
                Return Me.archiveCommentField
            End Get
            Set
                Me.archiveCommentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property archiveCommentSupplied() As Boolean
            Get
                Return Me.archiveCommentSuppliedField
            End Get
            Set
                Me.archiveCommentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageMask() As SoftwarePackageMask
            Get
                Return Me.softwarePackageMaskField
            End Get
            Set
                Me.softwarePackageMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageMaskSupplied() As Boolean
            Get
                Return Me.softwarePackageMaskSuppliedField
            End Get
            Set
                Me.softwarePackageMaskSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSoftwarePackageProperties
        
        Private softwarePackageNameField As String
        
        Private softwarePackageNameSuppliedField As Boolean
        
        Private softwarePackageVersionField As String
        
        Private softwarePackageVersionSuppliedField As Boolean
        
        Private supplierField As String
        
        Private supplierSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private basedOnSoftwarePackageIdField As String
        
        Private basedOnSoftwarePackageIdSuppliedField As Boolean
        
        Private softwarePackageMaskField As SoftwarePackageMask
        
        Private softwarePackageMaskSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageName() As String
            Get
                Return Me.softwarePackageNameField
            End Get
            Set
                Me.softwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageNameSupplied() As Boolean
            Get
                Return Me.softwarePackageNameSuppliedField
            End Get
            Set
                Me.softwarePackageNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVersion() As String
            Get
                Return Me.softwarePackageVersionField
            End Get
            Set
                Me.softwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageVersionSupplied() As Boolean
            Get
                Return Me.softwarePackageVersionSuppliedField
            End Get
            Set
                Me.softwarePackageVersionSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property supplier() As String
            Get
                Return Me.supplierField
            End Get
            Set
                Me.supplierField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property supplierSupplied() As Boolean
            Get
                Return Me.supplierSuppliedField
            End Get
            Set
                Me.supplierSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property basedOnSoftwarePackageId() As String
            Get
                Return Me.basedOnSoftwarePackageIdField
            End Get
            Set
                Me.basedOnSoftwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property basedOnSoftwarePackageIdSupplied() As Boolean
            Get
                Return Me.basedOnSoftwarePackageIdSuppliedField
            End Get
            Set
                Me.basedOnSoftwarePackageIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageMask() As SoftwarePackageMask
            Get
                Return Me.softwarePackageMaskField
            End Get
            Set
                Me.softwarePackageMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageMaskSupplied() As Boolean
            Get
                Return Me.softwarePackageMaskSuppliedField
            End Get
            Set
                Me.softwarePackageMaskSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProperties
        
        Private softwarePackageIdField As String
        
        Private softwarePackageNameField As String
        
        Private softwarePackageVersionField As String
        
        Private basedOnSoftwarePackageIdField As String
        
        Private basedOnSoftwarePackageNameField As String
        
        Private basedOnSoftwarePackageVersionField As String
        
        Private supplierField As String
        
        Private commentField As String
        
        Private sourcePathField As String
        
        Private softwarePackageTypeField As SoftwarePackageType
        
        Private userSelectableField As Boolean
        
        Private softwarePackageDataSourceField As SourceMedium
        
        Private softwarePackageFiledByField As SoftwarePackageFiledBy
        
        Private registrationDateTimeField As DateTime
        
        Private changeDateTimeField As DateTime
        
        Private packageTypeField As SoftwarePackagingType
        
        Private packetSizeField As Long
        
        Private buildOnSizeField As Long
        
        Private archivePathField As String
        
        Private archiveCommentField As String
        
        Private archivedByField As String
        
        Private archiveFlagField As ArchivePath
        
        Private archDateTimeField As DateTime
        
        Private softwarePackageMaskField As SoftwarePackageMask
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageId() As String
            Get
                Return Me.softwarePackageIdField
            End Get
            Set
                Me.softwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageName() As String
            Get
                Return Me.softwarePackageNameField
            End Get
            Set
                Me.softwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVersion() As String
            Get
                Return Me.softwarePackageVersionField
            End Get
            Set
                Me.softwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property basedOnSoftwarePackageId() As String
            Get
                Return Me.basedOnSoftwarePackageIdField
            End Get
            Set
                Me.basedOnSoftwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property basedOnSoftwarePackageName() As String
            Get
                Return Me.basedOnSoftwarePackageNameField
            End Get
            Set
                Me.basedOnSoftwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property basedOnSoftwarePackageVersion() As String
            Get
                Return Me.basedOnSoftwarePackageVersionField
            End Get
            Set
                Me.basedOnSoftwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property supplier() As String
            Get
                Return Me.supplierField
            End Get
            Set
                Me.supplierField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sourcePath() As String
            Get
                Return Me.sourcePathField
            End Get
            Set
                Me.sourcePathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageType() As SoftwarePackageType
            Get
                Return Me.softwarePackageTypeField
            End Get
            Set
                Me.softwarePackageTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectable() As Boolean
            Get
                Return Me.userSelectableField
            End Get
            Set
                Me.userSelectableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageDataSource() As SourceMedium
            Get
                Return Me.softwarePackageDataSourceField
            End Get
            Set
                Me.softwarePackageDataSourceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageFiledBy() As SoftwarePackageFiledBy
            Get
                Return Me.softwarePackageFiledByField
            End Get
            Set
                Me.softwarePackageFiledByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property registrationDateTime() As DateTime
            Get
                Return Me.registrationDateTimeField
            End Get
            Set
                Me.registrationDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property changeDateTime() As DateTime
            Get
                Return Me.changeDateTimeField
            End Get
            Set
                Me.changeDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property packageType() As SoftwarePackagingType
            Get
                Return Me.packageTypeField
            End Get
            Set
                Me.packageTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property packetSize() As Long
            Get
                Return Me.packetSizeField
            End Get
            Set
                Me.packetSizeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property buildOnSize() As Long
            Get
                Return Me.buildOnSizeField
            End Get
            Set
                Me.buildOnSizeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property archivePath() As String
            Get
                Return Me.archivePathField
            End Get
            Set
                Me.archivePathField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property archiveComment() As String
            Get
                Return Me.archiveCommentField
            End Get
            Set
                Me.archiveCommentField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property archivedBy() As String
            Get
                Return Me.archivedByField
            End Get
            Set
                Me.archivedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property archiveFlag() As ArchivePath
            Get
                Return Me.archiveFlagField
            End Get
            Set
                Me.archiveFlagField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property archDateTime() As DateTime
            Get
                Return Me.archDateTimeField
            End Get
            Set
                Me.archDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageMask() As SoftwarePackageMask
            Get
                Return Me.softwarePackageMaskField
            End Get
            Set
                Me.softwarePackageMaskField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackagePropertiesRequired
        
        Private softwarePackageIdRequiredField As Boolean
        
        Private softwarePackageNameRequiredField As Boolean
        
        Private softwarePackageVersionRequiredField As Boolean
        
        Private basedOnSoftwarePackageIdRequiredField As Boolean
        
        Private basedOnSoftwarePackageNameRequiredField As Boolean
        
        Private basedOnSoftwarePackageVersionRequiredField As Boolean
        
        Private supplierRequiredField As Boolean
        
        Private commentRequiredField As Boolean
        
        Private sourcePathRequiredField As Boolean
        
        Private softwarePackageTypeRequiredField As Boolean
        
        Private userSelectableRequiredField As Boolean
        
        Private softwarePackageDataSourceRequiredField As Boolean
        
        Private softwarePackageFiledByRequiredField As Boolean
        
        Private registrationDateTimeRequiredField As Boolean
        
        Private changeDateTimeRequiredField As Boolean
        
        Private packageTypeRequiredField As Boolean
        
        Private packetSizeRequiredField As Boolean
        
        Private buildOnSizeRequiredField As Boolean
        
        Private archivePathRequiredField As Boolean
        
        Private archiveCommentRequiredField As Boolean
        
        Private archivedByRequiredField As Boolean
        
        Private archiveFlagRequiredField As Boolean
        
        Private archDateTimeRequiredField As Boolean
        
        Private flagsRequiredField As Boolean
        
        '''<remarks/>
        Public Property softwarePackageIdRequired() As Boolean
            Get
                Return Me.softwarePackageIdRequiredField
            End Get
            Set
                Me.softwarePackageIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageNameRequired() As Boolean
            Get
                Return Me.softwarePackageNameRequiredField
            End Get
            Set
                Me.softwarePackageNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageVersionRequired() As Boolean
            Get
                Return Me.softwarePackageVersionRequiredField
            End Get
            Set
                Me.softwarePackageVersionRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property basedOnSoftwarePackageIdRequired() As Boolean
            Get
                Return Me.basedOnSoftwarePackageIdRequiredField
            End Get
            Set
                Me.basedOnSoftwarePackageIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property basedOnSoftwarePackageNameRequired() As Boolean
            Get
                Return Me.basedOnSoftwarePackageNameRequiredField
            End Get
            Set
                Me.basedOnSoftwarePackageNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property basedOnSoftwarePackageVersionRequired() As Boolean
            Get
                Return Me.basedOnSoftwarePackageVersionRequiredField
            End Get
            Set
                Me.basedOnSoftwarePackageVersionRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property supplierRequired() As Boolean
            Get
                Return Me.supplierRequiredField
            End Get
            Set
                Me.supplierRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentRequired() As Boolean
            Get
                Return Me.commentRequiredField
            End Get
            Set
                Me.commentRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sourcePathRequired() As Boolean
            Get
                Return Me.sourcePathRequiredField
            End Get
            Set
                Me.sourcePathRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageTypeRequired() As Boolean
            Get
                Return Me.softwarePackageTypeRequiredField
            End Get
            Set
                Me.softwarePackageTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectableRequired() As Boolean
            Get
                Return Me.userSelectableRequiredField
            End Get
            Set
                Me.userSelectableRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageDataSourceRequired() As Boolean
            Get
                Return Me.softwarePackageDataSourceRequiredField
            End Get
            Set
                Me.softwarePackageDataSourceRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageFiledByRequired() As Boolean
            Get
                Return Me.softwarePackageFiledByRequiredField
            End Get
            Set
                Me.softwarePackageFiledByRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property registrationDateTimeRequired() As Boolean
            Get
                Return Me.registrationDateTimeRequiredField
            End Get
            Set
                Me.registrationDateTimeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property changeDateTimeRequired() As Boolean
            Get
                Return Me.changeDateTimeRequiredField
            End Get
            Set
                Me.changeDateTimeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property packageTypeRequired() As Boolean
            Get
                Return Me.packageTypeRequiredField
            End Get
            Set
                Me.packageTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property packetSizeRequired() As Boolean
            Get
                Return Me.packetSizeRequiredField
            End Get
            Set
                Me.packetSizeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property buildOnSizeRequired() As Boolean
            Get
                Return Me.buildOnSizeRequiredField
            End Get
            Set
                Me.buildOnSizeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property archivePathRequired() As Boolean
            Get
                Return Me.archivePathRequiredField
            End Get
            Set
                Me.archivePathRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property archiveCommentRequired() As Boolean
            Get
                Return Me.archiveCommentRequiredField
            End Get
            Set
                Me.archiveCommentRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property archivedByRequired() As Boolean
            Get
                Return Me.archivedByRequiredField
            End Get
            Set
                Me.archivedByRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property archiveFlagRequired() As Boolean
            Get
                Return Me.archiveFlagRequiredField
            End Get
            Set
                Me.archiveFlagRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property archDateTimeRequired() As Boolean
            Get
                Return Me.archDateTimeRequiredField
            End Get
            Set
                Me.archDateTimeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property flagsRequired() As Boolean
            Get
                Return Me.flagsRequiredField
            End Get
            Set
                Me.flagsRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ImportSoftwarePackageProperties
        
        Private regInfoPathField As String
        
        Private regInfoPathSuppliedField As Boolean
        
        Private sourcePathField As String
        
        Private sourcePathSuppliedField As Boolean
        
        Private basedOnSoftwarePackageIdField As String
        
        Private basedOnSoftwarePackageIdSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property regInfoPath() As String
            Get
                Return Me.regInfoPathField
            End Get
            Set
                Me.regInfoPathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property regInfoPathSupplied() As Boolean
            Get
                Return Me.regInfoPathSuppliedField
            End Get
            Set
                Me.regInfoPathSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property sourcePath() As String
            Get
                Return Me.sourcePathField
            End Get
            Set
                Me.sourcePathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sourcePathSupplied() As Boolean
            Get
                Return Me.sourcePathSuppliedField
            End Get
            Set
                Me.sourcePathSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property basedOnSoftwarePackageId() As String
            Get
                Return Me.basedOnSoftwarePackageIdField
            End Get
            Set
                Me.basedOnSoftwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property basedOnSoftwarePackageIdSupplied() As Boolean
            Get
                Return Me.basedOnSoftwarePackageIdSuppliedField
            End Get
            Set
                Me.basedOnSoftwarePackageIdSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProcedureDependencyProperties
        
        Private softwarePackageProcedureDependencyIdField As String
        
        Private softwarePackageProcedureIdField As String
        
        Private dependantSoftwarePackageProcedureIdField As String
        
        Private softwarePackageNameField As String
        
        Private softwarePackageVersionField As String
        
        Private softwarePackageProcedureNameField As String
        
        Private filedByField As SoftwarePackageProcedureFiledBy
        
        Private orderNumberField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureDependencyId() As String
            Get
                Return Me.softwarePackageProcedureDependencyIdField
            End Get
            Set
                Me.softwarePackageProcedureDependencyIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureId() As String
            Get
                Return Me.softwarePackageProcedureIdField
            End Get
            Set
                Me.softwarePackageProcedureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dependantSoftwarePackageProcedureId() As String
            Get
                Return Me.dependantSoftwarePackageProcedureIdField
            End Get
            Set
                Me.dependantSoftwarePackageProcedureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageName() As String
            Get
                Return Me.softwarePackageNameField
            End Get
            Set
                Me.softwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVersion() As String
            Get
                Return Me.softwarePackageVersionField
            End Get
            Set
                Me.softwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureName() As String
            Get
                Return Me.softwarePackageProcedureNameField
            End Get
            Set
                Me.softwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property filedBy() As SoftwarePackageProcedureFiledBy
            Get
                Return Me.filedByField
            End Get
            Set
                Me.filedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property orderNumber() As Long
            Get
                Return Me.orderNumberField
            End Get
            Set
                Me.orderNumberField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProcedureDependencyPropertiesRequired
        
        Private softwarePackageProcedureDependencyIdRequiredField As Boolean
        
        Private softwarePackageProcedureIdRequiredField As Boolean
        
        Private dependantSoftwarePackageProcedureIdRequiredField As Boolean
        
        Private softwarePackageNameRequiredField As Boolean
        
        Private softwarePackageVersionRequiredField As Boolean
        
        Private softwarePackageProcedureNameRequiredField As Boolean
        
        Private filedByRequiredField As Boolean
        
        Private orderNumberRequiredField As Boolean
        
        '''<remarks/>
        Public Property softwarePackageProcedureDependencyIdRequired() As Boolean
            Get
                Return Me.softwarePackageProcedureDependencyIdRequiredField
            End Get
            Set
                Me.softwarePackageProcedureDependencyIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureIdRequired() As Boolean
            Get
                Return Me.softwarePackageProcedureIdRequiredField
            End Get
            Set
                Me.softwarePackageProcedureIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dependantSoftwarePackageProcedureIdRequired() As Boolean
            Get
                Return Me.dependantSoftwarePackageProcedureIdRequiredField
            End Get
            Set
                Me.dependantSoftwarePackageProcedureIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageNameRequired() As Boolean
            Get
                Return Me.softwarePackageNameRequiredField
            End Get
            Set
                Me.softwarePackageNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageVersionRequired() As Boolean
            Get
                Return Me.softwarePackageVersionRequiredField
            End Get
            Set
                Me.softwarePackageVersionRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureNameRequired() As Boolean
            Get
                Return Me.softwarePackageProcedureNameRequiredField
            End Get
            Set
                Me.softwarePackageProcedureNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property filedByRequired() As Boolean
            Get
                Return Me.filedByRequiredField
            End Get
            Set
                Me.filedByRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property orderNumberRequired() As Boolean
            Get
                Return Me.orderNumberRequiredField
            End Get
            Set
                Me.orderNumberRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSoftwarePackageProcedureDependencyProperties
        
        Private softwarePackageProcedureIdField As String
        
        Private softwarePackageProcedureIdSuppliedField As Boolean
        
        Private dependantSoftwarePackageProcedureIdField As String
        
        Private dependantSoftwarePackageProcedureIdSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureId() As String
            Get
                Return Me.softwarePackageProcedureIdField
            End Get
            Set
                Me.softwarePackageProcedureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureIdSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureIdSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dependantSoftwarePackageProcedureId() As String
            Get
                Return Me.dependantSoftwarePackageProcedureIdField
            End Get
            Set
                Me.dependantSoftwarePackageProcedureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dependantSoftwarePackageProcedureIdSupplied() As Boolean
            Get
                Return Me.dependantSoftwarePackageProcedureIdSuppliedField
            End Get
            Set
                Me.dependantSoftwarePackageProcedureIdSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSoftwarePackageProcedureProperties
        
        Private softwarePackageProcedureIdField As String
        
        Private softwarePackageProcedureIdSuppliedField As Boolean
        
        Private softwarePackageProcedureNameField As String
        
        Private softwarePackageProcedureNameSuppliedField As Boolean
        
        Private softwarePackageProcedureTaskField As SoftwarePackageProcedureTask
        
        Private softwarePackageProcedureTaskSuppliedField As Boolean
        
        Private softwarePackageProcedureTypeField As SoftwarePackageProcedureType
        
        Private softwarePackageProcedureTypeSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private userSelectableField As Boolean
        
        Private userSelectableSuppliedField As Boolean
        
        Private externalProcedureField As Boolean
        
        Private externalProcedureSuppliedField As Boolean
        
        Private operatingSystemTypeField As Long
        
        Private operatingSystemTypeSuppliedField As Boolean
        
        Private subPathField As String
        
        Private subPathSuppliedField As Boolean
        
        Private procToRunField As String
        
        Private procToRunSuppliedField As Boolean
        
        Private parametersField As String
        
        Private parametersSuppliedField As Boolean
        
        Private softwarePackageVolumeIdField As String
        
        Private softwarePackageVolumeIdSuppliedField As Boolean
        
        Private operationMaskField As SoftwarePackageProcedureOperationMask
        
        Private operationMaskSuppliedField As Boolean
        
        Private bootBeforeMaskField As SoftwarePackageProcedureBootMask
        
        Private bootBeforeMaskSuppliedField As Boolean
        
        Private bootAfterMaskField As SoftwarePackageProcedureBootMask
        
        Private bootAfterMaskSuppliedField As Boolean
        
        Private dependancyQueryIdField As String
        
        Private dependancyQueryIdSuppliedField As Boolean
        
        Private managementTypeMaskField As SoftwarePackageProcedureManagementTypeMask
        
        Private managementTypeMaskSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureId() As String
            Get
                Return Me.softwarePackageProcedureIdField
            End Get
            Set
                Me.softwarePackageProcedureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureIdSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureIdSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureName() As String
            Get
                Return Me.softwarePackageProcedureNameField
            End Get
            Set
                Me.softwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureNameSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureNameSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTask() As SoftwarePackageProcedureTask
            Get
                Return Me.softwarePackageProcedureTaskField
            End Get
            Set
                Me.softwarePackageProcedureTaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTaskSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureTaskSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureTaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureType() As SoftwarePackageProcedureType
            Get
                Return Me.softwarePackageProcedureTypeField
            End Get
            Set
                Me.softwarePackageProcedureTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTypeSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureTypeSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectable() As Boolean
            Get
                Return Me.userSelectableField
            End Get
            Set
                Me.userSelectableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectableSupplied() As Boolean
            Get
                Return Me.userSelectableSuppliedField
            End Get
            Set
                Me.userSelectableSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property externalProcedure() As Boolean
            Get
                Return Me.externalProcedureField
            End Get
            Set
                Me.externalProcedureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property externalProcedureSupplied() As Boolean
            Get
                Return Me.externalProcedureSuppliedField
            End Get
            Set
                Me.externalProcedureSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemType() As Long
            Get
                Return Me.operatingSystemTypeField
            End Get
            Set
                Me.operatingSystemTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemTypeSupplied() As Boolean
            Get
                Return Me.operatingSystemTypeSuppliedField
            End Get
            Set
                Me.operatingSystemTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property subPath() As String
            Get
                Return Me.subPathField
            End Get
            Set
                Me.subPathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property subPathSupplied() As Boolean
            Get
                Return Me.subPathSuppliedField
            End Get
            Set
                Me.subPathSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property procToRun() As String
            Get
                Return Me.procToRunField
            End Get
            Set
                Me.procToRunField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property procToRunSupplied() As Boolean
            Get
                Return Me.procToRunSuppliedField
            End Get
            Set
                Me.procToRunSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property parameters() As String
            Get
                Return Me.parametersField
            End Get
            Set
                Me.parametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property parametersSupplied() As Boolean
            Get
                Return Me.parametersSuppliedField
            End Get
            Set
                Me.parametersSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVolumeId() As String
            Get
                Return Me.softwarePackageVolumeIdField
            End Get
            Set
                Me.softwarePackageVolumeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageVolumeIdSupplied() As Boolean
            Get
                Return Me.softwarePackageVolumeIdSuppliedField
            End Get
            Set
                Me.softwarePackageVolumeIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask() As SoftwarePackageProcedureOperationMask
            Get
                Return Me.operationMaskField
            End Get
            Set
                Me.operationMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskSupplied() As Boolean
            Get
                Return Me.operationMaskSuppliedField
            End Get
            Set
                Me.operationMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwarePackageProcedureBootMask
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskSupplied() As Boolean
            Get
                Return Me.bootBeforeMaskSuppliedField
            End Get
            Set
                Me.bootBeforeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwarePackageProcedureBootMask
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskSupplied() As Boolean
            Get
                Return Me.bootAfterMaskSuppliedField
            End Get
            Set
                Me.bootAfterMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dependancyQueryId() As String
            Get
                Return Me.dependancyQueryIdField
            End Get
            Set
                Me.dependancyQueryIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dependancyQueryIdSupplied() As Boolean
            Get
                Return Me.dependancyQueryIdSuppliedField
            End Get
            Set
                Me.dependancyQueryIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property managementTypeMask() As SoftwarePackageProcedureManagementTypeMask
            Get
                Return Me.managementTypeMaskField
            End Get
            Set
                Me.managementTypeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property managementTypeMaskSupplied() As Boolean
            Get
                Return Me.managementTypeMaskSuppliedField
            End Get
            Set
                Me.managementTypeMaskSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProcedureOperationMask
        
        Private offlineField As Boolean
        
        Private promptField As Boolean
        
        Private calendarControlField As Boolean
        
        Private shieldField As Boolean
        
        Private lockField As Boolean
        
        Private noPromptCancelField As Boolean
        
        Private backgroundField As Boolean
        
        Private rerunField As Boolean
        
        Private permActAreaField As Boolean
        
        Private execPromptTimeoutField As Boolean
        
        Private resolveQueryGroupsField As Boolean
        
        Private autoDeliverItemField As Boolean
        
        Private defaultItemProcField As Boolean
        
        Private renewFailedOnlyField As Boolean
        
        '''<remarks/>
        Public Property offline() As Boolean
            Get
                Return Me.offlineField
            End Get
            Set
                Me.offlineField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prompt() As Boolean
            Get
                Return Me.promptField
            End Get
            Set
                Me.promptField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property calendarControl() As Boolean
            Get
                Return Me.calendarControlField
            End Get
            Set
                Me.calendarControlField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property shield() As Boolean
            Get
                Return Me.shieldField
            End Get
            Set
                Me.shieldField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lock() As Boolean
            Get
                Return Me.lockField
            End Get
            Set
                Me.lockField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noPromptCancel() As Boolean
            Get
                Return Me.noPromptCancelField
            End Get
            Set
                Me.noPromptCancelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property background() As Boolean
            Get
                Return Me.backgroundField
            End Get
            Set
                Me.backgroundField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rerun() As Boolean
            Get
                Return Me.rerunField
            End Get
            Set
                Me.rerunField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property permActArea() As Boolean
            Get
                Return Me.permActAreaField
            End Get
            Set
                Me.permActAreaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property execPromptTimeout() As Boolean
            Get
                Return Me.execPromptTimeoutField
            End Get
            Set
                Me.execPromptTimeoutField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property resolveQueryGroups() As Boolean
            Get
                Return Me.resolveQueryGroupsField
            End Get
            Set
                Me.resolveQueryGroupsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property autoDeliverItem() As Boolean
            Get
                Return Me.autoDeliverItemField
            End Get
            Set
                Me.autoDeliverItemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property defaultItemProc() As Boolean
            Get
                Return Me.defaultItemProcField
            End Get
            Set
                Me.defaultItemProcField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property renewFailedOnly() As Boolean
            Get
                Return Me.renewFailedOnlyField
            End Get
            Set
                Me.renewFailedOnlyField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProcedureBootMask
        
        Private noRebootField As Boolean
        
        Private rebootField As Boolean
        
        Private logoffField As Boolean
        
        Private rebootAfterLastField As Boolean
        
        Private logoffAfterLastField As Boolean
        
        '''<remarks/>
        Public Property noReboot() As Boolean
            Get
                Return Me.noRebootField
            End Get
            Set
                Me.noRebootField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property reboot() As Boolean
            Get
                Return Me.rebootField
            End Get
            Set
                Me.rebootField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property logoff() As Boolean
            Get
                Return Me.logoffField
            End Get
            Set
                Me.logoffField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rebootAfterLast() As Boolean
            Get
                Return Me.rebootAfterLastField
            End Get
            Set
                Me.rebootAfterLastField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property logoffAfterLast() As Boolean
            Get
                Return Me.logoffAfterLastField
            End Get
            Set
                Me.logoffAfterLastField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProcedureProperties
        
        Private softwarePackageProcedureIdField As String
        
        Private softwarePackageProcedureNameField As String
        
        Private softwarePackageProcedureTaskField As SoftwarePackageProcedureTask
        
        Private softwarePackageProcedureTypeField As SoftwarePackageProcedureType
        
        Private commentField As String
        
        Private userSelectableField As Boolean
        
        Private externalProcedureField As Boolean
        
        Private filedByField As SoftwarePackageProcedureFiledBy
        
        Private operatingSystemTypeField As Long
        
        Private subPathField As String
        
        Private procToRunField As String
        
        Private parametersField As String
        
        Private procedureRelationField As SoftwarePackageProcedureRelation
        
        Private activatedByField As SoftwarePackageProcedureFiledBy
        
        Private activatedDateTimeField As DateTime
        
        Private softwarePackageIdField As String
        
        Private softwarePackageNameField As String
        
        Private softwarePackageVersionField As String
        
        Private softwarePackageTypeField As SoftwarePackageType
        
        Private softwarePackageVolumeIdField As String
        
        Private softwarePackageVolumeNameField As String
        
        Private operationMaskField As SoftwarePackageProcedureOperationMask
        
        Private bootBeforeMaskField As SoftwarePackageProcedureBootMask
        
        Private bootAfterMaskField As SoftwarePackageProcedureBootMask
        
        Private dependancyQueryIdField As String
        
        Private managementTypeMaskField As SoftwarePackageProcedureManagementTypeMask
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureId() As String
            Get
                Return Me.softwarePackageProcedureIdField
            End Get
            Set
                Me.softwarePackageProcedureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureName() As String
            Get
                Return Me.softwarePackageProcedureNameField
            End Get
            Set
                Me.softwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTask() As SoftwarePackageProcedureTask
            Get
                Return Me.softwarePackageProcedureTaskField
            End Get
            Set
                Me.softwarePackageProcedureTaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureType() As SoftwarePackageProcedureType
            Get
                Return Me.softwarePackageProcedureTypeField
            End Get
            Set
                Me.softwarePackageProcedureTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectable() As Boolean
            Get
                Return Me.userSelectableField
            End Get
            Set
                Me.userSelectableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property externalProcedure() As Boolean
            Get
                Return Me.externalProcedureField
            End Get
            Set
                Me.externalProcedureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property filedBy() As SoftwarePackageProcedureFiledBy
            Get
                Return Me.filedByField
            End Get
            Set
                Me.filedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemType() As Long
            Get
                Return Me.operatingSystemTypeField
            End Get
            Set
                Me.operatingSystemTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property subPath() As String
            Get
                Return Me.subPathField
            End Get
            Set
                Me.subPathField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property procToRun() As String
            Get
                Return Me.procToRunField
            End Get
            Set
                Me.procToRunField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property parameters() As String
            Get
                Return Me.parametersField
            End Get
            Set
                Me.parametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property procedureRelation() As SoftwarePackageProcedureRelation
            Get
                Return Me.procedureRelationField
            End Get
            Set
                Me.procedureRelationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activatedBy() As SoftwarePackageProcedureFiledBy
            Get
                Return Me.activatedByField
            End Get
            Set
                Me.activatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activatedDateTime() As DateTime
            Get
                Return Me.activatedDateTimeField
            End Get
            Set
                Me.activatedDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageId() As String
            Get
                Return Me.softwarePackageIdField
            End Get
            Set
                Me.softwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageName() As String
            Get
                Return Me.softwarePackageNameField
            End Get
            Set
                Me.softwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVersion() As String
            Get
                Return Me.softwarePackageVersionField
            End Get
            Set
                Me.softwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageType() As SoftwarePackageType
            Get
                Return Me.softwarePackageTypeField
            End Get
            Set
                Me.softwarePackageTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVolumeId() As String
            Get
                Return Me.softwarePackageVolumeIdField
            End Get
            Set
                Me.softwarePackageVolumeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVolumeName() As String
            Get
                Return Me.softwarePackageVolumeNameField
            End Get
            Set
                Me.softwarePackageVolumeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask() As SoftwarePackageProcedureOperationMask
            Get
                Return Me.operationMaskField
            End Get
            Set
                Me.operationMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwarePackageProcedureBootMask
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwarePackageProcedureBootMask
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dependancyQueryId() As String
            Get
                Return Me.dependancyQueryIdField
            End Get
            Set
                Me.dependancyQueryIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property managementTypeMask() As SoftwarePackageProcedureManagementTypeMask
            Get
                Return Me.managementTypeMaskField
            End Get
            Set
                Me.managementTypeMaskField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProcedurePropertiesRequired
        
        Private softwarePackageProcedureIdRequiredField As Boolean
        
        Private softwarePackageProcedureNameRequiredField As Boolean
        
        Private softwarePackageProcedureTaskRequiredField As Boolean
        
        Private softwarePackageProcedureTypeRequiredField As Boolean
        
        Private commentRequiredField As Boolean
        
        Private userSelectableRequiredField As Boolean
        
        Private externalProcedureRequiredField As Boolean
        
        Private filedByRequiredField As Boolean
        
        Private operatingSystemTypeRequiredField As Boolean
        
        Private subPathRequiredField As Boolean
        
        Private procToRunRequiredField As Boolean
        
        Private parametersRequiredField As Boolean
        
        Private procedureRelationRequiredField As Boolean
        
        Private activatedByRequiredField As Boolean
        
        Private activatedDateTimeRequiredField As Boolean
        
        Private softwarePackageIdRequiredField As Boolean
        
        Private softwarePackageNameRequiredField As Boolean
        
        Private softwarePackageVersionRequiredField As Boolean
        
        Private softwarePackageTypeRequiredField As Boolean
        
        Private softwarePackageVolumeIdRequiredField As Boolean
        
        Private softwarePackageVolumeNameRequiredField As Boolean
        
        Private operationMaskRequiredField As Boolean
        
        Private bootBeforeMaskRequiredField As Boolean
        
        Private bootAfterMaskRequiredField As Boolean
        
        Private dependancyQueryIdRequiredField As Boolean
        
        Private managementTypeMaskRequiredField As Boolean
        
        '''<remarks/>
        Public Property softwarePackageProcedureIdRequired() As Boolean
            Get
                Return Me.softwarePackageProcedureIdRequiredField
            End Get
            Set
                Me.softwarePackageProcedureIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureNameRequired() As Boolean
            Get
                Return Me.softwarePackageProcedureNameRequiredField
            End Get
            Set
                Me.softwarePackageProcedureNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTaskRequired() As Boolean
            Get
                Return Me.softwarePackageProcedureTaskRequiredField
            End Get
            Set
                Me.softwarePackageProcedureTaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTypeRequired() As Boolean
            Get
                Return Me.softwarePackageProcedureTypeRequiredField
            End Get
            Set
                Me.softwarePackageProcedureTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentRequired() As Boolean
            Get
                Return Me.commentRequiredField
            End Get
            Set
                Me.commentRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectableRequired() As Boolean
            Get
                Return Me.userSelectableRequiredField
            End Get
            Set
                Me.userSelectableRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property externalProcedureRequired() As Boolean
            Get
                Return Me.externalProcedureRequiredField
            End Get
            Set
                Me.externalProcedureRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property filedByRequired() As Boolean
            Get
                Return Me.filedByRequiredField
            End Get
            Set
                Me.filedByRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemTypeRequired() As Boolean
            Get
                Return Me.operatingSystemTypeRequiredField
            End Get
            Set
                Me.operatingSystemTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property subPathRequired() As Boolean
            Get
                Return Me.subPathRequiredField
            End Get
            Set
                Me.subPathRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property procToRunRequired() As Boolean
            Get
                Return Me.procToRunRequiredField
            End Get
            Set
                Me.procToRunRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property parametersRequired() As Boolean
            Get
                Return Me.parametersRequiredField
            End Get
            Set
                Me.parametersRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property procedureRelationRequired() As Boolean
            Get
                Return Me.procedureRelationRequiredField
            End Get
            Set
                Me.procedureRelationRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activatedByRequired() As Boolean
            Get
                Return Me.activatedByRequiredField
            End Get
            Set
                Me.activatedByRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activatedDateTimeRequired() As Boolean
            Get
                Return Me.activatedDateTimeRequiredField
            End Get
            Set
                Me.activatedDateTimeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageIdRequired() As Boolean
            Get
                Return Me.softwarePackageIdRequiredField
            End Get
            Set
                Me.softwarePackageIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageNameRequired() As Boolean
            Get
                Return Me.softwarePackageNameRequiredField
            End Get
            Set
                Me.softwarePackageNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageVersionRequired() As Boolean
            Get
                Return Me.softwarePackageVersionRequiredField
            End Get
            Set
                Me.softwarePackageVersionRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageTypeRequired() As Boolean
            Get
                Return Me.softwarePackageTypeRequiredField
            End Get
            Set
                Me.softwarePackageTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageVolumeIdRequired() As Boolean
            Get
                Return Me.softwarePackageVolumeIdRequiredField
            End Get
            Set
                Me.softwarePackageVolumeIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageVolumeNameRequired() As Boolean
            Get
                Return Me.softwarePackageVolumeNameRequiredField
            End Get
            Set
                Me.softwarePackageVolumeNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskRequired() As Boolean
            Get
                Return Me.operationMaskRequiredField
            End Get
            Set
                Me.operationMaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskRequired() As Boolean
            Get
                Return Me.bootBeforeMaskRequiredField
            End Get
            Set
                Me.bootBeforeMaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskRequired() As Boolean
            Get
                Return Me.bootAfterMaskRequiredField
            End Get
            Set
                Me.bootAfterMaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dependancyQueryIdRequired() As Boolean
            Get
                Return Me.dependancyQueryIdRequiredField
            End Get
            Set
                Me.dependancyQueryIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property managementTypeMaskRequired() As Boolean
            Get
                Return Me.managementTypeMaskRequiredField
            End Get
            Set
                Me.managementTypeMaskRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageProcedureTypeMask
        
        Private allField As Boolean
        
        Private userSelectableField As Boolean
        
        Private embeddedField As Boolean
        
        Private addedField As Boolean
        
        Private convertedField As Boolean
        
        Private detectedField As Boolean
        
        Private installField As Boolean
        
        Private uninstallField As Boolean
        
        Private configureField As Boolean
        
        Private activateField As Boolean
        
        '''<remarks/>
        Public Property all() As Boolean
            Get
                Return Me.allField
            End Get
            Set
                Me.allField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectable() As Boolean
            Get
                Return Me.userSelectableField
            End Get
            Set
                Me.userSelectableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property embedded() As Boolean
            Get
                Return Me.embeddedField
            End Get
            Set
                Me.embeddedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property added() As Boolean
            Get
                Return Me.addedField
            End Get
            Set
                Me.addedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property converted() As Boolean
            Get
                Return Me.convertedField
            End Get
            Set
                Me.convertedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property detected() As Boolean
            Get
                Return Me.detectedField
            End Get
            Set
                Me.detectedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property install() As Boolean
            Get
                Return Me.installField
            End Get
            Set
                Me.installField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property uninstall() As Boolean
            Get
                Return Me.uninstallField
            End Get
            Set
                Me.uninstallField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property configure() As Boolean
            Get
                Return Me.configureField
            End Get
            Set
                Me.configureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activate() As Boolean
            Get
                Return Me.activateField
            End Get
            Set
                Me.activateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSoftwarePackageProcedureProperties
        
        Private softwarePackageIdField As String
        
        Private softwarePackageIdSuppliedField As Boolean
        
        Private softwarePackageProcedureNameField As String
        
        Private softwarePackageProcedureNameSuppliedField As Boolean
        
        Private softwarePackageProcedureTaskField As SoftwarePackageProcedureTask
        
        Private softwarePackageProcedureTaskSuppliedField As Boolean
        
        Private softwarePackageProcedureTypeField As SoftwarePackageProcedureType
        
        Private softwarePackageProcedureTypeSuppliedField As Boolean
        
        Private commentField As String
        
        Private commentSuppliedField As Boolean
        
        Private userSelectableField As Boolean
        
        Private userSelectableSuppliedField As Boolean
        
        Private externalProcedureField As Boolean
        
        Private externalProcedureSuppliedField As Boolean
        
        Private operatingSystemTypeField As Long
        
        Private operatingSystemTypeSuppliedField As Boolean
        
        Private subPathField As String
        
        Private subPathSuppliedField As Boolean
        
        Private procToRunField As String
        
        Private procToRunSuppliedField As Boolean
        
        Private parametersField As String
        
        Private parametersSuppliedField As Boolean
        
        Private softwarePackageVolumeIdField As String
        
        Private softwarePackageVolumeIdSuppliedField As Boolean
        
        Private operationMaskField As SoftwarePackageProcedureOperationMask
        
        Private operationMaskSuppliedField As Boolean
        
        Private bootBeforeMaskField As SoftwarePackageProcedureBootMask
        
        Private bootBeforeMaskSuppliedField As Boolean
        
        Private bootAfterMaskField As SoftwarePackageProcedureBootMask
        
        Private bootAfterMaskSuppliedField As Boolean
        
        Private dependancyQueryIdField As String
        
        Private dependancyQueryIdSuppliedField As Boolean
        
        Private managementTypeMaskField As SoftwarePackageProcedureManagementTypeMask
        
        Private managementTypeMaskSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageId() As String
            Get
                Return Me.softwarePackageIdField
            End Get
            Set
                Me.softwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageIdSupplied() As Boolean
            Get
                Return Me.softwarePackageIdSuppliedField
            End Get
            Set
                Me.softwarePackageIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureName() As String
            Get
                Return Me.softwarePackageProcedureNameField
            End Get
            Set
                Me.softwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureNameSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureNameSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTask() As SoftwarePackageProcedureTask
            Get
                Return Me.softwarePackageProcedureTaskField
            End Get
            Set
                Me.softwarePackageProcedureTaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTaskSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureTaskSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureTaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureType() As SoftwarePackageProcedureType
            Get
                Return Me.softwarePackageProcedureTypeField
            End Get
            Set
                Me.softwarePackageProcedureTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureTypeSupplied() As Boolean
            Get
                Return Me.softwarePackageProcedureTypeSuppliedField
            End Get
            Set
                Me.softwarePackageProcedureTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentSupplied() As Boolean
            Get
                Return Me.commentSuppliedField
            End Get
            Set
                Me.commentSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectable() As Boolean
            Get
                Return Me.userSelectableField
            End Get
            Set
                Me.userSelectableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userSelectableSupplied() As Boolean
            Get
                Return Me.userSelectableSuppliedField
            End Get
            Set
                Me.userSelectableSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property externalProcedure() As Boolean
            Get
                Return Me.externalProcedureField
            End Get
            Set
                Me.externalProcedureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property externalProcedureSupplied() As Boolean
            Get
                Return Me.externalProcedureSuppliedField
            End Get
            Set
                Me.externalProcedureSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemType() As Long
            Get
                Return Me.operatingSystemTypeField
            End Get
            Set
                Me.operatingSystemTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operatingSystemTypeSupplied() As Boolean
            Get
                Return Me.operatingSystemTypeSuppliedField
            End Get
            Set
                Me.operatingSystemTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property subPath() As String
            Get
                Return Me.subPathField
            End Get
            Set
                Me.subPathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property subPathSupplied() As Boolean
            Get
                Return Me.subPathSuppliedField
            End Get
            Set
                Me.subPathSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property procToRun() As String
            Get
                Return Me.procToRunField
            End Get
            Set
                Me.procToRunField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property procToRunSupplied() As Boolean
            Get
                Return Me.procToRunSuppliedField
            End Get
            Set
                Me.procToRunSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property parameters() As String
            Get
                Return Me.parametersField
            End Get
            Set
                Me.parametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property parametersSupplied() As Boolean
            Get
                Return Me.parametersSuppliedField
            End Get
            Set
                Me.parametersSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVolumeId() As String
            Get
                Return Me.softwarePackageVolumeIdField
            End Get
            Set
                Me.softwarePackageVolumeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageVolumeIdSupplied() As Boolean
            Get
                Return Me.softwarePackageVolumeIdSuppliedField
            End Get
            Set
                Me.softwarePackageVolumeIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask() As SoftwarePackageProcedureOperationMask
            Get
                Return Me.operationMaskField
            End Get
            Set
                Me.operationMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskSupplied() As Boolean
            Get
                Return Me.operationMaskSuppliedField
            End Get
            Set
                Me.operationMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwarePackageProcedureBootMask
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskSupplied() As Boolean
            Get
                Return Me.bootBeforeMaskSuppliedField
            End Get
            Set
                Me.bootBeforeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwarePackageProcedureBootMask
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskSupplied() As Boolean
            Get
                Return Me.bootAfterMaskSuppliedField
            End Get
            Set
                Me.bootAfterMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property dependancyQueryId() As String
            Get
                Return Me.dependancyQueryIdField
            End Get
            Set
                Me.dependancyQueryIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dependancyQueryIdSupplied() As Boolean
            Get
                Return Me.dependancyQueryIdSuppliedField
            End Get
            Set
                Me.dependancyQueryIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property managementTypeMask() As SoftwarePackageProcedureManagementTypeMask
            Get
                Return Me.managementTypeMaskField
            End Get
            Set
                Me.managementTypeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property managementTypeMaskSupplied() As Boolean
            Get
                Return Me.managementTypeMaskSuppliedField
            End Get
            Set
                Me.managementTypeMaskSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class VolumeElementAttributes
        
        Private readOnlyField As Boolean
        
        Private hiddenField As Boolean
        
        Private systemField As Boolean
        
        Private directoryField As Boolean
        
        Private archiveField As Boolean
        
        Private normalField As Boolean
        
        Private temporaryField As Boolean
        
        Private atomicWriteField As Boolean
        
        Private xactionWriteField As Boolean
        
        Private compressedField As Boolean
        
        '''<remarks/>
        Public Property [readOnly]() As Boolean
            Get
                Return Me.readOnlyField
            End Get
            Set
                Me.readOnlyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property hidden() As Boolean
            Get
                Return Me.hiddenField
            End Get
            Set
                Me.hiddenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property system() As Boolean
            Get
                Return Me.systemField
            End Get
            Set
                Me.systemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property directory() As Boolean
            Get
                Return Me.directoryField
            End Get
            Set
                Me.directoryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property archive() As Boolean
            Get
                Return Me.archiveField
            End Get
            Set
                Me.archiveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property normal() As Boolean
            Get
                Return Me.normalField
            End Get
            Set
                Me.normalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property temporary() As Boolean
            Get
                Return Me.temporaryField
            End Get
            Set
                Me.temporaryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property atomicWrite() As Boolean
            Get
                Return Me.atomicWriteField
            End Get
            Set
                Me.atomicWriteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property xactionWrite() As Boolean
            Get
                Return Me.xactionWriteField
            End Get
            Set
                Me.xactionWriteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property compressed() As Boolean
            Get
                Return Me.compressedField
            End Get
            Set
                Me.compressedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageVolumeElementProperties
        
        Private volumeElementTypeField As ElementType
        
        Private volumeElementNameField As String
        
        Private volumeElementSubPathField As String
        
        Private volumeElementSizeField As Long
        
        Private volumeElementAttributesField As VolumeElementAttributes
        
        Private volumeElementChangeDateTimeField As DateTime
        
        '''<remarks/>
        Public Property volumeElementType() As ElementType
            Get
                Return Me.volumeElementTypeField
            End Get
            Set
                Me.volumeElementTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property volumeElementName() As String
            Get
                Return Me.volumeElementNameField
            End Get
            Set
                Me.volumeElementNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property volumeElementSubPath() As String
            Get
                Return Me.volumeElementSubPathField
            End Get
            Set
                Me.volumeElementSubPathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property volumeElementSize() As Long
            Get
                Return Me.volumeElementSizeField
            End Get
            Set
                Me.volumeElementSizeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property volumeElementAttributes() As VolumeElementAttributes
            Get
                Return Me.volumeElementAttributesField
            End Get
            Set
                Me.volumeElementAttributesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property volumeElementChangeDateTime() As DateTime
            Get
                Return Me.volumeElementChangeDateTimeField
            End Get
            Set
                Me.volumeElementChangeDateTimeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum ElementType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DSM-FILE")>  _
        DSMFILE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DSM-DIR")>  _
        DSMDIR
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageVolumeElementPropertiesRequired
        
        Private volumeElementTypeRequiredField As Boolean
        
        Private volumeElementNameRequiredField As Boolean
        
        Private volumeElementSubPathRequiredField As Boolean
        
        Private volumeElementSizeRequiredField As Boolean
        
        Private volumeElementAttributesRequiredField As Boolean
        
        Private volumeElementChangeDateTimeRequiredField As Boolean
        
        '''<remarks/>
        Public Property volumeElementTypeRequired() As Boolean
            Get
                Return Me.volumeElementTypeRequiredField
            End Get
            Set
                Me.volumeElementTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property volumeElementNameRequired() As Boolean
            Get
                Return Me.volumeElementNameRequiredField
            End Get
            Set
                Me.volumeElementNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property volumeElementSubPathRequired() As Boolean
            Get
                Return Me.volumeElementSubPathRequiredField
            End Get
            Set
                Me.volumeElementSubPathRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property volumeElementSizeRequired() As Boolean
            Get
                Return Me.volumeElementSizeRequiredField
            End Get
            Set
                Me.volumeElementSizeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property volumeElementAttributesRequired() As Boolean
            Get
                Return Me.volumeElementAttributesRequiredField
            End Get
            Set
                Me.volumeElementAttributesRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property volumeElementChangeDateTimeRequired() As Boolean
            Get
                Return Me.volumeElementChangeDateTimeRequiredField
            End Get
            Set
                Me.volumeElementChangeDateTimeRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ElementTypeMask
        
        Private fileField As Boolean
        
        Private dirField As Boolean
        
        '''<remarks/>
        Public Property file() As Boolean
            Get
                Return Me.fileField
            End Get
            Set
                Me.fileField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dir() As Boolean
            Get
                Return Me.dirField
            End Get
            Set
                Me.dirField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetSoftwarePackageVolumeProperties
        
        Private volumeIdField As String
        
        Private volumeIdSuppliedField As Boolean
        
        Private volumeNameField As String
        
        Private volumeNameSuppliedField As Boolean
        
        Private volumeNumberField As Long
        
        Private volumeNumberSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property volumeId() As String
            Get
                Return Me.volumeIdField
            End Get
            Set
                Me.volumeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property volumeIdSupplied() As Boolean
            Get
                Return Me.volumeIdSuppliedField
            End Get
            Set
                Me.volumeIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property volumeName() As String
            Get
                Return Me.volumeNameField
            End Get
            Set
                Me.volumeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property volumeNameSupplied() As Boolean
            Get
                Return Me.volumeNameSuppliedField
            End Get
            Set
                Me.volumeNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property volumeNumber() As Long
            Get
                Return Me.volumeNumberField
            End Get
            Set
                Me.volumeNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property volumeNumberSupplied() As Boolean
            Get
                Return Me.volumeNumberSuppliedField
            End Get
            Set
                Me.volumeNumberSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageVolumeProperties
        
        Private volumeIdField As String
        
        Private volumeIdFileField As String
        
        Private volumeNameField As String
        
        Private volumeNumberField As Long
        
        Private volumeTypeField As SourceMedium
        
        Private volumeSubPathField As String
        
        Private softwarePackageIdField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property volumeId() As String
            Get
                Return Me.volumeIdField
            End Get
            Set
                Me.volumeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property volumeIdFile() As String
            Get
                Return Me.volumeIdFileField
            End Get
            Set
                Me.volumeIdFileField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property volumeName() As String
            Get
                Return Me.volumeNameField
            End Get
            Set
                Me.volumeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property volumeNumber() As Long
            Get
                Return Me.volumeNumberField
            End Get
            Set
                Me.volumeNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property volumeType() As SourceMedium
            Get
                Return Me.volumeTypeField
            End Get
            Set
                Me.volumeTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property volumeSubPath() As String
            Get
                Return Me.volumeSubPathField
            End Get
            Set
                Me.volumeSubPathField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageId() As String
            Get
                Return Me.softwarePackageIdField
            End Get
            Set
                Me.softwarePackageIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwarePackageVolumePropertiesRequired
        
        Private volumeIdRequiredField As Boolean
        
        Private volumeIdFileRequiredField As Boolean
        
        Private volumeNameRequiredField As Boolean
        
        Private volumeNumberRequiredField As Boolean
        
        Private volumeTypeRequiredField As Boolean
        
        Private volumeSubPathRequiredField As Boolean
        
        Private softwarePackageIdRequiredField As Boolean
        
        '''<remarks/>
        Public Property volumeIdRequired() As Boolean
            Get
                Return Me.volumeIdRequiredField
            End Get
            Set
                Me.volumeIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property volumeIdFileRequired() As Boolean
            Get
                Return Me.volumeIdFileRequiredField
            End Get
            Set
                Me.volumeIdFileRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property volumeNameRequired() As Boolean
            Get
                Return Me.volumeNameRequiredField
            End Get
            Set
                Me.volumeNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property volumeNumberRequired() As Boolean
            Get
                Return Me.volumeNumberRequiredField
            End Get
            Set
                Me.volumeNumberRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property volumeTypeRequired() As Boolean
            Get
                Return Me.volumeTypeRequiredField
            End Get
            Set
                Me.volumeTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property volumeSubPathRequired() As Boolean
            Get
                Return Me.volumeSubPathRequiredField
            End Get
            Set
                Me.volumeSubPathRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageIdRequired() As Boolean
            Get
                Return Me.softwarePackageIdRequiredField
            End Get
            Set
                Me.softwarePackageIdRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateSoftwarePackageVolumeProperties
        
        Private volumeNameField As String
        
        Private volumeNameSuppliedField As Boolean
        
        Private volumeTypeField As SourceMedium
        
        Private volumeTypeSuppliedField As Boolean
        
        Private softwarePackageIdField As String
        
        Private softwarePackageIdSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property volumeName() As String
            Get
                Return Me.volumeNameField
            End Get
            Set
                Me.volumeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property volumeNameSupplied() As Boolean
            Get
                Return Me.volumeNameSuppliedField
            End Get
            Set
                Me.volumeNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property volumeType() As SourceMedium
            Get
                Return Me.volumeTypeField
            End Get
            Set
                Me.volumeTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property volumeTypeSupplied() As Boolean
            Get
                Return Me.volumeTypeSuppliedField
            End Get
            Set
                Me.volumeTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageId() As String
            Get
                Return Me.softwarePackageIdField
            End Get
            Set
                Me.softwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageIdSupplied() As Boolean
            Get
                Return Me.softwarePackageIdSuppliedField
            End Get
            Set
                Me.softwarePackageIdSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UnitSoftwareJobProperties
        
        Private unitSoftwareJobIdField As String
        
        Private unitIdField As String
        
        Private unitNameField As String
        
        Private unitTypeField As UnitType
        
        Private unitNetAddressField As String
        
        Private softwareJobIdField As String
        
        Private softwareJobNameField As String
        
        Private softwareJobStateField As SoftwareJobState
        
        Private softwareJobOrderNumberField As Long
        
        Private softwarePackageIdField As String
        
        Private softwarePackageNameField As String
        
        Private softwarePackageVersionField As String
        
        Private softwarePackageTypeField As SoftwarePackageClass
        
        Private softwarePackageProcedureIdField As String
        
        Private softwarePackageProcedureNameField As String
        
        Private activationDateTimeField As DateTime
        
        Private creationDateTimeField As DateTime
        
        Private completionDateTimeField As DateTime
        
        Private softwareJobTypeField As SoftwareJobType
        
        Private orderedByField As String
        
        Private unitSoftwareJobStateField As UnitSoftwareJobState
        
        Private unitSoftwareJobRenewStateField As UnitSoftwareJobState
        
        Private unitSoftwareJobPermissionMaskField As SoftwareJobPermissionMask
        
        Private errorMessageField As String
        
        Private errorCodeField As Long
        
        Private userDefinedNameField As String
        
        Private commentField As String
        
        Private unitInstallationSoftwareJobIdField As String
        
        Private unitInstallationSoftwarePackageProcedureIdField As String
        
        Private unitInstallationSoftwarePackageProcedureNameField As String
        
        Private softwareJobTaskMaskField As UnitSoftwareJobTaskMask
        
        Private percentSentField As Long
        
        Private softwarePackagingTypeField As SoftwarePackagingType
        
        Private userParamsField As String
        
        Private unitHostUUIDField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitSoftwareJobId() As String
            Get
                Return Me.unitSoftwareJobIdField
            End Get
            Set
                Me.unitSoftwareJobIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitId() As String
            Get
                Return Me.unitIdField
            End Get
            Set
                Me.unitIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitName() As String
            Get
                Return Me.unitNameField
            End Get
            Set
                Me.unitNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitType() As UnitType
            Get
                Return Me.unitTypeField
            End Get
            Set
                Me.unitTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitNetAddress() As String
            Get
                Return Me.unitNetAddressField
            End Get
            Set
                Me.unitNetAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareJobId() As String
            Get
                Return Me.softwareJobIdField
            End Get
            Set
                Me.softwareJobIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwareJobName() As String
            Get
                Return Me.softwareJobNameField
            End Get
            Set
                Me.softwareJobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobState() As SoftwareJobState
            Get
                Return Me.softwareJobStateField
            End Get
            Set
                Me.softwareJobStateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobOrderNumber() As Long
            Get
                Return Me.softwareJobOrderNumberField
            End Get
            Set
                Me.softwareJobOrderNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageId() As String
            Get
                Return Me.softwarePackageIdField
            End Get
            Set
                Me.softwarePackageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageName() As String
            Get
                Return Me.softwarePackageNameField
            End Get
            Set
                Me.softwarePackageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageVersion() As String
            Get
                Return Me.softwarePackageVersionField
            End Get
            Set
                Me.softwarePackageVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageType() As SoftwarePackageClass
            Get
                Return Me.softwarePackageTypeField
            End Get
            Set
                Me.softwarePackageTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureId() As String
            Get
                Return Me.softwarePackageProcedureIdField
            End Get
            Set
                Me.softwarePackageProcedureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property softwarePackageProcedureName() As String
            Get
                Return Me.softwarePackageProcedureNameField
            End Get
            Set
                Me.softwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activationDateTime() As DateTime
            Get
                Return Me.activationDateTimeField
            End Get
            Set
                Me.activationDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDateTime() As DateTime
            Get
                Return Me.creationDateTimeField
            End Get
            Set
                Me.creationDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property completionDateTime() As DateTime
            Get
                Return Me.completionDateTimeField
            End Get
            Set
                Me.completionDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobType() As SoftwareJobType
            Get
                Return Me.softwareJobTypeField
            End Get
            Set
                Me.softwareJobTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property orderedBy() As String
            Get
                Return Me.orderedByField
            End Get
            Set
                Me.orderedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitSoftwareJobState() As UnitSoftwareJobState
            Get
                Return Me.unitSoftwareJobStateField
            End Get
            Set
                Me.unitSoftwareJobStateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitSoftwareJobRenewState() As UnitSoftwareJobState
            Get
                Return Me.unitSoftwareJobRenewStateField
            End Get
            Set
                Me.unitSoftwareJobRenewStateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitSoftwareJobPermissionMask() As SoftwareJobPermissionMask
            Get
                Return Me.unitSoftwareJobPermissionMaskField
            End Get
            Set
                Me.unitSoftwareJobPermissionMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property errorMessage() As String
            Get
                Return Me.errorMessageField
            End Get
            Set
                Me.errorMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property errorCode() As Long
            Get
                Return Me.errorCodeField
            End Get
            Set
                Me.errorCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userDefinedName() As String
            Get
                Return Me.userDefinedNameField
            End Get
            Set
                Me.userDefinedNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitInstallationSoftwareJobId() As String
            Get
                Return Me.unitInstallationSoftwareJobIdField
            End Get
            Set
                Me.unitInstallationSoftwareJobIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitInstallationSoftwarePackageProcedureId() As String
            Get
                Return Me.unitInstallationSoftwarePackageProcedureIdField
            End Get
            Set
                Me.unitInstallationSoftwarePackageProcedureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitInstallationSoftwarePackageProcedureName() As String
            Get
                Return Me.unitInstallationSoftwarePackageProcedureNameField
            End Get
            Set
                Me.unitInstallationSoftwarePackageProcedureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobTaskMask() As UnitSoftwareJobTaskMask
            Get
                Return Me.softwareJobTaskMaskField
            End Get
            Set
                Me.softwareJobTaskMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property percentSent() As Long
            Get
                Return Me.percentSentField
            End Get
            Set
                Me.percentSentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackagingType() As SoftwarePackagingType
            Get
                Return Me.softwarePackagingTypeField
            End Get
            Set
                Me.softwarePackagingTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userParams() As String
            Get
                Return Me.userParamsField
            End Get
            Set
                Me.userParamsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property unitHostUUID() As String
            Get
                Return Me.unitHostUUIDField
            End Get
            Set
                Me.unitHostUUIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UnitSoftwareJobPropertiesRequired
        
        Private unitSoftwareJobIdRequiredField As Boolean
        
        Private unitIdRequiredField As Boolean
        
        Private unitNameRequiredField As Boolean
        
        Private unitTypeRequiredField As Boolean
        
        Private unitNetAddressRequiredField As Boolean
        
        Private softwareJobIdRequiredField As Boolean
        
        Private softwareJobNameRequiredField As Boolean
        
        Private softwareJobStateRequiredField As Boolean
        
        Private softwareJobOrderNumberRequiredField As Boolean
        
        Private softwarePackageIdRequiredField As Boolean
        
        Private softwarePackageNameRequiredField As Boolean
        
        Private softwarePackageVersionRequiredField As Boolean
        
        Private softwarePackageTypeRequiredField As Boolean
        
        Private softwarePackageProcedureIdRequiredField As Boolean
        
        Private softwarePackageProcedureNameRequiredField As Boolean
        
        Private activationDateTimeRequiredField As Boolean
        
        Private creationDateTimeRequiredField As Boolean
        
        Private completionDateTimeRequiredField As Boolean
        
        Private softwareJobTypeRequiredField As Boolean
        
        Private orderedByRequiredField As Boolean
        
        Private unitSoftwareJobStateRequiredField As Boolean
        
        Private unitSoftwareJobRenewStateRequiredField As Boolean
        
        Private unitSoftwareJobPermissionMaskRequiredField As Boolean
        
        Private errorMessageRequiredField As Boolean
        
        Private errorCodeRequiredField As Boolean
        
        Private userDefinedNameRequiredField As Boolean
        
        Private commentRequiredField As Boolean
        
        Private unitInstallationSoftwareJobIdRequiredField As Boolean
        
        Private unitInstallationSoftwarePackageProcedureIdRequiredField As Boolean
        
        Private unitInstallationSoftwarePackageProcedureNameRequiredField As Boolean
        
        Private softwareJobTaskRequiredField As Boolean
        
        Private percentSentRequiredField As Boolean
        
        Private softwarePackagingTypeRequiredField As Boolean
        
        Private userParamsRequiredField As Boolean
        
        Private unitHostUUIDRequiredField As Boolean
        
        '''<remarks/>
        Public Property unitSoftwareJobIdRequired() As Boolean
            Get
                Return Me.unitSoftwareJobIdRequiredField
            End Get
            Set
                Me.unitSoftwareJobIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitIdRequired() As Boolean
            Get
                Return Me.unitIdRequiredField
            End Get
            Set
                Me.unitIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitNameRequired() As Boolean
            Get
                Return Me.unitNameRequiredField
            End Get
            Set
                Me.unitNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitTypeRequired() As Boolean
            Get
                Return Me.unitTypeRequiredField
            End Get
            Set
                Me.unitTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitNetAddressRequired() As Boolean
            Get
                Return Me.unitNetAddressRequiredField
            End Get
            Set
                Me.unitNetAddressRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobIdRequired() As Boolean
            Get
                Return Me.softwareJobIdRequiredField
            End Get
            Set
                Me.softwareJobIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobNameRequired() As Boolean
            Get
                Return Me.softwareJobNameRequiredField
            End Get
            Set
                Me.softwareJobNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobStateRequired() As Boolean
            Get
                Return Me.softwareJobStateRequiredField
            End Get
            Set
                Me.softwareJobStateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobOrderNumberRequired() As Boolean
            Get
                Return Me.softwareJobOrderNumberRequiredField
            End Get
            Set
                Me.softwareJobOrderNumberRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageIdRequired() As Boolean
            Get
                Return Me.softwarePackageIdRequiredField
            End Get
            Set
                Me.softwarePackageIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageNameRequired() As Boolean
            Get
                Return Me.softwarePackageNameRequiredField
            End Get
            Set
                Me.softwarePackageNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageVersionRequired() As Boolean
            Get
                Return Me.softwarePackageVersionRequiredField
            End Get
            Set
                Me.softwarePackageVersionRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageTypeRequired() As Boolean
            Get
                Return Me.softwarePackageTypeRequiredField
            End Get
            Set
                Me.softwarePackageTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureIdRequired() As Boolean
            Get
                Return Me.softwarePackageProcedureIdRequiredField
            End Get
            Set
                Me.softwarePackageProcedureIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackageProcedureNameRequired() As Boolean
            Get
                Return Me.softwarePackageProcedureNameRequiredField
            End Get
            Set
                Me.softwarePackageProcedureNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activationDateTimeRequired() As Boolean
            Get
                Return Me.activationDateTimeRequiredField
            End Get
            Set
                Me.activationDateTimeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDateTimeRequired() As Boolean
            Get
                Return Me.creationDateTimeRequiredField
            End Get
            Set
                Me.creationDateTimeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property completionDateTimeRequired() As Boolean
            Get
                Return Me.completionDateTimeRequiredField
            End Get
            Set
                Me.completionDateTimeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobTypeRequired() As Boolean
            Get
                Return Me.softwareJobTypeRequiredField
            End Get
            Set
                Me.softwareJobTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property orderedByRequired() As Boolean
            Get
                Return Me.orderedByRequiredField
            End Get
            Set
                Me.orderedByRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitSoftwareJobStateRequired() As Boolean
            Get
                Return Me.unitSoftwareJobStateRequiredField
            End Get
            Set
                Me.unitSoftwareJobStateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitSoftwareJobRenewStateRequired() As Boolean
            Get
                Return Me.unitSoftwareJobRenewStateRequiredField
            End Get
            Set
                Me.unitSoftwareJobRenewStateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitSoftwareJobPermissionMaskRequired() As Boolean
            Get
                Return Me.unitSoftwareJobPermissionMaskRequiredField
            End Get
            Set
                Me.unitSoftwareJobPermissionMaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property errorMessageRequired() As Boolean
            Get
                Return Me.errorMessageRequiredField
            End Get
            Set
                Me.errorMessageRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property errorCodeRequired() As Boolean
            Get
                Return Me.errorCodeRequiredField
            End Get
            Set
                Me.errorCodeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userDefinedNameRequired() As Boolean
            Get
                Return Me.userDefinedNameRequiredField
            End Get
            Set
                Me.userDefinedNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property commentRequired() As Boolean
            Get
                Return Me.commentRequiredField
            End Get
            Set
                Me.commentRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitInstallationSoftwareJobIdRequired() As Boolean
            Get
                Return Me.unitInstallationSoftwareJobIdRequiredField
            End Get
            Set
                Me.unitInstallationSoftwareJobIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitInstallationSoftwarePackageProcedureIdRequired() As Boolean
            Get
                Return Me.unitInstallationSoftwarePackageProcedureIdRequiredField
            End Get
            Set
                Me.unitInstallationSoftwarePackageProcedureIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitInstallationSoftwarePackageProcedureNameRequired() As Boolean
            Get
                Return Me.unitInstallationSoftwarePackageProcedureNameRequiredField
            End Get
            Set
                Me.unitInstallationSoftwarePackageProcedureNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwareJobTaskRequired() As Boolean
            Get
                Return Me.softwareJobTaskRequiredField
            End Get
            Set
                Me.softwareJobTaskRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property percentSentRequired() As Boolean
            Get
                Return Me.percentSentRequiredField
            End Get
            Set
                Me.percentSentRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property softwarePackagingTypeRequired() As Boolean
            Get
                Return Me.softwarePackagingTypeRequiredField
            End Get
            Set
                Me.softwarePackagingTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userParamsRequired() As Boolean
            Get
                Return Me.userParamsRequiredField
            End Get
            Set
                Me.userParamsRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitHostUUIDRequired() As Boolean
            Get
                Return Me.unitHostUUIDRequiredField
            End Get
            Set
                Me.unitHostUUIDRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SoftwareJobOrderProperties
        
        Private executionDateField As DateTime
        
        Private executionDateSuppliedField As Boolean
        
        Private timeOutHoursField As Long
        
        Private timeOutHoursSuppliedField As Boolean
        
        Private startWhenField As SoftwareJobStartupTime
        
        Private startWhenSuppliedField As Boolean
        
        Private jobNameField As String
        
        Private jobNameSuppliedField As Boolean
        
        Private bootBeforeMaskField As SoftwareJobBootMask
        
        Private bootBeforeMaskSuppliedField As Boolean
        
        Private bootAfterMaskField As SoftwareJobBootMask
        
        Private bootAfterMaskSuppliedField As Boolean
        
        Private operationMaskField As SoftwareJobOperationMask
        
        Private operationMaskSuppliedField As Boolean
        
        Private userParametersField As String
        
        Private userParametersSuppliedField As Boolean
        
        Private orderNumberField As Long
        
        Private orderNumberSuppliedField As Boolean
        
        Private promptTimeoutHoursField As Long
        
        Private promptTimeoutHoursSuppliedField As Boolean
        
        Private deliveryCalendarField As String
        
        Private deliveryCalendarSuppliedField As Boolean
        
        Private deliveryDateTimeField As DateTime
        
        Private deliveryDateTimeSuppliedField As Boolean
        
        '''<remarks/>
        Public Property executionDate() As DateTime
            Get
                Return Me.executionDateField
            End Get
            Set
                Me.executionDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property executionDateSupplied() As Boolean
            Get
                Return Me.executionDateSuppliedField
            End Get
            Set
                Me.executionDateSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeOutHours() As Long
            Get
                Return Me.timeOutHoursField
            End Get
            Set
                Me.timeOutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeOutHoursSupplied() As Boolean
            Get
                Return Me.timeOutHoursSuppliedField
            End Get
            Set
                Me.timeOutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhen() As SoftwareJobStartupTime
            Get
                Return Me.startWhenField
            End Get
            Set
                Me.startWhenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startWhenSupplied() As Boolean
            Get
                Return Me.startWhenSuppliedField
            End Get
            Set
                Me.startWhenSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property jobName() As String
            Get
                Return Me.jobNameField
            End Get
            Set
                Me.jobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property jobNameSupplied() As Boolean
            Get
                Return Me.jobNameSuppliedField
            End Get
            Set
                Me.jobNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMask() As SoftwareJobBootMask
            Get
                Return Me.bootBeforeMaskField
            End Get
            Set
                Me.bootBeforeMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootBeforeMaskSupplied() As Boolean
            Get
                Return Me.bootBeforeMaskSuppliedField
            End Get
            Set
                Me.bootBeforeMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMask() As SoftwareJobBootMask
            Get
                Return Me.bootAfterMaskField
            End Get
            Set
                Me.bootAfterMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bootAfterMaskSupplied() As Boolean
            Get
                Return Me.bootAfterMaskSuppliedField
            End Get
            Set
                Me.bootAfterMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMask() As SoftwareJobOperationMask
            Get
                Return Me.operationMaskField
            End Get
            Set
                Me.operationMaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property operationMaskSupplied() As Boolean
            Get
                Return Me.operationMaskSuppliedField
            End Get
            Set
                Me.operationMaskSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userParameters() As String
            Get
                Return Me.userParametersField
            End Get
            Set
                Me.userParametersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userParametersSupplied() As Boolean
            Get
                Return Me.userParametersSuppliedField
            End Get
            Set
                Me.userParametersSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property orderNumber() As Long
            Get
                Return Me.orderNumberField
            End Get
            Set
                Me.orderNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property orderNumberSupplied() As Boolean
            Get
                Return Me.orderNumberSuppliedField
            End Get
            Set
                Me.orderNumberSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHours() As Long
            Get
                Return Me.promptTimeoutHoursField
            End Get
            Set
                Me.promptTimeoutHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property promptTimeoutHoursSupplied() As Boolean
            Get
                Return Me.promptTimeoutHoursSuppliedField
            End Get
            Set
                Me.promptTimeoutHoursSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property deliveryCalendar() As String
            Get
                Return Me.deliveryCalendarField
            End Get
            Set
                Me.deliveryCalendarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryCalendarSupplied() As Boolean
            Get
                Return Me.deliveryCalendarSuppliedField
            End Get
            Set
                Me.deliveryCalendarSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryDateTime() As DateTime
            Get
                Return Me.deliveryDateTimeField
            End Get
            Set
                Me.deliveryDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deliveryDateTimeSupplied() As Boolean
            Get
                Return Me.deliveryDateTimeSuppliedField
            End Get
            Set
                Me.deliveryDateTimeSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UnitInventoryItemProperties
        
        Private itemIdStringField As String
        
        Private nameField As String
        
        Private valueField As String
        
        Private previousValueField As String
        
        Private valueTypeField As StringValueType
        
        Private dateCollectedField As DateTime
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property itemIdString() As String
            Get
                Return Me.itemIdStringField
            End Get
            Set
                Me.itemIdStringField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property previousValue() As String
            Get
                Return Me.previousValueField
            End Get
            Set
                Me.previousValueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property valueType() As StringValueType
            Get
                Return Me.valueTypeField
            End Get
            Set
                Me.valueTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dateCollected() As DateTime
            Get
                Return Me.dateCollectedField
            End Get
            Set
                Me.dateCollectedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum StringValueType
        
        '''<remarks/>
        NONE
        
        '''<remarks/>
        BOOLTRUEFALSE
        
        '''<remarks/>
        BOOLYESNO
        
        '''<remarks/>
        BOOLONOFF
        
        '''<remarks/>
        BOOLENABLEDISABLE
        
        '''<remarks/>
        BOOLSUPUNSUP
        
        '''<remarks/>
        BOOLACTIVENOT
        
        '''<remarks/>
        BOOLOKERROR
        
        '''<remarks/>
        BOOLPRESENTNOT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DSM-INT32")>  _
        DSMINT32
        
        '''<remarks/>
        INT32DEC
        
        '''<remarks/>
        INT32KB
        
        '''<remarks/>
        INT32MB
        
        '''<remarks/>
        INT32GB
        
        '''<remarks/>
        INT32TB
        
        '''<remarks/>
        INT32K
        
        '''<remarks/>
        INT32M
        
        '''<remarks/>
        INT32G
        
        '''<remarks/>
        INT32MILLI
        
        '''<remarks/>
        INT32MICRO
        
        '''<remarks/>
        INT32NANO
        
        '''<remarks/>
        INT32HEX
        
        '''<remarks/>
        INT32PLATFORM
        
        '''<remarks/>
        INT32INSTALLED
        
        '''<remarks/>
        INT32TIMESTAMP
        
        '''<remarks/>
        INT32UNITTYPE
        
        '''<remarks/>
        INT32SECTORTYPE
        
        '''<remarks/>
        INT32APPDEFPLATFORM
        
        '''<remarks/>
        INT32EVENTAREA
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DSM-INT64")>  _
        DSMINT64
        
        '''<remarks/>
        INT64DEC
        
        '''<remarks/>
        INT64KB
        
        '''<remarks/>
        INT64MB
        
        '''<remarks/>
        INT64GB
        
        '''<remarks/>
        INT64TB
        
        '''<remarks/>
        INT64K
        
        '''<remarks/>
        INT64M
        
        '''<remarks/>
        INT64G
        
        '''<remarks/>
        INT64MILLI
        
        '''<remarks/>
        INT64MICRO
        
        '''<remarks/>
        INT64NANO
        
        '''<remarks/>
        INT64PERCENT
        
        '''<remarks/>
        INT64HEX
        
        '''<remarks/>
        INT64DATE
        
        '''<remarks/>
        INT64TIMESPAN
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DSM-FLOAT")>  _
        DSMFLOAT
        
        '''<remarks/>
        FLOATFRACPART
        
        '''<remarks/>
        FLOATVARDATE
        
        '''<remarks/>
        [STRING]
        
        '''<remarks/>
        STRINGVERSION
        
        '''<remarks/>
        BINUNKNOWN
        
        '''<remarks/>
        BINBITMAP
        
        '''<remarks/>
        BINICON
        
        '''<remarks/>
        BINRESOURCE
        
        '''<remarks/>
        MEMO
        
        '''<remarks/>
        DATETIME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DSM-DATE")>  _
        DSMDATE
        
        '''<remarks/>
        TIME
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UnitInventoryItemPropertiesRequired
        
        Private itemIdStringRequiredField As Boolean
        
        Private nameRequiredField As Boolean
        
        Private valueRequiredField As Boolean
        
        Private previousValueRequiredField As Boolean
        
        Private valueTypeRequiredField As Boolean
        
        Private dateCollectedRequiredField As Boolean
        
        '''<remarks/>
        Public Property itemIdStringRequired() As Boolean
            Get
                Return Me.itemIdStringRequiredField
            End Get
            Set
                Me.itemIdStringRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameRequired() As Boolean
            Get
                Return Me.nameRequiredField
            End Get
            Set
                Me.nameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property valueRequired() As Boolean
            Get
                Return Me.valueRequiredField
            End Get
            Set
                Me.valueRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property previousValueRequired() As Boolean
            Get
                Return Me.previousValueRequiredField
            End Get
            Set
                Me.previousValueRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property valueTypeRequired() As Boolean
            Get
                Return Me.valueTypeRequiredField
            End Get
            Set
                Me.valueTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dateCollectedRequired() As Boolean
            Get
                Return Me.dateCollectedRequiredField
            End Get
            Set
                Me.dateCollectedRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UnitInventoryGroupProperties
        
        Private groupIdStringField As String
        
        Private nameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupIdString() As String
            Get
                Return Me.groupIdStringField
            End Get
            Set
                Me.groupIdStringField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UnitInventoryGroupPropertiesRequired
        
        Private groupIdStringRequiredField As Boolean
        
        Private nameRequiredField As Boolean
        
        '''<remarks/>
        Public Property groupIdStringRequired() As Boolean
            Get
                Return Me.groupIdStringRequiredField
            End Get
            Set
                Me.groupIdStringRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameRequired() As Boolean
            Get
                Return Me.nameRequiredField
            End Get
            Set
                Me.nameRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UnitInventoryComponentProperties
        
        Private componentIdStringField As String
        
        Private nameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property componentIdString() As String
            Get
                Return Me.componentIdStringField
            End Get
            Set
                Me.componentIdStringField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UnitInventoryComponentPropertiesRequired
        
        Private componentIdStringRequiredField As Boolean
        
        Private nameRequiredField As Boolean
        
        '''<remarks/>
        Public Property componentIdStringRequired() As Boolean
            Get
                Return Me.componentIdStringRequiredField
            End Get
            Set
                Me.componentIdStringRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameRequired() As Boolean
            Get
                Return Me.nameRequiredField
            End Get
            Set
                Me.nameRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetQueryProperties
        
        Private queryIdField As String
        
        Private queryIdSuppliedField As Boolean
        
        Private queryNameField As String
        
        Private queryNameSuppliedField As Boolean
        
        Private queryTableField As String
        
        Private queryTableSuppliedField As Boolean
        
        Private queryTableLabelFieldField As String
        
        Private queryTableLabelFieldSuppliedField As Boolean
        
        Private queryTableLabelPrimaryKeyField As String
        
        Private queryTableLabelPrimaryKeySuppliedField As Boolean
        
        Private queryTableLabelSecondaryKeyField As String
        
        Private queryTableLabelSecondaryKeySuppliedField As Boolean
        
        Private queryFragmentsField() As QueryFragment
        
        Private queryFragmentsSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryId() As String
            Get
                Return Me.queryIdField
            End Get
            Set
                Me.queryIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryIdSupplied() As Boolean
            Get
                Return Me.queryIdSuppliedField
            End Get
            Set
                Me.queryIdSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryName() As String
            Get
                Return Me.queryNameField
            End Get
            Set
                Me.queryNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryNameSupplied() As Boolean
            Get
                Return Me.queryNameSuppliedField
            End Get
            Set
                Me.queryNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryTable() As String
            Get
                Return Me.queryTableField
            End Get
            Set
                Me.queryTableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTableSupplied() As Boolean
            Get
                Return Me.queryTableSuppliedField
            End Get
            Set
                Me.queryTableSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryTableLabelField() As String
            Get
                Return Me.queryTableLabelFieldField
            End Get
            Set
                Me.queryTableLabelFieldField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTableLabelFieldSupplied() As Boolean
            Get
                Return Me.queryTableLabelFieldSuppliedField
            End Get
            Set
                Me.queryTableLabelFieldSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryTableLabelPrimaryKey() As String
            Get
                Return Me.queryTableLabelPrimaryKeyField
            End Get
            Set
                Me.queryTableLabelPrimaryKeyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTableLabelPrimaryKeySupplied() As Boolean
            Get
                Return Me.queryTableLabelPrimaryKeySuppliedField
            End Get
            Set
                Me.queryTableLabelPrimaryKeySuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryTableLabelSecondaryKey() As String
            Get
                Return Me.queryTableLabelSecondaryKeyField
            End Get
            Set
                Me.queryTableLabelSecondaryKeyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTableLabelSecondaryKeySupplied() As Boolean
            Get
                Return Me.queryTableLabelSecondaryKeySuppliedField
            End Get
            Set
                Me.queryTableLabelSecondaryKeySuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("queryFragmentsArray", IsNullable:=false)>  _
        Public Property queryFragments() As QueryFragment()
            Get
                Return Me.queryFragmentsField
            End Get
            Set
                Me.queryFragmentsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryFragmentsSupplied() As Boolean
            Get
                Return Me.queryFragmentsSuppliedField
            End Get
            Set
                Me.queryFragmentsSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class QueryFragment
        
        Private queryFragmentTypeField As QueryFragmentType
        
        Private pseudoStatementField As String
        
        Private statementField As String
        
        '''<remarks/>
        Public Property queryFragmentType() As QueryFragmentType
            Get
                Return Me.queryFragmentTypeField
            End Get
            Set
                Me.queryFragmentTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property pseudoStatement() As String
            Get
                Return Me.pseudoStatementField
            End Get
            Set
                Me.pseudoStatementField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property statement() As String
            Get
                Return Me.statementField
            End Get
            Set
                Me.statementField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum QueryFragmentType
        
        '''<remarks/>
        SQL
        
        '''<remarks/>
        DIRECTORY
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class CreateQueryProperties
        
        Private queryNameField As String
        
        Private queryNameSuppliedField As Boolean
        
        Private queryTableField As String
        
        Private queryTableSuppliedField As Boolean
        
        Private queryTypeField As QueryType
        
        Private queryTypeSuppliedField As Boolean
        
        Private queryTableLabelFieldField As String
        
        Private queryTableLabelFieldSuppliedField As Boolean
        
        Private queryTableLabelPrimaryKeyField As String
        
        Private queryTableLabelPrimaryKeySuppliedField As Boolean
        
        Private queryTableLabelSecondaryKeyField As String
        
        Private queryTableLabelSecondaryKeySuppliedField As Boolean
        
        Private queryFragmentsField() As QueryFragment
        
        Private queryFragmentsSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryName() As String
            Get
                Return Me.queryNameField
            End Get
            Set
                Me.queryNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryNameSupplied() As Boolean
            Get
                Return Me.queryNameSuppliedField
            End Get
            Set
                Me.queryNameSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryTable() As String
            Get
                Return Me.queryTableField
            End Get
            Set
                Me.queryTableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTableSupplied() As Boolean
            Get
                Return Me.queryTableSuppliedField
            End Get
            Set
                Me.queryTableSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryType() As QueryType
            Get
                Return Me.queryTypeField
            End Get
            Set
                Me.queryTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTypeSupplied() As Boolean
            Get
                Return Me.queryTypeSuppliedField
            End Get
            Set
                Me.queryTypeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryTableLabelField() As String
            Get
                Return Me.queryTableLabelFieldField
            End Get
            Set
                Me.queryTableLabelFieldField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTableLabelFieldSupplied() As Boolean
            Get
                Return Me.queryTableLabelFieldSuppliedField
            End Get
            Set
                Me.queryTableLabelFieldSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryTableLabelPrimaryKey() As String
            Get
                Return Me.queryTableLabelPrimaryKeyField
            End Get
            Set
                Me.queryTableLabelPrimaryKeyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTableLabelPrimaryKeySupplied() As Boolean
            Get
                Return Me.queryTableLabelPrimaryKeySuppliedField
            End Get
            Set
                Me.queryTableLabelPrimaryKeySuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryTableLabelSecondaryKey() As String
            Get
                Return Me.queryTableLabelSecondaryKeyField
            End Get
            Set
                Me.queryTableLabelSecondaryKeyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTableLabelSecondaryKeySupplied() As Boolean
            Get
                Return Me.queryTableLabelSecondaryKeySuppliedField
            End Get
            Set
                Me.queryTableLabelSecondaryKeySuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("queryFragmentsArray", IsNullable:=false)>  _
        Public Property queryFragments() As QueryFragment()
            Get
                Return Me.queryFragmentsField
            End Get
            Set
                Me.queryFragmentsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryFragmentsSupplied() As Boolean
            Get
                Return Me.queryFragmentsSuppliedField
            End Get
            Set
                Me.queryFragmentsSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UnitProperties
        
        Private unitTypeField As UnitType
        
        Private userAccountPropertiesField As UserAccountProperties
        
        Private computerPropertiesField As ComputerProperties
        
        Private userProfilePropertiesField As UserProfileProperties
        
        '''<remarks/>
        Public Property unitType() As UnitType
            Get
                Return Me.unitTypeField
            End Get
            Set
                Me.unitTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userAccountProperties() As UserAccountProperties
            Get
                Return Me.userAccountPropertiesField
            End Get
            Set
                Me.userAccountPropertiesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerProperties() As ComputerProperties
            Get
                Return Me.computerPropertiesField
            End Get
            Set
                Me.computerPropertiesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userProfileProperties() As UserProfileProperties
            Get
                Return Me.userProfilePropertiesField
            End Get
            Set
                Me.userProfilePropertiesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UserAccountProperties
        
        Private userAccountUUIDField As String
        
        Private userAccountNameField As String
        
        Private userUsageListField As UsageListMask
        
        Private userAccountURIField As String
        
        Private userAccountLabelField As String
        
        Private userAccountDomainUUIDField As String
        
        Private domainLabelField As String
        
        Private creationUserAccountField As String
        
        Private creationDateField As DateTime
        
        Private lastUpdatedUserAccountField As String
        
        Private lastUpdatedDateField As DateTime
        
        Private userAccountVersionNumberField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userAccountUUID() As String
            Get
                Return Me.userAccountUUIDField
            End Get
            Set
                Me.userAccountUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userAccountName() As String
            Get
                Return Me.userAccountNameField
            End Get
            Set
                Me.userAccountNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userUsageList() As UsageListMask
            Get
                Return Me.userUsageListField
            End Get
            Set
                Me.userUsageListField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userAccountURI() As String
            Get
                Return Me.userAccountURIField
            End Get
            Set
                Me.userAccountURIField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userAccountLabel() As String
            Get
                Return Me.userAccountLabelField
            End Get
            Set
                Me.userAccountLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userAccountDomainUUID() As String
            Get
                Return Me.userAccountDomainUUIDField
            End Get
            Set
                Me.userAccountDomainUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property domainLabel() As String
            Get
                Return Me.domainLabelField
            End Get
            Set
                Me.domainLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property creationUserAccount() As String
            Get
                Return Me.creationUserAccountField
            End Get
            Set
                Me.creationUserAccountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDate() As DateTime
            Get
                Return Me.creationDateField
            End Get
            Set
                Me.creationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property lastUpdatedUserAccount() As String
            Get
                Return Me.lastUpdatedUserAccountField
            End Get
            Set
                Me.lastUpdatedUserAccountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastUpdatedDate() As DateTime
            Get
                Return Me.lastUpdatedDateField
            End Get
            Set
                Me.lastUpdatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userAccountVersionNumber() As Long
            Get
                Return Me.userAccountVersionNumberField
            End Get
            Set
                Me.userAccountVersionNumberField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ComputerProperties
        
        Private computerUUIDField As String
        
        Private computerLabelField As String
        
        Private computerDomainUUIDField As String
        
        Private computerPrimaryNetworkAddressField As String
        
        Private computerHostUUIDField As String
        
        Private computerAssetSourceUUIDField As String
        
        Private computerHostNameField As String
        
        Private computerSerialNumberField As String
        
        Private computerDiscSerialNumberField As String
        
        Private computerPrimaryMACAddressField As String
        
        Private computerAssetTagField As String
        
        Private computerClassIDField As Long
        
        Private computerUsageListField As UsageListMask
        
        Private computerURIField As String
        
        Private computerSystemIDField As String
        
        Private computerVendorNameField As String
        
        Private computerDomainLabelField As String
        
        Private computerCreationUserField As String
        
        Private computerCreationDateField As DateTime
        
        Private computerLastUpdatedUserField As String
        
        Private computerLastUpdatedDateField As DateTime
        
        Private computerVersionNumberField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerUUID() As String
            Get
                Return Me.computerUUIDField
            End Get
            Set
                Me.computerUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerLabel() As String
            Get
                Return Me.computerLabelField
            End Get
            Set
                Me.computerLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerDomainUUID() As String
            Get
                Return Me.computerDomainUUIDField
            End Get
            Set
                Me.computerDomainUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerPrimaryNetworkAddress() As String
            Get
                Return Me.computerPrimaryNetworkAddressField
            End Get
            Set
                Me.computerPrimaryNetworkAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerHostUUID() As String
            Get
                Return Me.computerHostUUIDField
            End Get
            Set
                Me.computerHostUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerAssetSourceUUID() As String
            Get
                Return Me.computerAssetSourceUUIDField
            End Get
            Set
                Me.computerAssetSourceUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerHostName() As String
            Get
                Return Me.computerHostNameField
            End Get
            Set
                Me.computerHostNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerSerialNumber() As String
            Get
                Return Me.computerSerialNumberField
            End Get
            Set
                Me.computerSerialNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerDiscSerialNumber() As String
            Get
                Return Me.computerDiscSerialNumberField
            End Get
            Set
                Me.computerDiscSerialNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerPrimaryMACAddress() As String
            Get
                Return Me.computerPrimaryMACAddressField
            End Get
            Set
                Me.computerPrimaryMACAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerAssetTag() As String
            Get
                Return Me.computerAssetTagField
            End Get
            Set
                Me.computerAssetTagField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerClassID() As Long
            Get
                Return Me.computerClassIDField
            End Get
            Set
                Me.computerClassIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerUsageList() As UsageListMask
            Get
                Return Me.computerUsageListField
            End Get
            Set
                Me.computerUsageListField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerURI() As String
            Get
                Return Me.computerURIField
            End Get
            Set
                Me.computerURIField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerSystemID() As String
            Get
                Return Me.computerSystemIDField
            End Get
            Set
                Me.computerSystemIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerVendorName() As String
            Get
                Return Me.computerVendorNameField
            End Get
            Set
                Me.computerVendorNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerDomainLabel() As String
            Get
                Return Me.computerDomainLabelField
            End Get
            Set
                Me.computerDomainLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerCreationUser() As String
            Get
                Return Me.computerCreationUserField
            End Get
            Set
                Me.computerCreationUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerCreationDate() As DateTime
            Get
                Return Me.computerCreationDateField
            End Get
            Set
                Me.computerCreationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerLastUpdatedUser() As String
            Get
                Return Me.computerLastUpdatedUserField
            End Get
            Set
                Me.computerLastUpdatedUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerLastUpdatedDate() As DateTime
            Get
                Return Me.computerLastUpdatedDateField
            End Get
            Set
                Me.computerLastUpdatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerVersionNumber() As Long
            Get
                Return Me.computerVersionNumberField
            End Get
            Set
                Me.computerVersionNumberField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UserProfileProperties
        
        Private userProfileUUIDField As String
        
        Private userAccountUUIDField As String
        
        Private computerUUIDField As String
        
        Private userProfileLabelField As String
        
        Private userProfileReferenceCountField As Long
        
        Private computerUserUsageListField As UsageListMask
        
        Private computerDomainUUIDField As String
        
        Private userProfileCreationUserField As String
        
        Private computerUserCreationDateField As DateTime
        
        Private userProfileLastUpdatedUserField As String
        
        Private computerUserLastUpdatedDateField As DateTime
        
        Private userProfileVersionNumberField As Long
        
        Private computerPrimaryNetworkAddressField As String
        
        Private computerHostUUIDField As String
        
        Private computerAssetSourceUUIDField As String
        
        Private computerHostNameField As String
        
        Private computerSerialNumberField As String
        
        Private computerDiscSerialNumberField As String
        
        Private computerPrimaryMACAddressField As String
        
        Private computerAssetTagField As String
        
        Private computerClassIDField As Long
        
        Private computerUsageListField As UsageListMask
        
        Private computerURIField As String
        
        Private computerSystemIDField As String
        
        Private computerVendorNameField As String
        
        Private computerDomainLabelField As String
        
        Private computerCreationUserField As String
        
        Private computerCreationDateField As DateTime
        
        Private computerLastUpdatedUserField As String
        
        Private computerLastUpdatedDateField As DateTime
        
        Private computerVersionNumberField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userProfileUUID() As String
            Get
                Return Me.userProfileUUIDField
            End Get
            Set
                Me.userProfileUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userAccountUUID() As String
            Get
                Return Me.userAccountUUIDField
            End Get
            Set
                Me.userAccountUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerUUID() As String
            Get
                Return Me.computerUUIDField
            End Get
            Set
                Me.computerUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userProfileLabel() As String
            Get
                Return Me.userProfileLabelField
            End Get
            Set
                Me.userProfileLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userProfileReferenceCount() As Long
            Get
                Return Me.userProfileReferenceCountField
            End Get
            Set
                Me.userProfileReferenceCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerUserUsageList() As UsageListMask
            Get
                Return Me.computerUserUsageListField
            End Get
            Set
                Me.computerUserUsageListField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerDomainUUID() As String
            Get
                Return Me.computerDomainUUIDField
            End Get
            Set
                Me.computerDomainUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userProfileCreationUser() As String
            Get
                Return Me.userProfileCreationUserField
            End Get
            Set
                Me.userProfileCreationUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerUserCreationDate() As DateTime
            Get
                Return Me.computerUserCreationDateField
            End Get
            Set
                Me.computerUserCreationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property userProfileLastUpdatedUser() As String
            Get
                Return Me.userProfileLastUpdatedUserField
            End Get
            Set
                Me.userProfileLastUpdatedUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerUserLastUpdatedDate() As DateTime
            Get
                Return Me.computerUserLastUpdatedDateField
            End Get
            Set
                Me.computerUserLastUpdatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userProfileVersionNumber() As Long
            Get
                Return Me.userProfileVersionNumberField
            End Get
            Set
                Me.userProfileVersionNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerPrimaryNetworkAddress() As String
            Get
                Return Me.computerPrimaryNetworkAddressField
            End Get
            Set
                Me.computerPrimaryNetworkAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerHostUUID() As String
            Get
                Return Me.computerHostUUIDField
            End Get
            Set
                Me.computerHostUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerAssetSourceUUID() As String
            Get
                Return Me.computerAssetSourceUUIDField
            End Get
            Set
                Me.computerAssetSourceUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerHostName() As String
            Get
                Return Me.computerHostNameField
            End Get
            Set
                Me.computerHostNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerSerialNumber() As String
            Get
                Return Me.computerSerialNumberField
            End Get
            Set
                Me.computerSerialNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerDiscSerialNumber() As String
            Get
                Return Me.computerDiscSerialNumberField
            End Get
            Set
                Me.computerDiscSerialNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerPrimaryMACAddress() As String
            Get
                Return Me.computerPrimaryMACAddressField
            End Get
            Set
                Me.computerPrimaryMACAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerAssetTag() As String
            Get
                Return Me.computerAssetTagField
            End Get
            Set
                Me.computerAssetTagField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerClassID() As Long
            Get
                Return Me.computerClassIDField
            End Get
            Set
                Me.computerClassIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerUsageList() As UsageListMask
            Get
                Return Me.computerUsageListField
            End Get
            Set
                Me.computerUsageListField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerURI() As String
            Get
                Return Me.computerURIField
            End Get
            Set
                Me.computerURIField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerSystemID() As String
            Get
                Return Me.computerSystemIDField
            End Get
            Set
                Me.computerSystemIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerVendorName() As String
            Get
                Return Me.computerVendorNameField
            End Get
            Set
                Me.computerVendorNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerDomainLabel() As String
            Get
                Return Me.computerDomainLabelField
            End Get
            Set
                Me.computerDomainLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerCreationUser() As String
            Get
                Return Me.computerCreationUserField
            End Get
            Set
                Me.computerCreationUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerCreationDate() As DateTime
            Get
                Return Me.computerCreationDateField
            End Get
            Set
                Me.computerCreationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property computerLastUpdatedUser() As String
            Get
                Return Me.computerLastUpdatedUserField
            End Get
            Set
                Me.computerLastUpdatedUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerLastUpdatedDate() As DateTime
            Get
                Return Me.computerLastUpdatedDateField
            End Get
            Set
                Me.computerLastUpdatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerVersionNumber() As Long
            Get
                Return Me.computerVersionNumberField
            End Get
            Set
                Me.computerVersionNumberField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UnitPropertiesRequired
        
        Private userAccountPropertiesRequiredField As UserAccountPropertiesRequired
        
        Private computerPropertiesRequiredField As ComputerPropertiesRequired
        
        Private userProfilePropertiesRequiredField As UserProfilePropertiesRequired
        
        '''<remarks/>
        Public Property userAccountPropertiesRequired() As UserAccountPropertiesRequired
            Get
                Return Me.userAccountPropertiesRequiredField
            End Get
            Set
                Me.userAccountPropertiesRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerPropertiesRequired() As ComputerPropertiesRequired
            Get
                Return Me.computerPropertiesRequiredField
            End Get
            Set
                Me.computerPropertiesRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userProfilePropertiesRequired() As UserProfilePropertiesRequired
            Get
                Return Me.userProfilePropertiesRequiredField
            End Get
            Set
                Me.userProfilePropertiesRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UserAccountPropertiesRequired
        
        Private userAccountUUIDRequiredField As Boolean
        
        Private userAccountNameRequiredField As Boolean
        
        Private userAccountUsageListRequiredField As Boolean
        
        Private userAccountURIRequiredField As Boolean
        
        Private userAccountLabelRequiredField As Boolean
        
        Private userAccountDomainUUIDRequiredField As Boolean
        
        Private domainLabelRequiredField As Boolean
        
        Private creationUserAccountRequiredField As Boolean
        
        Private creationDateRequiredField As Boolean
        
        Private lastUpdatedUserAccountRequiredField As Boolean
        
        Private lastUpdatedDateRequiredField As Boolean
        
        Private userAccountVersionNumberRequiredField As Boolean
        
        '''<remarks/>
        Public Property userAccountUUIDRequired() As Boolean
            Get
                Return Me.userAccountUUIDRequiredField
            End Get
            Set
                Me.userAccountUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userAccountNameRequired() As Boolean
            Get
                Return Me.userAccountNameRequiredField
            End Get
            Set
                Me.userAccountNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userAccountUsageListRequired() As Boolean
            Get
                Return Me.userAccountUsageListRequiredField
            End Get
            Set
                Me.userAccountUsageListRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userAccountURIRequired() As Boolean
            Get
                Return Me.userAccountURIRequiredField
            End Get
            Set
                Me.userAccountURIRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userAccountLabelRequired() As Boolean
            Get
                Return Me.userAccountLabelRequiredField
            End Get
            Set
                Me.userAccountLabelRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userAccountDomainUUIDRequired() As Boolean
            Get
                Return Me.userAccountDomainUUIDRequiredField
            End Get
            Set
                Me.userAccountDomainUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property domainLabelRequired() As Boolean
            Get
                Return Me.domainLabelRequiredField
            End Get
            Set
                Me.domainLabelRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationUserAccountRequired() As Boolean
            Get
                Return Me.creationUserAccountRequiredField
            End Get
            Set
                Me.creationUserAccountRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDateRequired() As Boolean
            Get
                Return Me.creationDateRequiredField
            End Get
            Set
                Me.creationDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastUpdatedUserAccountRequired() As Boolean
            Get
                Return Me.lastUpdatedUserAccountRequiredField
            End Get
            Set
                Me.lastUpdatedUserAccountRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastUpdatedDateRequired() As Boolean
            Get
                Return Me.lastUpdatedDateRequiredField
            End Get
            Set
                Me.lastUpdatedDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userAccountVersionNumberRequired() As Boolean
            Get
                Return Me.userAccountVersionNumberRequiredField
            End Get
            Set
                Me.userAccountVersionNumberRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ComputerPropertiesRequired
        
        Private computerUUIDRequiredField As Boolean
        
        Private computerLabelRequiredField As Boolean
        
        Private computerDomainUUIDRequiredField As Boolean
        
        Private computerPrimaryNetworkAddressRequiredField As Boolean
        
        Private computerHostUUIDRequiredField As Boolean
        
        Private computerAssetSourceUUIDRequiredField As Boolean
        
        Private computerHostNameRequiredField As Boolean
        
        Private computerSerialNumberRequiredField As Boolean
        
        Private computerDiscSerialNumberRequiredField As Boolean
        
        Private computerPrimaryMACAddressRequiredField As Boolean
        
        Private computerAssetTagRequiredField As Boolean
        
        Private computerClassIDRequiredField As Boolean
        
        Private computerUsageListRequiredField As Boolean
        
        Private computerURIRequiredField As Boolean
        
        Private computerSystemIDRequiredField As Boolean
        
        Private computerVendorNameRequiredField As Boolean
        
        Private computerDomainLabelRequiredField As Boolean
        
        Private computerCreationUserRequiredField As Boolean
        
        Private computerCreationDateRequiredField As Boolean
        
        Private computerLastUpdatedUserRequiredField As Boolean
        
        Private computerLastUpdatedDateRequiredField As Boolean
        
        Private computerVersionNumberRequiredField As Boolean
        
        '''<remarks/>
        Public Property computerUUIDRequired() As Boolean
            Get
                Return Me.computerUUIDRequiredField
            End Get
            Set
                Me.computerUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerLabelRequired() As Boolean
            Get
                Return Me.computerLabelRequiredField
            End Get
            Set
                Me.computerLabelRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerDomainUUIDRequired() As Boolean
            Get
                Return Me.computerDomainUUIDRequiredField
            End Get
            Set
                Me.computerDomainUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerPrimaryNetworkAddressRequired() As Boolean
            Get
                Return Me.computerPrimaryNetworkAddressRequiredField
            End Get
            Set
                Me.computerPrimaryNetworkAddressRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerHostUUIDRequired() As Boolean
            Get
                Return Me.computerHostUUIDRequiredField
            End Get
            Set
                Me.computerHostUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerAssetSourceUUIDRequired() As Boolean
            Get
                Return Me.computerAssetSourceUUIDRequiredField
            End Get
            Set
                Me.computerAssetSourceUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerHostNameRequired() As Boolean
            Get
                Return Me.computerHostNameRequiredField
            End Get
            Set
                Me.computerHostNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerSerialNumberRequired() As Boolean
            Get
                Return Me.computerSerialNumberRequiredField
            End Get
            Set
                Me.computerSerialNumberRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerDiscSerialNumberRequired() As Boolean
            Get
                Return Me.computerDiscSerialNumberRequiredField
            End Get
            Set
                Me.computerDiscSerialNumberRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerPrimaryMACAddressRequired() As Boolean
            Get
                Return Me.computerPrimaryMACAddressRequiredField
            End Get
            Set
                Me.computerPrimaryMACAddressRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerAssetTagRequired() As Boolean
            Get
                Return Me.computerAssetTagRequiredField
            End Get
            Set
                Me.computerAssetTagRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerClassIDRequired() As Boolean
            Get
                Return Me.computerClassIDRequiredField
            End Get
            Set
                Me.computerClassIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerUsageListRequired() As Boolean
            Get
                Return Me.computerUsageListRequiredField
            End Get
            Set
                Me.computerUsageListRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerURIRequired() As Boolean
            Get
                Return Me.computerURIRequiredField
            End Get
            Set
                Me.computerURIRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerSystemIDRequired() As Boolean
            Get
                Return Me.computerSystemIDRequiredField
            End Get
            Set
                Me.computerSystemIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerVendorNameRequired() As Boolean
            Get
                Return Me.computerVendorNameRequiredField
            End Get
            Set
                Me.computerVendorNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerDomainLabelRequired() As Boolean
            Get
                Return Me.computerDomainLabelRequiredField
            End Get
            Set
                Me.computerDomainLabelRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerCreationUserRequired() As Boolean
            Get
                Return Me.computerCreationUserRequiredField
            End Get
            Set
                Me.computerCreationUserRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerCreationDateRequired() As Boolean
            Get
                Return Me.computerCreationDateRequiredField
            End Get
            Set
                Me.computerCreationDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerLastUpdatedUserRequired() As Boolean
            Get
                Return Me.computerLastUpdatedUserRequiredField
            End Get
            Set
                Me.computerLastUpdatedUserRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerLastUpdatedDateRequired() As Boolean
            Get
                Return Me.computerLastUpdatedDateRequiredField
            End Get
            Set
                Me.computerLastUpdatedDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerVersionNumberRequired() As Boolean
            Get
                Return Me.computerVersionNumberRequiredField
            End Get
            Set
                Me.computerVersionNumberRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UserProfilePropertiesRequired
        
        Private userProfileUUIDRequiredField As Boolean
        
        Private userAccountUUIDRequiredField As Boolean
        
        Private computerUUIDRequiredField As Boolean
        
        Private userProfileLabelRequiredField As Boolean
        
        Private userProfileReferenceCountRequiredField As Boolean
        
        Private userProfileUsageListRequiredField As Boolean
        
        Private computerDomainUUIDRequiredField As Boolean
        
        Private userProfileCreationUserRequiredField As Boolean
        
        Private userProfileCreationDateRequiredField As Boolean
        
        Private userProfileLastUpdatedUserRequiredField As Boolean
        
        Private userProfileLastUpdatedDateRequiredField As Boolean
        
        Private userProfileVersionNumberRequiredField As Boolean
        
        Private computerPrimaryNetworkAddressRequiredField As Boolean
        
        Private computerHostUUIDRequiredField As Boolean
        
        Private computerAssetSourceUUIDRequiredField As Boolean
        
        Private computerHostNameRequiredField As Boolean
        
        Private computerSerialNumberRequiredField As Boolean
        
        Private computerDiscSerialNumberRequiredField As Boolean
        
        Private computerPrimaryMACAddressRequiredField As Boolean
        
        Private computerAssetTagRequiredField As Boolean
        
        Private computerClassIDRequiredField As Boolean
        
        Private computerUsageListRequiredField As Boolean
        
        Private computerURIRequiredField As Boolean
        
        Private computerSystemIDRequiredField As Boolean
        
        Private computerVendorNameRequiredField As Boolean
        
        Private computerDomainLabelRequiredField As Boolean
        
        Private computerCreationUserRequiredField As Boolean
        
        Private computerCreationDateRequiredField As Boolean
        
        Private computerLastUpdatedUserRequiredField As Boolean
        
        Private computerLastUpdatedDateRequiredField As Boolean
        
        Private computerVersionNumberRequiredField As Boolean
        
        '''<remarks/>
        Public Property userProfileUUIDRequired() As Boolean
            Get
                Return Me.userProfileUUIDRequiredField
            End Get
            Set
                Me.userProfileUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userAccountUUIDRequired() As Boolean
            Get
                Return Me.userAccountUUIDRequiredField
            End Get
            Set
                Me.userAccountUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerUUIDRequired() As Boolean
            Get
                Return Me.computerUUIDRequiredField
            End Get
            Set
                Me.computerUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userProfileLabelRequired() As Boolean
            Get
                Return Me.userProfileLabelRequiredField
            End Get
            Set
                Me.userProfileLabelRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userProfileReferenceCountRequired() As Boolean
            Get
                Return Me.userProfileReferenceCountRequiredField
            End Get
            Set
                Me.userProfileReferenceCountRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userProfileUsageListRequired() As Boolean
            Get
                Return Me.userProfileUsageListRequiredField
            End Get
            Set
                Me.userProfileUsageListRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerDomainUUIDRequired() As Boolean
            Get
                Return Me.computerDomainUUIDRequiredField
            End Get
            Set
                Me.computerDomainUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userProfileCreationUserRequired() As Boolean
            Get
                Return Me.userProfileCreationUserRequiredField
            End Get
            Set
                Me.userProfileCreationUserRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userProfileCreationDateRequired() As Boolean
            Get
                Return Me.userProfileCreationDateRequiredField
            End Get
            Set
                Me.userProfileCreationDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userProfileLastUpdatedUserRequired() As Boolean
            Get
                Return Me.userProfileLastUpdatedUserRequiredField
            End Get
            Set
                Me.userProfileLastUpdatedUserRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userProfileLastUpdatedDateRequired() As Boolean
            Get
                Return Me.userProfileLastUpdatedDateRequiredField
            End Get
            Set
                Me.userProfileLastUpdatedDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userProfileVersionNumberRequired() As Boolean
            Get
                Return Me.userProfileVersionNumberRequiredField
            End Get
            Set
                Me.userProfileVersionNumberRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerPrimaryNetworkAddressRequired() As Boolean
            Get
                Return Me.computerPrimaryNetworkAddressRequiredField
            End Get
            Set
                Me.computerPrimaryNetworkAddressRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerHostUUIDRequired() As Boolean
            Get
                Return Me.computerHostUUIDRequiredField
            End Get
            Set
                Me.computerHostUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerAssetSourceUUIDRequired() As Boolean
            Get
                Return Me.computerAssetSourceUUIDRequiredField
            End Get
            Set
                Me.computerAssetSourceUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerHostNameRequired() As Boolean
            Get
                Return Me.computerHostNameRequiredField
            End Get
            Set
                Me.computerHostNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerSerialNumberRequired() As Boolean
            Get
                Return Me.computerSerialNumberRequiredField
            End Get
            Set
                Me.computerSerialNumberRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerDiscSerialNumberRequired() As Boolean
            Get
                Return Me.computerDiscSerialNumberRequiredField
            End Get
            Set
                Me.computerDiscSerialNumberRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerPrimaryMACAddressRequired() As Boolean
            Get
                Return Me.computerPrimaryMACAddressRequiredField
            End Get
            Set
                Me.computerPrimaryMACAddressRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerAssetTagRequired() As Boolean
            Get
                Return Me.computerAssetTagRequiredField
            End Get
            Set
                Me.computerAssetTagRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerClassIDRequired() As Boolean
            Get
                Return Me.computerClassIDRequiredField
            End Get
            Set
                Me.computerClassIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerUsageListRequired() As Boolean
            Get
                Return Me.computerUsageListRequiredField
            End Get
            Set
                Me.computerUsageListRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerURIRequired() As Boolean
            Get
                Return Me.computerURIRequiredField
            End Get
            Set
                Me.computerURIRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerSystemIDRequired() As Boolean
            Get
                Return Me.computerSystemIDRequiredField
            End Get
            Set
                Me.computerSystemIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerVendorNameRequired() As Boolean
            Get
                Return Me.computerVendorNameRequiredField
            End Get
            Set
                Me.computerVendorNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerDomainLabelRequired() As Boolean
            Get
                Return Me.computerDomainLabelRequiredField
            End Get
            Set
                Me.computerDomainLabelRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerCreationUserRequired() As Boolean
            Get
                Return Me.computerCreationUserRequiredField
            End Get
            Set
                Me.computerCreationUserRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerCreationDateRequired() As Boolean
            Get
                Return Me.computerCreationDateRequiredField
            End Get
            Set
                Me.computerCreationDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerLastUpdatedUserRequired() As Boolean
            Get
                Return Me.computerLastUpdatedUserRequiredField
            End Get
            Set
                Me.computerLastUpdatedUserRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerLastUpdatedDateRequired() As Boolean
            Get
                Return Me.computerLastUpdatedDateRequiredField
            End Get
            Set
                Me.computerLastUpdatedDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property computerVersionNumberRequired() As Boolean
            Get
                Return Me.computerVersionNumberRequiredField
            End Get
            Set
                Me.computerVersionNumberRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UnitPropertyFilter
        
        Private unitPropertyField As UnitProperty
        
        Private searchStringField As String
        
        Private searchValueField As Long
        
        '''<remarks/>
        Public Property unitProperty() As UnitProperty
            Get
                Return Me.unitPropertyField
            End Get
            Set
                Me.unitPropertyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property searchString() As String
            Get
                Return Me.searchStringField
            End Get
            Set
                Me.searchStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property searchValue() As Long
            Get
                Return Me.searchValueField
            End Get
            Set
                Me.searchValueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum UnitProperty
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-USERACCOUNT-NAME")>  _
        UNITUSERACCOUNTNAME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-USERACCOUNT-USAGE-LIST")>  _
        UNITUSERACCOUNTUSAGELIST
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-USERACCOUNT-URI")>  _
        UNITUSERACCOUNTURI
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-USERACCOUNT-LABEL")>  _
        UNITUSERACCOUNTLABEL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-USERACCOUNT-DOMAIN-LABEL")>  _
        UNITUSERACCOUNTDOMAINLABEL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-USERACCOUNT-CREATION-USER")>  _
        UNITUSERACCOUNTCREATIONUSER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-USERACCOUNT-CREATION-DATE")>  _
        UNITUSERACCOUNTCREATIONDATE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-USERACCOUNT-LAST-UPDATED-USER")>  _
        UNITUSERACCOUNTLASTUPDATEDUSER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-USERACCOUNT-LAST-UPDATED-DATE")>  _
        UNITUSERACCOUNTLASTUPDATEDDATE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-USERACCOUNT-VERSION-NUMBER")>  _
        UNITUSERACCOUNTVERSIONNUMBER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-COMPUTER-LABEL")>  _
        UNITCOMPUTERLABEL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-COMPUTER-PRIMARY-NETWORK-ADDRESS")>  _
        UNITCOMPUTERPRIMARYNETWORKADDRESS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-COMPUTER-HOST-NAME")>  _
        UNITCOMPUTERHOSTNAME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-COMPUTER-SERIAL-NUMBER")>  _
        UNITCOMPUTERSERIALNUMBER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-COMPUTER-DISC-SERIAL-NUMBER")>  _
        UNITCOMPUTERDISCSERIALNUMBER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-COMPUTER-PRIMARY-MAC-ADDRESS")>  _
        UNITCOMPUTERPRIMARYMACADDRESS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-COMPUTER-ASSET-TAG")>  _
        UNITCOMPUTERASSETTAG
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-COMPUTER-CLASSID")>  _
        UNITCOMPUTERCLASSID
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-COMPUTER-USAGE-LIST")>  _
        UNITCOMPUTERUSAGELIST
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-COMPUTER-URI")>  _
        UNITCOMPUTERURI
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-COMPUTER-SYSTEM-ID")>  _
        UNITCOMPUTERSYSTEMID
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-COMPUTER-VENDOR-NAME")>  _
        UNITCOMPUTERVENDORNAME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-COMPUTER-DOMAIN-LABEL")>  _
        UNITCOMPUTERDOMAINLABEL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-COMPUTER-CREATION-USER")>  _
        UNITCOMPUTERCREATIONUSER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-COMPUTER-CREATION-DATE")>  _
        UNITCOMPUTERCREATIONDATE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-COMPUTER-LAST-UPDATED-USER")>  _
        UNITCOMPUTERLASTUPDATEDUSER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-COMPUTER-LAST-UPDATED-DATE")>  _
        UNITCOMPUTERLASTUPDATEDDATE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-COMPUTER-VERSION-NUMBER")>  _
        UNITCOMPUTERVERSIONNUMBER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-USERPROFILE-LABEL")>  _
        UNITUSERPROFILELABEL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-USERPROFILE-REFERENCE-COUNT")>  _
        UNITUSERPROFILEREFERENCECOUNT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-USERPROFILE-USAGE-LIST")>  _
        UNITUSERPROFILEUSAGELIST
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-USERPROFILE-CREATION-USER")>  _
        UNITUSERPROFILECREATIONUSER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-USERPROFILE-CREATION-DATE")>  _
        UNITUSERPROFILECREATIONDATE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-USERPROFILE-LAST-UPDATED-USER")>  _
        UNITUSERPROFILELASTUPDATEDUSER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-USERPROFILE-LAST-UPDATED-DATE")>  _
        UNITUSERPROFILELASTUPDATEDDATE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNIT-USERPROFILE-VERSION-NUMBER")>  _
        UNITUSERPROFILEVERSIONNUMBER
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class SetUnitGroupProperties
        
        Private groupUUIDField As String
        
        Private groupUUIDSuppliedField As Boolean
        
        Private groupLabelField As String
        
        Private groupLabelSuppliedField As Boolean
        
        Private evaluationFrequencyField As Long
        
        Private evaluationFrequencySuppliedField As Boolean
        
        Private lastEvaluationDateTimeField As DateTime
        
        Private lastEvaluationDateTimeSuppliedField As Boolean
        
        Private queryUUIDField As String
        
        Private queryUUIDSuppliedField As Boolean
        
        Private groupDescriptionField As String
        
        Private groupDescriptionSuppliedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupUUID() As String
            Get
                Return Me.groupUUIDField
            End Get
            Set
                Me.groupUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupUUIDSupplied() As Boolean
            Get
                Return Me.groupUUIDSuppliedField
            End Get
            Set
                Me.groupUUIDSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupLabel() As String
            Get
                Return Me.groupLabelField
            End Get
            Set
                Me.groupLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupLabelSupplied() As Boolean
            Get
                Return Me.groupLabelSuppliedField
            End Get
            Set
                Me.groupLabelSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationFrequency() As Long
            Get
                Return Me.evaluationFrequencyField
            End Get
            Set
                Me.evaluationFrequencyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationFrequencySupplied() As Boolean
            Get
                Return Me.evaluationFrequencySuppliedField
            End Get
            Set
                Me.evaluationFrequencySuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastEvaluationDateTime() As DateTime
            Get
                Return Me.lastEvaluationDateTimeField
            End Get
            Set
                Me.lastEvaluationDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastEvaluationDateTimeSupplied() As Boolean
            Get
                Return Me.lastEvaluationDateTimeSuppliedField
            End Get
            Set
                Me.lastEvaluationDateTimeSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryUUID() As String
            Get
                Return Me.queryUUIDField
            End Get
            Set
                Me.queryUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryUUIDSupplied() As Boolean
            Get
                Return Me.queryUUIDSuppliedField
            End Get
            Set
                Me.queryUUIDSuppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupDescription() As String
            Get
                Return Me.groupDescriptionField
            End Get
            Set
                Me.groupDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupDescriptionSupplied() As Boolean
            Get
                Return Me.groupDescriptionSuppliedField
            End Get
            Set
                Me.groupDescriptionSuppliedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UserProfilePropertyFilter
        
        Private userProfilePropertyField As UserProfileProperty
        
        Private searchStringField As String
        
        Private searchValueField As Long
        
        '''<remarks/>
        Public Property userProfileProperty() As UserProfileProperty
            Get
                Return Me.userProfilePropertyField
            End Get
            Set
                Me.userProfilePropertyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property searchString() As String
            Get
                Return Me.searchStringField
            End Get
            Set
                Me.searchStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property searchValue() As Long
            Get
                Return Me.searchValueField
            End Get
            Set
                Me.searchValueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum UserProfileProperty
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-LABEL")>  _
        CULABEL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-REFERENCE-COUNT")>  _
        CUREFERENCECOUNT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-USAGE-LIST")>  _
        CUUSAGELIST
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-CREATION-USER")>  _
        CUCREATIONUSER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-CREATION-DATE")>  _
        CUCREATIONDATE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-LAST-UPDATED-USER")>  _
        CULASTUPDATEDUSER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-LAST-UPDATED-DATE")>  _
        CULASTUPDATEDDATE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-VERSION-NUMBER")>  _
        CUVERSIONNUMBER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-COMPUTER-PRIMARY-NETWORK-ADDRESS")>  _
        CUCOMPUTERPRIMARYNETWORKADDRESS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-COMPUTER-HOST-NAME")>  _
        CUCOMPUTERHOSTNAME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-COMPUTER-SERIAL-NUMBER")>  _
        CUCOMPUTERSERIALNUMBER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-COMPUTER-DISC-SERIAL-NUMBER")>  _
        CUCOMPUTERDISCSERIALNUMBER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-COMPUTER-PRIMARY-MAC-ADDRESS")>  _
        CUCOMPUTERPRIMARYMACADDRESS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-COMPUTER-ASSET-TAG")>  _
        CUCOMPUTERASSETTAG
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-COMPUTER-CLASSID")>  _
        CUCOMPUTERCLASSID
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-COMPUTER-USAGE-LIST")>  _
        CUCOMPUTERUSAGELIST
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-COMPUTER-URI")>  _
        CUCOMPUTERURI
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-COMPUTER-SYSTEM-ID")>  _
        CUCOMPUTERSYSTEMID
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-COMPUTER-VENDOR-NAME")>  _
        CUCOMPUTERVENDORNAME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-COMPUTER-DOMAIN-LABEL")>  _
        CUCOMPUTERDOMAINLABEL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-COMPUTER-CREATION-USER")>  _
        CUCOMPUTERCREATIONUSER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-COMPUTER-CREATION-DATE")>  _
        CUCOMPUTERCREATIONDATE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-COMPUTER-LAST-UPDATED-USER")>  _
        CUCOMPUTERLASTUPDATEDUSER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-COMPUTER-LAST-UPDATED-DATE")>  _
        CUCOMPUTERLASTUPDATEDDATE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CU-COMPUTER-VERSION-NUMBER")>  _
        CUCOMPUTERVERSIONNUMBER
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class ComputerPropertyFilter
        
        Private computerPropertyField As ComputerProperty
        
        Private searchStringField As String
        
        Private searchValueField As Long
        
        '''<remarks/>
        Public Property computerProperty() As ComputerProperty
            Get
                Return Me.computerPropertyField
            End Get
            Set
                Me.computerPropertyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property searchString() As String
            Get
                Return Me.searchStringField
            End Get
            Set
                Me.searchStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property searchValue() As Long
            Get
                Return Me.searchValueField
            End Get
            Set
                Me.searchValueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum ComputerProperty
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-UUID")>  _
        COMPUTERUUID
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-LABEL")>  _
        COMPUTERLABEL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-PRIMARY-NETWORK-ADDRESS")>  _
        COMPUTERPRIMARYNETWORKADDRESS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-HOST-NAME")>  _
        COMPUTERHOSTNAME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-SERIAL-NUMBER")>  _
        COMPUTERSERIALNUMBER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-DISC-SERIAL-NUMBER")>  _
        COMPUTERDISCSERIALNUMBER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-PRIMARY-MAC-ADDRESS")>  _
        COMPUTERPRIMARYMACADDRESS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-ASSET-TAG")>  _
        COMPUTERASSETTAG
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-CLASSID")>  _
        COMPUTERCLASSID
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-USAGE-LIST")>  _
        COMPUTERUSAGELIST
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-URI")>  _
        COMPUTERURI
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-SYSTEM-ID")>  _
        COMPUTERSYSTEMID
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-VENDOR-NAME")>  _
        COMPUTERVENDORNAME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-DOMAIN-LABEL")>  _
        COMPUTERDOMAINLABEL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-CREATION-USER")>  _
        COMPUTERCREATIONUSER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-CREATION-DATE")>  _
        COMPUTERCREATIONDATE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-LAST-UPDATED-USER")>  _
        COMPUTERLASTUPDATEDUSER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-LAST-UPDATED-DATE")>  _
        COMPUTERLASTUPDATEDDATE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-VERSION-NUMBER")>  _
        COMPUTERVERSIONNUMBER
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UserAccountPropertyFilter
        
        Private userAccountPropertyField As UserAccountProperty
        
        Private searchStringField As String
        
        Private searchValueField As Long
        
        '''<remarks/>
        Public Property userAccountProperty() As UserAccountProperty
            Get
                Return Me.userAccountPropertyField
            End Get
            Set
                Me.userAccountPropertyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property searchString() As String
            Get
                Return Me.searchStringField
            End Get
            Set
                Me.searchStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property searchValue() As Long
            Get
                Return Me.searchValueField
            End Get
            Set
                Me.searchValueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum UserAccountProperty
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("USERACCOUNT-NAME")>  _
        USERACCOUNTNAME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("USERACCOUNT-USAGE-LIST")>  _
        USERACCOUNTUSAGELIST
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("USERACCOUNT-URI")>  _
        USERACCOUNTURI
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("USERACCOUNT-LABEL")>  _
        USERACCOUNTLABEL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("USERACCOUNT-DOMAIN-LABEL")>  _
        USERACCOUNTDOMAINLABEL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("USERACCOUNT-CREATION-USER")>  _
        USERACCOUNTCREATIONUSER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("USERACCOUNT-CREATION-DATE")>  _
        USERACCOUNTCREATIONDATE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("USERACCOUNT-LAST-UPDATED-USER")>  _
        USERACCOUNTLASTUPDATEDUSER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("USERACCOUNT-LAST-UPDATED-DATE")>  _
        USERACCOUNTLASTUPDATEDDATE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("USERACCOUNT-VERSION-NUMBER")>  _
        USERACCOUNTVERSIONNUMBER
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UnitGroupProperties
        
        Private groupUUIDField As String
        
        Private domainUUIDField As String
        
        Private groupLabelField As String
        
        Private groupInheritanceField As GroupInheritance
        
        Private groupSystemField As GroupSystem
        
        Private groupFlagField As GroupFlag
        
        Private evaluationUUIDField As String
        
        Private evaluationFrequencyField As Long
        
        Private lastEvaluationDateTimeField As DateTime
        
        Private queryUUIDField As String
        
        Private memberTypeField As Long
        
        Private groupDescriptionField As String
        
        Private securityGroupField As SecurityGroup
        
        Private queryLabelField As String
        
        Private queryTypeField As Long
        
        Private engineLabelField As String
        
        Private engineHostnameField As String
        
        Private engineDescriptionField As String
        
        Private creationUserAccountField As String
        
        Private creationdateField As DateTime
        
        Private lastUpdatedUserAccountField As String
        
        Private lastUpdatedDateField As DateTime
        
        Private groupVersionNumberField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupUUID() As String
            Get
                Return Me.groupUUIDField
            End Get
            Set
                Me.groupUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property domainUUID() As String
            Get
                Return Me.domainUUIDField
            End Get
            Set
                Me.domainUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupLabel() As String
            Get
                Return Me.groupLabelField
            End Get
            Set
                Me.groupLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupInheritance() As GroupInheritance
            Get
                Return Me.groupInheritanceField
            End Get
            Set
                Me.groupInheritanceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupSystem() As GroupSystem
            Get
                Return Me.groupSystemField
            End Get
            Set
                Me.groupSystemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupFlag() As GroupFlag
            Get
                Return Me.groupFlagField
            End Get
            Set
                Me.groupFlagField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property evaluationUUID() As String
            Get
                Return Me.evaluationUUIDField
            End Get
            Set
                Me.evaluationUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationFrequency() As Long
            Get
                Return Me.evaluationFrequencyField
            End Get
            Set
                Me.evaluationFrequencyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastEvaluationDateTime() As DateTime
            Get
                Return Me.lastEvaluationDateTimeField
            End Get
            Set
                Me.lastEvaluationDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryUUID() As String
            Get
                Return Me.queryUUIDField
            End Get
            Set
                Me.queryUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property memberType() As Long
            Get
                Return Me.memberTypeField
            End Get
            Set
                Me.memberTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property groupDescription() As String
            Get
                Return Me.groupDescriptionField
            End Get
            Set
                Me.groupDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityGroup() As SecurityGroup
            Get
                Return Me.securityGroupField
            End Get
            Set
                Me.securityGroupField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryLabel() As String
            Get
                Return Me.queryLabelField
            End Get
            Set
                Me.queryLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryType() As Long
            Get
                Return Me.queryTypeField
            End Get
            Set
                Me.queryTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property engineLabel() As String
            Get
                Return Me.engineLabelField
            End Get
            Set
                Me.engineLabelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property engineHostname() As String
            Get
                Return Me.engineHostnameField
            End Get
            Set
                Me.engineHostnameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property engineDescription() As String
            Get
                Return Me.engineDescriptionField
            End Get
            Set
                Me.engineDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property creationUserAccount() As String
            Get
                Return Me.creationUserAccountField
            End Get
            Set
                Me.creationUserAccountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationdate() As DateTime
            Get
                Return Me.creationdateField
            End Get
            Set
                Me.creationdateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property lastUpdatedUserAccount() As String
            Get
                Return Me.lastUpdatedUserAccountField
            End Get
            Set
                Me.lastUpdatedUserAccountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastUpdatedDate() As DateTime
            Get
                Return Me.lastUpdatedDateField
            End Get
            Set
                Me.lastUpdatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupVersionNumber() As Long
            Get
                Return Me.groupVersionNumberField
            End Get
            Set
                Me.groupVersionNumberField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum GroupSystem
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("UNCLASSIFIED-SYSTEM-GROUP")>  _
        UNCLASSIFIEDSYSTEMGROUP
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("USER-DEFINED-GROUP")>  _
        USERDEFINEDGROUP
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("DIRECTORY-GROUP")>  _
        DIRECTORYGROUP
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ALL-COMPUTERS")>  _
        ALLCOMPUTERS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ALL-USERACCOUNTS")>  _
        ALLUSERACCOUNTS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ALL-USERPROFILES")>  _
        ALLUSERPROFILES
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ALL-USERPROFILE-GROUPS")>  _
        ALLUSERPROFILEGROUPS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ALL-DOMAINS")>  _
        ALLDOMAINS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ALL-QUERIES")>  _
        ALLQUERIES
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ALL-JOBS")>  _
        ALLJOBS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ALL-EVENT-LOGS")>  _
        ALLEVENTLOGS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ALL-SERVERS")>  _
        ALLSERVERS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ALL-SERVER-GROUPS")>  _
        ALLSERVERGROUPS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ALL-DOMAIN-GROUPS")>  _
        ALLDOMAINGROUPS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ALL-LEGACY-COMPUTERS")>  _
        ALLLEGACYCOMPUTERS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ALL-LEGACY-USERS")>  _
        ALLLEGACYUSERS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ALL-EXTERNAL-ASSETS")>  _
        ALLEXTERNALASSETS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ALL-BACKUP-USERS")>  _
        ALLBACKUPUSERS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ALL-BACKUP-JOBS")>  _
        ALLBACKUPJOBS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ALL-BACKUP-RESTORE-JOBS")>  _
        ALLBACKUPRESTOREJOBS
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum GroupFlag
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("LOCAL-GROUP")>  _
        LOCALGROUP
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("GLOBAL-GROUP")>  _
        GLOBALGROUP
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SecurityGroup
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("ORDINARY-GROUP")>  _
        ORDINARYGROUP
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SECURITY-GROUP")>  _
        SECURITYGROUP
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class UnitGroupPropertiesRequired
        
        Private groupUUIDRequiredField As Boolean
        
        Private domainUUIDRequiredField As Boolean
        
        Private groupLabelRequiredField As Boolean
        
        Private groupInheritanceRequiredField As Boolean
        
        Private groupSystemRequiredField As Boolean
        
        Private groupFlagRequiredField As Boolean
        
        Private evaluationUUIDRequiredField As Boolean
        
        Private evaluationFrequenceRequiredField As Boolean
        
        Private lastEvaluationDateTimeRequiredField As Boolean
        
        Private queryUUIDRequiredField As Boolean
        
        Private memberTypeRequiredField As Boolean
        
        Private groupDescriptionRequiredField As Boolean
        
        Private securityGroupRequiredField As Boolean
        
        Private queryLabelRequiredField As Boolean
        
        Private queryTypeRequiredField As Boolean
        
        Private engineLabelRequiredField As Boolean
        
        Private engineHostnameRequiredField As Boolean
        
        Private engineDescriptionRequiredField As Boolean
        
        Private creationUserAccountRequiredField As Boolean
        
        Private creationdateRequiredField As Boolean
        
        Private lastUpdatedUserAccountRequiredField As Boolean
        
        Private lastUpdatedDateRequiredField As Boolean
        
        Private groupVersionNumberRequiredField As Boolean
        
        '''<remarks/>
        Public Property groupUUIDRequired() As Boolean
            Get
                Return Me.groupUUIDRequiredField
            End Get
            Set
                Me.groupUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property domainUUIDRequired() As Boolean
            Get
                Return Me.domainUUIDRequiredField
            End Get
            Set
                Me.domainUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupLabelRequired() As Boolean
            Get
                Return Me.groupLabelRequiredField
            End Get
            Set
                Me.groupLabelRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupInheritanceRequired() As Boolean
            Get
                Return Me.groupInheritanceRequiredField
            End Get
            Set
                Me.groupInheritanceRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupSystemRequired() As Boolean
            Get
                Return Me.groupSystemRequiredField
            End Get
            Set
                Me.groupSystemRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupFlagRequired() As Boolean
            Get
                Return Me.groupFlagRequiredField
            End Get
            Set
                Me.groupFlagRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationUUIDRequired() As Boolean
            Get
                Return Me.evaluationUUIDRequiredField
            End Get
            Set
                Me.evaluationUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property evaluationFrequenceRequired() As Boolean
            Get
                Return Me.evaluationFrequenceRequiredField
            End Get
            Set
                Me.evaluationFrequenceRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastEvaluationDateTimeRequired() As Boolean
            Get
                Return Me.lastEvaluationDateTimeRequiredField
            End Get
            Set
                Me.lastEvaluationDateTimeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryUUIDRequired() As Boolean
            Get
                Return Me.queryUUIDRequiredField
            End Get
            Set
                Me.queryUUIDRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property memberTypeRequired() As Boolean
            Get
                Return Me.memberTypeRequiredField
            End Get
            Set
                Me.memberTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupDescriptionRequired() As Boolean
            Get
                Return Me.groupDescriptionRequiredField
            End Get
            Set
                Me.groupDescriptionRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property securityGroupRequired() As Boolean
            Get
                Return Me.securityGroupRequiredField
            End Get
            Set
                Me.securityGroupRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryLabelRequired() As Boolean
            Get
                Return Me.queryLabelRequiredField
            End Get
            Set
                Me.queryLabelRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTypeRequired() As Boolean
            Get
                Return Me.queryTypeRequiredField
            End Get
            Set
                Me.queryTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property engineLabelRequired() As Boolean
            Get
                Return Me.engineLabelRequiredField
            End Get
            Set
                Me.engineLabelRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property engineHostnameRequired() As Boolean
            Get
                Return Me.engineHostnameRequiredField
            End Get
            Set
                Me.engineHostnameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property engineDescriptionRequired() As Boolean
            Get
                Return Me.engineDescriptionRequiredField
            End Get
            Set
                Me.engineDescriptionRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationUserAccountRequired() As Boolean
            Get
                Return Me.creationUserAccountRequiredField
            End Get
            Set
                Me.creationUserAccountRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationdateRequired() As Boolean
            Get
                Return Me.creationdateRequiredField
            End Get
            Set
                Me.creationdateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastUpdatedUserAccountRequired() As Boolean
            Get
                Return Me.lastUpdatedUserAccountRequiredField
            End Get
            Set
                Me.lastUpdatedUserAccountRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastUpdatedDateRequired() As Boolean
            Get
                Return Me.lastUpdatedDateRequiredField
            End Get
            Set
                Me.lastUpdatedDateRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property groupVersionNumberRequired() As Boolean
            Get
                Return Me.groupVersionNumberRequiredField
            End Get
            Set
                Me.groupVersionNumberRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class QueryResultProperties
        
        Private objectClassField As Long
        
        Private objectUUIDField As String
        
        '''<remarks/>
        Public Property objectClass() As Long
            Get
                Return Me.objectClassField
            End Get
            Set
                Me.objectClassField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property objectUUID() As String
            Get
                Return Me.objectUUIDField
            End Get
            Set
                Me.objectUUIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class QueryResultPropertiesRequired
        
        Private objectClassRequiredField As Boolean
        
        Private objectUUIDRequiredField As Boolean
        
        '''<remarks/>
        Public Property objectClassRequired() As Boolean
            Get
                Return Me.objectClassRequiredField
            End Get
            Set
                Me.objectClassRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property objectUUIDRequired() As Boolean
            Get
                Return Me.objectUUIDRequiredField
            End Get
            Set
                Me.objectUUIDRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class QueryProperties
        
        Private queryIdField As String
        
        Private queryNameField As String
        
        Private queryTableField As String
        
        Private queryTypeField As QueryType
        
        Private queryTableLabelFieldField As String
        
        Private queryTableLabelPrimaryKeyField As String
        
        Private queryTableLabelSecondaryKeyField As String
        
        Private queryFragmentsField() As QueryFragment
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryId() As String
            Get
                Return Me.queryIdField
            End Get
            Set
                Me.queryIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryName() As String
            Get
                Return Me.queryNameField
            End Get
            Set
                Me.queryNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryTable() As String
            Get
                Return Me.queryTableField
            End Get
            Set
                Me.queryTableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryType() As QueryType
            Get
                Return Me.queryTypeField
            End Get
            Set
                Me.queryTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryTableLabelField() As String
            Get
                Return Me.queryTableLabelFieldField
            End Get
            Set
                Me.queryTableLabelFieldField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryTableLabelPrimaryKey() As String
            Get
                Return Me.queryTableLabelPrimaryKeyField
            End Get
            Set
                Me.queryTableLabelPrimaryKeyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property queryTableLabelSecondaryKey() As String
            Get
                Return Me.queryTableLabelSecondaryKeyField
            End Get
            Set
                Me.queryTableLabelSecondaryKeyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("queryFragmentsArray", IsNullable:=false)>  _
        Public Property queryFragments() As QueryFragment()
            Get
                Return Me.queryFragmentsField
            End Get
            Set
                Me.queryFragmentsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Partial Public Class QueryPropertiesRequired
        
        Private queryIdRequiredField As Boolean
        
        Private queryNameRequiredField As Boolean
        
        Private queryTableRequiredField As Boolean
        
        Private queryTypeRequiredField As Boolean
        
        Private queryTableLabelFieldRequiredField As Boolean
        
        Private queryTableLabelPrimaryKeyRequiredField As Boolean
        
        Private queryTableLabelSecondaryKeyRequiredField As Boolean
        
        Private queryFragmentsRequiredField As Boolean
        
        '''<remarks/>
        Public Property queryIdRequired() As Boolean
            Get
                Return Me.queryIdRequiredField
            End Get
            Set
                Me.queryIdRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryNameRequired() As Boolean
            Get
                Return Me.queryNameRequiredField
            End Get
            Set
                Me.queryNameRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTableRequired() As Boolean
            Get
                Return Me.queryTableRequiredField
            End Get
            Set
                Me.queryTableRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTypeRequired() As Boolean
            Get
                Return Me.queryTypeRequiredField
            End Get
            Set
                Me.queryTypeRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTableLabelFieldRequired() As Boolean
            Get
                Return Me.queryTableLabelFieldRequiredField
            End Get
            Set
                Me.queryTableLabelFieldRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTableLabelPrimaryKeyRequired() As Boolean
            Get
                Return Me.queryTableLabelPrimaryKeyRequiredField
            End Get
            Set
                Me.queryTableLabelPrimaryKeyRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryTableLabelSecondaryKeyRequired() As Boolean
            Get
                Return Me.queryTableLabelSecondaryKeyRequiredField
            End Get
            Set
                Me.queryTableLabelSecondaryKeyRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property queryFragmentsRequired() As Boolean
            Get
                Return Me.queryFragmentsRequiredField
            End Get
            Set
                Me.queryFragmentsRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SoftwarePackageGroupScope
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("NO-PREFERENCE")>  _
        NOPREFERENCE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MADE-LOCALLY-ONLY")>  _
        MADELOCALLYONLY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MADE-LOCALLY-PREFERABLY")>  _
        MADELOCALLYPREFERABLY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MADE-REMOTELY-ONLY")>  _
        MADEREMOTELYONLY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MADE-REMOTELY-PREFERABLY")>  _
        MADEREMOTELYPREFERABLY
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SoftwarePackageProcedureGroupScope
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("NO-PREFERENCE")>  _
        NOPREFERENCE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MADE-LOCALLY-ONLY")>  _
        MADELOCALLYONLY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MADE-LOCALLY-PREFERABLY")>  _
        MADELOCALLYPREFERABLY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MADE-REMOTELY-ONLY")>  _
        MADEREMOTELYONLY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MADE-REMOTELY-PREFERABLY")>  _
        MADEREMOTELYPREFERABLY
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SoftwareJobContainerScope
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("NO-PREFERENCE")>  _
        NOPREFERENCE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MADE-LOCALLY-ONLY")>  _
        MADELOCALLYONLY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MADE-LOCALLY-PREFERABLY")>  _
        MADELOCALLYPREFERABLY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MADE-REMOTELY-ONLY")>  _
        MADEREMOTELYONLY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MADE-REMOTELY-PREFERABLY")>  _
        MADEREMOTELYPREFERABLY
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SoftwarePolicyScope
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("NO-PREFERENCE")>  _
        NOPREFERENCE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MADE-LOCALLY-ONLY")>  _
        MADELOCALLYONLY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MADE-LOCALLY-PREFERABLY")>  _
        MADELOCALLYPREFERABLY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MADE-REMOTELY-ONLY")>  _
        MADEREMOTELYONLY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MADE-REMOTELY-PREFERABLY")>  _
        MADEREMOTELYPREFERABLY
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum SystemGroup
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CO-ALL-COMPUTERS")>  _
        COALLCOMPUTERS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CO-ALL-USERACCOUNTS")>  _
        COALLUSERACCOUNTS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CO-ALL-USERPROFILES")>  _
        COALLUSERPROFILES
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CO-ALL-USERPROFILEGROUPS")>  _
        COALLUSERPROFILEGROUPS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CO-ALL-DOMAINS")>  _
        COALLDOMAINS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CO-ALL-QUERIES")>  _
        COALLQUERIES
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CO-ALL-EVENTLOGS")>  _
        COALLEVENTLOGS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CO-ALL-SERVERS")>  _
        COALLSERVERS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CO-ALL-SERVERGROUPS")>  _
        COALLSERVERGROUPS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CO-ALL-DOMAINGROUPS")>  _
        COALLDOMAINGROUPS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SD-SOFTWARE-LIBRARY")>  _
        SDSOFTWARELIBRARY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SD-SOFTWARE-LIBRARY-CATALOG")>  _
        SDSOFTWARELIBRARYCATALOG
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SD-JOBS")>  _
        SDJOBS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SD-SOFTWARE-POLICY")>  _
        SDSOFTWAREPOLICY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SD-DELIVERY-TARGETS")>  _
        SDDELIVERYTARGETS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CO-ALL-COMPUTERSUSERSGROUP")>  _
        COALLCOMPUTERSUSERSGROUP
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SD-ALL-PATCHROLLUPS")>  _
        SDALLPATCHROLLUPS
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum LinkedObjectTypeRequired
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CONSTRAINT-NONE")>  _
        CONSTRAINTNONE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CONSTRAINT-ALL")>  _
        CONSTRAINTALL
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum CompRequiresAuthentication
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("CO-REQUIRES-AUTHENTICATION")>  _
        COREQUIRESAUTHENTICATION
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("AM-REQUIRES-AUTHENTICATION")>  _
        AMREQUIRESAUTHENTICATION
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("SD-REQUIRES-AUTHENTICATION")>  _
        SDREQUIRESAUTHENTICATION
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("OSIM-REQUIRES-AUTHENTICATION")>  _
        OSIMREQUIRESAUTHENTICATION
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute(TypeName:="WS-OSIM-DEPLOY", [Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum WSOSIMDEPLOY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-OSIM-DO-NOT-WAIT")>  _
        WSOSIMDONOTWAIT
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-OSIM-WAIT")>  _
        WSOSIMWAIT
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute(TypeName:="WS-OSIM-CONF-TYPE", [Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum WSOSIMCONFTYPE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-OSIM-CT-PLANNED")>  _
        WSOSIMCTPLANNED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-OSIM-CT-SCHEDULED")>  _
        WSOSIMCTSCHEDULED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-OSIM-CT-CURRENT")>  _
        WSOSIMCTCURRENT
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute(TypeName:="WS-OSIM-IR-STATUS", [Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum WSOSIMIRSTATUS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-IR-PLANNED")>  _
        WSIRPLANNED
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-IR-SCHEDULED")>  _
        WSIRSCHEDULED
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute(TypeName:="PROPERTY-TYPE", [Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum PROPERTYTYPE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-MACADDRESS")>  _
        COMPUTERMACADDRESS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-NETWORK-ADDRESS")>  _
        COMPUTERNETWORKADDRESS
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-HOSTNAME")>  _
        COMPUTERHOSTNAME
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("COMPUTER-SERIAL-NUMBER")>  _
        COMPUTERSERIALNUMBER
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum UnitObjectType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-UNIT-DISCOVERED-COMPUTER")>  _
        WSUNITDISCOVEREDCOMPUTER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-UNIT-DISCOVERED-USER")>  _
        WSUNITDISCOVEREDUSER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-UNIT-ENGINE")>  _
        WSUNITENGINE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-UNIT-COMPUTER-USER")>  _
        WSUNITCOMPUTERUSER
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum AMExtraCmdParam
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-RESCAN-INVENTORY")>  _
        WSRESCANINVENTORY
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-RESCAN-SOFTWARE")>  _
        WSRESCANSOFTWARE
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-COLLECT")>  _
        WSCOLLECT
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum ManagerConfigurationParams
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("WS-MDM-URL")>  _
        WSMDMURL
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn://www.ca.com/Unicenter/DSM/r11")>  _
    Public Enum RepositionItemsParentType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("PARENT-TYPE-JOB-CONTAINER")>  _
        PARENTTYPEJOBCONTAINER
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("PARENT-TYPE-PROC-GROUP")>  _
        PARENTTYPEPROCGROUP
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LoginCompletedEventHandler(ByVal sender As Object, ByVal e As LoginCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoginCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub Login2CompletedEventHandler(ByVal sender As Object, ByVal e As Login2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Login2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LogoutCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnlinkUserAccountsFromUnitGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnlinkComputersFromUnitGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnlinkUserProfilesFromUnitGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnlinkUnitGroupsFromUnitGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateUnitGroupCompletedEventHandler(ByVal sender As Object, ByVal e As CreateUnitGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateUnitGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkUserAccountsToUnitGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkComputersToUnitGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkUserProfilesToUnitGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkUnitGroupsToUnitGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenQueryListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenQueryListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenQueryListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfQueries() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfQueriesSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetQueriesCompletedEventHandler(ByVal sender As Object, ByVal e As GetQueriesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetQueriesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As QueryProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),QueryProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseQueryListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenQueryResultListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenQueryResultListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenQueryResultListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfQueryResults() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfQueryResultsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetQueryResultsCompletedEventHandler(ByVal sender As Object, ByVal e As GetQueryResultsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetQueryResultsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As QueryResultProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),QueryResultProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseQueryResultListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenUnitGroupUnitGroupMembersListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenUnitGroupUnitGroupMembersListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenUnitGroupUnitGroupMembersListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUnitGroups() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUnitGroupsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnitGroupUnitGroupMembersCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitGroupUnitGroupMembersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitGroupUnitGroupMembersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UnitGroupProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UnitGroupProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseUnitGroupUnitGroupMembersListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenUnitGroupUserAccountMembersListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenUnitGroupUserAccountMembersListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenUnitGroupUserAccountMembersListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUserAccounts() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUserAccountsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnitGroupUserAccountMembersCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitGroupUserAccountMembersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitGroupUserAccountMembersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserAccountProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserAccountProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseUnitGroupUserAccountMembersListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenUnitGroupComputerMembersListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenUnitGroupComputerMembersListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenUnitGroupComputerMembersListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfComputers() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfComputersSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnitGroupComputerMembersCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitGroupComputerMembersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitGroupComputerMembersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ComputerProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ComputerProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseUnitGroupComputerMembersListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenUnitGroupUserProfileMembersListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenUnitGroupUserProfileMembersListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenUnitGroupUserProfileMembersListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUserProfiles() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUserProfilesSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnitGroupUserProfileMembersCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitGroupUserProfileMembersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitGroupUserProfileMembersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserProfileProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserProfileProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseUnitGroupUserProfileMembersListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteUnitGroupsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnitGroupCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UnitGroupProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UnitGroupProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUserAccountCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserAccountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserAccountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserAccountProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserAccountProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetComputerCompletedEventHandler(ByVal sender As Object, ByVal e As GetComputerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetComputerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ComputerProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ComputerProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUserProfileCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserProfileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserProfileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserProfileProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserProfileProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetUnitGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenUnitGroupUnitMembersListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenUnitGroupUnitMembersListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenUnitGroupUnitMembersListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUnits() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUnitsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnitGroupUnitMembersCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitGroupUnitMembersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitGroupUnitMembersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UnitProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UnitProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseUnitGroupUnitMembersListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub FindUserAccountCompletedEventHandler(ByVal sender As Object, ByVal e As FindUserAccountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindUserAccountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserAccountProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserAccountProperties())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUserAccountsFound() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUserAccountsFoundSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub FindComputerCompletedEventHandler(ByVal sender As Object, ByVal e As FindComputerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindComputerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ComputerProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ComputerProperties())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfComputersFound() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfComputersFoundSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub FindUserProfileCompletedEventHandler(ByVal sender As Object, ByVal e As FindUserProfileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindUserProfileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserProfileProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserProfileProperties())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUserProfilesFound() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUserProfilesFoundSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenUnitUnitGroupListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenUnitUnitGroupListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenUnitUnitGroupListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUnitGroups() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUnitGroupsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnitUnitGroupsCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitUnitGroupsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitUnitGroupsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UnitGroupProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UnitGroupProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseUnitUnitGroupListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateQueryCompletedEventHandler(ByVal sender As Object, ByVal e As CreateQueryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateQueryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteQueriesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetQueryCompletedEventHandler(ByVal sender As Object, ByVal e As GetQueryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetQueryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As QueryProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),QueryProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetQueryCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EvaluateUnitGroupQueryCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenUnitInventoryComponentListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenUnitInventoryComponentListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenUnitInventoryComponentListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUnitInventoryComponents() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUnitInventoryComponentsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnitInventoryComponentsCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitInventoryComponentsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitInventoryComponentsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UnitInventoryComponentProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UnitInventoryComponentProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseUnitInventoryComponentListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenUnitInventoryComponentGroupListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenUnitInventoryComponentGroupListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenUnitInventoryComponentGroupListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUnitInventoryComponentGroups() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUnitInventoryComponentGroupsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnitInventoryComponentGroupsCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitInventoryComponentGroupsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitInventoryComponentGroupsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UnitInventoryGroupProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UnitInventoryGroupProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseUnitInventoryComponentGroupListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenUnitInventoryGroupListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenUnitInventoryGroupListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenUnitInventoryGroupListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUnitInventoryGroups() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUnitInventoryGroupsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnitInventoryGroupsCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitInventoryGroupsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitInventoryGroupsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UnitInventoryGroupProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UnitInventoryGroupProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseUnitInventoryGroupListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenUnitInventoryItemListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenUnitInventoryItemListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenUnitInventoryItemListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUnitInventoryItems() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUnitInventoryItemsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnitInventoryItemsCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitInventoryItemsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitInventoryItemsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UnitInventoryItemProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UnitInventoryItemProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseUnitInventoryItemListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ResumeSoftwareJobsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SuspendSoftwareJobsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CancelSoftwareJobsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateRecoverSoftwareJobCompletedEventHandler(ByVal sender As Object, ByVal e As CreateRecoverSoftwareJobCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateRecoverSoftwareJobCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateRenewSoftwareJobCompletedEventHandler(ByVal sender As Object, ByVal e As CreateRenewSoftwareJobCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateRenewSoftwareJobCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwarePackageInstallationListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwarePackageInstallationListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwarePackageInstallationListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackages() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackagesSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageInstallationsCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageInstallationsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageInstallationsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UnitSoftwareJobProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UnitSoftwareJobProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwarePackageInstallationListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenUnitUnitSoftwareJobListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenUnitUnitSoftwareJobListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenUnitUnitSoftwareJobListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUnitSoftwareJobs() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUnitSoftwareJobsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnitUnitSoftwareJobsCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitUnitSoftwareJobsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitUnitSoftwareJobsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UnitSoftwareJobProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UnitSoftwareJobProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseUnitUnitSoftwareJobListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenUnitUnitSoftwareInstallationJobListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenUnitUnitSoftwareInstallationJobListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenUnitUnitSoftwareInstallationJobListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUnitSoftwareInstallationJobs() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUnitSoftwareInstallationJobsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnitUnitSoftwareInstallationJobsCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitUnitSoftwareInstallationJobsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitUnitSoftwareInstallationJobsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UnitSoftwareJobProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UnitSoftwareJobProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseUnitUnitSoftwareInstallationJobListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSoftwarePackageVolumeCompletedEventHandler(ByVal sender As Object, ByVal e As CreateSoftwarePackageVolumeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSoftwarePackageVolumeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteSoftwarePackageVolumesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwarePackageVolumeListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwarePackageVolumeListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwarePackageVolumeListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackageVolumes() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackageVolumesSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageVolumesCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageVolumesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageVolumesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageVolumeProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageVolumeProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwarePackageVolumeListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageVolumeCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageVolumeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageVolumeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageVolumeProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageVolumeProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSoftwarePackageVolumeCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwarePackageVolumeElementListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwarePackageVolumeElementListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwarePackageVolumeElementListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackageVolumeElements() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackageVolumeElementsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageVolumeElementsCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageVolumeElementsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageVolumeElementsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageVolumeElementProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageVolumeElementProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwarePackageVolumeElementListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub FindSoftwarePackageProcedureCompletedEventHandler(ByVal sender As Object, ByVal e As FindSoftwarePackageProcedureCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindSoftwarePackageProcedureCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSoftwarePackageProcedureCompletedEventHandler(ByVal sender As Object, ByVal e As CreateSoftwarePackageProcedureCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSoftwarePackageProcedureCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteSoftwarePackageProceduresCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwarePackageProcedureListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwarePackageProcedureListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwarePackageProcedureListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackageProcedures() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackageProceduresSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageProceduresCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageProceduresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageProceduresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProcedureProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProcedureProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwarePackageProcedureListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageProcedureCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageProcedureCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageProcedureCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProcedureProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProcedureProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSoftwarePackageProcedureCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSoftwarePackageProcedureDependencyCompletedEventHandler(ByVal sender As Object, ByVal e As CreateSoftwarePackageProcedureDependencyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSoftwarePackageProcedureDependencyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwarePackageProcedureDependencyListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwarePackageProcedureDependencyListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwarePackageProcedureDependencyListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackageProcedureDependencies() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackageProcedureDependenciesSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageProcedureDependenciesCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageProcedureDependenciesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageProcedureDependenciesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProcedureDependencyProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProcedureDependencyProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwarePackageProcedureDependencyListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteSoftwarePackageProcedureDependencyCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateAddedSoftwarePackageProcedureCompletedEventHandler(ByVal sender As Object, ByVal e As CreateAddedSoftwarePackageProcedureCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateAddedSoftwarePackageProcedureCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ImportSoftwarePackageCompletedEventHandler(ByVal sender As Object, ByVal e As ImportSoftwarePackageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ImportSoftwarePackageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub FindSoftwarePackageCompletedEventHandler(ByVal sender As Object, ByVal e As FindSoftwarePackageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindSoftwarePackageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSoftwarePackageCompletedEventHandler(ByVal sender As Object, ByVal e As CreateSoftwarePackageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSoftwarePackageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteSoftwarePackagesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSoftwarePackageCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwarePackageListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwarePackageListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwarePackageListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackages() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackagesSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackagesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwarePackageListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SealSoftwarePackagesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnsealSoftwarePackagesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CopyElementsToSoftwarePackageVolumeCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CopyElementsToSoftwarePackageVolume2CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteElementsFromSoftwarePackageVolumeCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateActivateSoftwareJobCompletedEventHandler(ByVal sender As Object, ByVal e As CreateActivateSoftwareJobCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateActivateSoftwareJobCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateConfigureSoftwareJobCompletedEventHandler(ByVal sender As Object, ByVal e As CreateConfigureSoftwareJobCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateConfigureSoftwareJobCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateUninstallSoftwareJobCompletedEventHandler(ByVal sender As Object, ByVal e As CreateUninstallSoftwareJobCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateUninstallSoftwareJobCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateInstallSoftwareJobCompletedEventHandler(ByVal sender As Object, ByVal e As CreateInstallSoftwareJobCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateInstallSoftwareJobCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub FindSoftwareJobCompletedEventHandler(ByVal sender As Object, ByVal e As FindSoftwareJobCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindSoftwareJobCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property softwareJobContainerId() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwareJobUnitSoftwareJobListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwareJobUnitSoftwareJobListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwareJobUnitSoftwareJobListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUnitSoftwareJobs() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfUnitSoftwareJobsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwareJobUnitSoftwareJobsCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwareJobUnitSoftwareJobsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwareJobUnitSoftwareJobsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UnitSoftwareJobProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UnitSoftwareJobProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwareJobUnitSoftwareJobListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwareJobListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwareJobListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwareJobListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwareJobs() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwareJobsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwareJobsCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwareJobsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwareJobsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwareJobProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwareJobProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwareJobListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwareJobCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwareJobCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwareJobCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwareJobProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwareJobProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSoftwareJobCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SealAndActivateSoftwareJobContainerCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SealAndBuildSoftwareJobContainerCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ActivateSoftwareJobContainerCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub HaltDeliverySoftwareJobContainerCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ResumeDeliverySoftwareJobContainerCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSoftwarePackageGroupCompletedEventHandler(ByVal sender As Object, ByVal e As CreateSoftwarePackageGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSoftwarePackageGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateCatalogSoftwarePackageGroupCompletedEventHandler(ByVal sender As Object, ByVal e As CreateCatalogSoftwarePackageGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateCatalogSoftwarePackageGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreatePatchRollupCompletedEventHandler(ByVal sender As Object, ByVal e As CreatePatchRollupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreatePatchRollupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSoftwarePackageProcedureGroupCompletedEventHandler(ByVal sender As Object, ByVal e As CreateSoftwarePackageProcedureGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSoftwarePackageProcedureGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSoftwareJobContainerCompletedEventHandler(ByVal sender As Object, ByVal e As CreateSoftwareJobContainerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSoftwareJobContainerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSoftwarePolicyCompletedEventHandler(ByVal sender As Object, ByVal e As CreateSoftwarePolicyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSoftwarePolicyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSoftwarePackageGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetCatalogSoftwarePackageGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSoftwarePackageProcedureGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSoftwareJobContainerCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSoftwarePolicyCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageGroupCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageGroupProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageGroupProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageProcedureGroupCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageProcedureGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageProcedureGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProcedureGroupProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProcedureGroupProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwareJobContainerCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwareJobContainerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwareJobContainerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwareJobContainerProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwareJobContainerProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePolicyCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePolicyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePolicyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePolicyProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePolicyProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteSoftwarePackageGroupsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteSoftwarePackageProcedureGroupsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteSoftwareJobContainersCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteSoftwarePoliciesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteSoftwareItemsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EvaluateSoftwarePolicyCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EmptySoftwarePackageGroupsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EmptySoftwarePackageProcedureGroupsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SealSoftwareJobContainersCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SealSoftwarePoliciesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnsealSoftwareJobContainersCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnsealSoftwarePoliciesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub FindSoftwarePackageGroupCompletedEventHandler(ByVal sender As Object, ByVal e As FindSoftwarePackageGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindSoftwarePackageGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub FindSoftwarePackageProcedureGroupCompletedEventHandler(ByVal sender As Object, ByVal e As FindSoftwarePackageProcedureGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindSoftwarePackageProcedureGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub FindSoftwareJobContainerCompletedEventHandler(ByVal sender As Object, ByVal e As FindSoftwareJobContainerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindSoftwareJobContainerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub FindSoftwarePolicyCompletedEventHandler(ByVal sender As Object, ByVal e As FindSoftwarePolicyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindSoftwarePolicyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwarePackageGroupListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwarePackageGroupListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwarePackageGroupListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackageGroups() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackageGroupsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageGroupsCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageGroupsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageGroupsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageGroupProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageGroupProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwarePackageGroupListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwarePackageProcedureGroupListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwarePackageProcedureGroupListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwarePackageProcedureGroupListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackageProcedureGroups() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackageProcedureGroupsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageProcedureGroupsCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageProcedureGroupsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageProcedureGroupsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProcedureGroupProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProcedureGroupProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwarePackageProcedureGroupListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwareJobContainerListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwareJobContainerListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwareJobContainerListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwareJobContainers() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwareJobContainersSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwareJobContainersCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwareJobContainersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwareJobContainersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwareJobContainerProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwareJobContainerProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwareJobContainerListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwarePolicyListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwarePolicyListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwarePolicyListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePolicies() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePoliciesSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePoliciesCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePoliciesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePoliciesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePolicyProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePolicyProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwarePolicyListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwarePackageGroupListRecursiveCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwarePackageGroupListRecursiveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwarePackageGroupListRecursiveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackageGroups() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackageGroupsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageGroupsRecursiveCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageGroupsRecursiveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageGroupsRecursiveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageGroupProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageGroupProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwarePackageGroupListRecursiveCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwarePackageProcedureGroupListRecursiveCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwarePackageProcedureGroupListRecursiveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwarePackageProcedureGroupListRecursiveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackageProcedureGroups() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackageProcedureGroupsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageProcedureGroupsRecursiveCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageProcedureGroupsRecursiveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageProcedureGroupsRecursiveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProcedureGroupProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProcedureGroupProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwarePackageProcedureGroupListRecursiveCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwareJobContainerListRecursiveCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwareJobContainerListRecursiveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwareJobContainerListRecursiveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwareJobContainers() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwareJobContainersSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwareJobContainersRecursiveCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwareJobContainersRecursiveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwareJobContainersRecursiveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwareJobContainerProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwareJobContainerProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwareJobContainerListRecursiveCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwarePolicyListRecursiveCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwarePolicyListRecursiveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwarePolicyListRecursiveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePolicies() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePoliciesSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePoliciesRecursiveCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePoliciesRecursiveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePoliciesRecursiveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePolicyProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePolicyProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwarePolicyListRecursiveCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenParentSoftwarePackageGroupListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenParentSoftwarePackageGroupListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenParentSoftwarePackageGroupListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfParentSoftwarePackageGroups() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfParentSoftwarePackageGroupsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetParentSoftwarePackageGroupsCompletedEventHandler(ByVal sender As Object, ByVal e As GetParentSoftwarePackageGroupsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetParentSoftwarePackageGroupsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageGroupProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageGroupProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseParentSoftwarePackageGroupListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenParentSoftwarePackageProcedureGroupListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenParentSoftwarePackageProcedureGroupListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenParentSoftwarePackageProcedureGroupListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfParentSoftwarePackageGroups() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfParentSoftwarePackageGroupsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetParentSoftwarePackageProcedureGroupsCompletedEventHandler(ByVal sender As Object, ByVal e As GetParentSoftwarePackageProcedureGroupsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetParentSoftwarePackageProcedureGroupsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageGroupProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageGroupProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseParentSoftwarePackageProcedureGroupListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenParentSoftwareJobContainerListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenParentSoftwareJobContainerListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenParentSoftwareJobContainerListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfParentSoftwareJobContainers() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfParentSoftwareJobContainersSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetParentSoftwareJobContainersCompletedEventHandler(ByVal sender As Object, ByVal e As GetParentSoftwareJobContainersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetParentSoftwareJobContainersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwareJobContainerProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwareJobContainerProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseParentSoftwarePackageJobContainerListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwarePackageGroupSoftwarePackageListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwarePackageGroupSoftwarePackageListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwarePackageGroupSoftwarePackageListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackages() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackagesSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageGroupSoftwarePackagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageGroupSoftwarePackagesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageGroupSoftwarePackagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwarePackageGroupSoftwarePackageListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwarePackageProcedureGroupSoftwarePackageProcedureListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwarePackageProcedureGroupSoftwarePackageProcedureListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwarePackageProcedureGroupSoftwarePackageProcedureListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackageProcedures() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackageProceduresSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageProcedureGroupSoftwarePackageProceduresCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageProcedureGroupSoftwarePackageProceduresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageProcedureGroupSoftwarePackageProceduresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProcedureProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProcedureProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwarePackageProcedureGroupSoftwarePackageProcedureListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwareJobContainerSoftwareJobListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwareJobContainerSoftwareJobListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwareJobContainerSoftwareJobListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwareJobs() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwareJobsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwareJobContainerSoftwareJobsCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwareJobContainerSoftwareJobsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwareJobContainerSoftwareJobsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwareJobProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwareJobProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwareJobContainerSoftwareJobListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwarePolicySoftwareJobListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwarePolicySoftwareJobListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwarePolicySoftwareJobListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwareJobs() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwareJobsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePolicySoftwareJobsCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePolicySoftwareJobsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePolicySoftwareJobsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwareJobProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwareJobProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwarePolicySoftwareJobListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwarePackageGroupSoftwarePackageListRecursiveCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwarePackageGroupSoftwarePackageListRecursiveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwarePackageGroupSoftwarePackageListRecursiveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackages() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePackagesSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageGroupSoftwarePackagesRecursiveCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageGroupSoftwarePackagesRecursiveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageGroupSoftwarePackagesRecursiveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwarePackageGroupSoftwarePackageListRecursiveCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwarePolicySoftwarePolicyExceptionListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwarePolicySoftwarePolicyExceptionListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwarePolicySoftwarePolicyExceptionListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePolicyExceptions() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePolicyExceptionsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePolicySoftwarePolicyExceptionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePolicySoftwarePolicyExceptionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePolicySoftwarePolicyExceptionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePolicyExceptionProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePolicyExceptionProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwarePolicySoftwarePolicyExceptionListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkSoftwarePackagesToSoftwarePackageGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnlinkSoftwarePackagesFromSoftwarePackageGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkSoftwarePackageGroupsToSoftwarePackageGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnlinkSoftwarePackageGroupsFromSoftwarePackageGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkSoftwarePackageProcedureGroupsToSoftwarePackageGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnlinkSoftwarePackageProcedureGroupsFromSoftwarePackageGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenUnitDiscoveredSoftwareListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenUnitDiscoveredSoftwareListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenUnitDiscoveredSoftwareListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfDiscoveredSoftwares() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfDiscoveredSoftwaresSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnitDiscoveredSoftwareCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitDiscoveredSoftwareCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitDiscoveredSoftwareCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DiscoveredSoftwareProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DiscoveredSoftwareProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseUnitDiscoveredSoftwareListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSystemGroupUUIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetSystemGroupUUIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSystemGroupUUIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ResetTimeoutCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateInstallSoftwareJobInSoftwarePolicyCompletedEventHandler(ByVal sender As Object, ByVal e As CreateInstallSoftwareJobInSoftwarePolicyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateInstallSoftwareJobInSoftwarePolicyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateActivateSoftwareJobInSoftwarePolicyCompletedEventHandler(ByVal sender As Object, ByVal e As CreateActivateSoftwareJobInSoftwarePolicyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateActivateSoftwareJobInSoftwarePolicyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateConfigureSoftwareJobInSoftwarePolicyCompletedEventHandler(ByVal sender As Object, ByVal e As CreateConfigureSoftwareJobInSoftwarePolicyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateConfigureSoftwareJobInSoftwarePolicyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateUninstallSoftwareJobInSoftwarePolicyCompletedEventHandler(ByVal sender As Object, ByVal e As CreateUninstallSoftwareJobInSoftwarePolicyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateUninstallSoftwareJobInSoftwarePolicyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetTimeoutValueCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetInstalledComponentsCompletedEventHandler(ByVal sender As Object, ByVal e As GetInstalledComponentsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetInstalledComponentsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Components
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Components)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ImportSoftwarePackage2CompletedEventHandler(ByVal sender As Object, ByVal e As ImportSoftwarePackage2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ImportSoftwarePackage2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RepositionSoftwarePackageProcedureCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkSoftwareGroupsToSoftwarePackageGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnlinkSoftwareGroupsFromSoftwarePackageGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSoftwareGroupCompletedEventHandler(ByVal sender As Object, ByVal e As CreateSoftwareGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSoftwareGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteSoftwareGroupsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSoftwareGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateComputerCompletedEventHandler(ByVal sender As Object, ByVal e As CreateComputerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateComputerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateUserProfileCompletedEventHandler(ByVal sender As Object, ByVal e As CreateUserProfileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateUserProfileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetComputerCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetComputerByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetUserProfileCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetUserProfileByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteComputersCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteComputersByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteUserProfilesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteUserProfilesByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteSoftwareJobsInComputerCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSoftwarePolicy2CompletedEventHandler(ByVal sender As Object, ByVal e As CreateSoftwarePolicy2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSoftwarePolicy2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSoftwarePolicy2CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteSoftwarePoliciesInUnitGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateUnitGroup2CompletedEventHandler(ByVal sender As Object, ByVal e As CreateUnitGroup2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateUnitGroup2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateUnitGroupByNameCompletedEventHandler(ByVal sender As Object, ByVal e As CreateUnitGroupByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateUnitGroupByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSoftwarePolicyByNameCompletedEventHandler(ByVal sender As Object, ByVal e As CreateSoftwarePolicyByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSoftwarePolicyByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSoftwarePolicyByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteSoftwarePoliciesInUnitGroupByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ImportSoftwarePackageByNameCompletedEventHandler(ByVal sender As Object, ByVal e As ImportSoftwarePackageByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ImportSoftwarePackageByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RepositionSoftwarePackageProcedureByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkSoftwareGroupsToSoftwarePackageGroupByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnlinkSoftwareGroupsFromSoftwarePackageGroupByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSoftwareGroupByNameCompletedEventHandler(ByVal sender As Object, ByVal e As CreateSoftwareGroupByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSoftwareGroupByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteSoftwareGroupsByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSoftwareGroupByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateInstallSoftwareJob2CompletedEventHandler(ByVal sender As Object, ByVal e As CreateInstallSoftwareJob2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateInstallSoftwareJob2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateInstallSoftwareJobInSoftwarePolicy2CompletedEventHandler(ByVal sender As Object, ByVal e As CreateInstallSoftwareJobInSoftwarePolicy2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateInstallSoftwareJobInSoftwarePolicy2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSoftwareJob2CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwareJob2CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwareJob2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwareJob2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwareJobProperties2
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwareJobProperties2)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwareJobs2CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwareJobs2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwareJobs2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwareJobProperties2()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwareJobProperties2())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwareJobContainerSoftwareJobs2CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwareJobContainerSoftwareJobs2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwareJobContainerSoftwareJobs2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwareJobProperties2()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwareJobProperties2())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePolicySoftwareJobs2CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePolicySoftwareJobs2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePolicySoftwareJobs2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwareJobProperties2()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwareJobProperties2())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSoftwareJobContainer2CompletedEventHandler(ByVal sender As Object, ByVal e As CreateSoftwareJobContainer2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSoftwareJobContainer2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSoftwareJobContainer2CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwareJobContainer2CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwareJobContainer2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwareJobContainer2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwareJobContainerProperties2
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwareJobContainerProperties2)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwareJobContainerList2CompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwareJobContainerList2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwareJobContainerList2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwareJobContainers() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwareJobContainersSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwareJobContainers2CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwareJobContainers2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwareJobContainers2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwareJobContainerProperties2()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwareJobContainerProperties2())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwareJobContainerList2CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwareJobContainerListRecursive2CompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwareJobContainerListRecursive2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwareJobContainerListRecursive2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwareJobContainers() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwareJobContainersSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwareJobContainersRecursive2CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwareJobContainersRecursive2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwareJobContainersRecursive2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwareJobContainerProperties2()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwareJobContainerProperties2())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwareJobContainerListRecursive2CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenParentSoftwareJobContainerList2CompletedEventHandler(ByVal sender As Object, ByVal e As OpenParentSoftwareJobContainerList2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenParentSoftwareJobContainerList2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfParentSoftwareJobContainers() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfParentSoftwareJobContainersSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetParentSoftwareJobContainers2CompletedEventHandler(ByVal sender As Object, ByVal e As GetParentSoftwareJobContainers2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetParentSoftwareJobContainers2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwareJobContainerProperties2()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwareJobContainerProperties2())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseParentSoftwareJobContainerList2CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSoftwareJobContainerPriorityCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePolicy2CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePolicy2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePolicy2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePolicyProperties2
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePolicyProperties2)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwarePolicyList2CompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwarePolicyList2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwarePolicyList2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePolicies() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePoliciesSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePolicies2CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePolicies2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePolicies2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePolicyProperties2()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePolicyProperties2())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSoftwarePolicyList2CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteUnitGroupsByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkUnitGroupsToUnitGroupByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkComputersToUnitGroupByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnlinkComputersFromUnitGroupByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnlinkUnitGroupsFromUnitGroupByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkSoftwarePackagesToSoftwarePackageGroupByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnlinkSoftwarePackagesFromSoftwarePackageGroupByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteSoftwarePackagesByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkSoftwarePackageProceduresToSoftwarePackageProcedureGroupByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateInstallSoftwareJobInSoftwarePolicyByNameCompletedEventHandler(ByVal sender As Object, ByVal e As CreateInstallSoftwareJobInSoftwarePolicyByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateInstallSoftwareJobInSoftwarePolicyByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateActivateSoftwareJobInSoftwarePolicyByNameCompletedEventHandler(ByVal sender As Object, ByVal e As CreateActivateSoftwareJobInSoftwarePolicyByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateActivateSoftwareJobInSoftwarePolicyByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateConfigureSoftwareJobInSoftwarePolicyByNameCompletedEventHandler(ByVal sender As Object, ByVal e As CreateConfigureSoftwareJobInSoftwarePolicyByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateConfigureSoftwareJobInSoftwarePolicyByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateUninstallSoftwareJobInSoftwarePolicyByNameCompletedEventHandler(ByVal sender As Object, ByVal e As CreateUninstallSoftwareJobInSoftwarePolicyByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateUninstallSoftwareJobInSoftwarePolicyByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnsealSoftwarePoliciesByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkSoftwarePoliciesToUnitGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkSoftwarePoliciesToUnitGroupByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnlinkSoftwarePoliciesFromUnitGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnlinkSoftwarePoliciesFromUnitGroupByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteSoftwareJobsInComputerByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnlinkSoftwarePackageProceduresFromSoftwarePackageProcedureGroupByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteSoftwarePoliciesByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetDomainCompletedEventHandler(ByVal sender As Object, ByVal e As GetDomainCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDomainCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DomainProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DomainProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub FindDomainCompletedEventHandler(ByVal sender As Object, ByVal e As FindDomainCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindDomainCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DomainProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DomainProperties())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfDomainsFound() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfDomainsFoundSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub FindDomainGroupCompletedEventHandler(ByVal sender As Object, ByVal e As FindDomainGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindDomainGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DomainGroupProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DomainGroupProperties())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfDomainGroupsFound() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfDomainGroupsFoundSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateDomainGroupCompletedEventHandler(ByVal sender As Object, ByVal e As CreateDomainGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateDomainGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkDomainsToDomainGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkDomainGroupsToDomainGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetDomainGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetDomainGroupCompletedEventHandler(ByVal sender As Object, ByVal e As GetDomainGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDomainGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DomainGroupProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DomainGroupProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteDomainGroupsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnlinkDomainsFromDomainGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnlinkDomainGroupsFromDomainGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenDomainGroupDomainGroupMembersListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenDomainGroupDomainGroupMembersListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenDomainGroupDomainGroupMembersListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property openListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property openListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfDomainGroups() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfDomainGroupsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetDomainGroupDomainGroupMembersCompletedEventHandler(ByVal sender As Object, ByVal e As GetDomainGroupDomainGroupMembersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDomainGroupDomainGroupMembersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DomainGroupProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DomainGroupProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseDomainGroupDomainGroupMembersListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenDomainGroupDomainMembersListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenDomainGroupDomainMembersListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenDomainGroupDomainMembersListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property openListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property openListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfDomains() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfDomainsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetDomainGroupDomainMembersCompletedEventHandler(ByVal sender As Object, ByVal e As GetDomainGroupDomainMembersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDomainGroupDomainMembersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DomainProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DomainProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseDomainGroupDomainMembersListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateDistributionContainerCompletedEventHandler(ByVal sender As Object, ByVal e As CreateDistributionContainerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateDistributionContainerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AddRegisterSoftwarePackageOrdersToDistributionContainerCompletedEventHandler(ByVal sender As Object, ByVal e As AddRegisterSoftwarePackageOrdersToDistributionContainerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddRegisterSoftwarePackageOrdersToDistributionContainerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AddDeregisterSoftwarePackageOrdersToDistributionContainerCompletedEventHandler(ByVal sender As Object, ByVal e As AddDeregisterSoftwarePackageOrdersToDistributionContainerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddDeregisterSoftwarePackageOrdersToDistributionContainerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AddRegisterSoftwarePackageProcedureOrdersToDistributionContainerCompletedEventHandler(ByVal sender As Object, ByVal e As AddRegisterSoftwarePackageProcedureOrdersToDistributionContainerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddRegisterSoftwarePackageProcedureOrdersToDistributionContainerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AddDeregisterSoftwarePackageProcedureOrdersToDistributionContainerCompletedEventHandler(ByVal sender As Object, ByVal e As AddDeregisterSoftwarePackageProcedureOrdersToDistributionContainerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddDeregisterSoftwarePackageProcedureOrdersToDistributionContainerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AddRegisterSoftwarePolicyOrdersToDistributionContainerCompletedEventHandler(ByVal sender As Object, ByVal e As AddRegisterSoftwarePolicyOrdersToDistributionContainerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddRegisterSoftwarePolicyOrdersToDistributionContainerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AddDeregisterSoftwarePolicyOrdersToDistributionContainerCompletedEventHandler(ByVal sender As Object, ByVal e As AddDeregisterSoftwarePolicyOrdersToDistributionContainerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddDeregisterSoftwarePolicyOrdersToDistributionContainerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AddRegisterSoftwareJobContainerOrdersToDistributionContainerCompletedEventHandler(ByVal sender As Object, ByVal e As AddRegisterSoftwareJobContainerOrdersToDistributionContainerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddRegisterSoftwareJobContainerOrdersToDistributionContainerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AddDeregisterSoftwareJobContainerOrdersToDistributionContainerCompletedEventHandler(ByVal sender As Object, ByVal e As AddDeregisterSoftwareJobContainerOrdersToDistributionContainerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddDeregisterSoftwareJobContainerOrdersToDistributionContainerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetDistributionContainerCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteDistributionContainersCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub HaltDeliveryDistributionContainersCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ResumeDeliveryDistributionContainersCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RenewDeliveryDistributionContainersCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SendDistributionContainerCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetDistributionContainerCompletedEventHandler(ByVal sender As Object, ByVal e As GetDistributionContainerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDistributionContainerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DistributionContainerProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DistributionContainerProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenDistributionContainerListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenDistributionContainerListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenDistributionContainerListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property openListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property openListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfDistributionContainers() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfDistributionContainersSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetDistributionContainersCompletedEventHandler(ByVal sender As Object, ByVal e As GetDistributionContainersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDistributionContainersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DistributionContainerProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DistributionContainerProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseDistributionContainerListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenDistributionContainerDistributionDomainListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenDistributionContainerDistributionDomainListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenDistributionContainerDistributionDomainListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property openListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property openListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfDistributionDomains() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfDistributionDomainsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetDistributionContainerDistributionDomainsCompletedEventHandler(ByVal sender As Object, ByVal e As GetDistributionContainerDistributionDomainsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDistributionContainerDistributionDomainsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DistributionDomainProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DistributionDomainProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseDistributionContainerDistributionDomainListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetDistributionContainerOrderCompletedEventHandler(ByVal sender As Object, ByVal e As GetDistributionContainerOrderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDistributionContainerOrderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DistributionContainerOrderProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DistributionContainerOrderProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AddFetchItemJobOrdersToDistributionContainerCompletedEventHandler(ByVal sender As Object, ByVal e As AddFetchItemJobOrdersToDistributionContainerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddFetchItemJobOrdersToDistributionContainerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenDistributionContainerOrderListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenDistributionContainerOrderListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenDistributionContainerOrderListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property openListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property openListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNumberOfDistributionContainerOrder() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNumberOfDistributionContainerOrderSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetDistributionContainerOrdersCompletedEventHandler(ByVal sender As Object, ByVal e As GetDistributionContainerOrdersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDistributionContainerOrdersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DistributionContainerOrderProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DistributionContainerOrderProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseDistributionContainerOrdersCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetManagerDateTimeCompletedEventHandler(ByVal sender As Object, ByVal e As GetManagerDateTimeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetManagerDateTimeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DateTime
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DateTime)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetInstalledComponents2CompletedEventHandler(ByVal sender As Object, ByVal e As GetInstalledComponents2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetInstalledComponents2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Components2
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Components2)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateQuery2CompletedEventHandler(ByVal sender As Object, ByVal e As CreateQuery2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateQuery2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSecurityAreaCompletedEventHandler(ByVal sender As Object, ByVal e As CreateSecurityAreaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSecurityAreaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteSecurityAreasCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteSecurityAreasByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSecurityAreaListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSecurityAreaListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSecurityAreaListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSecurityAreas() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSecurityAreasSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSecurityAreasCompletedEventHandler(ByVal sender As Object, ByVal e As GetSecurityAreasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSecurityAreasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SecurityAreaProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SecurityAreaProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSecurityAreaListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSecurityAreaCompletedEventHandler(ByVal sender As Object, ByVal e As GetSecurityAreaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSecurityAreaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SecurityAreaProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SecurityAreaProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSecurityAreaByNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetSecurityAreaByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSecurityAreaByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SecurityAreaProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SecurityAreaProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSecurityAreaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSecurityAreaByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSecurityAreaConfigurationCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSecurityAreaConfigurationCompletedEventHandler(ByVal sender As Object, ByVal e As GetSecurityAreaConfigurationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSecurityAreaConfigurationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property GetsecurityAreasReturn() As SecurityArea()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),SecurityArea())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSecurityAreaConfigurationByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSecurityAreaConfigurationByNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetSecurityAreaConfigurationByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSecurityAreaConfigurationByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property GetsecurityAreasReturn() As SecurityAreaByName()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),SecurityAreaByName())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSecurityObjectsSecurityAreaLinkagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetSecurityObjectsSecurityAreaLinkagesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSecurityObjectsSecurityAreaLinkagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SecurityObjectsSecurityAreaProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SecurityObjectsSecurityAreaProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkSecurityAreasToSecurityProfileCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnlinkSecurityAreasFromSecurityProfileCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkSecurityAreasToSecurityProfileByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnlinkSecurityAreasFromSecurityProfileByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkSecurityProfilesToSecurityAreaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnlinkSecurityProfilesFromSecurityAreaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkSecurityProfilesToSecurityAreaByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnlinkSecurityProfilesFromSecurityAreaByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSecurityObjectsSecurityAreaLinkagesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSecurityObjectOwnerShipCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSecurityObjectOwnerShipCompletedEventHandler(ByVal sender As Object, ByVal e As GetSecurityObjectOwnerShipCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSecurityObjectOwnerShipCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SecurityObjectOwner()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SecurityObjectOwner())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSecurityObjectPermissionsStringCompletedEventHandler(ByVal sender As Object, ByVal e As GetSecurityObjectPermissionsStringCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSecurityObjectPermissionsStringCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteSecurityProfilesByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSecurityProfileByNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetSecurityProfileByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSecurityProfileByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SecurityProfileProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SecurityProfileProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSecurityProfileByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSecurityProfileCompletedEventHandler(ByVal sender As Object, ByVal e As CreateSecurityProfileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSecurityProfileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteSecurityProfilesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSecurityProfileListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSecurityProfileListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSecurityProfileListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property openListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property openListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSecurityProfiles() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSecurityProfilesSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSecurityProfilesCompletedEventHandler(ByVal sender As Object, ByVal e As GetSecurityProfilesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSecurityProfilesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SecurityProfileProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SecurityProfileProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSecurityProfileListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSecurityProfileCompletedEventHandler(ByVal sender As Object, ByVal e As GetSecurityProfileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSecurityProfileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SecurityProfileProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SecurityProfileProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSecurityProfileCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSecurityClassListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenSecurityClassListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSecurityClassListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property openListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property openListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSecurityClasses() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSecurityClassesSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSecurityClassesCompletedEventHandler(ByVal sender As Object, ByVal e As GetSecurityClassesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSecurityClassesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SecurityClassProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SecurityClassProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseSecurityClassListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSecurityClassPermissionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetSecurityClassPermissionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSecurityClassPermissionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SecurityClassPermissionProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SecurityClassPermissionProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSecurityClassPermissionsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSecurityClassPermissionsForAllSecurityProfilesCompletedEventHandler(ByVal sender As Object, ByVal e As GetSecurityClassPermissionsForAllSecurityProfilesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSecurityClassPermissionsForAllSecurityProfilesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SecurityClassPermissions()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SecurityClassPermissions())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetAllSecurityClassPermissionsForSecurityProfileCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllSecurityClassPermissionsForSecurityProfileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllSecurityClassPermissionsForSecurityProfileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SecurityClassPermissionsForSecurityProfile()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SecurityClassPermissionsForSecurityProfile())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSecurityGroupsPermissionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetSecurityGroupsPermissionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSecurityGroupsPermissionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetSecurityGroupPermissions()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetSecurityGroupPermissions())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSecurityGroupsPermissionsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSecurityGroupPermissionsForAllSecurityProfilesCompletedEventHandler(ByVal sender As Object, ByVal e As GetSecurityGroupPermissionsForAllSecurityProfilesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSecurityGroupPermissionsForAllSecurityProfilesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SecurityGroupPermissionsForAllSecurityProfiles()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SecurityGroupPermissionsForAllSecurityProfiles())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSecurityObjectPermissionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetSecurityObjectPermissionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSecurityObjectPermissionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetSecurityObjectsPermissions()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetSecurityObjectsPermissions())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSecurityObjectsPermissionsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSecurityObjectPermissionsForAllSecurityProfilesCompletedEventHandler(ByVal sender As Object, ByVal e As GetSecurityObjectPermissionsForAllSecurityProfilesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSecurityObjectPermissionsForAllSecurityProfilesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SecurityObjectPermissionsForAllSecurityProfiles()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SecurityObjectPermissionsForAllSecurityProfiles())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetUnitGroup2CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetDeploymentPackagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetDeploymentPackagesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDeploymentPackagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DeploymentPackageProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DeploymentPackageProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ScanPackageOnTargetComputersCompletedEventHandler(ByVal sender As Object, ByVal e As ScanPackageOnTargetComputersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ScanPackageOnTargetComputersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeployPackageCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetDeploymentJobStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetDeploymentJobStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDeploymentJobStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property arrayOfComputerStatusInfo() As ComputerStatusInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),ComputerStatusInfo())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub StagePackageCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetDeploymentPackagesOnScalabilityServerCompletedEventHandler(ByVal sender As Object, ByVal e As GetDeploymentPackagesOnScalabilityServerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDeploymentPackagesOnScalabilityServerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SSPackageInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SSPackageInfo())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SuspendDeploymentJobCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ResumeDeploymentJobCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DiscardDeploymentJobCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AbortDeploymentJobCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RetryDeploymentJobCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ExportSoftwarePackageCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ExportSoftwarePackageByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteUnitGroups2CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteUnitGroupsByName2CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSoftwareJobContainer3CompletedEventHandler(ByVal sender As Object, ByVal e As CreateSoftwareJobContainer3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSoftwareJobContainer3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSoftwareJobContainer3CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwareJobContainer3CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwareJobContainer3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwareJobContainer3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwareJobContainerProperties3
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwareJobContainerProperties3)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwareJobContainerList3CompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwareJobContainerList3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwareJobContainerList3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwareJobContainers() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwareJobContainersSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwareJobContainers3CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwareJobContainers3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwareJobContainers3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwareJobContainerProperties3()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwareJobContainerProperties3())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwareJobContainerListRecursive3CompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwareJobContainerListRecursive3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwareJobContainerListRecursive3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwareJobContainers() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwareJobContainersSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwareJobContainersRecursive3CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwareJobContainersRecursive3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwareJobContainersRecursive3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwareJobContainerProperties3()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwareJobContainerProperties3())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenParentSoftwareJobContainerList3CompletedEventHandler(ByVal sender As Object, ByVal e As OpenParentSoftwareJobContainerList3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenParentSoftwareJobContainerList3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfParentSoftwareJobContainers() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfParentSoftwareJobContainersSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetParentSoftwareJobContainers3CompletedEventHandler(ByVal sender As Object, ByVal e As GetParentSoftwareJobContainers3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetParentSoftwareJobContainers3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwareJobContainerProperties3()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwareJobContainerProperties3())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetDistributionContainerOrder3CompletedEventHandler(ByVal sender As Object, ByVal e As GetDistributionContainerOrder3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDistributionContainerOrder3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DistributionContainerOrderProperties3
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DistributionContainerOrderProperties3)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetDistributionContainerOrders3CompletedEventHandler(ByVal sender As Object, ByVal e As GetDistributionContainerOrders3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDistributionContainerOrders3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DistributionContainerOrderProperties3()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DistributionContainerOrderProperties3())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSoftwarePolicy3CompletedEventHandler(ByVal sender As Object, ByVal e As CreateSoftwarePolicy3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSoftwarePolicy3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSoftwarePolicyByName3CompletedEventHandler(ByVal sender As Object, ByVal e As CreateSoftwarePolicyByName3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSoftwarePolicyByName3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSoftwarePolicy3CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSoftwarePolicyByName3CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePolicy3CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePolicy3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePolicy3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePolicyProperties3
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePolicyProperties3)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenSoftwarePolicyList3CompletedEventHandler(ByVal sender As Object, ByVal e As OpenSoftwarePolicyList3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenSoftwarePolicyList3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePolicies() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfSoftwarePoliciesSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePolicies3CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePolicies3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePolicies3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePolicyProperties3()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePolicyProperties3())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateInstallSoftwareJob3CompletedEventHandler(ByVal sender As Object, ByVal e As CreateInstallSoftwareJob3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateInstallSoftwareJob3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateInstallSoftwareJobInSoftwarePolicy3CompletedEventHandler(ByVal sender As Object, ByVal e As CreateInstallSoftwareJobInSoftwarePolicy3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateInstallSoftwareJobInSoftwarePolicy3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSoftwareJob3CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwareJob3CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwareJob3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwareJob3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwareJobProperties3
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwareJobProperties3)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwareJobs3CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwareJobs3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwareJobs3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwareJobProperties3()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwareJobProperties3())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwareJobContainerSoftwareJobs3CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwareJobContainerSoftwareJobs3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwareJobContainerSoftwareJobs3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwareJobProperties3()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwareJobProperties3())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePolicySoftwareJobs3CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePolicySoftwareJobs3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePolicySoftwareJobs3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwareJobProperties3()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwareJobProperties3())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateActivateSoftwareJob3CompletedEventHandler(ByVal sender As Object, ByVal e As CreateActivateSoftwareJob3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateActivateSoftwareJob3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateConfigureSoftwareJob3CompletedEventHandler(ByVal sender As Object, ByVal e As CreateConfigureSoftwareJob3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateConfigureSoftwareJob3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateUninstallSoftwareJob3CompletedEventHandler(ByVal sender As Object, ByVal e As CreateUninstallSoftwareJob3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateUninstallSoftwareJob3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateRecoverSoftwareJob3CompletedEventHandler(ByVal sender As Object, ByVal e As CreateRecoverSoftwareJob3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateRecoverSoftwareJob3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateRenewSoftwareJob3CompletedEventHandler(ByVal sender As Object, ByVal e As CreateRenewSoftwareJob3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateRenewSoftwareJob3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateActivateSoftwareJobInSoftwarePolicyByName3CompletedEventHandler(ByVal sender As Object, ByVal e As CreateActivateSoftwareJobInSoftwarePolicyByName3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateActivateSoftwareJobInSoftwarePolicyByName3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateConfigureSoftwareJobInSoftwarePolicyByName3CompletedEventHandler(ByVal sender As Object, ByVal e As CreateConfigureSoftwareJobInSoftwarePolicyByName3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateConfigureSoftwareJobInSoftwarePolicyByName3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateUninstallSoftwareJobInSoftwarePolicyByName3CompletedEventHandler(ByVal sender As Object, ByVal e As CreateUninstallSoftwareJobInSoftwarePolicyByName3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateUninstallSoftwareJobInSoftwarePolicyByName3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateInstallSoftwareJobInSoftwarePolicyByName3CompletedEventHandler(ByVal sender As Object, ByVal e As CreateInstallSoftwareJobInSoftwarePolicyByName3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateInstallSoftwareJobInSoftwarePolicyByName3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateUninstallSoftwareJobInSoftwarePolicy3CompletedEventHandler(ByVal sender As Object, ByVal e As CreateUninstallSoftwareJobInSoftwarePolicy3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateUninstallSoftwareJobInSoftwarePolicy3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateActivateSoftwareJobInSoftwarePolicy3CompletedEventHandler(ByVal sender As Object, ByVal e As CreateActivateSoftwareJobInSoftwarePolicy3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateActivateSoftwareJobInSoftwarePolicy3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateConfigureSoftwareJobInSoftwarePolicy3CompletedEventHandler(ByVal sender As Object, ByVal e As CreateConfigureSoftwareJobInSoftwarePolicy3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateConfigureSoftwareJobInSoftwarePolicy3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSoftwarePackageProcedure2CompletedEventHandler(ByVal sender As Object, ByVal e As CreateSoftwarePackageProcedure2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSoftwarePackageProcedure2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateAddedSoftwarePackageProcedure2CompletedEventHandler(ByVal sender As Object, ByVal e As CreateAddedSoftwarePackageProcedure2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateAddedSoftwarePackageProcedure2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageProcedures2CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageProcedures2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageProcedures2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProcedureProperties2()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProcedureProperties2())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageProcedure2CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageProcedure2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageProcedure2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProcedureProperties2
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProcedureProperties2)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSoftwarePackageProcedure2CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageProcedureGroupSoftwarePackageProcedures2CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageProcedureGroupSoftwarePackageProcedures2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageProcedureGroupSoftwarePackageProcedures2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProcedureProperties2()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProcedureProperties2())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackages2CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackages2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackages2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProperties2()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProperties2())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackage2CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackage2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackage2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProperties2
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProperties2)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageInstallations2CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageInstallations2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageInstallations2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UnitSoftwareJobProperties2()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UnitSoftwareJobProperties2())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnitUnitSoftwareJobs2CompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitUnitSoftwareJobs2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitUnitSoftwareJobs2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UnitSoftwareJobProperties2()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UnitSoftwareJobProperties2())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnitUnitSoftwareInstallationJobs2CompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitUnitSoftwareInstallationJobs2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitUnitSoftwareInstallationJobs2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UnitSoftwareJobProperties2()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UnitSoftwareJobProperties2())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageGroupSoftwarePackages2CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageGroupSoftwarePackages2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageGroupSoftwarePackages2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProperties2()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProperties2())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageGroupSoftwarePackagesRecursive2CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageGroupSoftwarePackagesRecursive2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageGroupSoftwarePackagesRecursive2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProperties2()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProperties2())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwareJobUnitSoftwareJobs2CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwareJobUnitSoftwareJobs2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwareJobUnitSoftwareJobs2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UnitSoftwareJobProperties2()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UnitSoftwareJobProperties2())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub WSChallengeCompletedEventHandler(ByVal sender As Object, ByVal e As WSChallengeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WSChallengeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sessionId() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property authenticationData() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub WSAuthenticateCompletedEventHandler(ByVal sender As Object, ByVal e As WSAuthenticateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WSAuthenticateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property bAuthorized() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenUnitQueryListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenUnitQueryListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenUnitQueryListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfQueries() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfQueriesSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnitQueriesCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitQueriesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitQueriesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UnitQueryProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UnitQueryProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseUnitQueryListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateOSIMComputerCompletedEventHandler(ByVal sender As Object, ByVal e As CreateOSIMComputerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateOSIMComputerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RegisterComputerWithOSIMCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RegisterComputerWithOSIMByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetOSInstallationParameterCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetOSInstallationParameterByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ActivateOSInstallationCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ActivateOSInstallationByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CancelOSInstallationCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CancelOSInstallationByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ReActivateOSInstallationCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ReActivateOSInstallationByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ReInstallOSCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ReInstallOSByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnnamedOSIMRegisteredComputersCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnnamedOSIMRegisteredComputersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnnamedOSIMRegisteredComputersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OSIMProperties()()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OSIMProperties()())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnmanagedOSIMRegisteredComputersCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnmanagedOSIMRegisteredComputersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnmanagedOSIMRegisteredComputersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OSIMProperties()()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OSIMProperties()())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetOSInstallationRequestCompletedEventHandler(ByVal sender As Object, ByVal e As GetOSInstallationRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOSInstallationRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OSIMProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OSIMProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetOSInstallationRequestByNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetOSInstallationRequestByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOSInstallationRequestByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OSIMProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OSIMProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetInstallationRequestListCompletedEventHandler(ByVal sender As Object, ByVal e As GetInstallationRequestListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetInstallationRequestListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OSIMProperties()()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OSIMProperties()())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetInstallationRequestListByNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetInstallationRequestListByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetInstallationRequestListByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OSIMProperties()()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OSIMProperties()())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteOSInstallationRequestCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteOSInstallationRequestByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeRegisterOSIMComputerCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeRegisterOSIMComputerByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetOSIMComputerMACAddressByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetOSInstallationParametersCompletedEventHandler(ByVal sender As Object, ByVal e As GetOSInstallationParametersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOSInstallationParametersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ArrayOfOSIMIRParametersWithDesc()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ArrayOfOSIMIRParametersWithDesc())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetOSInstallationParametersByNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetOSInstallationParametersByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOSInstallationParametersByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ArrayOfOSIMIRParametersWithDesc()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ArrayOfOSIMIRParametersWithDesc())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetBootImageListCompletedEventHandler(ByVal sender As Object, ByVal e As GetBootImageListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBootImageListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OSIMProperties()()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OSIMProperties()())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AssignOSIMTargetsToBootServerCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AssignOSIMTargetsToBootServerByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenScalabilityServerListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenScalabilityServerListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenScalabilityServerListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfServers() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfServersSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetScalabilityServersCompletedEventHandler(ByVal sender As Object, ByVal e As GetScalabilityServersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetScalabilityServersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ScalabilityServerProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ScalabilityServerProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseScalabilityServerListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SearchComputerPropertyCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetOSImageParametersCompletedEventHandler(ByVal sender As Object, ByVal e As GetOSImageParametersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOSImageParametersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OSIMPropertiesWithDesc()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OSIMPropertiesWithDesc())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetBootServerListCompletedEventHandler(ByVal sender As Object, ByVal e As GetBootServerListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBootServerListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OSIMProperties()()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OSIMProperties()())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeRegisterBootImageCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeRegisterOSImageCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AssignOSImageToOSIMTargetsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetBootImageDeployedBootServersCompletedEventHandler(ByVal sender As Object, ByVal e As GetBootImageDeployedBootServersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBootImageDeployedBootServersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OSIMProperties()()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OSIMProperties()())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetOSImageDeployedBootServersCompletedEventHandler(ByVal sender As Object, ByVal e As GetOSImageDeployedBootServersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOSImageDeployedBootServersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OSIMProperties()()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OSIMProperties()())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenOSImageListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenOSImageListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenOSImageListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfImages() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfImagesSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetOSImagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetOSImagesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOSImagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OSImageProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OSImageProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseOSImageListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenOSIMTargetListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenOSIMTargetListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenOSIMTargetListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfOSIMTargets() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfOSIMTargetsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetOSIMTargetsCompletedEventHandler(ByVal sender As Object, ByVal e As GetOSIMTargetsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOSIMTargetsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OSIMTargetProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OSIMTargetProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseOSIMTargetListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenUnitGroupComputerMembersList2CompletedEventHandler(ByVal sender As Object, ByVal e As OpenUnitGroupComputerMembersList2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenUnitGroupComputerMembersList2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfComputers() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfComputersSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnitGroupComputerMembers2CompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitGroupComputerMembers2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitGroupComputerMembers2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ComputerProperties2()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ComputerProperties2())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetOSIMTargetCompletedEventHandler(ByVal sender As Object, ByVal e As GetOSIMTargetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOSIMTargetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OSIMProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OSIMProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetOSIMTargetByNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetOSIMTargetByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOSIMTargetByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OSIMProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OSIMProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetImageFlagDescriptionCompletedEventHandler(ByVal sender As Object, ByVal e As GetImageFlagDescriptionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetImageFlagDescriptionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateAssetScriptJobCompletedEventHandler(ByVal sender As Object, ByVal e As CreateAssetScriptJobCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateAssetScriptJobCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property assetJobId() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property assetJobIdSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property domainId() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property domainIdSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(4),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetAssetScriptJobCompletedEventHandler(ByVal sender As Object, ByVal e As GetAssetScriptJobCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAssetScriptJobCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property assetJobId() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property assetJobIdSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property domainId() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property domainIdSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property assetJobProperties() As AssetScriptJobProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(4),AssetScriptJobProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetAssetScriptJobCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteAssetJobsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub OpenAssetScriptJobListCompletedEventHandler(ByVal sender As Object, ByVal e As OpenAssetScriptJobListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenAssetScriptJobListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandle() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OpenListHandleSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfAssetJobs() As System.Nullable(Of Long)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Nullable(Of Long))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfAssetJobsSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetAssetScriptJobsCompletedEventHandler(ByVal sender As Object, ByVal e As GetAssetScriptJobsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAssetScriptJobsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetAssetScriptJobsProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetAssetScriptJobsProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CloseAssetScriptJobListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkAssetJobsToUnitCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkAssetJobsToUnitGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnLinkAssetJobsFromUnitCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnLinkAssetJobsFromUnitGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ActivateJobCheckCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetOSImages2CompletedEventHandler(ByVal sender As Object, ByVal e As GetOSImages2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOSImages2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OSImageProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OSImageProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnitGroupComputerMembers3CompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitGroupComputerMembers3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitGroupComputerMembers3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ComputerProperties2()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ComputerProperties2())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetOSIMTargets2CompletedEventHandler(ByVal sender As Object, ByVal e As GetOSIMTargets2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOSIMTargets2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OSIMTargetProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OSIMTargetProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub IsServiceDeskIntegrationEnabledCompletedEventHandler(ByVal sender As Object, ByVal e As IsServiceDeskIntegrationEnabledCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IsServiceDeskIntegrationEnabledCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetServiceDeskRequestURLForContainerCompletedEventHandler(ByVal sender As Object, ByVal e As GetServiceDeskRequestURLForContainerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetServiceDeskRequestURLForContainerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSoftwareJobContainer4CompletedEventHandler(ByVal sender As Object, ByVal e As CreateSoftwareJobContainer4CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSoftwareJobContainer4CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetServiceDeskTemplatesCompletedEventHandler(ByVal sender As Object, ByVal e As GetServiceDeskTemplatesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetServiceDeskTemplatesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property templateArray() As TemplateProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),TemplateProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnitGroupByNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitGroupByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitGroupByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UnitGroupProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UnitGroupProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetComputerOSNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetComputerOSNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetComputerOSNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetOSInstallationParameter2CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetOSInstallationParameterByName2CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetOSIMParameterDefaultsCompletedEventHandler(ByVal sender As Object, ByVal e As GetOSIMParameterDefaultsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOSIMParameterDefaultsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetOSIMParameterDefaultsByNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetOSIMParameterDefaultsByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOSIMParameterDefaultsByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetHardWareModelListCompletedEventHandler(ByVal sender As Object, ByVal e As GetHardWareModelListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetHardWareModelListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNumHWModels() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnitGroupsXMLCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitGroupsXMLCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitGroupsXMLCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetComputerHWModelCompletedEventHandler(ByVal sender As Object, ByVal e As GetComputerHWModelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetComputerHWModelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetComputerHWModelByNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetComputerHWModelByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetComputerHWModelByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetQueryFolderIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetQueryFolderIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetQueryFolderIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetQueryFoldersCompletedEventHandler(ByVal sender As Object, ByVal e As GetQueryFoldersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetQueryFoldersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As QueryFolderProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),QueryFolderProperties())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNumFolders() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetQueries2CompletedEventHandler(ByVal sender As Object, ByVal e As GetQueries2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetQueries2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As QueryProperties2()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),QueryProperties2())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNumQueries() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetBootImageList2CompletedEventHandler(ByVal sender As Object, ByVal e As GetBootImageList2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBootImageList2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BootImageProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BootImageProperties())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNumImages() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetBootServerList2CompletedEventHandler(ByVal sender As Object, ByVal e As GetBootServerList2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBootServerList2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BootServerProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BootServerProperties())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNumServers() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageListCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProperties2()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProperties2())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNumPackages() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetInstalledComponents3CompletedEventHandler(ByVal sender As Object, ByVal e As GetInstalledComponents3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetInstalledComponents3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ComponentStatus()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ComponentStatus())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetManagerConfigurationParameterIntCompletedEventHandler(ByVal sender As Object, ByVal e As GetManagerConfigurationParameterIntCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetManagerConfigurationParameterIntCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ConfigurationParameterValue()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ConfigurationParameterValue())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetManagerPropertiesCompletedEventHandler(ByVal sender As Object, ByVal e As GetManagerPropertiesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetManagerPropertiesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ManagerProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ManagerProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetComputerSDPropertiesCompletedEventHandler(ByVal sender As Object, ByVal e As GetComputerSDPropertiesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetComputerSDPropertiesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SDProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SDProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetComputerSDPropertiesByNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetComputerSDPropertiesByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetComputerSDPropertiesByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SDProperties
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SDProperties)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetOSTypesXMLCompletedEventHandler(ByVal sender As Object, ByVal e As GetOSTypesXMLCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOSTypesXMLCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetComputerByNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetComputerByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetComputerByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ComputerProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ComputerProperties())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNoOfComputersFound() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetOSIMTargetListCompletedEventHandler(ByVal sender As Object, ByVal e As GetOSIMTargetListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOSIMTargetListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OSIMTargetProperties2()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OSIMTargetProperties2())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNumberOfTargets() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetOSInstallationParametersCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetOSInstallationParametersByNameCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSoftwarePackage3CompletedEventHandler(ByVal sender As Object, ByVal e As CreateSoftwarePackage3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSoftwarePackage3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSoftwarePackage3CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackage3CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackage3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackage3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProperties3
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProperties3)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageList3CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageList3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageList3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProperties3()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProperties3())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNumPackages() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSoftwarePackageProcedure3CompletedEventHandler(ByVal sender As Object, ByVal e As CreateSoftwarePackageProcedure3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSoftwarePackageProcedure3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateAddedSoftwarePackageProcedure3CompletedEventHandler(ByVal sender As Object, ByVal e As CreateAddedSoftwarePackageProcedure3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateAddedSoftwarePackageProcedure3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSoftwarePackageProcedure3CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageProcedures3CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageProcedures3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageProcedures3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProcedureProperties3()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProcedureProperties3())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageProcedure3CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageProcedure3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageProcedure3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProcedureProperties3
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProcedureProperties3)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageProcedureGroupSoftwarePackageProcedures3CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageProcedureGroupSoftwarePackageProcedures3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageProcedureGroupSoftwarePackageProcedures3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProcedureProperties3()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProcedureProperties3())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetQuery2CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetQuery2CompletedEventHandler(ByVal sender As Object, ByVal e As GetQuery2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetQuery2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As QueryProperties3
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),QueryProperties3)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageProcedureListCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageProcedureListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageProcedureListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProcedureProperties4()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProcedureProperties4())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNumProcs() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageProcedure4CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageProcedure4CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageProcedure4CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProcedureProperties4
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProcedureProperties4)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnitSoftwareJobListCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitSoftwareJobListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitSoftwareJobListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UnitSoftwareJobProperties3()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UnitSoftwareJobProperties3())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNumJobs() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageInstallationListCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageInstallationListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageInstallationListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UnitSoftwareJobProperties3()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UnitSoftwareJobProperties3())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNumInstallations() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageProcedureGroupProcedureListCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageProcedureGroupProcedureListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageProcedureGroupProcedureListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProcedureProperties4()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProcedureProperties4())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNumProcs() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetAuthenticatedURICompletedEventHandler(ByVal sender As Object, ByVal e As GetAuthenticatedURICompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAuthenticatedURICompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub Login3CompletedEventHandler(ByVal sender As Object, ByVal e As Login3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Login3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub Login4CompletedEventHandler(ByVal sender As Object, ByVal e As Login4CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Login4CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub WSChallenge2CompletedEventHandler(ByVal sender As Object, ByVal e As WSChallenge2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WSChallenge2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sessionId() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property authenticationData() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateComputer2CompletedEventHandler(ByVal sender As Object, ByVal e As CreateComputer2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateComputer2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetLocaleCompletedEventHandler(ByVal sender As Object, ByVal e As GetLocaleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLocaleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetUnitGroup2CompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitGroup2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitGroup2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UnitGroupProperties2
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UnitGroupProperties2)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateUnitGroup3CompletedEventHandler(ByVal sender As Object, ByVal e As CreateUnitGroup3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateUnitGroup3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkItemsToUnitGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnLinkItemsFromUnitGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub MoveItemsToUnitGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteItemsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteAlertsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UpdateAlertsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DeleteAllAlertsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwareJobOutputFileCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwareJobOutputFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwareJobOutputFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property isCopiedFile() As System.Nullable(Of Boolean)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Nullable(Of Boolean))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property isCopiedFileSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwareJobOutputFile2CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwareJobOutputFile2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwareJobOutputFile2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property isCopiedFile() As System.Nullable(Of Boolean)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Nullable(Of Boolean))
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property isCopiedFileSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetManagerDateTime2CompletedEventHandler(ByVal sender As Object, ByVal e As GetManagerDateTime2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetManagerDateTime2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DateTimeInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DateTimeInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetManagerConfigurationParameterValueCompletedEventHandler(ByVal sender As Object, ByVal e As GetManagerConfigurationParameterValueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetManagerConfigurationParameterValueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub LinkItemsToSoftwareGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UnLinkItemsFromSoftwareGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSoftwarePackageProcedure4CompletedEventHandler(ByVal sender As Object, ByVal e As CreateSoftwarePackageProcedure4CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSoftwarePackageProcedure4CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageProcedureList2CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageProcedureList2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageProcedureList2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProcedureProperties5()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProcedureProperties5())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNumProcs() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageProcedure5CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageProcedure5CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageProcedure5CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProcedureProperties5
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProcedureProperties5)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageProcedureGroupProcedureList2CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageProcedureGroupProcedureList2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageProcedureGroupProcedureList2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProcedureProperties5()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProcedureProperties5())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property totalNumProcs() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSoftwarePackageProcedureGroupSoftwarePackageProcedures4CompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwarePackageProcedureGroupSoftwarePackageProcedures4CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwarePackageProcedureGroupSoftwarePackageProcedures4CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SoftwarePackageProcedureProperties5()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SoftwarePackageProcedureProperties5())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSoftwarePackageProcedure5CompletedEventHandler(ByVal sender As Object, ByVal e As CreateSoftwarePackageProcedure5CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSoftwarePackageProcedure5CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateAddedSoftwarePackageProcedure4CompletedEventHandler(ByVal sender As Object, ByVal e As CreateAddedSoftwarePackageProcedure4CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateAddedSoftwarePackageProcedure4CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateAddedProcedureWithNewFiles2CompletedEventHandler(ByVal sender As Object, ByVal e As CreateAddedProcedureWithNewFiles2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateAddedProcedureWithNewFiles2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSoftwarePackageProcedure4CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetSoftwarePackageProcedure5CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSoftwarePackageProcedureDependency2CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RepositionSoftwarePackageProcedureDependenciesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RepositionSoftwareItemsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateSoftwareJobCompletedEventHandler(ByVal sender As Object, ByVal e As CreateSoftwareJobCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSoftwareJobCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property jobIds() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ReadVolumeFileCompletedEventHandler(ByVal sender As Object, ByVal e As ReadVolumeFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReadVolumeFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub WriteVolumeFileCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetEditableVolumeFileExtensionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetEditableVolumeFileExtensionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEditableVolumeFileExtensionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub JobContainerRestrictPriorityCompletedEventHandler(ByVal sender As Object, ByVal e As JobContainerRestrictPriorityCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class JobContainerRestrictPriorityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetSDFileCopyOperationStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetSDFileCopyOperationStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSDFileCopyOperationStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
End Namespace
